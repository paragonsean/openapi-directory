openapi: 3.0.1
info:
  contact: {}
  description: |
    The Turbine Labs API provides CRUD operations for core object types, and is
    mostly RESTy. The easiest way to interact with the API is with
    [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html).
    If you want to make direct HTTP calls, however, you can obtain an access
    token using tbnctl, and then pass it in the Authorization header,
    prefixed by `Token `:
    ```console
    curl -H "Authorization: Token <access token>" https://api.turbinelabs.io/v1.0/cluster
    ```
  title: Turbine Labs API
  version: "1.0"
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://twitter.com/GoTurbine/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/turbinelabs/api/master/swagger.yml
    version: "2.0"
  x-providerName: turbinelabs.io
servers:
- url: https://api.turbinelabs.io/v1.0
security:
- api_key: []
tags:
- description: "A logical deployment of services, which typically maps to a datacenter,\
    \ availability zone, or compute cluster."
  name: Zone
- description: A configuration that can be applied to one or more running Proxies
    serving one or more Domains.
  name: Proxy
- description: An interface and port a Proxy will listen on
  name: Listener
- description: A served hostname and port.
  name: Domain
- description: A served path within a Domain.
  name: Route
- description: A collection of rules specifying how a request should be mapped to
    an instance within a cluster. These may be shared between multiple Routes.
  name: Shared Rules
- description: "A collection of Instances, homogeneous in their purpose, heterogeneous\
    \ in their metadata."
  name: Cluster
- description: A collection of events that have occurred in your infrastructure. This
    includes changes detected by the deployed collectors (new Clusters or Cluster
    instances) as well as routing changes through the UI or API.
  name: Audit Log
paths:
  /admin/user/self:
    get:
      description: Request the user object for an authorized requesting account.
      operationId: admin_user_self_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The authorized user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error.
      summary: Returns the user object for the account authorized and making this
        request.
      tags:
      - User Management
      x-openapi-router-controller: openapi_server.controllers.user_management_controller
  /admin/user/self/access_token/{access-token-key}:
    delete:
      operationId: admin_user_self_access_token_access_token_key_delete
      parameters:
      - description: the key of the Access Token that should be deleted
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: access-token-key
        required: true
        schema:
          type: string
      - description: the current checksum of the user to be modified
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: An empty result if the API key deletion was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An error; may be unexpected or validation error if the last
            API was removed.
      summary: Delete the specified access token.
      tags:
      - User Management
      x-openapi-router-controller: openapi_server.controllers.user_management_controller
  /admin/user/self/access_tokens:
    get:
      operationId: admin_user_self_access_tokens_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAccessTokens'
          description: A list of Access Tokens defined for the authenticated user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Lists Access Tokens that are configured for the authenticated user.
      tags:
      - User Management
      x-openapi-router-controller: openapi_server.controllers.user_management_controller
    post:
      operationId: admin_user_self_access_tokens_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenDescription'
        description: A short string (<255 characters) describing the expected use
          of the token.
        required: true
        x-body-name: description
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: The new Access Token that was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Creates a new Access Token and associates it with the authenticated
        user.
      tags:
      - User Management
      x-codegen-request-body-name: description
      x-openapi-router-controller: openapi_server.controllers.user_management_controller
  /changelog/adhoc:
    get:
      description: Perform an adhoc query against the change log for your org. The
        filter is a JSON encoded FilterSum as defined in this file.
      operationId: changelog_adhoc_get
      parameters:
      - description: Encoded FilterSums representing the query you would like to execute.
          See object definition for details.
        in: query
        name: filter
        schema:
          type: string
          x-ref-encoded-object: '#/definitions/FilterSums'
        x-ref-encoded-object: '#/definitions/FilterSums'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes that meet the provided filter.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Allows an arbitrary filter to be specified and applied to the org\'s
        change log.
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /changelog/cluster-graph/{clusterKey}:
    get:
      description: |
        Gets all changes to a cluster.
      operationId: changelog_cluster_graph_cluster_key_get
      parameters:
      - description: the cluster key to see an audit log for
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      - description: |
          The beginning of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: start
        schema:
          format: int64
          type: number
      - description: |
          The end of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: end
        schema:
          format: int64
          type: number
      - description: |
          Determines how many ChangeDescription object should be returned to
          the calling code.
        in: query
        name: max_results
        schema:
          format: int64
          type: number
      - description: |
          When paginating a Changelog request start on the entry that comes
          immediately before or after this ID (as determined by the direction
          argument).
        in: query
        name: ref_id
        schema:
          type: string
      - description: |
          If set to "before" then changes will be returned that occurred before
          reference ID. If "after" then changes will be returned that have
          occurred since the reference ID.
        in: query
        name: direction
        schema:
          enum:
          - before
          - after
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes occurring during the requested window.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get changes related to the indicated cluster
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /changelog/domain-graph/{domainKey}:
    get:
      description: |
        Gets all changes to a domain, the proxies that front the specified domain,
        routes within that domain, the shared rules of each route, the clusters
        connected via route or shared rules.
      operationId: changelog_domain_graph_domain_key_get
      parameters:
      - description: the domain key to see an audit log for
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: domainKey
        required: true
        schema:
          type: string
      - description: |
          The beginning of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: start
        schema:
          format: int64
          type: number
      - description: |
          The end of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: end
        schema:
          format: int64
          type: number
      - description: |
          Determines how many ChangeDescription object should be returned to
          the calling code.
        in: query
        name: max_results
        schema:
          format: int64
          type: number
      - description: |
          When paginating a Changelog request start on the entry that comes
          immediately before or after this ID (as determined by the direction
          argument).
        in: query
        name: ref_id
        schema:
          type: string
      - description: |
          If set to "before" then changes will be returned that occurred before
          reference ID. If "after" then changes will be returned that have
          occurred since the reference ID.
        in: query
        name: direction
        schema:
          enum:
          - before
          - after
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes occurring during the requested window.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get changes related to the indicated domain
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /changelog/route-graph/{routeKey}:
    get:
      description: |
        Gets all changes to a route, the domains associated with it, the shared
        rules it references, and the clusters connected to it.
      operationId: changelog_route_graph_route_key_get
      parameters:
      - description: the route key to see an audit log for
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: routeKey
        required: true
        schema:
          type: string
      - description: |
          The beginning of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: start
        schema:
          format: int64
          type: number
      - description: |
          The end of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: end
        schema:
          format: int64
          type: number
      - description: |
          Determines how many ChangeDescription object should be returned to
          the calling code.
        in: query
        name: max_results
        schema:
          format: int64
          type: number
      - description: |
          When paginating a Changelog request start on the entry that comes
          immediately before or after this ID (as determined by the direction
          argument).
        in: query
        name: ref_id
        schema:
          type: string
      - description: |
          If set to "before" then changes will be returned that occurred before
          reference ID. If "after" then changes will be returned that have
          occurred since the reference ID.
        in: query
        name: direction
        schema:
          enum:
          - before
          - after
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes occurring during the requested window.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get changes related to the indicated route
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /changelog/shared-rules-graph/{sharedRulesKey}:
    get:
      description: |
        Gets all changes associated with set of Shared Rules; the domains using
        it and the clusters referenced by it.
      operationId: changelog_shared_rules_graph_shared_rules_key_get
      parameters:
      - description: the shared rules key to see an audit log for
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: sharedRulesKey
        required: true
        schema:
          type: string
      - description: |
          The beginning of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: start
        schema:
          format: int64
          type: number
      - description: |
          The end of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: end
        schema:
          format: int64
          type: number
      - description: |
          Determines how many ChangeDescription object should be returned to
          the calling code.
        in: query
        name: max_results
        schema:
          format: int64
          type: number
      - description: |
          When paginating a Changelog request start on the entry that comes
          immediately before or after this ID (as determined by the direction
          argument).
        in: query
        name: ref_id
        schema:
          type: string
      - description: |
          If set to "before" then changes will be returned that occurred before
          reference ID. If "after" then changes will be returned that have
          occurred since the reference ID.
        in: query
        name: direction
        schema:
          enum:
          - before
          - after
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes occurring during the requested window.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get changes related to the indicated SharedRules
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /changelog/zone/{zoneKey}:
    get:
      description: Retrieve all changes in the specified zone.
      operationId: changelog_zone_zone_key_get
      parameters:
      - description: the zone key to see an audit log for
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: zoneKey
        required: true
        schema:
          type: string
      - description: |
          The beginning of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: start
        schema:
          format: int64
          type: number
      - description: |
          The end of the window we want to see changes for; measured in
          microseconds since Unix Epoch.
        in: query
        name: end
        schema:
          format: int64
          type: number
      - description: |
          Determines how many ChangeDescription object should be returned to
          the calling code.
        in: query
        name: max_results
        schema:
          format: int64
          type: number
      - description: |
          When paginating a Changelog request start on the entry that comes
          immediately before or after this ID (as determined by the direction
          argument).
        in: query
        name: ref_id
        schema:
          type: string
      - description: |
          If set to "before" then changes will be returned that occurred before
          reference ID. If "after" then changes will be returned that have
          occurred since the reference ID.
        in: query
        name: direction
        schema:
          enum:
          - before
          - after
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeDescriptions'
          description: A list of changes occurring during the requested window.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get changes in a specified zone
      tags:
      - Audit Log
      x-openapi-router-controller: openapi_server.controllers.audit_log_controller
  /cluster:
    get:
      description: Get a list of clusters
      operationId: cluster_get
      parameters:
      - description: |
          A JSON encoded array of ClusterFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any ClusterFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiClusterResult'
          description: a result containing a list of clusters
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get clusters
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    post:
      description: Create a new cluster
      operationId: cluster_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCreate'
        description: the cluster to create
        required: true
        x-body-name: cluster
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResult'
          description: the newly created cluster
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create cluster
      tags:
      - Cluster
      x-codegen-request-body-name: cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /cluster/{clusterKey}:
    delete:
      description: Delete an existing cluster
      operationId: cluster_cluster_key_delete
      parameters:
      - description: the cluster key
        example: 7ef80556-60bb-46bd-4cec-f4e2533aa75c
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      - description: the current checksum of the cluster to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete cluster
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    get:
      description: Get details for an existing cluster
      operationId: cluster_cluster_key_get
      parameters:
      - description: the cluster key
        example: 7ef80556-60bb-46bd-4cec-f4e2533aa75c
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResult'
          description: a result containing a single cluster
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get cluster
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
    put:
      description: Modify an existing cluster
      operationId: cluster_cluster_key_put
      parameters:
      - description: the cluster key
        example: 5074fe62-821e-4034-55bd-b9caa09af2a1
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
        description: the cluster to modify
        required: true
        x-body-name: cluster
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResult'
          description: A result containing the modified cluster
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: modify cluster
      tags:
      - Cluster
      x-codegen-request-body-name: cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /cluster/{clusterKey}/instances:
    post:
      description: Add a new instance to a cluster
      operationId: cluster_cluster_key_instances_post
      parameters:
      - description: the cluster to add the instance to
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
        description: the instance to add
        required: true
        x-body-name: instance
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResult'
          description: the newly created instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: add instance
      tags:
      - Cluster
      x-codegen-request-body-name: instance
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /cluster/{clusterKey}/instances/{instanceIdentifier}:
    delete:
      description: Remove an instance from a cluster
      operationId: cluster_cluster_key_instances_instance_identifier_delete
      parameters:
      - description: the current checksum of the instance to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      - description: the cluster to remove an instance from
        example: 7ef80556-60bb-46bd-4cec-f4e2533aa75c
        in: path
        name: clusterKey
        required: true
        schema:
          type: string
      - description: "the instance to remove, identified as <host>:<port>"
        example: foo-1.useast.test.com:8080
        in: path
        name: instanceIdentifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: remove instance
      tags:
      - Cluster
      x-openapi-router-controller: openapi_server.controllers.cluster_controller
  /domain:
    get:
      description: Get a list of domains
      operationId: domain_get
      parameters:
      - description: |
          A JSON encoded array of DomainFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any DomainFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDomainResult'
          description: a result containing a list of domains
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get domains
      tags:
      - Domain
      x-openapi-router-controller: openapi_server.controllers.domain_controller
    post:
      description: Create a new domain
      operationId: domain_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCreate'
        description: the domain to create
        required: true
        x-body-name: domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResult'
          description: the newly created zone
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create domain
      tags:
      - Domain
      x-codegen-request-body-name: domain
      x-openapi-router-controller: openapi_server.controllers.domain_controller
  /domain/{domainKey}:
    delete:
      description: Delete an existing domain
      operationId: domain_domain_key_delete
      parameters:
      - description: the domain key
        example: 48cf1c9b-f027-4223-b405-d48018ffb900
        in: path
        name: domainKey
        required: true
        schema:
          type: string
      - description: the current checksum of the domain to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete domain
      tags:
      - Domain
      x-openapi-router-controller: openapi_server.controllers.domain_controller
    get:
      description: Get details for a single domain
      operationId: domain_domain_key_get
      parameters:
      - description: the domain key
        example: 48cf1c9b-f027-4223-b405-d48018ffb900
        in: path
        name: domainKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResult'
          description: a result containing a single domain
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get domain
      tags:
      - Domain
      x-openapi-router-controller: openapi_server.controllers.domain_controller
  /listener:
    get:
      description: Get a list of listeners
      operationId: listener_get
      parameters:
      - description: |
          A JSON encoded array of ListenerFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any ListenerFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListenerResult'
          description: a result containing a list of listeners
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: list listeners
      tags:
      - Listener
      x-openapi-router-controller: openapi_server.controllers.listener_controller
    post:
      description: Create a new listener
      operationId: listener_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListenerCreate'
        description: the listener to create
        required: true
        x-body-name: listener
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenerResult'
          description: the newly created listener
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create listener
      tags:
      - Listener
      x-codegen-request-body-name: listener
      x-openapi-router-controller: openapi_server.controllers.listener_controller
  /listener/{listenerKey}:
    delete:
      description: Delete existing listener
      operationId: listener_listener_key_delete
      parameters:
      - description: the listener key
        example: 72c86057-ee8d-4a2b-a3a7-760fbd1d3b9f
        in: path
        name: listenerKey
        required: true
        schema:
          type: string
      - description: the current checksum of the listener to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listener'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete listener
      tags:
      - Listener
      x-openapi-router-controller: openapi_server.controllers.listener_controller
    get:
      description: Get details for a single listener
      operationId: listener_listener_key_get
      parameters:
      - description: the listener key
        example: 72c86057-ee8d-4a2b-a3a7-760fbd1d3b9f
        in: path
        name: listenerKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenerResult'
          description: a result containing a single listener
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get listener
      tags:
      - Listener
      x-openapi-router-controller: openapi_server.controllers.listener_controller
    put:
      description: Modify an existing listener
      operationId: listener_listener_key_put
      parameters:
      - description: the listener key
        example: 5074fe62-821e-4034-55bd-b9caa09af2a1
        in: path
        name: listenerKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listener'
        description: the listener to modify
        required: true
        x-body-name: listener
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenerResult'
          description: A result containing the modified cluster
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: modify listener
      tags:
      - Listener
      x-codegen-request-body-name: listener
      x-openapi-router-controller: openapi_server.controllers.listener_controller
  /proxy:
    get:
      description: Get a list of proxies
      operationId: proxy_get
      parameters:
      - description: |
          A JSON encoded array of ProxyFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any ProxyFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiProxyResult'
          description: a result containing a list of proxies
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: list proxies
      tags:
      - Proxy
      x-openapi-router-controller: openapi_server.controllers.proxy_controller
    post:
      description: Create a new proxy
      operationId: proxy_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyCreate'
        description: the proxy to create
        required: true
        x-body-name: proxy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyResult'
          description: the newly created proxy
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create proxy
      tags:
      - Proxy
      x-codegen-request-body-name: proxy
      x-openapi-router-controller: openapi_server.controllers.proxy_controller
  /proxy/{proxyKey}:
    delete:
      description: Delete existing proxy
      operationId: proxy_proxy_key_delete
      parameters:
      - description: the proxy key
        example: 72c86057-ee8d-4a2b-a3a7-760fbd1d3b9f
        in: path
        name: proxyKey
        required: true
        schema:
          type: string
      - description: the current checksum of the proxy to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proxy'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete proxy
      tags:
      - Proxy
      x-openapi-router-controller: openapi_server.controllers.proxy_controller
    get:
      description: Get details for a single proxy
      operationId: proxy_proxy_key_get
      parameters:
      - description: the proxy key
        example: 72c86057-ee8d-4a2b-a3a7-760fbd1d3b9f
        in: path
        name: proxyKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyResult'
          description: a result containing a single proxy
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get proxy
      tags:
      - Proxy
      x-openapi-router-controller: openapi_server.controllers.proxy_controller
  /route:
    get:
      description: Get a list of routes
      operationId: route_get
      parameters:
      - description: |
          A JSON encoded array of RouteFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any RouteFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiRouteResult'
          description: a result containing a list of routes
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get routes
      tags:
      - Route
      x-openapi-router-controller: openapi_server.controllers.route_controller
    post:
      description: Create a new route
      operationId: route_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreate'
        description: the route to create
        required: true
        x-body-name: route
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResult'
          description: the newly created route
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create route
      tags:
      - Route
      x-codegen-request-body-name: route
      x-openapi-router-controller: openapi_server.controllers.route_controller
  /route/{routeKey}:
    delete:
      description: Delete an existing route
      operationId: route_route_key_delete
      parameters:
      - description: the route key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: routeKey
        required: true
        schema:
          type: string
      - description: the current checksum of the route to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete route
      tags:
      - Route
      x-openapi-router-controller: openapi_server.controllers.route_controller
    get:
      description: Get details for an existing route
      operationId: route_route_key_get
      parameters:
      - description: the route key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: routeKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResult'
          description: a result containing a single route
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get route
      tags:
      - Route
      x-openapi-router-controller: openapi_server.controllers.route_controller
    put:
      description: Modify an existing route
      operationId: route_route_key_put
      parameters:
      - description: the route key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: routeKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
        description: the route to modify
        required: true
        x-body-name: route
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResult'
          description: A result containing the modified route
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: modify route
      tags:
      - Route
      x-codegen-request-body-name: route
      x-openapi-router-controller: openapi_server.controllers.route_controller
  /shared_rules:
    get:
      description: Get a list of shared_rules
      operationId: shared_rules_get
      parameters:
      - description: |
          A JSON encoded array of SharedRulesFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any SharedRulesFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSharedRulesResult'
          description: a result containing a list of shared_rules
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get shared_rules
      tags:
      - Shared Rules
      x-openapi-router-controller: openapi_server.controllers.shared_rules_controller
    post:
      description: Create a new shared_rules object
      operationId: shared_rules_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedRulesCreate'
        description: the shared_rules object to create
        required: true
        x-body-name: shared_rules
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedRulesResult'
          description: the newly created shared_rules object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create shared_rules
      tags:
      - Shared Rules
      x-codegen-request-body-name: shared_rules
      x-openapi-router-controller: openapi_server.controllers.shared_rules_controller
  /shared_rules/{sharedRulesKey}:
    delete:
      description: Delete an existing shared_rules object
      operationId: shared_rules_shared_rules_key_delete
      parameters:
      - description: the shared_rules key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: sharedRulesKey
        required: true
        schema:
          type: string
      - description: the current checksum of the shared_rules to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete shared_rules object
      tags:
      - Route
      x-openapi-router-controller: openapi_server.controllers.route_controller
    get:
      description: Get details for an existing shared_rules object
      operationId: shared_rules_shared_rules_key_get
      parameters:
      - description: the shared_rules key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: sharedRulesKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedRulesResult'
          description: a result containing a single shared_rules object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get shared_rules object
      tags:
      - Shared Rules
      x-openapi-router-controller: openapi_server.controllers.shared_rules_controller
    put:
      description: Modify an existing shared_rules object
      operationId: shared_rules_shared_rules_key_put
      parameters:
      - description: the shared_rules key
        example: 1c7b1c5e-1a23-4d04-5cb4-eccea4d5994c
        in: path
        name: sharedRulesKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedRules'
        description: the shared_rules object to modify
        required: true
        x-body-name: shared_rules
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedRulesResult'
          description: A result containing the modified shared_rules object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: modify shared_rules object
      tags:
      - Shared Rules
      x-codegen-request-body-name: shared_rules
      x-openapi-router-controller: openapi_server.controllers.shared_rules_controller
  /zone:
    get:
      description: |
        Get all zones. possibly with filters
      operationId: zone_get
      parameters:
      - description: |
          A JSON encoded array of ZoneFilter objects. The filter is taken
          as a union of intersections. In other words an object that matches
          every constraint in any ZoneFilter will be included.
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiZoneResult'
          description: A result containing an array of zones
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get a list of zones
      tags:
      - Zone
      x-openapi-router-controller: openapi_server.controllers.zone_controller
    post:
      description: |
        Create a new zone.
      operationId: zone_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneCreate'
        description: the zone to create
        required: true
        x-body-name: zone
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneResult'
          description: A result containing the newly created zone
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create zone
      tags:
      - Zone
      x-codegen-request-body-name: zone
      x-openapi-router-controller: openapi_server.controllers.zone_controller
  /zone/{zoneKey}:
    delete:
      description: |
        Delete a zone.
      operationId: zone_zone_key_delete
      parameters:
      - description: the zone key
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: zoneKey
        required: true
        schema:
          type: string
      - description: the current checksum of the zone to be deleted
        example: 9cd24183-f848-48f8-6f55-0f07240700b9
        in: query
        name: checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: an empty result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: delete zone
      tags:
      - Zone
      x-openapi-router-controller: openapi_server.controllers.zone_controller
    get:
      description: |
        Get details for a single zone
      operationId: zone_zone_key_get
      parameters:
      - description: the zone key
        example: 9cd24183-f848-48f8-6f55-0f0724070000
        in: path
        name: zoneKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneResult'
          description: a result containing a single zone
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: get zone
      tags:
      - Zone
      x-openapi-router-controller: openapi_server.controllers.zone_controller
components:
  schemas:
    AccessToken:
      example:
        signed_token: signed_token
        checksum: checksum
        created_at: created_at
        description: description
        user_key: user_key
        access_token_key: access_token_key
      properties:
        access_token_key:
          title: access_token_key
          type: string
        checksum:
          title: checksum
          type: string
        created_at:
          description: |
            A timestamp that marks when a user was deleted. It is in the format
            yyyy-mm-ddThh:mm:ss.SZ. The timezone will always be UTC.
          title: created_at
          type: string
        description:
          title: description
          type: string
        signed_token:
          description: |
            This will be set only when an AccessToken is initially created
          title: signed_token
          type: string
        user_key:
          title: user_key
          type: string
      required:
      - access_token_key
      - checksum
      - created_at
      - description
      - user_key
      title: AccessToken
      type: object
    AccessTokenDescription:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
      required:
      - description
      title: AccessTokenDescription
      type: object
    AllConstraints:
      example:
        tap:
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
        light:
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
        dark:
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
        - cluster_key: cluster_key
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          response_data: "{}"
          constraint_key: constraint_key
          weight: 5
          properties:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        dark:
          items:
            $ref: '#/components/schemas/ClusterConstraint'
          title: dark
          type: array
        light:
          items:
            $ref: '#/components/schemas/ClusterConstraint'
          title: dark
          type: array
        tap:
          items:
            $ref: '#/components/schemas/ClusterConstraint'
          title: dark
          type: array
      required:
      - light
      title: AllConstraints
      type: object
    CORSConfig:
      description: |
        Experimental: Controls simple CORS responses for the associated domain.
        The configurable properties map closely to the CORS specification which
        should be referenced for a full discussion on their meaning:
        https://www.w3.org/TR/cors/ or https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS.
      example:
        max_age: 0
        allowed_methods:
        - allowed_methods
        - allowed_methods
        allowed_headers:
        - allowed_headers
        - allowed_headers
        allow_credentials: true
        exposed_headers:
        - exposed_headers
        - exposed_headers
        allowed_origins:
        - allowed_origins
        - allowed_origins
      properties:
        allow_credentials:
          description: |
            Indicates whether the response to request can be exposed when the
            omit credentials flag is unset
            https://www.w3.org/TR/cors/#access-control-allow-credentials-response-header.
          title: allow_credentials
          type: boolean
        allowed_headers:
          description: |
            Specifies what headers are allowed to be set when a request is made.
            https://www.w3.org/TR/cors/#access-control-allow-headers-response-header.
          items:
            type: string
          title: allowed_headers
          type: array
        allowed_methods:
          description: |
            Indicates which HTTP request types may be used to call an endpoint.
            https://www.w3.org/TR/cors/#access-control-allow-methods-response-header.
          items:
            type: string
          title: allowed_methods
          type: array
        allowed_origins:
          description: |
            Must contain a single element specifying the domain (origin) allowed
            to make requsets to this domain. If any origin is acceptable '*' may
            be used as a wildcard https://www.w3.org/TR/cors/#origin-request-header,
            https://www.w3.org/TR/cors/#access-control-allow-origin-response-header.
          items:
            type: string
          title: allowed_origins
          type: array
        exposed_headers:
          description: |
            Indicates which response headers may be accessed from the browser.
            https://www.w3.org/TR/cors/#http-access-control-expose-headers.
          items:
            type: string
          title: exposed_headers
          type: array
        max_age:
          description: |
            Sets how long (in seconds) the response to a preflight request may be
            cached. A value of -1 will disable caching. https://www.w3.org/TR/cors/#access-control-max-age-response-header.
          title: max_age
          type: integer
      required:
      - allowed_methods
      - allowed_origins
      title: CORSConfig
      type: object
    CertKeyPathPair:
      description: |
        A key/cert pair that will be served when a domain terminates a SSL/TLS
        request.  Paths should be absolute and accessible to the user running
        the proxy instance.
      example:
        certificate_path: certificate_path
        key_path: key_path
      properties:
        certificate_path:
          description: |
            Path to a certificate in the PEM format for the domain. If multiple
            certificates need to be specified then should be contained in this file
            in the following order: first the primary certificate followed by any
            intermediary certificats.
          title: certificate_path
          type: string
        key_path:
          description: |
            Path to a file with the secret key in the PEM format for the domain.
          title: key_path
          type: string
      required:
      - certificate_path
      - key_path
      title: CertKeyPathPair
      type: object
    ChangeDescription:
      example:
        at: 6.027456183070403
        actor_key: actor_key
        comment: comment
        txn: txn
        diffs:
        - path: path
          object_key: object_key
          object_type: org
          zone_key: zone_key
          change_type: addition
          value: value
        - path: path
          object_key: object_key
          object_type: org
          zone_key: zone_key
          change_type: addition
          value: value
      properties:
        actor_key:
          description: The user who made the change.
          title: actor_key
          type: string
        at:
          description: When the change took place in milliseconds since the Unix epoch.
          format: int64
          title: at
          type: number
        comment:
          description: A description of the change.
          title: comment
          type: string
        diffs:
          description: A collection of attribute updates that compose this change.
          items:
            $ref: '#/components/schemas/ChangeEntry'
          title: diffs
          type: array
        txn:
          description: |
            A unique identifier for all this transaction. It is shared by all
            attribute updates within a change.
          title: txn
          type: string
      title: ChangeDescription
      type: object
    ChangeEntry:
      example:
        path: path
        object_key: object_key
        object_type: org
        zone_key: zone_key
        change_type: addition
        value: value
      properties:
        change_type:
          description: Whether the value was added or removed to the object.
          enum:
          - addition
          - removal
          title: change_type
          type: string
        object_key:
          description: An ID uniquely identifying the object being changed.
          title: object_key
          type: string
        object_type:
          description: The name of the object being being altered.
          enum:
          - org
          - user
          - zone
          - proxy
          - domain
          - route
          - shared_rules
          - cluster
          title: object_type
          type: string
        path:
          description: A dot-separated / bracket-indexed path to the field changed
            on the object.
          title: path
          type: string
        value:
          description: |
            The value that has been added or removed to the object at the attribute
            path indicated in path.
          title: value
          type: string
        zone_key:
          description: The zone this object is located in.
          title: zone_key
          type: string
      title: ChangeEntry
      type: object
    CircuitBreakers:
      description: |
        Provides limits on various parameters to protect clusters against sudden
        surges in traffic.
      example:
        max_connections: 0
        max_requests: 1
        max_retries: 5
        max_pending_requests: 6
      properties:
        max_connections:
          description: |
            Maximum number of connections that will be established to all
            instances in a cluster within a proxy. If set to 0, no new connections
            will be created. If not specified, defaults to 1024.
          title: max_connections
          type: integer
        max_pending_requests:
          description: |
            Maximum number of requests that will be queued while waiting on a
            connection pool to a cluster within a proxy. If set to 0, no requests
            will be queued. If not specified, defaults to 1024.
          title: max_pending_requests
          type: integer
        max_requests:
          description: |
            Maximum number of requests that can be outstanding to all instances in
            a cluster within  a proxy. Only applicable to HTTP/2 traffic since
            HTTP/1.1 clusters are governed by the maximum connections circuit
            breaker. If set to 0, no requests will be made. If not specified,
            defaults to 1024.
          title: max_requests
          type: integer
        max_retries:
          description: |
            Maximum number of retries that can be outstanding to all instances in
            a cluster within a proxy. If set to 0, requests will not be retried.
            If not specified, defaults to 3.
          title: max_retries
          type: integer
      title: CircuitBreakers
      type: object
    Cluster:
      allOf:
      - $ref: '#/components/schemas/ClusterCreate'
      - properties:
          checksum:
            type: string
          cluster_key:
            type: string
        required:
        - checksum
        - cluster_key
        type: object
      example:
        circuit_breakers:
          max_connections: 0
          max_requests: 1
          max_retries: 5
          max_pending_requests: 6
        cluster_key: cluster_key
        require_tls: true
        instances:
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          port: 1
          host: host
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          port: 1
          host: host
        health_checks:
        - no_traffic_interval_msec: 3
          healthy_threshold: 2
          unhealthy_threshold: 1
          interval_msec: 9
          unhealthy_edge_interval_msec: 4
          health_checker:
            tcp_health_check:
              receive:
              - receive
              - receive
              send: send
            http_health_check:
              path: path
              service_name: service_name
              host: host
              request_headers_to_add: "{}"
          unhealthy_interval_msec: 7
          healthy_edge_interval_msec: 5
          reuse_connection: true
          timeout_msec: 2
          interval_jitter_msec: 7
        - no_traffic_interval_msec: 3
          healthy_threshold: 2
          unhealthy_threshold: 1
          interval_msec: 9
          unhealthy_edge_interval_msec: 4
          health_checker:
            tcp_health_check:
              receive:
              - receive
              - receive
              send: send
            http_health_check:
              path: path
              service_name: service_name
              host: host
              request_headers_to_add: "{}"
          unhealthy_interval_msec: 7
          healthy_edge_interval_msec: 5
          reuse_connection: true
          timeout_msec: 2
          interval_jitter_msec: 7
        name: name
        zone_key: zone_key
        checksum: checksum
        outlier_detection:
          max_ejection_percent: 9
          success_rate_minimum_hosts: 6
          consecutive_5xx: 6
          success_rate_stdev_factor: 9
          consecutive_gateway_failure: 7
          enforcing_consecutive_gateway_failure: 4
          interval_msec: 9
          enforcing_consecutive_5xx: 1
          enforcing_success_rate: 5
          success_rate_request_volume: 8
          base_ejection_time_msec: 1
      title: Cluster
    ClusterConstraint:
      example:
        cluster_key: cluster_key
        metadata:
        - value: value
          key: key
        - value: value
          key: key
        response_data: "{}"
        constraint_key: constraint_key
        weight: 5
        properties:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        cluster_key:
          title: cluster_key
          type: string
        constraint_key:
          title: constraint_key
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Metadatum'
          title: Metadata
          type: array
        properties:
          items:
            $ref: '#/components/schemas/Metadatum'
          title: Metadata
          type: array
        response_data:
          allOf:
          - $ref: '#/components/schemas/ResponseData'
          description: |
            When a request is served by a cluster selected by this constraint annotate
            the response with the information specified within this ResponseData
            object. It's possible that multiple response data configurations will
            apply; if that's the case then the values from ClusterConstarint takes
            precedence over those from a Route or SharedRules object.
          title: response_data
          type: object
        weight:
          title: weight
          type: integer
      title: ClusterConstraint
      type: object
    ClusterConstraints:
      items:
        $ref: '#/components/schemas/ClusterConstraint'
      title: dark
      type: array
    ClusterCreate:
      example:
        circuit_breakers:
          max_connections: 0
          max_requests: 1
          max_retries: 5
          max_pending_requests: 6
        require_tls: true
        instances:
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          port: 1
          host: host
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          port: 1
          host: host
        health_checks:
        - no_traffic_interval_msec: 3
          healthy_threshold: 2
          unhealthy_threshold: 1
          interval_msec: 9
          unhealthy_edge_interval_msec: 4
          health_checker:
            tcp_health_check:
              receive:
              - receive
              - receive
              send: send
            http_health_check:
              path: path
              service_name: service_name
              host: host
              request_headers_to_add: "{}"
          unhealthy_interval_msec: 7
          healthy_edge_interval_msec: 5
          reuse_connection: true
          timeout_msec: 2
          interval_jitter_msec: 7
        - no_traffic_interval_msec: 3
          healthy_threshold: 2
          unhealthy_threshold: 1
          interval_msec: 9
          unhealthy_edge_interval_msec: 4
          health_checker:
            tcp_health_check:
              receive:
              - receive
              - receive
              send: send
            http_health_check:
              path: path
              service_name: service_name
              host: host
              request_headers_to_add: "{}"
          unhealthy_interval_msec: 7
          healthy_edge_interval_msec: 5
          reuse_connection: true
          timeout_msec: 2
          interval_jitter_msec: 7
        name: name
        zone_key: zone_key
        outlier_detection:
          max_ejection_percent: 9
          success_rate_minimum_hosts: 6
          consecutive_5xx: 6
          success_rate_stdev_factor: 9
          consecutive_gateway_failure: 7
          enforcing_consecutive_gateway_failure: 4
          interval_msec: 9
          enforcing_consecutive_5xx: 1
          enforcing_success_rate: 5
          success_rate_request_volume: 8
          base_ejection_time_msec: 1
      properties:
        circuit_breakers:
          $ref: '#/components/schemas/CircuitBreakers'
        health_checks:
          items:
            $ref: '#/components/schemas/HealthCheck'
          title: HealthChecks
          type: array
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          title: Instances
          type: array
        name:
          title: name
          type: string
        outlier_detection:
          $ref: '#/components/schemas/OutlierDetection'
        require_tls:
          description: |
            If set, requests to this collection of hosts will be made via HTTPS.
            At this time neither certificate validation and certificate pinning
            are supported for proxy clients of this cluster.
          title: require_tls
          type: boolean
        zone_key:
          title: zone_key
          type: string
      required:
      - name
      - zone_key
      title: ClusterCreate
      type: object
    ClusterFilter:
      properties:
        cluster_key:
          type: string
        name:
          type: string
        zone_key:
          type: string
      type: object
    ClusterResult:
      example:
        result:
          circuit_breakers:
            max_connections: 0
            max_requests: 1
            max_retries: 5
            max_pending_requests: 6
          cluster_key: cluster_key
          require_tls: true
          instances:
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          health_checks:
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          name: name
          zone_key: zone_key
          checksum: checksum
          outlier_detection:
            max_ejection_percent: 9
            success_rate_minimum_hosts: 6
            consecutive_5xx: 6
            success_rate_stdev_factor: 9
            consecutive_gateway_failure: 7
            enforcing_consecutive_gateway_failure: 4
            interval_msec: 9
            enforcing_consecutive_5xx: 1
            enforcing_success_rate: 5
            success_rate_request_volume: 8
            base_ejection_time_msec: 1
      properties:
        result:
          $ref: '#/components/schemas/Cluster'
      title: ClusterResult
      type: object
    CohortSeed:
      example:
        name: name
        use_zero_value_seed: true
        type: header
      properties:
        name:
          description: |
            The name of the cookie, the header field, or the query argument to
            be checked for a cohort seed value.
          title: name
          type: string
        type:
          description: Where a request's cohort seed will be drawn from.
          enum:
          - header
          - cookie
          - query
          title: type
          type: string
        use_zero_value_seed:
          description: |
            If true, requests with a seed source which resolves to an empty value
            will still be grouped and routed consistently. This means a misspelled
            or missing seed source on a request will sort all such traffic into a
            single backend. This could result in all traffic being assigned to a
            backend intended for only a small percentage of traffic. Use with
            caution.
          title: use_zero_value_seed
          type: boolean
      title: CohortSeed
      type: object
    CookieDatum:
      description: |
        This describes a cookie that should be set in response to a HTTP request.
      properties:
        domain:
          description: |
            Specifies the hosts to hich a cookie will be sent. Maps directly to a
            cookie's 'Domain' attribute.
          title: domain
          type: string
        expires_in_sec:
          description: |
            This indicates how long a cookie will be valid, in seconds. If not set the
            default is to provide no expiration information. If set to 0 the cookie will
            have an 'Expires' attribute set to 'Mon, 1 Jan 0001 12:00:00 UTC'. For values
            greater than 0 the cookie's 'Max-Age' attribute will be set to that value.
          title: expires_in_sec
          type: integer
        http_only:
          description: |
            If set the cookie value will not be accessible via Document.cookie. Maps
            directly to 'HttpOnly' attribute.
          title: http_only
          type: boolean
        name:
          description: The name of the cookie that will be attached to the response
            sent.
          title: name
          type: string
        path:
          description: |
            Specifies the path a cookie will be associated with. Maps directly to
            the 'Path' attribute.
          title: path
          type: string
        same_site:
          description: |
            Allows assertions how a cookie should behave wend making cross-site requests.
            Maps directly to 'SameSite' attribute. If unset no guidance will be included
            in the cookie.
          enum:
          - Strict
          - Lax
          title: same_site
          type: string
        secure:
          description: |
            If set the cookie will only be sent on subsequent requests when accessing
            a server via HTTPS. Maps directly to 'Secure' attribute.
          title: secure
          type: boolean
        value:
          description: |
            A literal value to send as the cookie value or a reference to
            some metadatum value set on the Cluster Intsance that handles
            a specific request.
          title: value
          type: string
        value_is_literal:
          description: |
            If true then the value attribute is treated as a literal and no attempt
            to resolve to a server metadatum.
          title: value_is_literal
          type: boolean
      title: CookieDatum
      type: object
    Domain:
      allOf:
      - $ref: '#/components/schemas/DomainCreate'
      - properties:
          checksum:
            type: string
          domain_key:
            type: string
        required:
        - checksum
        - domain_key
        type: object
      example:
        force_https: true
        aliases:
        - aliases
        - aliases
        domain_key: domain_key
        port: 6
        redirects:
        - header_constraints:
          - invert: true
            case_sensitive: true
            name: name
            value: value
          - invert: true
            case_sensitive: true
            name: name
            value: value
          name: name
          from: from
          to: to
          redirect_type: permanent
        - header_constraints:
          - invert: true
            case_sensitive: true
            name: name
            value: value
          - invert: true
            case_sensitive: true
            name: name
            value: value
          name: name
          from: from
          to: to
          redirect_type: permanent
        checksum: checksum
        name: name
        zone_key: zone_key
        gzip_enabled: true
        cors_config:
          max_age: 0
          allowed_methods:
          - allowed_methods
          - allowed_methods
          allowed_headers:
          - allowed_headers
          - allowed_headers
          allow_credentials: true
          exposed_headers:
          - exposed_headers
          - exposed_headers
          allowed_origins:
          - allowed_origins
          - allowed_origins
        ssl_config:
          cert_key_pairs:
          - certificate_path: certificate_path
            key_path: key_path
          - certificate_path: certificate_path
            key_path: key_path
          cipher_filter: cipher_filter
          protocols:
          - protocols
          - protocols
      title: Domain
    DomainCreate:
      example:
        force_https: true
        aliases:
        - aliases
        - aliases
        domain_key: domain_key
        port: 0
        redirects:
        - header_constraints:
          - invert: true
            case_sensitive: true
            name: name
            value: value
          - invert: true
            case_sensitive: true
            name: name
            value: value
          name: name
          from: from
          to: to
          redirect_type: permanent
        - header_constraints:
          - invert: true
            case_sensitive: true
            name: name
            value: value
          - invert: true
            case_sensitive: true
            name: name
            value: value
          name: name
          from: from
          to: to
          redirect_type: permanent
        checksum: checksum
        name: name
        zone_key: zone_key
        gzip_enabled: true
        cors_config:
          max_age: 0
          allowed_methods:
          - allowed_methods
          - allowed_methods
          allowed_headers:
          - allowed_headers
          - allowed_headers
          allow_credentials: true
          exposed_headers:
          - exposed_headers
          - exposed_headers
          allowed_origins:
          - allowed_origins
          - allowed_origins
        ssl_config:
          cert_key_pairs:
          - certificate_path: certificate_path
            key_path: key_path
          - certificate_path: certificate_path
            key_path: key_path
          cipher_filter: cipher_filter
          protocols:
          - protocols
          - protocols
      properties:
        aliases:
          description: |
            A set of alternate names that this Domain may be referenced by. May
            start ('*.') or end ('.*') with a wildcard.
          items:
            type: string
          title: aliases
          type: array
        checksum:
          title: checksum
          type: string
        cors_config:
          $ref: '#/components/schemas/CORSConfig'
        domain_key:
          title: domain_key
          type: string
        force_https:
          description: |
            If set to true, requests must use TLS. If a request is not using TLS, (as determined by
            the scheme or the presence of X-Forwarded-Proto header), a 301 redirect will be sent
            telling the client to use HTTPS.
          title: force_https
          type: boolean
        gzip_enabled:
          description: "Experimental: if set to true will enable gzip compression\
            \ on data that passes trough this domain"
          title: gzip_enabled
          type: boolean
        name:
          title: name
          type: string
        port:
          title: port
          type: integer
        redirects:
          items:
            $ref: '#/components/schemas/Redirect'
          title: redirects
          type: array
        ssl_config:
          $ref: '#/components/schemas/SSLConfig'
        zone_key:
          title: zone_key
          type: string
      required:
      - name
      - port
      - zone_key
      title: DomainCreate
      type: object
    DomainFilter:
      properties:
        domain_key:
          type: string
        name:
          type: string
        proxy_keys:
          description: |
            matches Domains with a superset of the specified proxy_keys. A
            slice with a single value of "-" will produce Domains with no linked
            Proxies.
          items:
            type: string
          type: array
        zone_key:
          type: string
      type: object
    DomainResult:
      example:
        result:
          force_https: true
          aliases:
          - aliases
          - aliases
          domain_key: domain_key
          port: 6
          redirects:
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          checksum: checksum
          name: name
          zone_key: zone_key
          gzip_enabled: true
          cors_config:
            max_age: 0
            allowed_methods:
            - allowed_methods
            - allowed_methods
            allowed_headers:
            - allowed_headers
            - allowed_headers
            allow_credentials: true
            exposed_headers:
            - exposed_headers
            - exposed_headers
            allowed_origins:
            - allowed_origins
            - allowed_origins
          ssl_config:
            cert_key_pairs:
            - certificate_path: certificate_path
              key_path: key_path
            - certificate_path: certificate_path
              key_path: key_path
            cipher_filter: cipher_filter
            protocols:
            - protocols
            - protocols
      properties:
        result:
          $ref: '#/components/schemas/Domain'
      title: DomainResult
      type: object
    Empty:
      type: object
    Error:
      example:
        code: 0
        fields: fields
        message: message
      properties:
        code:
          format: int32
          title: code
          type: integer
        fields:
          title: fields
          type: string
        message:
          title: message
          type: string
      title: Error
      type: object
    Filter:
      properties:
        absolute_match_only:
          description: |
            If set this will return ChangeEntry values with a path that matches
            the attribute_path property exactly.
          title: absolute_match_only
          type: boolean
        actor_key:
          description: The user who made the change.
          title: actor_key
          type: string
        attribute_path:
          description: |
            A dot-separated / bracket-indexed path to the field changed on the
            object. '%' may be used as a wildcard.
          title: attribute_path
          type: string
        attribute_value:
          description: |
            The value that has been added or removed to the object at the attribute
            path indicated in path.
          title: attribute_value
          type: string
        change_txn:
          description: |
            A unique identifier for all this transaction. It is shared by all
            attribute updates within a change.
          title: change_txn
          type: string
        change_type:
          description: Whether the value was added or removed to the object.
          enum:
          - addition
          - removal
          title: change_type
          type: string
        exclude_empty_values:
          description: |
            If set this will exclude ChangeEntry records that save the addition
            or removal of an empty value.
          title: exclude_empty_values
          type: boolean
        negative_match:
          description: |
            If set this filter will match the all ChangeEntry records that do
            NOT meet the constraints laid out in this Filter object.
          title: negative_match
          type: boolean
        object_key:
          description: An ID uniquely identifying the object being changed.
          title: object_key
          type: string
        object_type:
          description: The name of the object being being altered.
          enum:
          - org
          - user
          - zone
          - proxy
          - domain
          - route
          - shared_rules
          - cluster
          title: object_type
          type: string
        org_key:
          description: The organization the objects being updated belong to.
          title: org_key
          type: string
        time_range:
          $ref: '#/components/schemas/TimeRange'
        zone_key:
          description: The zone this object is located in.
          title: zone_key
          type: string
      title: Filter
      type: object
    FilterProducts:
      properties:
        and:
          description: An array of changelog filters that will be joined via logical
            AND.
          items:
            $ref: '#/components/schemas/Filter'
          title: and
          type: array
      title: FilterProducts
      type: object
    FilterSums:
      properties:
        or:
          description: An array of changelog filters that will be joined via logical
            OR.
          items:
            $ref: '#/components/schemas/FilterProducts'
          type: array
      type: object
    HTTPHealthCheck:
      example:
        path: path
        service_name: service_name
        host: host
        request_headers_to_add: "{}"
      properties:
        host:
          description: |
            The value of the host header in the HTTP health check request.
            If left empty, the name of the cluster being health checked
            will be used.
          title: host
          type: string
        path:
          description: |
            Specifies the HTTP path that will be requested during health
            checking.
          title: path
          type: string
        request_headers_to_add:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: |
            Specifies a list of HTTP headers that should be added to each request
            sent to the health checked cluster.
          title: request_headers_to_add
          type: object
        service_name:
          description: |
            An optional service name parameter which is used to validate
            the identity of the health checked cluster.
          title: service_name
          type: string
      title: HTTPHealthCheck
      type: object
    HeaderConstraint:
      description: |
        Indicates that a request's headers should meet some requirement before being
        selected for a rewrite. Must have zore or one elements.
      example:
        invert: true
        case_sensitive: true
        name: name
        value: value
      properties:
        case_sensitive:
          description: "If set, the header value check will be case sensitive."
          title: case_sensitive
          type: boolean
        invert:
          description: |
            If set, the header constraint will succeed if the match described faile.
          title: invert
          type: boolean
        name:
          description: |
            The header that is being checked. This must match the regexp "^[0-9a-zA-Z-]+$".
            This is checked in a case insensitive manner.
          title: name
          type: string
        value:
          description: |
            If set the header's value will be compared to this. The default is to
            make case insensitive comparisons.
          title: value
          type: string
      required:
      - name
      title: HeaderConstraint
      type: object
    HeaderDatum:
      description: |
        This describes a HTTP header that should be attached to requests.
      properties:
        name:
          description: |
            The name of the header that will be attached to the response sent.
            This is case insensitive.
          title: name
          type: string
        value:
          description: |
            A literal value to send as the header value or a reference to
            some metadatum value set on the Cluster Intsance that handles
            a specific request. If this value is empty after looking up an
            Instance metadatum value no header will be sent.
          title: value
          type: string
        value_is_literal:
          description: |
            If true then the value attribute is treated as a literal and no attempt
            to resolve instance metadatum to find a value.
          title: value_is_literal
          type: boolean
      title: HeaderDatum
      type: object
    HealthCheck:
      description: |
        Configures active health checking for every instance in a cluster.
      example:
        no_traffic_interval_msec: 3
        healthy_threshold: 2
        unhealthy_threshold: 1
        interval_msec: 9
        unhealthy_edge_interval_msec: 4
        health_checker:
          tcp_health_check:
            receive:
            - receive
            - receive
            send: send
          http_health_check:
            path: path
            service_name: service_name
            host: host
            request_headers_to_add: "{}"
        unhealthy_interval_msec: 7
        healthy_edge_interval_msec: 5
        reuse_connection: true
        timeout_msec: 2
        interval_jitter_msec: 7
      properties:
        health_checker:
          $ref: '#/components/schemas/HealthCheck_health_checker'
        healthy_edge_interval_msec:
          description: |
            Interval used for the first health check right after a host is marked
            as healthy. For subsequent health checks, the proxy will shift back to
            using the standard health check interval(\'interval_msec\') that is
            defined. Defaults to the same value as \'interval_msec\' if not
            specified.
          title: healthy_edge_interval_msec
          type: integer
        healthy_threshold:
          description: |
            The number of healthy health checks required before a host is marked
            healthy. Note that during startup, only a single successful health
            check is required to mark a host healthy.
          title: healthy_threshold
          type: integer
        interval_jitter_msec:
          description: |
            An optional jitter amount that is added to each interval value
            calculated by the proxy. If not specified, defaults to 0.
          title: interval_jitter_msec
          type: integer
        interval_msec:
          description: |
            The interval between health checks. The first round of health checks
            will occur during startup before any traffic is routed to a cluster.
            This means that the \'no_traffic_interval_msec\' value will be used as
            the first interval of health checks.
          title: interval_msec
          type: integer
        no_traffic_interval_msec:
          description: |
            Interval used when a cluster has never had traffic routed to it. It
            allows cluster information to be kept up to date, without sending a
            potentially large amount of active health checking traffic for no
            reason. Once a cluster has been used for traffic routing, The proxy
            will shift back to using the standard health check interval that is
            defined. Note that this interval takes precedence over any other.
            Defaults to 60s.
          title: no_traffic_interval_msec
          type: integer
        reuse_connection:
          description: |
            Whether or not to reuse health check connections between health checks.
            Default is true.
          title: reuse_connection
          type: boolean
        timeout_msec:
          description: |
            The time to wait for a health check response. If the timeout is
            reached without a response, the health check attempt will be
            considered a failure. This is a required field and must be greater
            than 0.
          title: timeout_msec
          type: integer
        unhealthy_edge_interval_msec:
          description: |
            Interval used for the first health check right after a host is marked
            as unhealthy. For subsequent health checks, the proxy will shift back
            to using either \'unhealthy_interval_msec\' if present or the standard
            health check interval, \'interval_msec\'.
          title: unhealthy_edge_interval_msec
          type: integer
        unhealthy_interval_msec:
          description: |
            Interval used for hosts that are marked as unhealthy. As soon as the
            host is marked as healthy, The proxy will shift back to using the
            standard health check interval that is defined. This defaults to the
            same value as \'interval_msec\' if not specified.
          title: unhealthy_interval_msec
          type: integer
        unhealthy_threshold:
          description: |
            The number of unhealthy health checks required before a host is
            marked unhealthy. Note that for *http* health checking, if a host
            responds with 503, this threshold is ignored and the host is
            considered unhealthy immediately.
          title: unhealthy_threshold
          type: integer
      required:
      - health_checker
      - healthy_threshold
      - interval_msec
      - timeout_msec
      - unhealthy_threshold
      title: HealthCheck
      type: object
    HealthChecks:
      items:
        $ref: '#/components/schemas/HealthCheck'
      title: HealthChecks
      type: array
    Instance:
      example:
        metadata:
        - value: value
          key: key
        - value: value
          key: key
        port: 1
        host: host
      properties:
        host:
          title: host
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Metadatum'
          title: Metadata
          type: array
        port:
          title: port
          type: integer
      title: Instance
      type: object
    InstanceResult:
      example:
        result:
          metadata:
          - value: value
            key: key
          - value: value
            key: key
          port: 1
          host: host
      properties:
        result:
          $ref: '#/components/schemas/Instance'
      title: InstanceResult
      type: object
    Instances:
      items:
        $ref: '#/components/schemas/Instance'
      title: Instances
      type: array
    Listener:
      allOf:
      - $ref: '#/components/schemas/ListenerCreate'
      - properties:
          checksum:
            type: string
          listener_key:
            type: string
        required:
        - checksum
        - listener_key
        type: object
      example:
        protocol: http
        listener_key: listener_key
        port: 0
        ip: ip
        tracing_config:
          ingress: true
          request_headers_for_tags:
          - request_headers_for_tags
          - request_headers_for_tags
        name: name
        zone_key: zone_key
        checksum: checksum
        domain_keys:
        - domain_keys
        - domain_keys
      title: Listener
    ListenerCreate:
      example:
        protocol: http
        port: 0
        ip: ip
        tracing_config:
          ingress: true
          request_headers_for_tags:
          - request_headers_for_tags
          - request_headers_for_tags
        name: name
        zone_key: zone_key
        domain_keys:
        - domain_keys
        - domain_keys
      properties:
        domain_keys:
          items:
            type: string
          title: domain_keys
          type: array
        ip:
          description: the interface this listener should bind to.
          title: ip
          type: string
        name:
          title: name
          type: string
        port:
          description: the port this listener should bind to.
          title: port
          type: integer
        protocol:
          description: |
            the protocol this listener will handle. http and http2 configure the listener to only
            process requests of that type. http_auto will adapt to HTTP/1.1 and HTTP/2 as needed.
            tcp configures the listener to be a tcp proxy
          enum:
          - http
          - http2
          - http_auto
          - tcp
          title: protocol
          type: string
        tracing_config:
          $ref: '#/components/schemas/TracingConfig'
        zone_key:
          title: zone_key
          type: string
      required:
      - name
      - port
      - protocol
      title: ListenerCreate
      type: object
    ListenerResult:
      example:
        result:
          protocol: http
          listener_key: listener_key
          port: 0
          ip: ip
          tracing_config:
            ingress: true
            request_headers_for_tags:
            - request_headers_for_tags
            - request_headers_for_tags
          name: name
          zone_key: zone_key
          checksum: checksum
          domain_keys:
          - domain_keys
          - domain_keys
      properties:
        result:
          $ref: '#/components/schemas/Listener'
      title: ListenerResult
      type: object
    Match:
      description: |
        Represents a mapping of request attributes to constraints on a cluster
        using different matching schemes.

        Certain combinations of `kind` and `behavior` are not allowed
          | kind | behavior |
          | ---- | -------- |
          | query | regex |
          | query | range |
          | cookie | range |
      example:
        kind: kind
        from: "{}"
        to: "{}"
        behavior: behavior
      properties:
        behavior:
          description: |
            Defines how a request attribute should be matched. If not specified,
            defaults to `exact`. Valid values are
              * exact
              * regex
              * range
              * prefix
              * suffix
          title: behavior
          type: string
        from:
          allOf:
          - $ref: '#/components/schemas/Metadatum'
          description: |
            The request attribute key and value to match. `key` must always be
            defined while `value` can be unspecified (only if behavior is set to
            `exact`) to indicate that all values should be matched. If to.value
            is also unspecified, the matched value of the request will be used as
            a constraint on the destination cluster.

            \# Behavior
              * `regex` if To.Value is unspecified, `value` must contain one and
              only one subgroup. Otherwise, `value` must not be empty.
              * `range` `value` must be specified and must be of the format
              `[start_integer, end_integer)`. Start and end must be valid integer
              values and `end_integer` must be greater than `start_integer`.
              * `prefix`/`suffix` `value` must be specified

            \# Kind
              * `cookie` does not support `range` behavior
              * `query` does not support `regex` behavior
          title: from
          type: object
        kind:
          description: |
            Defines the attribute by which a request should be matched on. Valid
            values are
              * cookie
              * header
              * query (for query parameter)
          title: kind
          type: string
        to:
          allOf:
          - $ref: '#/components/schemas/Metadatum'
          description: |
            The constraints on a cluster that a matched request should map to. If
            to.key is specified and to.value is not, the matched from.value will
            be used as a metadata constraint on instances in the destination
            cluster, keyed by to.key. If using `regex` behavior with multiple
            subgroups in from.value, variables `$1` through `$n`, where n is the
            number of subgroups in the matching regex, can be used to interpolate
            captured matches in to.value.
          title: to
          type: object
      title: Match
      type: object
    Matches:
      items:
        $ref: '#/components/schemas/Match'
      title: Matches
      type: array
    Metadata:
      items:
        $ref: '#/components/schemas/Metadatum'
      title: Metadata
      type: array
    Metadatum:
      example:
        value: value
        key: key
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      title: Metadatum
      type: object
    MultiAccessTokens:
      example:
        result:
        - signed_token: signed_token
          checksum: checksum
          created_at: created_at
          description: description
          user_key: user_key
          access_token_key: access_token_key
        - signed_token: signed_token
          checksum: checksum
          created_at: created_at
          description: description
          user_key: user_key
          access_token_key: access_token_key
      properties:
        result:
          items:
            $ref: '#/components/schemas/AccessToken'
          title: result
          type: array
      title: MultiAccessTokens
      type: object
    MultiClusterResult:
      example:
        result:
        - circuit_breakers:
            max_connections: 0
            max_requests: 1
            max_retries: 5
            max_pending_requests: 6
          cluster_key: cluster_key
          require_tls: true
          instances:
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          health_checks:
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          name: name
          zone_key: zone_key
          checksum: checksum
          outlier_detection:
            max_ejection_percent: 9
            success_rate_minimum_hosts: 6
            consecutive_5xx: 6
            success_rate_stdev_factor: 9
            consecutive_gateway_failure: 7
            enforcing_consecutive_gateway_failure: 4
            interval_msec: 9
            enforcing_consecutive_5xx: 1
            enforcing_success_rate: 5
            success_rate_request_volume: 8
            base_ejection_time_msec: 1
        - circuit_breakers:
            max_connections: 0
            max_requests: 1
            max_retries: 5
            max_pending_requests: 6
          cluster_key: cluster_key
          require_tls: true
          instances:
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          - metadata:
            - value: value
              key: key
            - value: value
              key: key
            port: 1
            host: host
          health_checks:
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          - no_traffic_interval_msec: 3
            healthy_threshold: 2
            unhealthy_threshold: 1
            interval_msec: 9
            unhealthy_edge_interval_msec: 4
            health_checker:
              tcp_health_check:
                receive:
                - receive
                - receive
                send: send
              http_health_check:
                path: path
                service_name: service_name
                host: host
                request_headers_to_add: "{}"
            unhealthy_interval_msec: 7
            healthy_edge_interval_msec: 5
            reuse_connection: true
            timeout_msec: 2
            interval_jitter_msec: 7
          name: name
          zone_key: zone_key
          checksum: checksum
          outlier_detection:
            max_ejection_percent: 9
            success_rate_minimum_hosts: 6
            consecutive_5xx: 6
            success_rate_stdev_factor: 9
            consecutive_gateway_failure: 7
            enforcing_consecutive_gateway_failure: 4
            interval_msec: 9
            enforcing_consecutive_5xx: 1
            enforcing_success_rate: 5
            success_rate_request_volume: 8
            base_ejection_time_msec: 1
      properties:
        result:
          items:
            $ref: '#/components/schemas/Cluster'
          title: result
          type: array
      title: MultiClusterResult
      type: object
    MultiDomainResult:
      example:
        result:
        - force_https: true
          aliases:
          - aliases
          - aliases
          domain_key: domain_key
          port: 6
          redirects:
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          checksum: checksum
          name: name
          zone_key: zone_key
          gzip_enabled: true
          cors_config:
            max_age: 0
            allowed_methods:
            - allowed_methods
            - allowed_methods
            allowed_headers:
            - allowed_headers
            - allowed_headers
            allow_credentials: true
            exposed_headers:
            - exposed_headers
            - exposed_headers
            allowed_origins:
            - allowed_origins
            - allowed_origins
          ssl_config:
            cert_key_pairs:
            - certificate_path: certificate_path
              key_path: key_path
            - certificate_path: certificate_path
              key_path: key_path
            cipher_filter: cipher_filter
            protocols:
            - protocols
            - protocols
        - force_https: true
          aliases:
          - aliases
          - aliases
          domain_key: domain_key
          port: 6
          redirects:
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          - header_constraints:
            - invert: true
              case_sensitive: true
              name: name
              value: value
            - invert: true
              case_sensitive: true
              name: name
              value: value
            name: name
            from: from
            to: to
            redirect_type: permanent
          checksum: checksum
          name: name
          zone_key: zone_key
          gzip_enabled: true
          cors_config:
            max_age: 0
            allowed_methods:
            - allowed_methods
            - allowed_methods
            allowed_headers:
            - allowed_headers
            - allowed_headers
            allow_credentials: true
            exposed_headers:
            - exposed_headers
            - exposed_headers
            allowed_origins:
            - allowed_origins
            - allowed_origins
          ssl_config:
            cert_key_pairs:
            - certificate_path: certificate_path
              key_path: key_path
            - certificate_path: certificate_path
              key_path: key_path
            cipher_filter: cipher_filter
            protocols:
            - protocols
            - protocols
      properties:
        result:
          items:
            $ref: '#/components/schemas/Domain'
          title: result
          type: array
      title: MultiDomainResult
      type: object
    MultiListenerResult:
      example:
        result:
        - protocol: http
          listener_key: listener_key
          port: 0
          ip: ip
          tracing_config:
            ingress: true
            request_headers_for_tags:
            - request_headers_for_tags
            - request_headers_for_tags
          name: name
          zone_key: zone_key
          checksum: checksum
          domain_keys:
          - domain_keys
          - domain_keys
        - protocol: http
          listener_key: listener_key
          port: 0
          ip: ip
          tracing_config:
            ingress: true
            request_headers_for_tags:
            - request_headers_for_tags
            - request_headers_for_tags
          name: name
          zone_key: zone_key
          checksum: checksum
          domain_keys:
          - domain_keys
          - domain_keys
      properties:
        result:
          items:
            $ref: '#/components/schemas/Listener'
          title: result
          type: array
      title: MultiListenerResult
      type: object
    MultiProxyResult:
      example:
        result:
        - name: name
          zone_key: zone_key
          checksum: checksum
          proxy_key: proxy_key
          domain_keys:
          - domain_keys
          - domain_keys
          listener_keys:
          - listener_keys
          - listener_keys
        - name: name
          zone_key: zone_key
          checksum: checksum
          proxy_key: proxy_key
          domain_keys:
          - domain_keys
          - domain_keys
          listener_keys:
          - listener_keys
          - listener_keys
      properties:
        result:
          items:
            $ref: '#/components/schemas/Proxy'
          title: result
          type: array
      title: MultiProxyResult
      type: object
    MultiRouteResult:
      example:
        result:
        - path: path
          response_data: "{}"
          domain_key: domain_key
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          route_key: route_key
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
        - path: path
          response_data: "{}"
          domain_key: domain_key
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          route_key: route_key
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
      properties:
        result:
          items:
            $ref: '#/components/schemas/Route'
          title: result
          type: array
      title: MultiRouteResult
      type: object
    MultiSharedRulesResult:
      example:
        result:
        - default:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          response_data: "{}"
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
          properties:
          - value: value
            key: key
          - value: value
            key: key
        - default:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          response_data: "{}"
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
          properties:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        result:
          items:
            $ref: '#/components/schemas/SharedRules'
          title: result
          type: array
      title: MultiSharedRulesResult
      type: object
    MultiZoneResult:
      example:
        result:
        - checksum: checksum
          name: name
          zone_key: zone_key
        - checksum: checksum
          name: name
          zone_key: zone_key
      properties:
        result:
          items:
            $ref: '#/components/schemas/Zone'
          title: result
          type: array
      title: MultiZoneResult
      type: object
    OutlierDetection:
      description: |
        A form of passive health checking that dynamically determines whether
        instances in a cluster are performing unlike others and preemptively
        removes them from a load balancing set.
      example:
        max_ejection_percent: 9
        success_rate_minimum_hosts: 6
        consecutive_5xx: 6
        success_rate_stdev_factor: 9
        consecutive_gateway_failure: 7
        enforcing_consecutive_gateway_failure: 4
        interval_msec: 9
        enforcing_consecutive_5xx: 1
        enforcing_success_rate: 5
        success_rate_request_volume: 8
        base_ejection_time_msec: 1
      properties:
        base_ejection_time_msec:
          description: |
            The base time that a host is ejected for. The real time is equal to
            the base time multiplied by the number of times the host has been
            ejected. Defaults to 30s. Setting this to 0 means that no host will
            be ejected for longer than `interval_msec`.
          title: base_ejection_time_msec
          type: integer
        consecutive_5xx:
          description: |
            The number of consecutive 5xx responses before a consecutive 5xx ejection
            occurs. Defaults to 5. Setting this to 0 effectively turns off the
            consecutive 5xx detector.
          title: consecutive_5xx
          type: integer
        consecutive_gateway_failure:
          description: |
            The number of consecutive gateway failures (502, 503, 504 status or
            connection errors that are mapped to one of those status codes) before a
            consecutive gateway failure ejection occurs. Defaults to 5. Setting this
            to 0 effectively turns off the consecutive gateway failure detector.
          title: consecutive_gateway_failure
          type: integer
        enforcing_consecutive_5xx:
          description: |
            The % chance that a host will be actually ejected when an outlier status
            is detected through consecutive 5xx. This setting can be used to disable
            ejection or to ramp it up slowly. Defaults to 100.
          title: enforcing_consecutive_5xx
          type: integer
        enforcing_consecutive_gateway_failure:
          description: |
            The % chance that a host will be actually ejected when an outlier status
            is detected through consecutive gateway failures. This setting can be
            used to disable ejection or to ramp it up slowly. Defaults to 0.
          title: enforcing_consecutive_gateway_failure
          type: integer
        enforcing_success_rate:
          description: |
            The % chance that a host will be actually ejected when an outlier status
            is detected through success rate statistics. This setting can be used to
            disable ejection or to ramp it up slowly. Defaults to 100.
          title: enforcing_success_rate
          type: integer
        interval_msec:
          description: |
            The time interval between ejection analysis sweeps. This can result in
            both new ejections due to success rate outlier detection as well as
            hosts being returned to service. Defaults to 10s and must be greater
            than 0.
          title: interval_msec
          type: integer
        max_ejection_percent:
          description: |
            The maximum % of an upstream cluster that can be ejected due to
            outlier detection. Defaults to 10% but will always eject at least one
            host.
          title: max_ejection_percent
          type: integer
        success_rate_minimum_hosts:
          description: |
            The number of hosts in a cluster that must have enough request volume to
            detect success rate outliers. If the number of hosts is less than this
            setting, outlier detection via success rate statistics is not performed
            for any host in the cluster. Defaults to 5. Setting this to 0 effectively
            triggers the success rate detector regardless of the number of valid hosts
            during an interval (as determined by `success_rate_request_volume`).
          title: success_rate_minimum_hosts
          type: integer
        success_rate_request_volume:
          description: |
            The minimum number of total requests that must be collected in one
            interval (as defined by interval_msec) to include this host
            in success rate based outlier detection. If the volume is lower than this
            setting, outlier detection via success rate statistics is not performed
            for that host. Defaults to 100. Must be greater than 0.
          title: success_rate_request_volume
          type: integer
        success_rate_stdev_factor:
          description: |
            This factor is used to determine the ejection threshold for success rate
            outlier ejection. The ejection threshold is the difference between the
            mean success rate, and the product of this factor and the standard
            deviation of the mean success rate: mean - (stdev *
            success_rate_stdev_factor). This factor is divided by a thousand to get a
            double. That is, if the desired factor is 1.9, the runtime value should
            be 1900. Defaults to 1900. Setting this to 0 effectively turns off the
            success rate detector.
          title: success_rate_stdev_factor
          type: integer
      title: OutlierDetection
      type: object
    PageDetails:
      example:
        ref_id: ref_id
        has_more: true
        total_entries: 0
        direction: before
      properties:
        direction:
          description: The direction walked from the ref_id when building this page.
          enum:
          - before
          - after
          title: direction
          type: string
        has_more:
          description: Whether or not there are more entries to be requested after
            this page.
          title: has_more
          type: boolean
        ref_id:
          description: The ID used as a reference when building this page.
          title: ref_id
          type: string
        total_entries:
          description: |
            How many total entries would have been returned in the time window
            if it had not been paginated.
          title: total_entries
          type: integer
      title: PageDetails
      type: object
    PaginatedChangeDescriptions:
      example:
        result:
        - at: 6.027456183070403
          actor_key: actor_key
          comment: comment
          txn: txn
          diffs:
          - path: path
            object_key: object_key
            object_type: org
            zone_key: zone_key
            change_type: addition
            value: value
          - path: path
            object_key: object_key
            object_type: org
            zone_key: zone_key
            change_type: addition
            value: value
        - at: 6.027456183070403
          actor_key: actor_key
          comment: comment
          txn: txn
          diffs:
          - path: path
            object_key: object_key
            object_type: org
            zone_key: zone_key
            change_type: addition
            value: value
          - path: path
            object_key: object_key
            object_type: org
            zone_key: zone_key
            change_type: addition
            value: value
        details:
          pagination:
            ref_id: ref_id
            has_more: true
            total_entries: 0
            direction: before
      properties:
        details:
          $ref: '#/components/schemas/PaginationDetails'
        result:
          items:
            $ref: '#/components/schemas/ChangeDescription'
          title: result
          type: array
      title: PaginatedChangeDescriptions
      type: object
    PaginationDetails:
      example:
        pagination:
          ref_id: ref_id
          has_more: true
          total_entries: 0
          direction: before
      properties:
        pagination:
          $ref: '#/components/schemas/PageDetails'
      title: PaginationDetails
      type: object
    Proxy:
      allOf:
      - $ref: '#/components/schemas/ProxyCreate'
      - properties:
          checksum:
            type: string
          proxy_key:
            type: string
        required:
        - checksum
        - proxy_key
        type: object
      example:
        name: name
        zone_key: zone_key
        checksum: checksum
        proxy_key: proxy_key
        domain_keys:
        - domain_keys
        - domain_keys
        listener_keys:
        - listener_keys
        - listener_keys
      title: Proxy
    ProxyCreate:
      example:
        name: name
        zone_key: zone_key
        domain_keys:
        - domain_keys
        - domain_keys
        listener_keys:
        - listener_keys
        - listener_keys
      properties:
        domain_keys:
          items:
            type: string
          title: domain_keys
          type: array
        listener_keys:
          items:
            type: string
          title: listener_keys
          type: array
        name:
          title: name
          type: string
        zone_key:
          title: zone_key
          type: string
      required:
      - name
      - zone_key
      title: ProxyCreate
      type: object
    ProxyFilter:
      properties:
        domain_keys:
          description: |
            matches Proxies with a superset of the specified domain_keys. A
            slice with a single value of "-" will produce Proxies with no linked
            Domains.
          items:
            type: string
          type: array
        name:
          type: string
        proxy_key:
          type: string
        zone_key:
          type: string
      type: object
    ProxyResult:
      example:
        result:
          name: name
          zone_key: zone_key
          checksum: checksum
          proxy_key: proxy_key
          domain_keys:
          - domain_keys
          - domain_keys
          listener_keys:
          - listener_keys
          - listener_keys
      properties:
        result:
          $ref: '#/components/schemas/Proxy'
      title: ProxyResult
      type: object
    Redirect:
      description: |
        Specifies how a URL within a domain should be rewritten when requested.
      example:
        header_constraints:
        - invert: true
          case_sensitive: true
          name: name
          value: value
        - invert: true
          case_sensitive: true
          name: name
          value: value
        name: name
        from: from
        to: to
        redirect_type: permanent
      properties:
        from:
          description: A regexp that will be matched against the URL (not including
            the host/port). May include capture groups for reference in "to."
          title: from
          type: string
        header_constraints:
          items:
            $ref: '#/components/schemas/HeaderConstraint'
          title: header_constraints
          type: array
        name:
          description: "A unique (to this Domain) name for the Redirect. Must match\
            \ the regexp \"^[0-9a-zA-Z-]+$\""
          title: name
          type: string
        redirect_type:
          description: How this redirect should be presented via HTTP response code.
          enum:
          - permanent
          - temporary
          title: redirect_type
          type: string
        to:
          description: The new URL that will be constructed from the request. Capture
            groups from "from" may be referenced as "$&lt;group number&gt;" which
            begins at 1.
          title: to
          type: string
      required:
      - from
      - name
      - redirect_type
      - to
      title: Redirect
      type: object
    ResponseData:
      properties:
        cookies:
          items:
            $ref: '#/components/schemas/CookieDatum'
          title: cookies
          type: array
        headers:
          items:
            $ref: '#/components/schemas/HeaderDatum'
          title: headers
          type: array
      title: ResponseData
      type: object
    RetryPolicy:
      description: Number of times to retry a request and how long to wait before
        timing out.
      example:
        per_try_timeout_msec: 6
        num_retries: 0
        timeout_msec: 1
      properties:
        num_retries:
          description: |
            Number of times to retry an upstream request. Note that the initial
            connection attempt is not included in this number, hence 0 means initial
            attempt and no retries, and 1 means initial attempt plus one retry.
          format: int64
          title: num_retries
          type: integer
        per_try_timeout_msec:
          description: Time limit in milliseconds for a single attempt.
          format: int64
          title: per_try_timeout_msec
          type: integer
        timeout_msec:
          description: |
            Total time limit in milliseconds for all attempts (including the initial attempt)
          format: int64
          title: timeout_msec
          type: integer
      title: RetryPolicy
      type: object
    Route:
      allOf:
      - $ref: '#/components/schemas/RouteCreate'
      - properties:
          checksum:
            type: string
          route_key:
            type: string
        required:
        - checksum
        - route_key
        type: object
      example:
        path: path
        response_data: "{}"
        domain_key: domain_key
        checksum: checksum
        zone_key: zone_key
        cohort_seed:
          name: name
          use_zero_value_seed: true
          type: header
        route_key: route_key
        rules:
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        shared_rules_key: shared_rules_key
        retry_policy:
          per_try_timeout_msec: 6
          num_retries: 0
          timeout_msec: 1
      title: Route
    RouteCreate:
      example:
        path: path
        response_data: "{}"
        domain_key: domain_key
        checksum: checksum
        zone_key: zone_key
        cohort_seed:
          name: name
          use_zero_value_seed: true
          type: header
        route_key: route_key
        rules:
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        shared_rules_key: shared_rules_key
        retry_policy:
          per_try_timeout_msec: 6
          num_retries: 0
          timeout_msec: 1
      properties:
        checksum:
          title: checksum
          type: string
        cohort_seed:
          $ref: '#/components/schemas/CohortSeed'
        domain_key:
          title: domain_key
          type: string
        path:
          title: path
          type: string
        response_data:
          allOf:
          - $ref: '#/components/schemas/ResponseData'
          description: |
            When a request is served by this Route annotate the response with the
            information specified within this ResponseData object. It's possible
            that multiple response data configurations will apply; if that's the
            case then the values from Route take precedence over those from a
            SharedRules object.
          title: response_data
          type: object
        retry_policy:
          $ref: '#/components/schemas/RetryPolicy'
        route_key:
          title: route_key
          type: string
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          title: rules
          type: array
        shared_rules_key:
          title: shared_rules_key
          type: string
        zone_key:
          title: zone_key
          type: string
      required:
      - domain_key
      - path
      - shared_rules_key
      - zone_key
      title: RouteCreate
      type: object
    RouteFilter:
      properties:
        domain_key:
          type: string
        path:
          type: string
        path_prefix:
          type: string
        route_key:
          type: string
        shared_rules_key:
          type: string
        zone_key:
          type: string
      type: object
    RouteResult:
      example:
        result:
          path: path
          response_data: "{}"
          domain_key: domain_key
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          route_key: route_key
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
      properties:
        result:
          $ref: '#/components/schemas/Route'
      title: RouteResult
      type: object
    Rule:
      example:
        methods:
        - methods
        - methods
        cohort_seed:
          name: name
          use_zero_value_seed: true
          type: header
        rule_key: rule_key
        constraints:
          tap:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          light:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          dark:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
        matches:
        - kind: kind
          from: "{}"
          to: "{}"
          behavior: behavior
        - kind: kind
          from: "{}"
          to: "{}"
          behavior: behavior
      properties:
        cohort_seed:
          $ref: '#/components/schemas/CohortSeed'
        constraints:
          $ref: '#/components/schemas/AllConstraints'
        matches:
          items:
            $ref: '#/components/schemas/Match'
          title: Matches
          type: array
        methods:
          items:
            type: string
          title: methods
          type: array
        rule_key:
          title: rule_key
          type: string
      title: Rule
      type: object
    SSLConfig:
      description: |
        Experimental: Specifies whether a domain should support SSL/TLS
        connections from clients.  If not set the proxy will expect unencrypted HTTP
        traffic.
      example:
        cert_key_pairs:
        - certificate_path: certificate_path
          key_path: key_path
        - certificate_path: certificate_path
          key_path: key_path
        cipher_filter: cipher_filter
        protocols:
        - protocols
        - protocols
      properties:
        cert_key_pairs:
          description: SSLConfig must have one cert_key_pairs entry specified.
          items:
            $ref: '#/components/schemas/CertKeyPathPair'
          title: cert_key_pairs
          type: array
        cipher_filter:
          description: |
            An OpenSSL compatible filter string indicating the ciphers acceptable
            for this proxy to use while communicating with clients. The default value
            is EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH. For more information
            see https://wiki.openssl.org/index.php/Manual:Ciphers(1)
          title: cipher_filter
          type: string
        protocols:
          description: |
            A list of acceptable SSL/TLS protocol. The default values are TLSv1,
            TLSv1.1, TLSv1.2. Additional valid values are SSLv2 and SSLv3.
          items:
            type: string
          title: protocols
          type: array
      required:
      - cert_key_pairs
      title: SSLConfig
      type: object
    SharedRules:
      allOf:
      - $ref: '#/components/schemas/SharedRulesCreate'
      - properties:
          checksum:
            type: string
          shared_rules_key:
            type: string
        required:
        - checksum
        - shared_rules_key
        type: object
      example:
        default:
          tap:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          light:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          dark:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
        response_data: "{}"
        checksum: checksum
        zone_key: zone_key
        cohort_seed:
          name: name
          use_zero_value_seed: true
          type: header
        rules:
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        shared_rules_key: shared_rules_key
        retry_policy:
          per_try_timeout_msec: 6
          num_retries: 0
          timeout_msec: 1
        properties:
        - value: value
          key: key
        - value: value
          key: key
      title: SharedRules
    SharedRulesCreate:
      example:
        default:
          tap:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          light:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          dark:
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
          - cluster_key: cluster_key
            metadata:
            - value: value
              key: key
            - value: value
              key: key
            response_data: "{}"
            constraint_key: constraint_key
            weight: 5
            properties:
            - value: value
              key: key
            - value: value
              key: key
        response_data: "{}"
        checksum: checksum
        zone_key: zone_key
        cohort_seed:
          name: name
          use_zero_value_seed: true
          type: header
        rules:
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        - methods:
          - methods
          - methods
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rule_key: rule_key
          constraints:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          matches:
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
          - kind: kind
            from: "{}"
            to: "{}"
            behavior: behavior
        shared_rules_key: shared_rules_key
        retry_policy:
          per_try_timeout_msec: 6
          num_retries: 0
          timeout_msec: 1
        properties:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        checksum:
          title: checksum
          type: string
        cohort_seed:
          $ref: '#/components/schemas/CohortSeed'
        default:
          $ref: '#/components/schemas/AllConstraints'
        properties:
          items:
            $ref: '#/components/schemas/Metadatum'
          title: Metadata
          type: array
        response_data:
          allOf:
          - $ref: '#/components/schemas/ResponseData'
          description: |
            When a request is served by a Route that is part of this SharedRules
            group the response is annotated with the information specified within
            this ResponseData object. It's possible that multiple response data
            configurations will apply; if that's the case then the values from
            the applicable Route and ClusterConstarint takes precedence over those
            specified here.
          title: response_data
          type: object
        retry_policy:
          $ref: '#/components/schemas/RetryPolicy'
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          title: rules
          type: array
        shared_rules_key:
          title: shared_rules_key
          type: string
        zone_key:
          title: zone_key
          type: string
      required:
      - default
      - zone_key
      title: SharedRulesCreate
      type: object
    SharedRulesFilter:
      properties:
        name:
          type: string
        shared_rules_key:
          type: string
        zone_key:
          type: string
      type: object
    SharedRulesResult:
      example:
        result:
          default:
            tap:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            light:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            dark:
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
            - cluster_key: cluster_key
              metadata:
              - value: value
                key: key
              - value: value
                key: key
              response_data: "{}"
              constraint_key: constraint_key
              weight: 5
              properties:
              - value: value
                key: key
              - value: value
                key: key
          response_data: "{}"
          checksum: checksum
          zone_key: zone_key
          cohort_seed:
            name: name
            use_zero_value_seed: true
            type: header
          rules:
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          - methods:
            - methods
            - methods
            cohort_seed:
              name: name
              use_zero_value_seed: true
              type: header
            rule_key: rule_key
            constraints:
              tap:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              light:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              dark:
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
              - cluster_key: cluster_key
                metadata:
                - value: value
                  key: key
                - value: value
                  key: key
                response_data: "{}"
                constraint_key: constraint_key
                weight: 5
                properties:
                - value: value
                  key: key
                - value: value
                  key: key
            matches:
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
            - kind: kind
              from: "{}"
              to: "{}"
              behavior: behavior
          shared_rules_key: shared_rules_key
          retry_policy:
            per_try_timeout_msec: 6
            num_retries: 0
            timeout_msec: 1
          properties:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        result:
          $ref: '#/components/schemas/SharedRules'
      title: SharedRulesResult
      type: object
    TCPHealthCheck:
      example:
        receive:
        - receive
        - receive
        send: send
      properties:
        receive:
          description: |
            An array of base64 encoded strings, each representing array of
            bytes that is expected in health check responses. When
            checking the response, "fuzzy" matching is performed such that
            each binary block must be found, and in the order specified,
            but not necessarily contiguously.
          items:
            type: string
          title: receive
          type: array
        send:
          description: |
            Base64 encoded string representing an array of bytes to be
            sent in health check requests. Leaving this field empty
            implies a connect-only health check.
          title: send
          type: string
      title: TCPHealthCheck
      type: object
    TimeRange:
      properties:
        end:
          description: |
            The end of the window we want to see changes for; measured in
            microseconds since Unix Epoch.
          format: int64
          title: end
          type: integer
        start:
          description: The beginning of the window we want to see changes for; measured
            in microseconds since Unix Epoch.
          format: int64
          title: start
          type: integer
      title: TimeRange
      type: object
    TracingConfig:
      description: |
        Configures tracing operations to be performed on the given listener
      example:
        ingress: true
        request_headers_for_tags:
        - request_headers_for_tags
        - request_headers_for_tags
      properties:
        ingress:
          description: |
            Determines whether spans sent from this listener should be treated as ingress
            or egress operations.
          title: ingress
          type: boolean
        request_headers_for_tags:
          description: |
            the headers specified here will be added to the generated spans as annotations
          items:
            type: string
          title: request_headers_for_tags
          type: array
      title: TracingConfig
      type: object
    User:
      example:
        login_email: login_email
        checksum: checksum
        user_key: user_key
        deleted_at: deleted_at
      properties:
        checksum:
          title: checksum
          type: string
        deleted_at:
          description: |
            A timestamp that marks when a user was deleted. It is in the format
            yyyy-mm-ddThh:mm:ss.SZ. The timezone will always be UTC.
          title: deleted_at
          type: string
        login_email:
          title: login_email
          type: string
        user_key:
          title: user_key
          type: string
      required:
      - checksum
      - login_email
      - user_key
      title: User
      type: object
    Zone:
      example:
        checksum: checksum
        name: name
        zone_key: zone_key
      properties:
        checksum:
          title: checksum
          type: string
        name:
          title: name
          type: string
        zone_key:
          title: zone_key
          type: string
      required:
      - checksum
      - name
      - zone_key
      title: Zone
      type: object
    ZoneCreate:
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      required:
      - name
      title: ZoneCreate
      type: object
    ZoneFilter:
      properties:
        name:
          type: string
        zone_key:
          type: string
      type: object
    ZoneResult:
      example:
        result:
          checksum: checksum
          name: name
          zone_key: zone_key
      properties:
        result:
          $ref: '#/components/schemas/Zone'
      title: ZoneResult
      type: object
    HealthCheck_health_checker:
      description: |
        Defines the type of health checker to use. Only a single health
        checker can be defined per HealthCheck.
      example:
        tcp_health_check:
          receive:
          - receive
          - receive
          send: send
        http_health_check:
          path: path
          service_name: service_name
          host: host
          request_headers_to_add: "{}"
      properties:
        http_health_check:
          $ref: '#/components/schemas/HTTPHealthCheck'
        tcp_health_check:
          $ref: '#/components/schemas/TCPHealthCheck'
      title: HealthCheck_health_checker
      type: object
  securitySchemes:
    api_key:
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_api_key
x-original-swagger-version: "2.0"
