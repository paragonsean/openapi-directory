/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PageDetails model module.
 * @module model/PageDetails
 * @version 1.0
 */
class PageDetails {
    /**
     * Constructs a new <code>PageDetails</code>.
     * @alias module:model/PageDetails
     */
    constructor() { 
        
        PageDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PageDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageDetails} obj Optional instance to populate.
     * @return {module:model/PageDetails} The populated <code>PageDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageDetails();

            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('has_more')) {
                obj['has_more'] = ApiClient.convertToType(data['has_more'], 'Boolean');
            }
            if (data.hasOwnProperty('ref_id')) {
                obj['ref_id'] = ApiClient.convertToType(data['ref_id'], 'String');
            }
            if (data.hasOwnProperty('total_entries')) {
                obj['total_entries'] = ApiClient.convertToType(data['total_entries'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['ref_id'] && !(typeof data['ref_id'] === 'string' || data['ref_id'] instanceof String)) {
            throw new Error("Expected the field `ref_id` to be a primitive type in the JSON string but got " + data['ref_id']);
        }

        return true;
    }


}



/**
 * The direction walked from the ref_id when building this page.
 * @member {module:model/PageDetails.DirectionEnum} direction
 */
PageDetails.prototype['direction'] = undefined;

/**
 * Whether or not there are more entries to be requested after this page.
 * @member {Boolean} has_more
 */
PageDetails.prototype['has_more'] = undefined;

/**
 * The ID used as a reference when building this page.
 * @member {String} ref_id
 */
PageDetails.prototype['ref_id'] = undefined;

/**
 * How many total entries would have been returned in the time window if it had not been paginated. 
 * @member {Number} total_entries
 */
PageDetails.prototype['total_entries'] = undefined;





/**
 * Allowed values for the <code>direction</code> property.
 * @enum {String}
 * @readonly
 */
PageDetails['DirectionEnum'] = {

    /**
     * value: "before"
     * @const
     */
    "before": "before",

    /**
     * value: "after"
     * @const
     */
    "after": "after"
};



export default PageDetails;

