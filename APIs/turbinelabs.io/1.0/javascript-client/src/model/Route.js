/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CohortSeed from './CohortSeed';
import ResponseData from './ResponseData';
import RetryPolicy from './RetryPolicy';
import RouteCreate from './RouteCreate';
import Rule from './Rule';

/**
 * The Route model module.
 * @module model/Route
 * @version 1.0
 */
class Route {
    /**
     * Constructs a new <code>Route</code>.
     * @alias module:model/Route
     * @implements module:model/RouteCreate
     * @param checksum {String} 
     * @param domainKey {String} 
     * @param path {String} 
     * @param routeKey {String} 
     * @param sharedRulesKey {String} 
     * @param zoneKey {String} 
     */
    constructor(checksum, domainKey, path, routeKey, sharedRulesKey, zoneKey) { 
        RouteCreate.initialize(this, domainKey, path, sharedRulesKey, zoneKey);
        Route.initialize(this, checksum, domainKey, path, routeKey, sharedRulesKey, zoneKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checksum, domainKey, path, routeKey, sharedRulesKey, zoneKey) { 
        obj['checksum'] = checksum;
        obj['domain_key'] = domainKey;
        obj['path'] = path;
        obj['route_key'] = routeKey;
        obj['shared_rules_key'] = sharedRulesKey;
        obj['zone_key'] = zoneKey;
    }

    /**
     * Constructs a <code>Route</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Route} obj Optional instance to populate.
     * @return {module:model/Route} The populated <code>Route</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Route();
            RouteCreate.constructFromObject(data, obj);

            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('cohort_seed')) {
                obj['cohort_seed'] = CohortSeed.constructFromObject(data['cohort_seed']);
            }
            if (data.hasOwnProperty('domain_key')) {
                obj['domain_key'] = ApiClient.convertToType(data['domain_key'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('response_data')) {
                obj['response_data'] = ApiClient.convertToType(data['response_data'], ResponseData);
            }
            if (data.hasOwnProperty('retry_policy')) {
                obj['retry_policy'] = RetryPolicy.constructFromObject(data['retry_policy']);
            }
            if (data.hasOwnProperty('route_key')) {
                obj['route_key'] = ApiClient.convertToType(data['route_key'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [Rule]);
            }
            if (data.hasOwnProperty('shared_rules_key')) {
                obj['shared_rules_key'] = ApiClient.convertToType(data['shared_rules_key'], 'String');
            }
            if (data.hasOwnProperty('zone_key')) {
                obj['zone_key'] = ApiClient.convertToType(data['zone_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Route</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Route</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Route.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['checksum'] && !(typeof data['checksum'] === 'string' || data['checksum'] instanceof String)) {
            throw new Error("Expected the field `checksum` to be a primitive type in the JSON string but got " + data['checksum']);
        }
        // validate the optional field `cohort_seed`
        if (data['cohort_seed']) { // data not null
          CohortSeed.validateJSON(data['cohort_seed']);
        }
        // ensure the json data is a string
        if (data['domain_key'] && !(typeof data['domain_key'] === 'string' || data['domain_key'] instanceof String)) {
            throw new Error("Expected the field `domain_key` to be a primitive type in the JSON string but got " + data['domain_key']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // validate the optional field `response_data`
        if (data['response_data']) { // data not null
          ResponseData.validateJSON(data['response_data']);
        }
        // validate the optional field `retry_policy`
        if (data['retry_policy']) { // data not null
          RetryPolicy.validateJSON(data['retry_policy']);
        }
        // ensure the json data is a string
        if (data['route_key'] && !(typeof data['route_key'] === 'string' || data['route_key'] instanceof String)) {
            throw new Error("Expected the field `route_key` to be a primitive type in the JSON string but got " + data['route_key']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                Rule.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shared_rules_key'] && !(typeof data['shared_rules_key'] === 'string' || data['shared_rules_key'] instanceof String)) {
            throw new Error("Expected the field `shared_rules_key` to be a primitive type in the JSON string but got " + data['shared_rules_key']);
        }
        // ensure the json data is a string
        if (data['zone_key'] && !(typeof data['zone_key'] === 'string' || data['zone_key'] instanceof String)) {
            throw new Error("Expected the field `zone_key` to be a primitive type in the JSON string but got " + data['zone_key']);
        }

        return true;
    }


}

Route.RequiredProperties = ["checksum", "domain_key", "path", "route_key", "shared_rules_key", "zone_key"];

/**
 * @member {String} checksum
 */
Route.prototype['checksum'] = undefined;

/**
 * @member {module:model/CohortSeed} cohort_seed
 */
Route.prototype['cohort_seed'] = undefined;

/**
 * @member {String} domain_key
 */
Route.prototype['domain_key'] = undefined;

/**
 * @member {String} path
 */
Route.prototype['path'] = undefined;

/**
 * When a request is served by this Route annotate the response with the information specified within this ResponseData object. It's possible that multiple response data configurations will apply; if that's the case then the values from Route take precedence over those from a SharedRules object. 
 * @member {module:model/ResponseData} response_data
 */
Route.prototype['response_data'] = undefined;

/**
 * @member {module:model/RetryPolicy} retry_policy
 */
Route.prototype['retry_policy'] = undefined;

/**
 * @member {String} route_key
 */
Route.prototype['route_key'] = undefined;

/**
 * @member {Array.<module:model/Rule>} rules
 */
Route.prototype['rules'] = undefined;

/**
 * @member {String} shared_rules_key
 */
Route.prototype['shared_rules_key'] = undefined;

/**
 * @member {String} zone_key
 */
Route.prototype['zone_key'] = undefined;


// Implement RouteCreate interface:
/**
 * @member {String} checksum
 */
RouteCreate.prototype['checksum'] = undefined;
/**
 * @member {module:model/CohortSeed} cohort_seed
 */
RouteCreate.prototype['cohort_seed'] = undefined;
/**
 * @member {String} domain_key
 */
RouteCreate.prototype['domain_key'] = undefined;
/**
 * @member {String} path
 */
RouteCreate.prototype['path'] = undefined;
/**
 * When a request is served by this Route annotate the response with the information specified within this ResponseData object. It's possible that multiple response data configurations will apply; if that's the case then the values from Route take precedence over those from a SharedRules object. 
 * @member {module:model/ResponseData} response_data
 */
RouteCreate.prototype['response_data'] = undefined;
/**
 * @member {module:model/RetryPolicy} retry_policy
 */
RouteCreate.prototype['retry_policy'] = undefined;
/**
 * @member {String} route_key
 */
RouteCreate.prototype['route_key'] = undefined;
/**
 * @member {Array.<module:model/Rule>} rules
 */
RouteCreate.prototype['rules'] = undefined;
/**
 * @member {String} shared_rules_key
 */
RouteCreate.prototype['shared_rules_key'] = undefined;
/**
 * @member {String} zone_key
 */
RouteCreate.prototype['zone_key'] = undefined;




export default Route;

