/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccessToken model module.
 * @module model/AccessToken
 * @version 1.0
 */
class AccessToken {
    /**
     * Constructs a new <code>AccessToken</code>.
     * @alias module:model/AccessToken
     * @param accessTokenKey {String} 
     * @param checksum {String} 
     * @param createdAt {String} A timestamp that marks when a user was deleted. It is in the format yyyy-mm-ddThh:mm:ss.SZ. The timezone will always be UTC. 
     * @param description {String} 
     * @param userKey {String} 
     */
    constructor(accessTokenKey, checksum, createdAt, description, userKey) { 
        
        AccessToken.initialize(this, accessTokenKey, checksum, createdAt, description, userKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessTokenKey, checksum, createdAt, description, userKey) { 
        obj['access_token_key'] = accessTokenKey;
        obj['checksum'] = checksum;
        obj['created_at'] = createdAt;
        obj['description'] = description;
        obj['user_key'] = userKey;
    }

    /**
     * Constructs a <code>AccessToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessToken} obj Optional instance to populate.
     * @return {module:model/AccessToken} The populated <code>AccessToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessToken();

            if (data.hasOwnProperty('access_token_key')) {
                obj['access_token_key'] = ApiClient.convertToType(data['access_token_key'], 'String');
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('signed_token')) {
                obj['signed_token'] = ApiClient.convertToType(data['signed_token'], 'String');
            }
            if (data.hasOwnProperty('user_key')) {
                obj['user_key'] = ApiClient.convertToType(data['user_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessToken</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccessToken.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_token_key'] && !(typeof data['access_token_key'] === 'string' || data['access_token_key'] instanceof String)) {
            throw new Error("Expected the field `access_token_key` to be a primitive type in the JSON string but got " + data['access_token_key']);
        }
        // ensure the json data is a string
        if (data['checksum'] && !(typeof data['checksum'] === 'string' || data['checksum'] instanceof String)) {
            throw new Error("Expected the field `checksum` to be a primitive type in the JSON string but got " + data['checksum']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['signed_token'] && !(typeof data['signed_token'] === 'string' || data['signed_token'] instanceof String)) {
            throw new Error("Expected the field `signed_token` to be a primitive type in the JSON string but got " + data['signed_token']);
        }
        // ensure the json data is a string
        if (data['user_key'] && !(typeof data['user_key'] === 'string' || data['user_key'] instanceof String)) {
            throw new Error("Expected the field `user_key` to be a primitive type in the JSON string but got " + data['user_key']);
        }

        return true;
    }


}

AccessToken.RequiredProperties = ["access_token_key", "checksum", "created_at", "description", "user_key"];

/**
 * @member {String} access_token_key
 */
AccessToken.prototype['access_token_key'] = undefined;

/**
 * @member {String} checksum
 */
AccessToken.prototype['checksum'] = undefined;

/**
 * A timestamp that marks when a user was deleted. It is in the format yyyy-mm-ddThh:mm:ss.SZ. The timezone will always be UTC. 
 * @member {String} created_at
 */
AccessToken.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
AccessToken.prototype['description'] = undefined;

/**
 * This will be set only when an AccessToken is initially created 
 * @member {String} signed_token
 */
AccessToken.prototype['signed_token'] = undefined;

/**
 * @member {String} user_key
 */
AccessToken.prototype['user_key'] = undefined;






export default AccessToken;

