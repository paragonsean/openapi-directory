/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import MultiSharedRulesResult from '../model/MultiSharedRulesResult';
import SharedRules from '../model/SharedRules';
import SharedRulesCreate from '../model/SharedRulesCreate';
import SharedRulesResult from '../model/SharedRulesResult';

/**
* SharedRules service.
* @module api/SharedRulesApi
* @version 1.0
*/
export default class SharedRulesApi {

    /**
    * Constructs a new SharedRulesApi. 
    * @alias module:api/SharedRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sharedRulesGet operation.
     * @callback module:api/SharedRulesApi~sharedRulesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MultiSharedRulesResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get shared_rules
     * Get a list of shared_rules
     * @param {Object} opts Optional parameters
     * @param {String} [filters] A JSON encoded array of SharedRulesFilter objects. The filter is taken as a union of intersections. In other words an object that matches every constraint in any SharedRulesFilter will be included. 
     * @param {module:api/SharedRulesApi~sharedRulesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MultiSharedRulesResult}
     */
    sharedRulesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filters': opts['filters']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MultiSharedRulesResult;
      return this.apiClient.callApi(
        '/shared_rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sharedRulesPost operation.
     * @callback module:api/SharedRulesApi~sharedRulesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharedRulesResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create shared_rules
     * Create a new shared_rules object
     * @param {module:model/SharedRulesCreate} sharedRules the shared_rules object to create
     * @param {module:api/SharedRulesApi~sharedRulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharedRulesResult}
     */
    sharedRulesPost(sharedRules, callback) {
      let postBody = sharedRules;
      // verify the required parameter 'sharedRules' is set
      if (sharedRules === undefined || sharedRules === null) {
        throw new Error("Missing the required parameter 'sharedRules' when calling sharedRulesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SharedRulesResult;
      return this.apiClient.callApi(
        '/shared_rules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sharedRulesSharedRulesKeyGet operation.
     * @callback module:api/SharedRulesApi~sharedRulesSharedRulesKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharedRulesResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get shared_rules object
     * Get details for an existing shared_rules object
     * @param {String} sharedRulesKey the shared_rules key
     * @param {module:api/SharedRulesApi~sharedRulesSharedRulesKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharedRulesResult}
     */
    sharedRulesSharedRulesKeyGet(sharedRulesKey, callback) {
      let postBody = null;
      // verify the required parameter 'sharedRulesKey' is set
      if (sharedRulesKey === undefined || sharedRulesKey === null) {
        throw new Error("Missing the required parameter 'sharedRulesKey' when calling sharedRulesSharedRulesKeyGet");
      }

      let pathParams = {
        'sharedRulesKey': sharedRulesKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SharedRulesResult;
      return this.apiClient.callApi(
        '/shared_rules/{sharedRulesKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sharedRulesSharedRulesKeyPut operation.
     * @callback module:api/SharedRulesApi~sharedRulesSharedRulesKeyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharedRulesResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * modify shared_rules object
     * Modify an existing shared_rules object
     * @param {String} sharedRulesKey the shared_rules key
     * @param {module:model/SharedRules} sharedRules the shared_rules object to modify
     * @param {module:api/SharedRulesApi~sharedRulesSharedRulesKeyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharedRulesResult}
     */
    sharedRulesSharedRulesKeyPut(sharedRulesKey, sharedRules, callback) {
      let postBody = sharedRules;
      // verify the required parameter 'sharedRulesKey' is set
      if (sharedRulesKey === undefined || sharedRulesKey === null) {
        throw new Error("Missing the required parameter 'sharedRulesKey' when calling sharedRulesSharedRulesKeyPut");
      }
      // verify the required parameter 'sharedRules' is set
      if (sharedRules === undefined || sharedRules === null) {
        throw new Error("Missing the required parameter 'sharedRules' when calling sharedRulesSharedRulesKeyPut");
      }

      let pathParams = {
        'sharedRulesKey': sharedRulesKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SharedRulesResult;
      return this.apiClient.callApi(
        '/shared_rules/{sharedRulesKey}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
