/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CommitteeDetailJfcCommitteeInner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CommitteeDetail
 */
public class CommitteeDetailTest {
    private final CommitteeDetail model = new CommitteeDetail();

    /**
     * Model tests for CommitteeDetail
     */
    @Test
    public void testCommitteeDetail() {
        // TODO: test CommitteeDetail
    }

    /**
     * Test the property 'affiliatedCommitteeName'
     */
    @Test
    public void affiliatedCommitteeNameTest() {
        // TODO: test affiliatedCommitteeName
    }

    /**
     * Test the property 'candidateIds'
     */
    @Test
    public void candidateIdsTest() {
        // TODO: test candidateIds
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'committeeId'
     */
    @Test
    public void committeeIdTest() {
        // TODO: test committeeId
    }

    /**
     * Test the property 'committeeType'
     */
    @Test
    public void committeeTypeTest() {
        // TODO: test committeeType
    }

    /**
     * Test the property 'committeeTypeFull'
     */
    @Test
    public void committeeTypeFullTest() {
        // TODO: test committeeTypeFull
    }

    /**
     * Test the property 'custodianCity'
     */
    @Test
    public void custodianCityTest() {
        // TODO: test custodianCity
    }

    /**
     * Test the property 'custodianName1'
     */
    @Test
    public void custodianName1Test() {
        // TODO: test custodianName1
    }

    /**
     * Test the property 'custodianName2'
     */
    @Test
    public void custodianName2Test() {
        // TODO: test custodianName2
    }

    /**
     * Test the property 'custodianNameFull'
     */
    @Test
    public void custodianNameFullTest() {
        // TODO: test custodianNameFull
    }

    /**
     * Test the property 'custodianNameMiddle'
     */
    @Test
    public void custodianNameMiddleTest() {
        // TODO: test custodianNameMiddle
    }

    /**
     * Test the property 'custodianNamePrefix'
     */
    @Test
    public void custodianNamePrefixTest() {
        // TODO: test custodianNamePrefix
    }

    /**
     * Test the property 'custodianNameSuffix'
     */
    @Test
    public void custodianNameSuffixTest() {
        // TODO: test custodianNameSuffix
    }

    /**
     * Test the property 'custodianNameTitle'
     */
    @Test
    public void custodianNameTitleTest() {
        // TODO: test custodianNameTitle
    }

    /**
     * Test the property 'custodianPhone'
     */
    @Test
    public void custodianPhoneTest() {
        // TODO: test custodianPhone
    }

    /**
     * Test the property 'custodianState'
     */
    @Test
    public void custodianStateTest() {
        // TODO: test custodianState
    }

    /**
     * Test the property 'custodianStreet1'
     */
    @Test
    public void custodianStreet1Test() {
        // TODO: test custodianStreet1
    }

    /**
     * Test the property 'custodianStreet2'
     */
    @Test
    public void custodianStreet2Test() {
        // TODO: test custodianStreet2
    }

    /**
     * Test the property 'custodianZip'
     */
    @Test
    public void custodianZipTest() {
        // TODO: test custodianZip
    }

    /**
     * Test the property 'cycles'
     */
    @Test
    public void cyclesTest() {
        // TODO: test cycles
    }

    /**
     * Test the property 'designation'
     */
    @Test
    public void designationTest() {
        // TODO: test designation
    }

    /**
     * Test the property 'designationFull'
     */
    @Test
    public void designationFullTest() {
        // TODO: test designationFull
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'fax'
     */
    @Test
    public void faxTest() {
        // TODO: test fax
    }

    /**
     * Test the property 'filingFrequency'
     */
    @Test
    public void filingFrequencyTest() {
        // TODO: test filingFrequency
    }

    /**
     * Test the property 'firstF1Date'
     */
    @Test
    public void firstF1DateTest() {
        // TODO: test firstF1Date
    }

    /**
     * Test the property 'firstFileDate'
     */
    @Test
    public void firstFileDateTest() {
        // TODO: test firstFileDate
    }

    /**
     * Test the property 'formType'
     */
    @Test
    public void formTypeTest() {
        // TODO: test formType
    }

    /**
     * Test the property 'jfcCommittee'
     */
    @Test
    public void jfcCommitteeTest() {
        // TODO: test jfcCommittee
    }

    /**
     * Test the property 'lastF1Date'
     */
    @Test
    public void lastF1DateTest() {
        // TODO: test lastF1Date
    }

    /**
     * Test the property 'lastFileDate'
     */
    @Test
    public void lastFileDateTest() {
        // TODO: test lastFileDate
    }

    /**
     * Test the property 'leadershipPac'
     */
    @Test
    public void leadershipPacTest() {
        // TODO: test leadershipPac
    }

    /**
     * Test the property 'lobbyistRegistrantPac'
     */
    @Test
    public void lobbyistRegistrantPacTest() {
        // TODO: test lobbyistRegistrantPac
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'organizationType'
     */
    @Test
    public void organizationTypeTest() {
        // TODO: test organizationType
    }

    /**
     * Test the property 'organizationTypeFull'
     */
    @Test
    public void organizationTypeFullTest() {
        // TODO: test organizationTypeFull
    }

    /**
     * Test the property 'party'
     */
    @Test
    public void partyTest() {
        // TODO: test party
    }

    /**
     * Test the property 'partyFull'
     */
    @Test
    public void partyFullTest() {
        // TODO: test partyFull
    }

    /**
     * Test the property 'partyType'
     */
    @Test
    public void partyTypeTest() {
        // TODO: test partyType
    }

    /**
     * Test the property 'partyTypeFull'
     */
    @Test
    public void partyTypeFullTest() {
        // TODO: test partyTypeFull
    }

    /**
     * Test the property 'sponsorCandidateIds'
     */
    @Test
    public void sponsorCandidateIdsTest() {
        // TODO: test sponsorCandidateIds
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateFull'
     */
    @Test
    public void stateFullTest() {
        // TODO: test stateFull
    }

    /**
     * Test the property 'street1'
     */
    @Test
    public void street1Test() {
        // TODO: test street1
    }

    /**
     * Test the property 'street2'
     */
    @Test
    public void street2Test() {
        // TODO: test street2
    }

    /**
     * Test the property 'treasurerCity'
     */
    @Test
    public void treasurerCityTest() {
        // TODO: test treasurerCity
    }

    /**
     * Test the property 'treasurerName'
     */
    @Test
    public void treasurerNameTest() {
        // TODO: test treasurerName
    }

    /**
     * Test the property 'treasurerName1'
     */
    @Test
    public void treasurerName1Test() {
        // TODO: test treasurerName1
    }

    /**
     * Test the property 'treasurerName2'
     */
    @Test
    public void treasurerName2Test() {
        // TODO: test treasurerName2
    }

    /**
     * Test the property 'treasurerNameMiddle'
     */
    @Test
    public void treasurerNameMiddleTest() {
        // TODO: test treasurerNameMiddle
    }

    /**
     * Test the property 'treasurerNamePrefix'
     */
    @Test
    public void treasurerNamePrefixTest() {
        // TODO: test treasurerNamePrefix
    }

    /**
     * Test the property 'treasurerNameSuffix'
     */
    @Test
    public void treasurerNameSuffixTest() {
        // TODO: test treasurerNameSuffix
    }

    /**
     * Test the property 'treasurerNameTitle'
     */
    @Test
    public void treasurerNameTitleTest() {
        // TODO: test treasurerNameTitle
    }

    /**
     * Test the property 'treasurerPhone'
     */
    @Test
    public void treasurerPhoneTest() {
        // TODO: test treasurerPhone
    }

    /**
     * Test the property 'treasurerState'
     */
    @Test
    public void treasurerStateTest() {
        // TODO: test treasurerState
    }

    /**
     * Test the property 'treasurerStreet1'
     */
    @Test
    public void treasurerStreet1Test() {
        // TODO: test treasurerStreet1
    }

    /**
     * Test the property 'treasurerStreet2'
     */
    @Test
    public void treasurerStreet2Test() {
        // TODO: test treasurerStreet2
    }

    /**
     * Test the property 'treasurerZip'
     */
    @Test
    public void treasurerZipTest() {
        // TODO: test treasurerZip
    }

    /**
     * Test the property 'website'
     */
    @Test
    public void websiteTest() {
        // TODO: test website
    }

    /**
     * Test the property 'zip'
     */
    @Test
    public void zipTest() {
        // TODO: test zip
    }

}
