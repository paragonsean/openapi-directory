/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CommitteeDetailPage;
import org.openapitools.client.model.CommitteeHistoryProfilePage;
import org.openapitools.client.model.CommitteePage;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommitteeApi
 */
@Disabled
public class CommitteeApiTest {

    private final CommitteeApi api = new CommitteeApi();

    /**
     *  This endpoint is useful for finding detailed information about a particular committee or filer. Use the &#x60;committee_id&#x60; to find the most recent information about the committee. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void candidateCandidateIdCommitteesGetTest() throws ApiException {
        String apiKey = null;
        String candidateId = null;
        List<String> committeeType = null;
        List<Integer> cycle = null;
        Boolean sortNullOnly = null;
        Integer page = null;
        List<Integer> year = null;
        Boolean sortNullsLast = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> filingFrequency = null;
        List<String> organizationType = null;
        List<String> designation = null;
        String sort = null;
        CommitteeDetailPage response = api.candidateCandidateIdCommitteesGet(apiKey, candidateId, committeeType, cycle, sortNullOnly, page, year, sortNullsLast, sortHideNull, perPage, filingFrequency, organizationType, designation, sort);
        // TODO: test validations
    }

    /**
     *  Explore a filer&#39;s characteristics over time. This can be particularly useful if the committees change treasurers, designation, or &#x60;committee_type&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void candidateCandidateIdCommitteesHistoryCycleGetTest() throws ApiException {
        String apiKey = null;
        Integer cycle = null;
        String candidateId = null;
        Boolean electionFull = null;
        Boolean sortNullsLast = null;
        Integer page = null;
        Boolean sortNullOnly = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> designation = null;
        String sort = null;
        CommitteeHistoryProfilePage response = api.candidateCandidateIdCommitteesHistoryCycleGet(apiKey, cycle, candidateId, electionFull, sortNullsLast, page, sortNullOnly, sortHideNull, perPage, designation, sort);
        // TODO: test validations
    }

    /**
     *  Explore a filer&#39;s characteristics over time. This can be particularly useful if the committees change treasurers, designation, or &#x60;committee_type&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void candidateCandidateIdCommitteesHistoryGetTest() throws ApiException {
        String apiKey = null;
        String candidateId = null;
        Boolean electionFull = null;
        Boolean sortNullsLast = null;
        Integer page = null;
        Boolean sortNullOnly = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> designation = null;
        String sort = null;
        CommitteeHistoryProfilePage response = api.candidateCandidateIdCommitteesHistoryGet(apiKey, candidateId, electionFull, sortNullsLast, page, sortNullOnly, sortHideNull, perPage, designation, sort);
        // TODO: test validations
    }

    /**
     *  This endpoint is useful for finding detailed information about a particular committee or filer. Use the &#x60;committee_id&#x60; to find the most recent information about the committee. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void committeeCommitteeIdGetTest() throws ApiException {
        String apiKey = null;
        String committeeId = null;
        List<String> committeeType = null;
        List<Integer> cycle = null;
        Boolean sortNullOnly = null;
        Integer page = null;
        List<Integer> year = null;
        Boolean sortNullsLast = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> filingFrequency = null;
        List<String> organizationType = null;
        List<String> designation = null;
        String sort = null;
        CommitteeDetailPage response = api.committeeCommitteeIdGet(apiKey, committeeId, committeeType, cycle, sortNullOnly, page, year, sortNullsLast, sortHideNull, perPage, filingFrequency, organizationType, designation, sort);
        // TODO: test validations
    }

    /**
     *  Explore a filer&#39;s characteristics over time. This can be particularly useful if the committees change treasurers, designation, or &#x60;committee_type&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void committeeCommitteeIdHistoryCycleGetTest() throws ApiException {
        String apiKey = null;
        String committeeId = null;
        Integer cycle = null;
        Boolean electionFull = null;
        Boolean sortNullsLast = null;
        Integer page = null;
        Boolean sortNullOnly = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> designation = null;
        String sort = null;
        CommitteeHistoryProfilePage response = api.committeeCommitteeIdHistoryCycleGet(apiKey, committeeId, cycle, electionFull, sortNullsLast, page, sortNullOnly, sortHideNull, perPage, designation, sort);
        // TODO: test validations
    }

    /**
     *  Explore a filer&#39;s characteristics over time. This can be particularly useful if the committees change treasurers, designation, or &#x60;committee_type&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void committeeCommitteeIdHistoryGetTest() throws ApiException {
        String apiKey = null;
        String committeeId = null;
        Boolean electionFull = null;
        Boolean sortNullsLast = null;
        Integer page = null;
        Boolean sortNullOnly = null;
        Boolean sortHideNull = null;
        Integer perPage = null;
        List<String> designation = null;
        String sort = null;
        CommitteeHistoryProfilePage response = api.committeeCommitteeIdHistoryGet(apiKey, committeeId, electionFull, sortNullsLast, page, sortNullOnly, sortHideNull, perPage, designation, sort);
        // TODO: test validations
    }

    /**
     *  Fetch basic information about committees and filers. Use parameters to filter for particular characteristics.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void committeesGetTest() throws ApiException {
        String apiKey = null;
        List<String> treasurerName = null;
        List<String> q = null;
        LocalDate minFirstFileDate = null;
        List<Integer> cycle = null;
        List<String> sponsorCandidateId = null;
        Boolean sortNullOnly = null;
        Boolean sortHideNull = null;
        List<String> candidateId = null;
        Integer perPage = null;
        List<String> filingFrequency = null;
        String sort = null;
        LocalDate maxFirstFileDate = null;
        LocalDate minFirstF1Date = null;
        LocalDate minLastF1Date = null;
        List<String> committeeType = null;
        List<String> party = null;
        Boolean sortNullsLast = null;
        Integer page = null;
        List<Integer> year = null;
        List<String> committeeId = null;
        List<String> state = null;
        LocalDate maxLastF1Date = null;
        LocalDate maxFirstF1Date = null;
        List<String> designation = null;
        List<String> organizationType = null;
        CommitteePage response = api.committeesGet(apiKey, treasurerName, q, minFirstFileDate, cycle, sponsorCandidateId, sortNullOnly, sortHideNull, candidateId, perPage, filingFrequency, sort, maxFirstFileDate, minFirstF1Date, minLastF1Date, committeeType, party, sortNullsLast, page, year, committeeId, state, maxLastF1Date, maxFirstF1Date, designation, organizationType);
        // TODO: test validations
    }

}
