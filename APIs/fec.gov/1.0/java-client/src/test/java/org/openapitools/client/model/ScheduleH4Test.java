/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ScheduleH4
 */
public class ScheduleH4Test {
    private final ScheduleH4 model = new ScheduleH4();

    /**
     * Model tests for ScheduleH4
     */
    @Test
    public void testScheduleH4() {
        // TODO: test ScheduleH4
    }

    /**
     * Test the property 'additionalDescription'
     */
    @Test
    public void additionalDescriptionTest() {
        // TODO: test additionalDescription
    }

    /**
     * Test the property 'administrativeActivityInidcator'
     */
    @Test
    public void administrativeActivityInidcatorTest() {
        // TODO: test administrativeActivityInidcator
    }

    /**
     * Test the property 'administrativeVoterDriveActivityIndicator'
     */
    @Test
    public void administrativeVoterDriveActivityIndicatorTest() {
        // TODO: test administrativeVoterDriveActivityIndicator
    }

    /**
     * Test the property 'amendmentIndicator'
     */
    @Test
    public void amendmentIndicatorTest() {
        // TODO: test amendmentIndicator
    }

    /**
     * Test the property 'amendmentIndicatorDesc'
     */
    @Test
    public void amendmentIndicatorDescTest() {
        // TODO: test amendmentIndicatorDesc
    }

    /**
     * Test the property 'backReferenceScheduleId'
     */
    @Test
    public void backReferenceScheduleIdTest() {
        // TODO: test backReferenceScheduleId
    }

    /**
     * Test the property 'backReferenceTransactionId'
     */
    @Test
    public void backReferenceTransactionIdTest() {
        // TODO: test backReferenceTransactionId
    }

    /**
     * Test the property 'candidateFirstName'
     */
    @Test
    public void candidateFirstNameTest() {
        // TODO: test candidateFirstName
    }

    /**
     * Test the property 'candidateId'
     */
    @Test
    public void candidateIdTest() {
        // TODO: test candidateId
    }

    /**
     * Test the property 'candidateLastName'
     */
    @Test
    public void candidateLastNameTest() {
        // TODO: test candidateLastName
    }

    /**
     * Test the property 'candidateName'
     */
    @Test
    public void candidateNameTest() {
        // TODO: test candidateName
    }

    /**
     * Test the property 'candidateOffice'
     */
    @Test
    public void candidateOfficeTest() {
        // TODO: test candidateOffice
    }

    /**
     * Test the property 'candidateOfficeDescription'
     */
    @Test
    public void candidateOfficeDescriptionTest() {
        // TODO: test candidateOfficeDescription
    }

    /**
     * Test the property 'candidateOfficeDistrict'
     */
    @Test
    public void candidateOfficeDistrictTest() {
        // TODO: test candidateOfficeDistrict
    }

    /**
     * Test the property 'candidateOfficeState'
     */
    @Test
    public void candidateOfficeStateTest() {
        // TODO: test candidateOfficeState
    }

    /**
     * Test the property 'candidateOfficeStateFull'
     */
    @Test
    public void candidateOfficeStateFullTest() {
        // TODO: test candidateOfficeStateFull
    }

    /**
     * Test the property 'categoryCode'
     */
    @Test
    public void categoryCodeTest() {
        // TODO: test categoryCode
    }

    /**
     * Test the property 'categoryCodeFull'
     */
    @Test
    public void categoryCodeFullTest() {
        // TODO: test categoryCodeFull
    }

    /**
     * Test the property 'committee'
     */
    @Test
    public void committeeTest() {
        // TODO: test committee
    }

    /**
     * Test the property 'committeeId'
     */
    @Test
    public void committeeIdTest() {
        // TODO: test committeeId
    }

    /**
     * Test the property 'conduitCommitteeCity'
     */
    @Test
    public void conduitCommitteeCityTest() {
        // TODO: test conduitCommitteeCity
    }

    /**
     * Test the property 'conduitCommitteeId'
     */
    @Test
    public void conduitCommitteeIdTest() {
        // TODO: test conduitCommitteeId
    }

    /**
     * Test the property 'conduitCommitteeName'
     */
    @Test
    public void conduitCommitteeNameTest() {
        // TODO: test conduitCommitteeName
    }

    /**
     * Test the property 'conduitCommitteeState'
     */
    @Test
    public void conduitCommitteeStateTest() {
        // TODO: test conduitCommitteeState
    }

    /**
     * Test the property 'conduitCommitteeStreet1'
     */
    @Test
    public void conduitCommitteeStreet1Test() {
        // TODO: test conduitCommitteeStreet1
    }

    /**
     * Test the property 'conduitCommitteeStreet2'
     */
    @Test
    public void conduitCommitteeStreet2Test() {
        // TODO: test conduitCommitteeStreet2
    }

    /**
     * Test the property 'conduitCommitteeZip'
     */
    @Test
    public void conduitCommitteeZipTest() {
        // TODO: test conduitCommitteeZip
    }

    /**
     * Test the property 'cycle'
     */
    @Test
    public void cycleTest() {
        // TODO: test cycle
    }

    /**
     * Test the property 'directCandidateSupportActivityIndicator'
     */
    @Test
    public void directCandidateSupportActivityIndicatorTest() {
        // TODO: test directCandidateSupportActivityIndicator
    }

    /**
     * Test the property 'disbursementAmount'
     */
    @Test
    public void disbursementAmountTest() {
        // TODO: test disbursementAmount
    }

    /**
     * Test the property 'disbursementType'
     */
    @Test
    public void disbursementTypeTest() {
        // TODO: test disbursementType
    }

    /**
     * Test the property 'disbursementTypeFull'
     */
    @Test
    public void disbursementTypeFullTest() {
        // TODO: test disbursementTypeFull
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'entityTypeDesc'
     */
    @Test
    public void entityTypeDescTest() {
        // TODO: test entityTypeDesc
    }

    /**
     * Test the property 'eventAmountYearToDate'
     */
    @Test
    public void eventAmountYearToDateTest() {
        // TODO: test eventAmountYearToDate
    }

    /**
     * Test the property 'eventPurposeCategoryType'
     */
    @Test
    public void eventPurposeCategoryTypeTest() {
        // TODO: test eventPurposeCategoryType
    }

    /**
     * Test the property 'eventPurposeCategoryTypeFull'
     */
    @Test
    public void eventPurposeCategoryTypeFullTest() {
        // TODO: test eventPurposeCategoryTypeFull
    }

    /**
     * Test the property 'eventPurposeDate'
     */
    @Test
    public void eventPurposeDateTest() {
        // TODO: test eventPurposeDate
    }

    /**
     * Test the property 'eventPurposeDescription'
     */
    @Test
    public void eventPurposeDescriptionTest() {
        // TODO: test eventPurposeDescription
    }

    /**
     * Test the property 'eventPurposeName'
     */
    @Test
    public void eventPurposeNameTest() {
        // TODO: test eventPurposeName
    }

    /**
     * Test the property 'exemptActivityIndicator'
     */
    @Test
    public void exemptActivityIndicatorTest() {
        // TODO: test exemptActivityIndicator
    }

    /**
     * Test the property 'federalShare'
     */
    @Test
    public void federalShareTest() {
        // TODO: test federalShare
    }

    /**
     * Test the property 'fileNumber'
     */
    @Test
    public void fileNumberTest() {
        // TODO: test fileNumber
    }

    /**
     * Test the property 'filerCommitteeName'
     */
    @Test
    public void filerCommitteeNameTest() {
        // TODO: test filerCommitteeName
    }

    /**
     * Test the property 'filingForm'
     */
    @Test
    public void filingFormTest() {
        // TODO: test filingForm
    }

    /**
     * Test the property 'fundraisingActivityIndicator'
     */
    @Test
    public void fundraisingActivityIndicatorTest() {
        // TODO: test fundraisingActivityIndicator
    }

    /**
     * Test the property 'generalVoterDriveActivityIndicator'
     */
    @Test
    public void generalVoterDriveActivityIndicatorTest() {
        // TODO: test generalVoterDriveActivityIndicator
    }

    /**
     * Test the property 'imageNumber'
     */
    @Test
    public void imageNumberTest() {
        // TODO: test imageNumber
    }

    /**
     * Test the property 'lineNumber'
     */
    @Test
    public void lineNumberTest() {
        // TODO: test lineNumber
    }

    /**
     * Test the property 'linkId'
     */
    @Test
    public void linkIdTest() {
        // TODO: test linkId
    }

    /**
     * Test the property 'loadDate'
     */
    @Test
    public void loadDateTest() {
        // TODO: test loadDate
    }

    /**
     * Test the property 'memoCode'
     */
    @Test
    public void memoCodeTest() {
        // TODO: test memoCode
    }

    /**
     * Test the property 'memoCodeDescription'
     */
    @Test
    public void memoCodeDescriptionTest() {
        // TODO: test memoCodeDescription
    }

    /**
     * Test the property 'memoText'
     */
    @Test
    public void memoTextTest() {
        // TODO: test memoText
    }

    /**
     * Test the property 'nonfederalShare'
     */
    @Test
    public void nonfederalShareTest() {
        // TODO: test nonfederalShare
    }

    /**
     * Test the property 'originalSubId'
     */
    @Test
    public void originalSubIdTest() {
        // TODO: test originalSubId
    }

    /**
     * Test the property 'payeeCity'
     */
    @Test
    public void payeeCityTest() {
        // TODO: test payeeCity
    }

    /**
     * Test the property 'payeeFirstName'
     */
    @Test
    public void payeeFirstNameTest() {
        // TODO: test payeeFirstName
    }

    /**
     * Test the property 'payeeLastName'
     */
    @Test
    public void payeeLastNameTest() {
        // TODO: test payeeLastName
    }

    /**
     * Test the property 'payeeMiddleName'
     */
    @Test
    public void payeeMiddleNameTest() {
        // TODO: test payeeMiddleName
    }

    /**
     * Test the property 'payeeName'
     */
    @Test
    public void payeeNameTest() {
        // TODO: test payeeName
    }

    /**
     * Test the property 'payeePrefix'
     */
    @Test
    public void payeePrefixTest() {
        // TODO: test payeePrefix
    }

    /**
     * Test the property 'payeeState'
     */
    @Test
    public void payeeStateTest() {
        // TODO: test payeeState
    }

    /**
     * Test the property 'payeeSuffix'
     */
    @Test
    public void payeeSuffixTest() {
        // TODO: test payeeSuffix
    }

    /**
     * Test the property 'payeeZip'
     */
    @Test
    public void payeeZipTest() {
        // TODO: test payeeZip
    }

    /**
     * Test the property 'publishedCommitteeReferenceParityCheck'
     */
    @Test
    public void publishedCommitteeReferenceParityCheckTest() {
        // TODO: test publishedCommitteeReferenceParityCheck
    }

    /**
     * Test the property 'reportType'
     */
    @Test
    public void reportTypeTest() {
        // TODO: test reportType
    }

    /**
     * Test the property 'reportYear'
     */
    @Test
    public void reportYearTest() {
        // TODO: test reportYear
    }

    /**
     * Test the property 'scheduleType'
     */
    @Test
    public void scheduleTypeTest() {
        // TODO: test scheduleType
    }

    /**
     * Test the property 'scheduleTypeFull'
     */
    @Test
    public void scheduleTypeFullTest() {
        // TODO: test scheduleTypeFull
    }

    /**
     * Test the property 'subId'
     */
    @Test
    public void subIdTest() {
        // TODO: test subId
    }

    /**
     * Test the property 'transactionId'
     */
    @Test
    public void transactionIdTest() {
        // TODO: test transactionId
    }

}
