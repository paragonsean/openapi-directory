/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.client.model.EFilings;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ScheduleBEfile
 */
public class ScheduleBEfileTest {
    private final ScheduleBEfile model = new ScheduleBEfile();

    /**
     * Model tests for ScheduleBEfile
     */
    @Test
    public void testScheduleBEfile() {
        // TODO: test ScheduleBEfile
    }

    /**
     * Test the property 'amendmentIndicator'
     */
    @Test
    public void amendmentIndicatorTest() {
        // TODO: test amendmentIndicator
    }

    /**
     * Test the property 'backReferenceScheduleName'
     */
    @Test
    public void backReferenceScheduleNameTest() {
        // TODO: test backReferenceScheduleName
    }

    /**
     * Test the property 'backReferenceTransactionId'
     */
    @Test
    public void backReferenceTransactionIdTest() {
        // TODO: test backReferenceTransactionId
    }

    /**
     * Test the property 'beginningImageNumber'
     */
    @Test
    public void beginningImageNumberTest() {
        // TODO: test beginningImageNumber
    }

    /**
     * Test the property 'beneficiaryCommitteeName'
     */
    @Test
    public void beneficiaryCommitteeNameTest() {
        // TODO: test beneficiaryCommitteeName
    }

    /**
     * Test the property 'candidateOffice'
     */
    @Test
    public void candidateOfficeTest() {
        // TODO: test candidateOffice
    }

    /**
     * Test the property 'candidateOfficeDistrict'
     */
    @Test
    public void candidateOfficeDistrictTest() {
        // TODO: test candidateOfficeDistrict
    }

    /**
     * Test the property 'committee'
     */
    @Test
    public void committeeTest() {
        // TODO: test committee
    }

    /**
     * Test the property 'committeeId'
     */
    @Test
    public void committeeIdTest() {
        // TODO: test committeeId
    }

    /**
     * Test the property 'csvUrl'
     */
    @Test
    public void csvUrlTest() {
        // TODO: test csvUrl
    }

    /**
     * Test the property 'disbursementAmount'
     */
    @Test
    public void disbursementAmountTest() {
        // TODO: test disbursementAmount
    }

    /**
     * Test the property 'disbursementDate'
     */
    @Test
    public void disbursementDateTest() {
        // TODO: test disbursementDate
    }

    /**
     * Test the property 'disbursementDescription'
     */
    @Test
    public void disbursementDescriptionTest() {
        // TODO: test disbursementDescription
    }

    /**
     * Test the property 'disbursementType'
     */
    @Test
    public void disbursementTypeTest() {
        // TODO: test disbursementType
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'fecUrl'
     */
    @Test
    public void fecUrlTest() {
        // TODO: test fecUrl
    }

    /**
     * Test the property 'fileNumber'
     */
    @Test
    public void fileNumberTest() {
        // TODO: test fileNumber
    }

    /**
     * Test the property 'filing'
     */
    @Test
    public void filingTest() {
        // TODO: test filing
    }

    /**
     * Test the property 'imageNumber'
     */
    @Test
    public void imageNumberTest() {
        // TODO: test imageNumber
    }

    /**
     * Test the property 'isNotice'
     */
    @Test
    public void isNoticeTest() {
        // TODO: test isNotice
    }

    /**
     * Test the property 'lineNumber'
     */
    @Test
    public void lineNumberTest() {
        // TODO: test lineNumber
    }

    /**
     * Test the property 'loadTimestamp'
     */
    @Test
    public void loadTimestampTest() {
        // TODO: test loadTimestamp
    }

    /**
     * Test the property 'memoCode'
     */
    @Test
    public void memoCodeTest() {
        // TODO: test memoCode
    }

    /**
     * Test the property 'memoText'
     */
    @Test
    public void memoTextTest() {
        // TODO: test memoText
    }

    /**
     * Test the property 'payeeName'
     */
    @Test
    public void payeeNameTest() {
        // TODO: test payeeName
    }

    /**
     * Test the property 'pdfUrl'
     */
    @Test
    public void pdfUrlTest() {
        // TODO: test pdfUrl
    }

    /**
     * Test the property 'recipientCity'
     */
    @Test
    public void recipientCityTest() {
        // TODO: test recipientCity
    }

    /**
     * Test the property 'recipientName'
     */
    @Test
    public void recipientNameTest() {
        // TODO: test recipientName
    }

    /**
     * Test the property 'recipientPrefix'
     */
    @Test
    public void recipientPrefixTest() {
        // TODO: test recipientPrefix
    }

    /**
     * Test the property 'recipientState'
     */
    @Test
    public void recipientStateTest() {
        // TODO: test recipientState
    }

    /**
     * Test the property 'recipientSuffix'
     */
    @Test
    public void recipientSuffixTest() {
        // TODO: test recipientSuffix
    }

    /**
     * Test the property 'recipientZip'
     */
    @Test
    public void recipientZipTest() {
        // TODO: test recipientZip
    }

    /**
     * Test the property 'relatedLineNumber'
     */
    @Test
    public void relatedLineNumberTest() {
        // TODO: test relatedLineNumber
    }

    /**
     * Test the property 'reportType'
     */
    @Test
    public void reportTypeTest() {
        // TODO: test reportType
    }

    /**
     * Test the property 'semiAnnualBundledRefund'
     */
    @Test
    public void semiAnnualBundledRefundTest() {
        // TODO: test semiAnnualBundledRefund
    }

    /**
     * Test the property 'transactionId'
     */
    @Test
    public void transactionIdTest() {
        // TODO: test transactionId
    }

}
