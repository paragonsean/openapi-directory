/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CandidateHistory
 */
public class CandidateHistoryTest {
    private final CandidateHistory model = new CandidateHistory();

    /**
     * Model tests for CandidateHistory
     */
    @Test
    public void testCandidateHistory() {
        // TODO: test CandidateHistory
    }

    /**
     * Test the property 'activeThrough'
     */
    @Test
    public void activeThroughTest() {
        // TODO: test activeThrough
    }

    /**
     * Test the property 'addressCity'
     */
    @Test
    public void addressCityTest() {
        // TODO: test addressCity
    }

    /**
     * Test the property 'addressState'
     */
    @Test
    public void addressStateTest() {
        // TODO: test addressState
    }

    /**
     * Test the property 'addressStreet1'
     */
    @Test
    public void addressStreet1Test() {
        // TODO: test addressStreet1
    }

    /**
     * Test the property 'addressStreet2'
     */
    @Test
    public void addressStreet2Test() {
        // TODO: test addressStreet2
    }

    /**
     * Test the property 'addressZip'
     */
    @Test
    public void addressZipTest() {
        // TODO: test addressZip
    }

    /**
     * Test the property 'candidateElectionYear'
     */
    @Test
    public void candidateElectionYearTest() {
        // TODO: test candidateElectionYear
    }

    /**
     * Test the property 'candidateId'
     */
    @Test
    public void candidateIdTest() {
        // TODO: test candidateId
    }

    /**
     * Test the property 'candidateInactive'
     */
    @Test
    public void candidateInactiveTest() {
        // TODO: test candidateInactive
    }

    /**
     * Test the property 'candidateStatus'
     */
    @Test
    public void candidateStatusTest() {
        // TODO: test candidateStatus
    }

    /**
     * Test the property 'cycles'
     */
    @Test
    public void cyclesTest() {
        // TODO: test cycles
    }

    /**
     * Test the property 'district'
     */
    @Test
    public void districtTest() {
        // TODO: test district
    }

    /**
     * Test the property 'districtNumber'
     */
    @Test
    public void districtNumberTest() {
        // TODO: test districtNumber
    }

    /**
     * Test the property 'electionDistricts'
     */
    @Test
    public void electionDistrictsTest() {
        // TODO: test electionDistricts
    }

    /**
     * Test the property 'electionYears'
     */
    @Test
    public void electionYearsTest() {
        // TODO: test electionYears
    }

    /**
     * Test the property 'fecCyclesInElection'
     */
    @Test
    public void fecCyclesInElectionTest() {
        // TODO: test fecCyclesInElection
    }

    /**
     * Test the property 'firstFileDate'
     */
    @Test
    public void firstFileDateTest() {
        // TODO: test firstFileDate
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'incumbentChallenge'
     */
    @Test
    public void incumbentChallengeTest() {
        // TODO: test incumbentChallenge
    }

    /**
     * Test the property 'incumbentChallengeFull'
     */
    @Test
    public void incumbentChallengeFullTest() {
        // TODO: test incumbentChallengeFull
    }

    /**
     * Test the property 'lastF2Date'
     */
    @Test
    public void lastF2DateTest() {
        // TODO: test lastF2Date
    }

    /**
     * Test the property 'lastFileDate'
     */
    @Test
    public void lastFileDateTest() {
        // TODO: test lastFileDate
    }

    /**
     * Test the property 'loadDate'
     */
    @Test
    public void loadDateTest() {
        // TODO: test loadDate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'office'
     */
    @Test
    public void officeTest() {
        // TODO: test office
    }

    /**
     * Test the property 'officeFull'
     */
    @Test
    public void officeFullTest() {
        // TODO: test officeFull
    }

    /**
     * Test the property 'party'
     */
    @Test
    public void partyTest() {
        // TODO: test party
    }

    /**
     * Test the property 'partyFull'
     */
    @Test
    public void partyFullTest() {
        // TODO: test partyFull
    }

    /**
     * Test the property 'roundedElectionYears'
     */
    @Test
    public void roundedElectionYearsTest() {
        // TODO: test roundedElectionYears
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'twoYearPeriod'
     */
    @Test
    public void twoYearPeriodTest() {
        // TODO: test twoYearPeriod
    }

}
