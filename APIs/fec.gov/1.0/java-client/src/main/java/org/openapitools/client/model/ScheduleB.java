/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleB
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleB {
  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC = "amendment_indicator_desc";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC)
  private String amendmentIndicatorDesc;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_ID = "back_reference_schedule_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_ID)
  private String backReferenceScheduleId;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_BENEFICIARY_COMMITTEE_NAME = "beneficiary_committee_name";
  @SerializedName(SERIALIZED_NAME_BENEFICIARY_COMMITTEE_NAME)
  private String beneficiaryCommitteeName;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DESCRIPTION = "candidate_office_description";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DESCRIPTION)
  private String candidateOfficeDescription;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL = "candidate_office_state_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL)
  private String candidateOfficeStateFull;

  public static final String SERIALIZED_NAME_CANDIDATE_PREFIX = "candidate_prefix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PREFIX)
  private String candidatePrefix;

  public static final String SERIALIZED_NAME_CANDIDATE_SUFFIX = "candidate_suffix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_SUFFIX)
  private String candidateSuffix;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "category_code";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_CATEGORY_CODE_FULL = "category_code_full";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE_FULL)
  private String categoryCodeFull;

  public static final String SERIALIZED_NAME_COMM_DT = "comm_dt";
  @SerializedName(SERIALIZED_NAME_COMM_DT)
  private LocalDate commDt;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_DISBURSEMENT_AMOUNT = "disbursement_amount";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_AMOUNT)
  private BigDecimal disbursementAmount;

  public static final String SERIALIZED_NAME_DISBURSEMENT_DATE = "disbursement_date";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_DATE)
  private LocalDate disbursementDate;

  public static final String SERIALIZED_NAME_DISBURSEMENT_DESCRIPTION = "disbursement_description";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_DESCRIPTION)
  private String disbursementDescription;

  public static final String SERIALIZED_NAME_DISBURSEMENT_PURPOSE_CATEGORY = "disbursement_purpose_category";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_PURPOSE_CATEGORY)
  private String disbursementPurposeCategory;

  public static final String SERIALIZED_NAME_DISBURSEMENT_TYPE = "disbursement_type";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_TYPE)
  private String disbursementType;

  public static final String SERIALIZED_NAME_DISBURSEMENT_TYPE_DESCRIPTION = "disbursement_type_description";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_TYPE_DESCRIPTION)
  private String disbursementTypeDescription;

  public static final String SERIALIZED_NAME_ELECTION_TYPE = "election_type";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE)
  private String electionType;

  public static final String SERIALIZED_NAME_ELECTION_TYPE_FULL = "election_type_full";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE_FULL)
  private String electionTypeFull;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_DESC = "entity_type_desc";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_DESC)
  private String entityTypeDesc;

  public static final String SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC = "fec_election_type_desc";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC)
  private String fecElectionTypeDesc;

  public static final String SERIALIZED_NAME_FEC_ELECTION_YEAR = "fec_election_year";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_YEAR)
  private String fecElectionYear;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER_LABEL = "line_number_label";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER_LABEL)
  private String lineNumberLabel;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_LOAD_DATE = "load_date";
  @SerializedName(SERIALIZED_NAME_LOAD_DATE)
  private OffsetDateTime loadDate;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_CODE_FULL = "memo_code_full";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE_FULL)
  private String memoCodeFull;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_MEMOED_SUBTOTAL = "memoed_subtotal";
  @SerializedName(SERIALIZED_NAME_MEMOED_SUBTOTAL)
  private Boolean memoedSubtotal;

  public static final String SERIALIZED_NAME_NATIONAL_COMMITTEE_NONFEDERAL_ACCOUNT = "national_committee_nonfederal_account";
  @SerializedName(SERIALIZED_NAME_NATIONAL_COMMITTEE_NONFEDERAL_ACCOUNT)
  private String nationalCommitteeNonfederalAccount;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private String originalSubId;

  public static final String SERIALIZED_NAME_PAYEE_EMPLOYER = "payee_employer";
  @SerializedName(SERIALIZED_NAME_PAYEE_EMPLOYER)
  private String payeeEmployer;

  public static final String SERIALIZED_NAME_PAYEE_FIRST_NAME = "payee_first_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_FIRST_NAME)
  private String payeeFirstName;

  public static final String SERIALIZED_NAME_PAYEE_LAST_NAME = "payee_last_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_LAST_NAME)
  private String payeeLastName;

  public static final String SERIALIZED_NAME_PAYEE_MIDDLE_NAME = "payee_middle_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_MIDDLE_NAME)
  private String payeeMiddleName;

  public static final String SERIALIZED_NAME_PAYEE_OCCUPATION = "payee_occupation";
  @SerializedName(SERIALIZED_NAME_PAYEE_OCCUPATION)
  private String payeeOccupation;

  public static final String SERIALIZED_NAME_PAYEE_PREFIX = "payee_prefix";
  @SerializedName(SERIALIZED_NAME_PAYEE_PREFIX)
  private String payeePrefix;

  public static final String SERIALIZED_NAME_PAYEE_SUFFIX = "payee_suffix";
  @SerializedName(SERIALIZED_NAME_PAYEE_SUFFIX)
  private String payeeSuffix;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_RECIPIENT_CITY = "recipient_city";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_CITY)
  private String recipientCity;

  public static final String SERIALIZED_NAME_RECIPIENT_COMMITTEE = "recipient_committee";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_COMMITTEE)
  private CommitteeHistory recipientCommittee;

  public static final String SERIALIZED_NAME_RECIPIENT_COMMITTEE_ID = "recipient_committee_id";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_COMMITTEE_ID)
  private String recipientCommitteeId;

  public static final String SERIALIZED_NAME_RECIPIENT_NAME = "recipient_name";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_NAME)
  private String recipientName;

  public static final String SERIALIZED_NAME_RECIPIENT_STATE = "recipient_state";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_STATE)
  private String recipientState;

  public static final String SERIALIZED_NAME_RECIPIENT_ZIP = "recipient_zip";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ZIP)
  private String recipientZip;

  public static final String SERIALIZED_NAME_REF_DISP_EXCESS_FLG = "ref_disp_excess_flg";
  @SerializedName(SERIALIZED_NAME_REF_DISP_EXCESS_FLG)
  private String refDispExcessFlg;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SEMI_ANNUAL_BUNDLED_REFUND = "semi_annual_bundled_refund";
  @SerializedName(SERIALIZED_NAME_SEMI_ANNUAL_BUNDLED_REFUND)
  private BigDecimal semiAnnualBundledRefund;

  public static final String SERIALIZED_NAME_SPENDER_COMMITTEE_DESIGNATION = "spender_committee_designation";
  @SerializedName(SERIALIZED_NAME_SPENDER_COMMITTEE_DESIGNATION)
  private String spenderCommitteeDesignation;

  public static final String SERIALIZED_NAME_SPENDER_COMMITTEE_ORG_TYPE = "spender_committee_org_type";
  @SerializedName(SERIALIZED_NAME_SPENDER_COMMITTEE_ORG_TYPE)
  private String spenderCommitteeOrgType;

  public static final String SERIALIZED_NAME_SPENDER_COMMITTEE_TYPE = "spender_committee_type";
  @SerializedName(SERIALIZED_NAME_SPENDER_COMMITTEE_TYPE)
  private String spenderCommitteeType;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_TWO_YEAR_TRANSACTION_PERIOD = "two_year_transaction_period";
  @SerializedName(SERIALIZED_NAME_TWO_YEAR_TRANSACTION_PERIOD)
  private Integer twoYearTransactionPeriod;

  public static final String SERIALIZED_NAME_UNUSED_RECIPIENT_COMMITTEE_ID = "unused_recipient_committee_id";
  @SerializedName(SERIALIZED_NAME_UNUSED_RECIPIENT_COMMITTEE_ID)
  private String unusedRecipientCommitteeId;

  public ScheduleB() {
  }

  public ScheduleB amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleB amendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
    return this;
  }

  /**
   * Get amendmentIndicatorDesc
   * @return amendmentIndicatorDesc
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicatorDesc() {
    return amendmentIndicatorDesc;
  }

  public void setAmendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
  }


  public ScheduleB backReferenceScheduleId(String backReferenceScheduleId) {
    this.backReferenceScheduleId = backReferenceScheduleId;
    return this;
  }

  /**
   * Get backReferenceScheduleId
   * @return backReferenceScheduleId
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleId() {
    return backReferenceScheduleId;
  }

  public void setBackReferenceScheduleId(String backReferenceScheduleId) {
    this.backReferenceScheduleId = backReferenceScheduleId;
  }


  public ScheduleB backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleB beneficiaryCommitteeName(String beneficiaryCommitteeName) {
    this.beneficiaryCommitteeName = beneficiaryCommitteeName;
    return this;
  }

  /**
   * Get beneficiaryCommitteeName
   * @return beneficiaryCommitteeName
   */
  @javax.annotation.Nullable
  public String getBeneficiaryCommitteeName() {
    return beneficiaryCommitteeName;
  }

  public void setBeneficiaryCommitteeName(String beneficiaryCommitteeName) {
    this.beneficiaryCommitteeName = beneficiaryCommitteeName;
  }


  public ScheduleB candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public ScheduleB candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   *  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence. 
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public ScheduleB candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public ScheduleB candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public ScheduleB candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public ScheduleB candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleB candidateOfficeDescription(String candidateOfficeDescription) {
    this.candidateOfficeDescription = candidateOfficeDescription;
    return this;
  }

  /**
   * Get candidateOfficeDescription
   * @return candidateOfficeDescription
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDescription() {
    return candidateOfficeDescription;
  }

  public void setCandidateOfficeDescription(String candidateOfficeDescription) {
    this.candidateOfficeDescription = candidateOfficeDescription;
  }


  public ScheduleB candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Get candidateOfficeDistrict
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleB candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public ScheduleB candidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
    return this;
  }

  /**
   * Get candidateOfficeStateFull
   * @return candidateOfficeStateFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeStateFull() {
    return candidateOfficeStateFull;
  }

  public void setCandidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
  }


  public ScheduleB candidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
    return this;
  }

  /**
   * Get candidatePrefix
   * @return candidatePrefix
   */
  @javax.annotation.Nullable
  public String getCandidatePrefix() {
    return candidatePrefix;
  }

  public void setCandidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
  }


  public ScheduleB candidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
    return this;
  }

  /**
   * Get candidateSuffix
   * @return candidateSuffix
   */
  @javax.annotation.Nullable
  public String getCandidateSuffix() {
    return candidateSuffix;
  }

  public void setCandidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
  }


  public ScheduleB categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public ScheduleB categoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
    return this;
  }

  /**
   * Get categoryCodeFull
   * @return categoryCodeFull
   */
  @javax.annotation.Nullable
  public String getCategoryCodeFull() {
    return categoryCodeFull;
  }

  public void setCategoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
  }


  public ScheduleB commDt(LocalDate commDt) {
    this.commDt = commDt;
    return this;
  }

  /**
   * Get commDt
   * @return commDt
   */
  @javax.annotation.Nullable
  public LocalDate getCommDt() {
    return commDt;
  }

  public void setCommDt(LocalDate commDt) {
    this.commDt = commDt;
  }


  public ScheduleB committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleB committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleB conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public ScheduleB conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public ScheduleB conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public ScheduleB conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public ScheduleB conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public ScheduleB conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public ScheduleB disbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
    return this;
  }

  /**
   * Get disbursementAmount
   * @return disbursementAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDisbursementAmount() {
    return disbursementAmount;
  }

  public void setDisbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
  }


  public ScheduleB disbursementDate(LocalDate disbursementDate) {
    this.disbursementDate = disbursementDate;
    return this;
  }

  /**
   * Get disbursementDate
   * @return disbursementDate
   */
  @javax.annotation.Nullable
  public LocalDate getDisbursementDate() {
    return disbursementDate;
  }

  public void setDisbursementDate(LocalDate disbursementDate) {
    this.disbursementDate = disbursementDate;
  }


  public ScheduleB disbursementDescription(String disbursementDescription) {
    this.disbursementDescription = disbursementDescription;
    return this;
  }

  /**
   * Get disbursementDescription
   * @return disbursementDescription
   */
  @javax.annotation.Nullable
  public String getDisbursementDescription() {
    return disbursementDescription;
  }

  public void setDisbursementDescription(String disbursementDescription) {
    this.disbursementDescription = disbursementDescription;
  }


  public ScheduleB disbursementPurposeCategory(String disbursementPurposeCategory) {
    this.disbursementPurposeCategory = disbursementPurposeCategory;
    return this;
  }

  /**
   * Get disbursementPurposeCategory
   * @return disbursementPurposeCategory
   */
  @javax.annotation.Nullable
  public String getDisbursementPurposeCategory() {
    return disbursementPurposeCategory;
  }

  public void setDisbursementPurposeCategory(String disbursementPurposeCategory) {
    this.disbursementPurposeCategory = disbursementPurposeCategory;
  }


  public ScheduleB disbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
    return this;
  }

  /**
   * Get disbursementType
   * @return disbursementType
   */
  @javax.annotation.Nullable
  public String getDisbursementType() {
    return disbursementType;
  }

  public void setDisbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
  }


  public ScheduleB disbursementTypeDescription(String disbursementTypeDescription) {
    this.disbursementTypeDescription = disbursementTypeDescription;
    return this;
  }

  /**
   * Get disbursementTypeDescription
   * @return disbursementTypeDescription
   */
  @javax.annotation.Nullable
  public String getDisbursementTypeDescription() {
    return disbursementTypeDescription;
  }

  public void setDisbursementTypeDescription(String disbursementTypeDescription) {
    this.disbursementTypeDescription = disbursementTypeDescription;
  }


  public ScheduleB electionType(String electionType) {
    this.electionType = electionType;
    return this;
  }

  /**
   * Get electionType
   * @return electionType
   */
  @javax.annotation.Nullable
  public String getElectionType() {
    return electionType;
  }

  public void setElectionType(String electionType) {
    this.electionType = electionType;
  }


  public ScheduleB electionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
    return this;
  }

  /**
   * Get electionTypeFull
   * @return electionTypeFull
   */
  @javax.annotation.Nullable
  public String getElectionTypeFull() {
    return electionTypeFull;
  }

  public void setElectionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
  }


  public ScheduleB entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleB entityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
    return this;
  }

  /**
   * Get entityTypeDesc
   * @return entityTypeDesc
   */
  @javax.annotation.Nullable
  public String getEntityTypeDesc() {
    return entityTypeDesc;
  }

  public void setEntityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
  }


  public ScheduleB fecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
    return this;
  }

  /**
   * Get fecElectionTypeDesc
   * @return fecElectionTypeDesc
   */
  @javax.annotation.Nullable
  public String getFecElectionTypeDesc() {
    return fecElectionTypeDesc;
  }

  public void setFecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
  }


  public ScheduleB fecElectionYear(String fecElectionYear) {
    this.fecElectionYear = fecElectionYear;
    return this;
  }

  /**
   * Get fecElectionYear
   * @return fecElectionYear
   */
  @javax.annotation.Nullable
  public String getFecElectionYear() {
    return fecElectionYear;
  }

  public void setFecElectionYear(String fecElectionYear) {
    this.fecElectionYear = fecElectionYear;
  }


  public ScheduleB fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleB filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public ScheduleB imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   * Get imageNumber
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleB lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleB lineNumberLabel(String lineNumberLabel) {
    this.lineNumberLabel = lineNumberLabel;
    return this;
  }

  /**
   * Get lineNumberLabel
   * @return lineNumberLabel
   */
  @javax.annotation.Nullable
  public String getLineNumberLabel() {
    return lineNumberLabel;
  }

  public void setLineNumberLabel(String lineNumberLabel) {
    this.lineNumberLabel = lineNumberLabel;
  }


  public ScheduleB linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public ScheduleB loadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
    return this;
  }

  /**
   * Get loadDate
   * @return loadDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadDate() {
    return loadDate;
  }

  public void setLoadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
  }


  public ScheduleB memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleB memoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
    return this;
  }

  /**
   * Get memoCodeFull
   * @return memoCodeFull
   */
  @javax.annotation.Nullable
  public String getMemoCodeFull() {
    return memoCodeFull;
  }

  public void setMemoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
  }


  public ScheduleB memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleB memoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
    return this;
  }

  /**
   * Get memoedSubtotal
   * @return memoedSubtotal
   */
  @javax.annotation.Nullable
  public Boolean getMemoedSubtotal() {
    return memoedSubtotal;
  }

  public void setMemoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
  }


  public ScheduleB nationalCommitteeNonfederalAccount(String nationalCommitteeNonfederalAccount) {
    this.nationalCommitteeNonfederalAccount = nationalCommitteeNonfederalAccount;
    return this;
  }

  /**
   * Get nationalCommitteeNonfederalAccount
   * @return nationalCommitteeNonfederalAccount
   */
  @javax.annotation.Nullable
  public String getNationalCommitteeNonfederalAccount() {
    return nationalCommitteeNonfederalAccount;
  }

  public void setNationalCommitteeNonfederalAccount(String nationalCommitteeNonfederalAccount) {
    this.nationalCommitteeNonfederalAccount = nationalCommitteeNonfederalAccount;
  }


  public ScheduleB originalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public String getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
  }


  public ScheduleB payeeEmployer(String payeeEmployer) {
    this.payeeEmployer = payeeEmployer;
    return this;
  }

  /**
   * Get payeeEmployer
   * @return payeeEmployer
   */
  @javax.annotation.Nullable
  public String getPayeeEmployer() {
    return payeeEmployer;
  }

  public void setPayeeEmployer(String payeeEmployer) {
    this.payeeEmployer = payeeEmployer;
  }


  public ScheduleB payeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
    return this;
  }

  /**
   * Get payeeFirstName
   * @return payeeFirstName
   */
  @javax.annotation.Nullable
  public String getPayeeFirstName() {
    return payeeFirstName;
  }

  public void setPayeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
  }


  public ScheduleB payeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
    return this;
  }

  /**
   * Get payeeLastName
   * @return payeeLastName
   */
  @javax.annotation.Nullable
  public String getPayeeLastName() {
    return payeeLastName;
  }

  public void setPayeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
  }


  public ScheduleB payeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
    return this;
  }

  /**
   * Get payeeMiddleName
   * @return payeeMiddleName
   */
  @javax.annotation.Nullable
  public String getPayeeMiddleName() {
    return payeeMiddleName;
  }

  public void setPayeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
  }


  public ScheduleB payeeOccupation(String payeeOccupation) {
    this.payeeOccupation = payeeOccupation;
    return this;
  }

  /**
   * Get payeeOccupation
   * @return payeeOccupation
   */
  @javax.annotation.Nullable
  public String getPayeeOccupation() {
    return payeeOccupation;
  }

  public void setPayeeOccupation(String payeeOccupation) {
    this.payeeOccupation = payeeOccupation;
  }


  public ScheduleB payeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
    return this;
  }

  /**
   * Get payeePrefix
   * @return payeePrefix
   */
  @javax.annotation.Nullable
  public String getPayeePrefix() {
    return payeePrefix;
  }

  public void setPayeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
  }


  public ScheduleB payeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
    return this;
  }

  /**
   * Get payeeSuffix
   * @return payeeSuffix
   */
  @javax.annotation.Nullable
  public String getPayeeSuffix() {
    return payeeSuffix;
  }

  public void setPayeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
  }


  public ScheduleB pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleB recipientCity(String recipientCity) {
    this.recipientCity = recipientCity;
    return this;
  }

  /**
   * Get recipientCity
   * @return recipientCity
   */
  @javax.annotation.Nullable
  public String getRecipientCity() {
    return recipientCity;
  }

  public void setRecipientCity(String recipientCity) {
    this.recipientCity = recipientCity;
  }


  public ScheduleB recipientCommittee(CommitteeHistory recipientCommittee) {
    this.recipientCommittee = recipientCommittee;
    return this;
  }

  /**
   * Get recipientCommittee
   * @return recipientCommittee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getRecipientCommittee() {
    return recipientCommittee;
  }

  public void setRecipientCommittee(CommitteeHistory recipientCommittee) {
    this.recipientCommittee = recipientCommittee;
  }


  public ScheduleB recipientCommitteeId(String recipientCommitteeId) {
    this.recipientCommitteeId = recipientCommitteeId;
    return this;
  }

  /**
   * Get recipientCommitteeId
   * @return recipientCommitteeId
   */
  @javax.annotation.Nullable
  public String getRecipientCommitteeId() {
    return recipientCommitteeId;
  }

  public void setRecipientCommitteeId(String recipientCommitteeId) {
    this.recipientCommitteeId = recipientCommitteeId;
  }


  public ScheduleB recipientName(String recipientName) {
    this.recipientName = recipientName;
    return this;
  }

  /**
   * Get recipientName
   * @return recipientName
   */
  @javax.annotation.Nullable
  public String getRecipientName() {
    return recipientName;
  }

  public void setRecipientName(String recipientName) {
    this.recipientName = recipientName;
  }


  public ScheduleB recipientState(String recipientState) {
    this.recipientState = recipientState;
    return this;
  }

  /**
   * Get recipientState
   * @return recipientState
   */
  @javax.annotation.Nullable
  public String getRecipientState() {
    return recipientState;
  }

  public void setRecipientState(String recipientState) {
    this.recipientState = recipientState;
  }


  public ScheduleB recipientZip(String recipientZip) {
    this.recipientZip = recipientZip;
    return this;
  }

  /**
   * Get recipientZip
   * @return recipientZip
   */
  @javax.annotation.Nullable
  public String getRecipientZip() {
    return recipientZip;
  }

  public void setRecipientZip(String recipientZip) {
    this.recipientZip = recipientZip;
  }


  public ScheduleB refDispExcessFlg(String refDispExcessFlg) {
    this.refDispExcessFlg = refDispExcessFlg;
    return this;
  }

  /**
   * Get refDispExcessFlg
   * @return refDispExcessFlg
   */
  @javax.annotation.Nullable
  public String getRefDispExcessFlg() {
    return refDispExcessFlg;
  }

  public void setRefDispExcessFlg(String refDispExcessFlg) {
    this.refDispExcessFlg = refDispExcessFlg;
  }


  public ScheduleB reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleB reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public ScheduleB scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public ScheduleB scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public ScheduleB semiAnnualBundledRefund(BigDecimal semiAnnualBundledRefund) {
    this.semiAnnualBundledRefund = semiAnnualBundledRefund;
    return this;
  }

  /**
   * Get semiAnnualBundledRefund
   * @return semiAnnualBundledRefund
   */
  @javax.annotation.Nullable
  public BigDecimal getSemiAnnualBundledRefund() {
    return semiAnnualBundledRefund;
  }

  public void setSemiAnnualBundledRefund(BigDecimal semiAnnualBundledRefund) {
    this.semiAnnualBundledRefund = semiAnnualBundledRefund;
  }


  public ScheduleB spenderCommitteeDesignation(String spenderCommitteeDesignation) {
    this.spenderCommitteeDesignation = spenderCommitteeDesignation;
    return this;
  }

  /**
   * Get spenderCommitteeDesignation
   * @return spenderCommitteeDesignation
   */
  @javax.annotation.Nullable
  public String getSpenderCommitteeDesignation() {
    return spenderCommitteeDesignation;
  }

  public void setSpenderCommitteeDesignation(String spenderCommitteeDesignation) {
    this.spenderCommitteeDesignation = spenderCommitteeDesignation;
  }


  public ScheduleB spenderCommitteeOrgType(String spenderCommitteeOrgType) {
    this.spenderCommitteeOrgType = spenderCommitteeOrgType;
    return this;
  }

  /**
   * Get spenderCommitteeOrgType
   * @return spenderCommitteeOrgType
   */
  @javax.annotation.Nullable
  public String getSpenderCommitteeOrgType() {
    return spenderCommitteeOrgType;
  }

  public void setSpenderCommitteeOrgType(String spenderCommitteeOrgType) {
    this.spenderCommitteeOrgType = spenderCommitteeOrgType;
  }


  public ScheduleB spenderCommitteeType(String spenderCommitteeType) {
    this.spenderCommitteeType = spenderCommitteeType;
    return this;
  }

  /**
   * Get spenderCommitteeType
   * @return spenderCommitteeType
   */
  @javax.annotation.Nullable
  public String getSpenderCommitteeType() {
    return spenderCommitteeType;
  }

  public void setSpenderCommitteeType(String spenderCommitteeType) {
    this.spenderCommitteeType = spenderCommitteeType;
  }


  public ScheduleB subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public ScheduleB transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public ScheduleB twoYearTransactionPeriod(Integer twoYearTransactionPeriod) {
    this.twoYearTransactionPeriod = twoYearTransactionPeriod;
    return this;
  }

  /**
   *  This is a two-year period that is derived from the year a transaction took place in the Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b) the two_year_transaction_period is named after the ending, even-numbered year. If we do not have the date  of the transaction, we fall back to using the report year (report_year in both tables) instead,  making the same cycle adjustment as necessary. If no transaction year is specified, the results default to the most current cycle. 
   * @return twoYearTransactionPeriod
   */
  @javax.annotation.Nullable
  public Integer getTwoYearTransactionPeriod() {
    return twoYearTransactionPeriod;
  }

  public void setTwoYearTransactionPeriod(Integer twoYearTransactionPeriod) {
    this.twoYearTransactionPeriod = twoYearTransactionPeriod;
  }


  public ScheduleB unusedRecipientCommitteeId(String unusedRecipientCommitteeId) {
    this.unusedRecipientCommitteeId = unusedRecipientCommitteeId;
    return this;
  }

  /**
   * Get unusedRecipientCommitteeId
   * @return unusedRecipientCommitteeId
   */
  @javax.annotation.Nullable
  public String getUnusedRecipientCommitteeId() {
    return unusedRecipientCommitteeId;
  }

  public void setUnusedRecipientCommitteeId(String unusedRecipientCommitteeId) {
    this.unusedRecipientCommitteeId = unusedRecipientCommitteeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleB scheduleB = (ScheduleB) o;
    return Objects.equals(this.amendmentIndicator, scheduleB.amendmentIndicator) &&
        Objects.equals(this.amendmentIndicatorDesc, scheduleB.amendmentIndicatorDesc) &&
        Objects.equals(this.backReferenceScheduleId, scheduleB.backReferenceScheduleId) &&
        Objects.equals(this.backReferenceTransactionId, scheduleB.backReferenceTransactionId) &&
        Objects.equals(this.beneficiaryCommitteeName, scheduleB.beneficiaryCommitteeName) &&
        Objects.equals(this.candidateFirstName, scheduleB.candidateFirstName) &&
        Objects.equals(this.candidateId, scheduleB.candidateId) &&
        Objects.equals(this.candidateLastName, scheduleB.candidateLastName) &&
        Objects.equals(this.candidateMiddleName, scheduleB.candidateMiddleName) &&
        Objects.equals(this.candidateName, scheduleB.candidateName) &&
        Objects.equals(this.candidateOffice, scheduleB.candidateOffice) &&
        Objects.equals(this.candidateOfficeDescription, scheduleB.candidateOfficeDescription) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleB.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeState, scheduleB.candidateOfficeState) &&
        Objects.equals(this.candidateOfficeStateFull, scheduleB.candidateOfficeStateFull) &&
        Objects.equals(this.candidatePrefix, scheduleB.candidatePrefix) &&
        Objects.equals(this.candidateSuffix, scheduleB.candidateSuffix) &&
        Objects.equals(this.categoryCode, scheduleB.categoryCode) &&
        Objects.equals(this.categoryCodeFull, scheduleB.categoryCodeFull) &&
        Objects.equals(this.commDt, scheduleB.commDt) &&
        Objects.equals(this.committee, scheduleB.committee) &&
        Objects.equals(this.committeeId, scheduleB.committeeId) &&
        Objects.equals(this.conduitCommitteeCity, scheduleB.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeName, scheduleB.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, scheduleB.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, scheduleB.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, scheduleB.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, scheduleB.conduitCommitteeZip) &&
        Objects.equals(this.disbursementAmount, scheduleB.disbursementAmount) &&
        Objects.equals(this.disbursementDate, scheduleB.disbursementDate) &&
        Objects.equals(this.disbursementDescription, scheduleB.disbursementDescription) &&
        Objects.equals(this.disbursementPurposeCategory, scheduleB.disbursementPurposeCategory) &&
        Objects.equals(this.disbursementType, scheduleB.disbursementType) &&
        Objects.equals(this.disbursementTypeDescription, scheduleB.disbursementTypeDescription) &&
        Objects.equals(this.electionType, scheduleB.electionType) &&
        Objects.equals(this.electionTypeFull, scheduleB.electionTypeFull) &&
        Objects.equals(this.entityType, scheduleB.entityType) &&
        Objects.equals(this.entityTypeDesc, scheduleB.entityTypeDesc) &&
        Objects.equals(this.fecElectionTypeDesc, scheduleB.fecElectionTypeDesc) &&
        Objects.equals(this.fecElectionYear, scheduleB.fecElectionYear) &&
        Objects.equals(this.fileNumber, scheduleB.fileNumber) &&
        Objects.equals(this.filingForm, scheduleB.filingForm) &&
        Objects.equals(this.imageNumber, scheduleB.imageNumber) &&
        Objects.equals(this.lineNumber, scheduleB.lineNumber) &&
        Objects.equals(this.lineNumberLabel, scheduleB.lineNumberLabel) &&
        Objects.equals(this.linkId, scheduleB.linkId) &&
        Objects.equals(this.loadDate, scheduleB.loadDate) &&
        Objects.equals(this.memoCode, scheduleB.memoCode) &&
        Objects.equals(this.memoCodeFull, scheduleB.memoCodeFull) &&
        Objects.equals(this.memoText, scheduleB.memoText) &&
        Objects.equals(this.memoedSubtotal, scheduleB.memoedSubtotal) &&
        Objects.equals(this.nationalCommitteeNonfederalAccount, scheduleB.nationalCommitteeNonfederalAccount) &&
        Objects.equals(this.originalSubId, scheduleB.originalSubId) &&
        Objects.equals(this.payeeEmployer, scheduleB.payeeEmployer) &&
        Objects.equals(this.payeeFirstName, scheduleB.payeeFirstName) &&
        Objects.equals(this.payeeLastName, scheduleB.payeeLastName) &&
        Objects.equals(this.payeeMiddleName, scheduleB.payeeMiddleName) &&
        Objects.equals(this.payeeOccupation, scheduleB.payeeOccupation) &&
        Objects.equals(this.payeePrefix, scheduleB.payeePrefix) &&
        Objects.equals(this.payeeSuffix, scheduleB.payeeSuffix) &&
        Objects.equals(this.pdfUrl, scheduleB.pdfUrl) &&
        Objects.equals(this.recipientCity, scheduleB.recipientCity) &&
        Objects.equals(this.recipientCommittee, scheduleB.recipientCommittee) &&
        Objects.equals(this.recipientCommitteeId, scheduleB.recipientCommitteeId) &&
        Objects.equals(this.recipientName, scheduleB.recipientName) &&
        Objects.equals(this.recipientState, scheduleB.recipientState) &&
        Objects.equals(this.recipientZip, scheduleB.recipientZip) &&
        Objects.equals(this.refDispExcessFlg, scheduleB.refDispExcessFlg) &&
        Objects.equals(this.reportType, scheduleB.reportType) &&
        Objects.equals(this.reportYear, scheduleB.reportYear) &&
        Objects.equals(this.scheduleType, scheduleB.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, scheduleB.scheduleTypeFull) &&
        Objects.equals(this.semiAnnualBundledRefund, scheduleB.semiAnnualBundledRefund) &&
        Objects.equals(this.spenderCommitteeDesignation, scheduleB.spenderCommitteeDesignation) &&
        Objects.equals(this.spenderCommitteeOrgType, scheduleB.spenderCommitteeOrgType) &&
        Objects.equals(this.spenderCommitteeType, scheduleB.spenderCommitteeType) &&
        Objects.equals(this.subId, scheduleB.subId) &&
        Objects.equals(this.transactionId, scheduleB.transactionId) &&
        Objects.equals(this.twoYearTransactionPeriod, scheduleB.twoYearTransactionPeriod) &&
        Objects.equals(this.unusedRecipientCommitteeId, scheduleB.unusedRecipientCommitteeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentIndicator, amendmentIndicatorDesc, backReferenceScheduleId, backReferenceTransactionId, beneficiaryCommitteeName, candidateFirstName, candidateId, candidateLastName, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDescription, candidateOfficeDistrict, candidateOfficeState, candidateOfficeStateFull, candidatePrefix, candidateSuffix, categoryCode, categoryCodeFull, commDt, committee, committeeId, conduitCommitteeCity, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, disbursementAmount, disbursementDate, disbursementDescription, disbursementPurposeCategory, disbursementType, disbursementTypeDescription, electionType, electionTypeFull, entityType, entityTypeDesc, fecElectionTypeDesc, fecElectionYear, fileNumber, filingForm, imageNumber, lineNumber, lineNumberLabel, linkId, loadDate, memoCode, memoCodeFull, memoText, memoedSubtotal, nationalCommitteeNonfederalAccount, originalSubId, payeeEmployer, payeeFirstName, payeeLastName, payeeMiddleName, payeeOccupation, payeePrefix, payeeSuffix, pdfUrl, recipientCity, recipientCommittee, recipientCommitteeId, recipientName, recipientState, recipientZip, refDispExcessFlg, reportType, reportYear, scheduleType, scheduleTypeFull, semiAnnualBundledRefund, spenderCommitteeDesignation, spenderCommitteeOrgType, spenderCommitteeType, subId, transactionId, twoYearTransactionPeriod, unusedRecipientCommitteeId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleB {\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    amendmentIndicatorDesc: ").append(toIndentedString(amendmentIndicatorDesc)).append("\n");
    sb.append("    backReferenceScheduleId: ").append(toIndentedString(backReferenceScheduleId)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    beneficiaryCommitteeName: ").append(toIndentedString(beneficiaryCommitteeName)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDescription: ").append(toIndentedString(candidateOfficeDescription)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateOfficeStateFull: ").append(toIndentedString(candidateOfficeStateFull)).append("\n");
    sb.append("    candidatePrefix: ").append(toIndentedString(candidatePrefix)).append("\n");
    sb.append("    candidateSuffix: ").append(toIndentedString(candidateSuffix)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    categoryCodeFull: ").append(toIndentedString(categoryCodeFull)).append("\n");
    sb.append("    commDt: ").append(toIndentedString(commDt)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    disbursementAmount: ").append(toIndentedString(disbursementAmount)).append("\n");
    sb.append("    disbursementDate: ").append(toIndentedString(disbursementDate)).append("\n");
    sb.append("    disbursementDescription: ").append(toIndentedString(disbursementDescription)).append("\n");
    sb.append("    disbursementPurposeCategory: ").append(toIndentedString(disbursementPurposeCategory)).append("\n");
    sb.append("    disbursementType: ").append(toIndentedString(disbursementType)).append("\n");
    sb.append("    disbursementTypeDescription: ").append(toIndentedString(disbursementTypeDescription)).append("\n");
    sb.append("    electionType: ").append(toIndentedString(electionType)).append("\n");
    sb.append("    electionTypeFull: ").append(toIndentedString(electionTypeFull)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityTypeDesc: ").append(toIndentedString(entityTypeDesc)).append("\n");
    sb.append("    fecElectionTypeDesc: ").append(toIndentedString(fecElectionTypeDesc)).append("\n");
    sb.append("    fecElectionYear: ").append(toIndentedString(fecElectionYear)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    lineNumberLabel: ").append(toIndentedString(lineNumberLabel)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    loadDate: ").append(toIndentedString(loadDate)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoCodeFull: ").append(toIndentedString(memoCodeFull)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    memoedSubtotal: ").append(toIndentedString(memoedSubtotal)).append("\n");
    sb.append("    nationalCommitteeNonfederalAccount: ").append(toIndentedString(nationalCommitteeNonfederalAccount)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    payeeEmployer: ").append(toIndentedString(payeeEmployer)).append("\n");
    sb.append("    payeeFirstName: ").append(toIndentedString(payeeFirstName)).append("\n");
    sb.append("    payeeLastName: ").append(toIndentedString(payeeLastName)).append("\n");
    sb.append("    payeeMiddleName: ").append(toIndentedString(payeeMiddleName)).append("\n");
    sb.append("    payeeOccupation: ").append(toIndentedString(payeeOccupation)).append("\n");
    sb.append("    payeePrefix: ").append(toIndentedString(payeePrefix)).append("\n");
    sb.append("    payeeSuffix: ").append(toIndentedString(payeeSuffix)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    recipientCity: ").append(toIndentedString(recipientCity)).append("\n");
    sb.append("    recipientCommittee: ").append(toIndentedString(recipientCommittee)).append("\n");
    sb.append("    recipientCommitteeId: ").append(toIndentedString(recipientCommitteeId)).append("\n");
    sb.append("    recipientName: ").append(toIndentedString(recipientName)).append("\n");
    sb.append("    recipientState: ").append(toIndentedString(recipientState)).append("\n");
    sb.append("    recipientZip: ").append(toIndentedString(recipientZip)).append("\n");
    sb.append("    refDispExcessFlg: ").append(toIndentedString(refDispExcessFlg)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    semiAnnualBundledRefund: ").append(toIndentedString(semiAnnualBundledRefund)).append("\n");
    sb.append("    spenderCommitteeDesignation: ").append(toIndentedString(spenderCommitteeDesignation)).append("\n");
    sb.append("    spenderCommitteeOrgType: ").append(toIndentedString(spenderCommitteeOrgType)).append("\n");
    sb.append("    spenderCommitteeType: ").append(toIndentedString(spenderCommitteeType)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    twoYearTransactionPeriod: ").append(toIndentedString(twoYearTransactionPeriod)).append("\n");
    sb.append("    unusedRecipientCommitteeId: ").append(toIndentedString(unusedRecipientCommitteeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendment_indicator");
    openapiFields.add("amendment_indicator_desc");
    openapiFields.add("back_reference_schedule_id");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("beneficiary_committee_name");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_description");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_office_state_full");
    openapiFields.add("candidate_prefix");
    openapiFields.add("candidate_suffix");
    openapiFields.add("category_code");
    openapiFields.add("category_code_full");
    openapiFields.add("comm_dt");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("disbursement_amount");
    openapiFields.add("disbursement_date");
    openapiFields.add("disbursement_description");
    openapiFields.add("disbursement_purpose_category");
    openapiFields.add("disbursement_type");
    openapiFields.add("disbursement_type_description");
    openapiFields.add("election_type");
    openapiFields.add("election_type_full");
    openapiFields.add("entity_type");
    openapiFields.add("entity_type_desc");
    openapiFields.add("fec_election_type_desc");
    openapiFields.add("fec_election_year");
    openapiFields.add("file_number");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("line_number");
    openapiFields.add("line_number_label");
    openapiFields.add("link_id");
    openapiFields.add("load_date");
    openapiFields.add("memo_code");
    openapiFields.add("memo_code_full");
    openapiFields.add("memo_text");
    openapiFields.add("memoed_subtotal");
    openapiFields.add("national_committee_nonfederal_account");
    openapiFields.add("original_sub_id");
    openapiFields.add("payee_employer");
    openapiFields.add("payee_first_name");
    openapiFields.add("payee_last_name");
    openapiFields.add("payee_middle_name");
    openapiFields.add("payee_occupation");
    openapiFields.add("payee_prefix");
    openapiFields.add("payee_suffix");
    openapiFields.add("pdf_url");
    openapiFields.add("recipient_city");
    openapiFields.add("recipient_committee");
    openapiFields.add("recipient_committee_id");
    openapiFields.add("recipient_name");
    openapiFields.add("recipient_state");
    openapiFields.add("recipient_zip");
    openapiFields.add("ref_disp_excess_flg");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("semi_annual_bundled_refund");
    openapiFields.add("spender_committee_designation");
    openapiFields.add("spender_committee_org_type");
    openapiFields.add("spender_committee_type");
    openapiFields.add("sub_id");
    openapiFields.add("transaction_id");
    openapiFields.add("two_year_transaction_period");
    openapiFields.add("unused_recipient_committee_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleB
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleB.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleB is not found in the empty JSON string", ScheduleB.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleB.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleB` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("amendment_indicator_desc") != null && !jsonObj.get("amendment_indicator_desc").isJsonNull()) && !jsonObj.get("amendment_indicator_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator_desc").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_id") != null && !jsonObj.get("back_reference_schedule_id").isJsonNull()) && !jsonObj.get("back_reference_schedule_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_id").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("beneficiary_committee_name") != null && !jsonObj.get("beneficiary_committee_name").isJsonNull()) && !jsonObj.get("beneficiary_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beneficiary_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beneficiary_committee_name").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_description") != null && !jsonObj.get("candidate_office_description").isJsonNull()) && !jsonObj.get("candidate_office_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_description").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_office_state_full") != null && !jsonObj.get("candidate_office_state_full").isJsonNull()) && !jsonObj.get("candidate_office_state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state_full").toString()));
      }
      if ((jsonObj.get("candidate_prefix") != null && !jsonObj.get("candidate_prefix").isJsonNull()) && !jsonObj.get("candidate_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_prefix").toString()));
      }
      if ((jsonObj.get("candidate_suffix") != null && !jsonObj.get("candidate_suffix").isJsonNull()) && !jsonObj.get("candidate_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_suffix").toString()));
      }
      if ((jsonObj.get("category_code") != null && !jsonObj.get("category_code").isJsonNull()) && !jsonObj.get("category_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code").toString()));
      }
      if ((jsonObj.get("category_code_full") != null && !jsonObj.get("category_code_full").isJsonNull()) && !jsonObj.get("category_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code_full").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      if ((jsonObj.get("disbursement_description") != null && !jsonObj.get("disbursement_description").isJsonNull()) && !jsonObj.get("disbursement_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_description").toString()));
      }
      if ((jsonObj.get("disbursement_purpose_category") != null && !jsonObj.get("disbursement_purpose_category").isJsonNull()) && !jsonObj.get("disbursement_purpose_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_purpose_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_purpose_category").toString()));
      }
      if ((jsonObj.get("disbursement_type") != null && !jsonObj.get("disbursement_type").isJsonNull()) && !jsonObj.get("disbursement_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_type").toString()));
      }
      if ((jsonObj.get("disbursement_type_description") != null && !jsonObj.get("disbursement_type_description").isJsonNull()) && !jsonObj.get("disbursement_type_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_type_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_type_description").toString()));
      }
      if ((jsonObj.get("election_type") != null && !jsonObj.get("election_type").isJsonNull()) && !jsonObj.get("election_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type").toString()));
      }
      if ((jsonObj.get("election_type_full") != null && !jsonObj.get("election_type_full").isJsonNull()) && !jsonObj.get("election_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type_full").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("entity_type_desc") != null && !jsonObj.get("entity_type_desc").isJsonNull()) && !jsonObj.get("entity_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type_desc").toString()));
      }
      if ((jsonObj.get("fec_election_type_desc") != null && !jsonObj.get("fec_election_type_desc").isJsonNull()) && !jsonObj.get("fec_election_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_type_desc").toString()));
      }
      if ((jsonObj.get("fec_election_year") != null && !jsonObj.get("fec_election_year").isJsonNull()) && !jsonObj.get("fec_election_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_year").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("line_number_label") != null && !jsonObj.get("line_number_label").isJsonNull()) && !jsonObj.get("line_number_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number_label").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_code_full") != null && !jsonObj.get("memo_code_full").isJsonNull()) && !jsonObj.get("memo_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code_full").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("national_committee_nonfederal_account") != null && !jsonObj.get("national_committee_nonfederal_account").isJsonNull()) && !jsonObj.get("national_committee_nonfederal_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `national_committee_nonfederal_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("national_committee_nonfederal_account").toString()));
      }
      if ((jsonObj.get("original_sub_id") != null && !jsonObj.get("original_sub_id").isJsonNull()) && !jsonObj.get("original_sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_sub_id").toString()));
      }
      if ((jsonObj.get("payee_employer") != null && !jsonObj.get("payee_employer").isJsonNull()) && !jsonObj.get("payee_employer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_employer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_employer").toString()));
      }
      if ((jsonObj.get("payee_first_name") != null && !jsonObj.get("payee_first_name").isJsonNull()) && !jsonObj.get("payee_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_first_name").toString()));
      }
      if ((jsonObj.get("payee_last_name") != null && !jsonObj.get("payee_last_name").isJsonNull()) && !jsonObj.get("payee_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_last_name").toString()));
      }
      if ((jsonObj.get("payee_middle_name") != null && !jsonObj.get("payee_middle_name").isJsonNull()) && !jsonObj.get("payee_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_middle_name").toString()));
      }
      if ((jsonObj.get("payee_occupation") != null && !jsonObj.get("payee_occupation").isJsonNull()) && !jsonObj.get("payee_occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_occupation").toString()));
      }
      if ((jsonObj.get("payee_prefix") != null && !jsonObj.get("payee_prefix").isJsonNull()) && !jsonObj.get("payee_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_prefix").toString()));
      }
      if ((jsonObj.get("payee_suffix") != null && !jsonObj.get("payee_suffix").isJsonNull()) && !jsonObj.get("payee_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_suffix").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("recipient_city") != null && !jsonObj.get("recipient_city").isJsonNull()) && !jsonObj.get("recipient_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_city").toString()));
      }
      // validate the optional field `recipient_committee`
      if (jsonObj.get("recipient_committee") != null && !jsonObj.get("recipient_committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("recipient_committee"));
      }
      if ((jsonObj.get("recipient_committee_id") != null && !jsonObj.get("recipient_committee_id").isJsonNull()) && !jsonObj.get("recipient_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_committee_id").toString()));
      }
      if ((jsonObj.get("recipient_name") != null && !jsonObj.get("recipient_name").isJsonNull()) && !jsonObj.get("recipient_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_name").toString()));
      }
      if ((jsonObj.get("recipient_state") != null && !jsonObj.get("recipient_state").isJsonNull()) && !jsonObj.get("recipient_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_state").toString()));
      }
      if ((jsonObj.get("recipient_zip") != null && !jsonObj.get("recipient_zip").isJsonNull()) && !jsonObj.get("recipient_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_zip").toString()));
      }
      if ((jsonObj.get("ref_disp_excess_flg") != null && !jsonObj.get("ref_disp_excess_flg").isJsonNull()) && !jsonObj.get("ref_disp_excess_flg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_disp_excess_flg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_disp_excess_flg").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("spender_committee_designation") != null && !jsonObj.get("spender_committee_designation").isJsonNull()) && !jsonObj.get("spender_committee_designation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spender_committee_designation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spender_committee_designation").toString()));
      }
      if ((jsonObj.get("spender_committee_org_type") != null && !jsonObj.get("spender_committee_org_type").isJsonNull()) && !jsonObj.get("spender_committee_org_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spender_committee_org_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spender_committee_org_type").toString()));
      }
      if ((jsonObj.get("spender_committee_type") != null && !jsonObj.get("spender_committee_type").isJsonNull()) && !jsonObj.get("spender_committee_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spender_committee_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spender_committee_type").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
      if ((jsonObj.get("unused_recipient_committee_id") != null && !jsonObj.get("unused_recipient_committee_id").isJsonNull()) && !jsonObj.get("unused_recipient_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unused_recipient_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unused_recipient_committee_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleB.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleB' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleB> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleB.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleB>() {
           @Override
           public void write(JsonWriter out, ScheduleB value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleB read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleB given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleB
   * @throws IOException if the JSON string is invalid with respect to ScheduleB
   */
  public static ScheduleB fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleB.class);
  }

  /**
   * Convert an instance of ScheduleB to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

