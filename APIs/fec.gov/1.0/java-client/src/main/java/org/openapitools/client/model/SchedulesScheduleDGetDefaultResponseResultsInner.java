/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SchedulesScheduleDGetDefaultResponseResultsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SchedulesScheduleDGetDefaultResponseResultsInner {
  public static final String SERIALIZED_NAME_ACTION_CODE = "action_code";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE)
  private String actionCode;

  public static final String SERIALIZED_NAME_ACTION_CODE_FULL = "action_code_full";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE_FULL)
  private String actionCodeFull;

  public static final String SERIALIZED_NAME_AMOUNT_INCURRED_PERIOD = "amount_incurred_period";
  @SerializedName(SERIALIZED_NAME_AMOUNT_INCURRED_PERIOD)
  private Float amountIncurredPeriod;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL = "candidate_office_state_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL)
  private String candidateOfficeStateFull;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_COMMITTEE_NAME = "committee_name";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_NAME)
  private String committeeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ID = "conduit_committee_id";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ID)
  private String conduitCommitteeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_CITY = "creditor_debtor_city";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_CITY)
  private String creditorDebtorCity;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_FIRST_NAME = "creditor_debtor_first_name";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_FIRST_NAME)
  private String creditorDebtorFirstName;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_ID = "creditor_debtor_id";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_ID)
  private String creditorDebtorId;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_LAST_NAME = "creditor_debtor_last_name";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_LAST_NAME)
  private String creditorDebtorLastName;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_MIDDLE_NAME = "creditor_debtor_middle_name";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_MIDDLE_NAME)
  private String creditorDebtorMiddleName;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_NAME = "creditor_debtor_name";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_NAME)
  private String creditorDebtorName;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_PREFIX = "creditor_debtor_prefix";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_PREFIX)
  private String creditorDebtorPrefix;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_STATE = "creditor_debtor_state";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_STATE)
  private String creditorDebtorState;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_STREET1 = "creditor_debtor_street1";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_STREET1)
  private String creditorDebtorStreet1;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_STREET2 = "creditor_debtor_street2";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_STREET2)
  private String creditorDebtorStreet2;

  public static final String SERIALIZED_NAME_CREDITOR_DEBTOR_SUFFIX = "creditor_debtor_suffix";
  @SerializedName(SERIALIZED_NAME_CREDITOR_DEBTOR_SUFFIX)
  private String creditorDebtorSuffix;

  public static final String SERIALIZED_NAME_ELECTION_CYCLE = "election_cycle";
  @SerializedName(SERIALIZED_NAME_ELECTION_CYCLE)
  private Integer electionCycle;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_LOAD_DATE = "load_date";
  @SerializedName(SERIALIZED_NAME_LOAD_DATE)
  private LocalDate loadDate;

  public static final String SERIALIZED_NAME_NATURE_OF_DEBT = "nature_of_debt";
  @SerializedName(SERIALIZED_NAME_NATURE_OF_DEBT)
  private String natureOfDebt;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private Integer originalSubId;

  public static final String SERIALIZED_NAME_OUTSTANDING_BALANCE_BEGINNING_OF_PERIOD = "outstanding_balance_beginning_of_period";
  @SerializedName(SERIALIZED_NAME_OUTSTANDING_BALANCE_BEGINNING_OF_PERIOD)
  private Float outstandingBalanceBeginningOfPeriod;

  public static final String SERIALIZED_NAME_OUTSTANDING_BALANCE_CLOSE_OF_PERIOD = "outstanding_balance_close_of_period";
  @SerializedName(SERIALIZED_NAME_OUTSTANDING_BALANCE_CLOSE_OF_PERIOD)
  private Float outstandingBalanceCloseOfPeriod;

  public static final String SERIALIZED_NAME_PAYMENT_PERIOD = "payment_period";
  @SerializedName(SERIALIZED_NAME_PAYMENT_PERIOD)
  private Float paymentPeriod;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public SchedulesScheduleDGetDefaultResponseResultsInner() {
  }

  public SchedulesScheduleDGetDefaultResponseResultsInner actionCode(String actionCode) {
    this.actionCode = actionCode;
    return this;
  }

  /**
   * Get actionCode
   * @return actionCode
   */
  @javax.annotation.Nullable
  public String getActionCode() {
    return actionCode;
  }

  public void setActionCode(String actionCode) {
    this.actionCode = actionCode;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner actionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
    return this;
  }

  /**
   * Get actionCodeFull
   * @return actionCodeFull
   */
  @javax.annotation.Nullable
  public String getActionCodeFull() {
    return actionCodeFull;
  }

  public void setActionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner amountIncurredPeriod(Float amountIncurredPeriod) {
    this.amountIncurredPeriod = amountIncurredPeriod;
    return this;
  }

  /**
   * Get amountIncurredPeriod
   * @return amountIncurredPeriod
   */
  @javax.annotation.Nullable
  public Float getAmountIncurredPeriod() {
    return amountIncurredPeriod;
  }

  public void setAmountIncurredPeriod(Float amountIncurredPeriod) {
    this.amountIncurredPeriod = amountIncurredPeriod;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   *  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence. 
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Get candidateOfficeDistrict
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner candidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
    return this;
  }

  /**
   * Get candidateOfficeStateFull
   * @return candidateOfficeStateFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeStateFull() {
    return candidateOfficeStateFull;
  }

  public void setCandidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner committeeName(String committeeName) {
    this.committeeName = committeeName;
    return this;
  }

  /**
   * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
   * @return committeeName
   */
  @javax.annotation.Nullable
  public String getCommitteeName() {
    return committeeName;
  }

  public void setCommitteeName(String committeeName) {
    this.committeeName = committeeName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
    return this;
  }

  /**
   * Get conduitCommitteeId
   * @return conduitCommitteeId
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeId() {
    return conduitCommitteeId;
  }

  public void setConduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorCity(String creditorDebtorCity) {
    this.creditorDebtorCity = creditorDebtorCity;
    return this;
  }

  /**
   * Get creditorDebtorCity
   * @return creditorDebtorCity
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorCity() {
    return creditorDebtorCity;
  }

  public void setCreditorDebtorCity(String creditorDebtorCity) {
    this.creditorDebtorCity = creditorDebtorCity;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorFirstName(String creditorDebtorFirstName) {
    this.creditorDebtorFirstName = creditorDebtorFirstName;
    return this;
  }

  /**
   * Get creditorDebtorFirstName
   * @return creditorDebtorFirstName
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorFirstName() {
    return creditorDebtorFirstName;
  }

  public void setCreditorDebtorFirstName(String creditorDebtorFirstName) {
    this.creditorDebtorFirstName = creditorDebtorFirstName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorId(String creditorDebtorId) {
    this.creditorDebtorId = creditorDebtorId;
    return this;
  }

  /**
   * Get creditorDebtorId
   * @return creditorDebtorId
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorId() {
    return creditorDebtorId;
  }

  public void setCreditorDebtorId(String creditorDebtorId) {
    this.creditorDebtorId = creditorDebtorId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorLastName(String creditorDebtorLastName) {
    this.creditorDebtorLastName = creditorDebtorLastName;
    return this;
  }

  /**
   * Get creditorDebtorLastName
   * @return creditorDebtorLastName
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorLastName() {
    return creditorDebtorLastName;
  }

  public void setCreditorDebtorLastName(String creditorDebtorLastName) {
    this.creditorDebtorLastName = creditorDebtorLastName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorMiddleName(String creditorDebtorMiddleName) {
    this.creditorDebtorMiddleName = creditorDebtorMiddleName;
    return this;
  }

  /**
   * Get creditorDebtorMiddleName
   * @return creditorDebtorMiddleName
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorMiddleName() {
    return creditorDebtorMiddleName;
  }

  public void setCreditorDebtorMiddleName(String creditorDebtorMiddleName) {
    this.creditorDebtorMiddleName = creditorDebtorMiddleName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorName(String creditorDebtorName) {
    this.creditorDebtorName = creditorDebtorName;
    return this;
  }

  /**
   * Get creditorDebtorName
   * @return creditorDebtorName
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorName() {
    return creditorDebtorName;
  }

  public void setCreditorDebtorName(String creditorDebtorName) {
    this.creditorDebtorName = creditorDebtorName;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorPrefix(String creditorDebtorPrefix) {
    this.creditorDebtorPrefix = creditorDebtorPrefix;
    return this;
  }

  /**
   * Get creditorDebtorPrefix
   * @return creditorDebtorPrefix
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorPrefix() {
    return creditorDebtorPrefix;
  }

  public void setCreditorDebtorPrefix(String creditorDebtorPrefix) {
    this.creditorDebtorPrefix = creditorDebtorPrefix;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorState(String creditorDebtorState) {
    this.creditorDebtorState = creditorDebtorState;
    return this;
  }

  /**
   * Get creditorDebtorState
   * @return creditorDebtorState
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorState() {
    return creditorDebtorState;
  }

  public void setCreditorDebtorState(String creditorDebtorState) {
    this.creditorDebtorState = creditorDebtorState;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorStreet1(String creditorDebtorStreet1) {
    this.creditorDebtorStreet1 = creditorDebtorStreet1;
    return this;
  }

  /**
   * Get creditorDebtorStreet1
   * @return creditorDebtorStreet1
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorStreet1() {
    return creditorDebtorStreet1;
  }

  public void setCreditorDebtorStreet1(String creditorDebtorStreet1) {
    this.creditorDebtorStreet1 = creditorDebtorStreet1;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorStreet2(String creditorDebtorStreet2) {
    this.creditorDebtorStreet2 = creditorDebtorStreet2;
    return this;
  }

  /**
   * Get creditorDebtorStreet2
   * @return creditorDebtorStreet2
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorStreet2() {
    return creditorDebtorStreet2;
  }

  public void setCreditorDebtorStreet2(String creditorDebtorStreet2) {
    this.creditorDebtorStreet2 = creditorDebtorStreet2;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner creditorDebtorSuffix(String creditorDebtorSuffix) {
    this.creditorDebtorSuffix = creditorDebtorSuffix;
    return this;
  }

  /**
   * Get creditorDebtorSuffix
   * @return creditorDebtorSuffix
   */
  @javax.annotation.Nullable
  public String getCreditorDebtorSuffix() {
    return creditorDebtorSuffix;
  }

  public void setCreditorDebtorSuffix(String creditorDebtorSuffix) {
    this.creditorDebtorSuffix = creditorDebtorSuffix;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner electionCycle(Integer electionCycle) {
    this.electionCycle = electionCycle;
    return this;
  }

  /**
   * Get electionCycle
   * @return electionCycle
   */
  @javax.annotation.Nullable
  public Integer getElectionCycle() {
    return electionCycle;
  }

  public void setElectionCycle(Integer electionCycle) {
    this.electionCycle = electionCycle;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   *  An unique identifier for each page where the electronic or paper filing is reported. 
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner loadDate(LocalDate loadDate) {
    this.loadDate = loadDate;
    return this;
  }

  /**
   * Get loadDate
   * @return loadDate
   */
  @javax.annotation.Nullable
  public LocalDate getLoadDate() {
    return loadDate;
  }

  public void setLoadDate(LocalDate loadDate) {
    this.loadDate = loadDate;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner natureOfDebt(String natureOfDebt) {
    this.natureOfDebt = natureOfDebt;
    return this;
  }

  /**
   * Get natureOfDebt
   * @return natureOfDebt
   */
  @javax.annotation.Nullable
  public String getNatureOfDebt() {
    return natureOfDebt;
  }

  public void setNatureOfDebt(String natureOfDebt) {
    this.natureOfDebt = natureOfDebt;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner originalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public Integer getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner outstandingBalanceBeginningOfPeriod(Float outstandingBalanceBeginningOfPeriod) {
    this.outstandingBalanceBeginningOfPeriod = outstandingBalanceBeginningOfPeriod;
    return this;
  }

  /**
   * Get outstandingBalanceBeginningOfPeriod
   * @return outstandingBalanceBeginningOfPeriod
   */
  @javax.annotation.Nullable
  public Float getOutstandingBalanceBeginningOfPeriod() {
    return outstandingBalanceBeginningOfPeriod;
  }

  public void setOutstandingBalanceBeginningOfPeriod(Float outstandingBalanceBeginningOfPeriod) {
    this.outstandingBalanceBeginningOfPeriod = outstandingBalanceBeginningOfPeriod;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner outstandingBalanceCloseOfPeriod(Float outstandingBalanceCloseOfPeriod) {
    this.outstandingBalanceCloseOfPeriod = outstandingBalanceCloseOfPeriod;
    return this;
  }

  /**
   * Get outstandingBalanceCloseOfPeriod
   * @return outstandingBalanceCloseOfPeriod
   */
  @javax.annotation.Nullable
  public Float getOutstandingBalanceCloseOfPeriod() {
    return outstandingBalanceCloseOfPeriod;
  }

  public void setOutstandingBalanceCloseOfPeriod(Float outstandingBalanceCloseOfPeriod) {
    this.outstandingBalanceCloseOfPeriod = outstandingBalanceCloseOfPeriod;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner paymentPeriod(Float paymentPeriod) {
    this.paymentPeriod = paymentPeriod;
    return this;
  }

  /**
   * Get paymentPeriod
   * @return paymentPeriod
   */
  @javax.annotation.Nullable
  public Float getPaymentPeriod() {
    return paymentPeriod;
  }

  public void setPaymentPeriod(Float paymentPeriod) {
    this.paymentPeriod = paymentPeriod;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public SchedulesScheduleDGetDefaultResponseResultsInner transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedulesScheduleDGetDefaultResponseResultsInner schedulesScheduleDGetDefaultResponseResultsInner = (SchedulesScheduleDGetDefaultResponseResultsInner) o;
    return Objects.equals(this.actionCode, schedulesScheduleDGetDefaultResponseResultsInner.actionCode) &&
        Objects.equals(this.actionCodeFull, schedulesScheduleDGetDefaultResponseResultsInner.actionCodeFull) &&
        Objects.equals(this.amountIncurredPeriod, schedulesScheduleDGetDefaultResponseResultsInner.amountIncurredPeriod) &&
        Objects.equals(this.candidateFirstName, schedulesScheduleDGetDefaultResponseResultsInner.candidateFirstName) &&
        Objects.equals(this.candidateId, schedulesScheduleDGetDefaultResponseResultsInner.candidateId) &&
        Objects.equals(this.candidateLastName, schedulesScheduleDGetDefaultResponseResultsInner.candidateLastName) &&
        Objects.equals(this.candidateName, schedulesScheduleDGetDefaultResponseResultsInner.candidateName) &&
        Objects.equals(this.candidateOffice, schedulesScheduleDGetDefaultResponseResultsInner.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, schedulesScheduleDGetDefaultResponseResultsInner.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeState, schedulesScheduleDGetDefaultResponseResultsInner.candidateOfficeState) &&
        Objects.equals(this.candidateOfficeStateFull, schedulesScheduleDGetDefaultResponseResultsInner.candidateOfficeStateFull) &&
        Objects.equals(this.committee, schedulesScheduleDGetDefaultResponseResultsInner.committee) &&
        Objects.equals(this.committeeId, schedulesScheduleDGetDefaultResponseResultsInner.committeeId) &&
        Objects.equals(this.committeeName, schedulesScheduleDGetDefaultResponseResultsInner.committeeName) &&
        Objects.equals(this.conduitCommitteeCity, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeId, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeId) &&
        Objects.equals(this.conduitCommitteeName, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, schedulesScheduleDGetDefaultResponseResultsInner.conduitCommitteeZip) &&
        Objects.equals(this.creditorDebtorCity, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorCity) &&
        Objects.equals(this.creditorDebtorFirstName, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorFirstName) &&
        Objects.equals(this.creditorDebtorId, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorId) &&
        Objects.equals(this.creditorDebtorLastName, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorLastName) &&
        Objects.equals(this.creditorDebtorMiddleName, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorMiddleName) &&
        Objects.equals(this.creditorDebtorName, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorName) &&
        Objects.equals(this.creditorDebtorPrefix, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorPrefix) &&
        Objects.equals(this.creditorDebtorState, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorState) &&
        Objects.equals(this.creditorDebtorStreet1, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorStreet1) &&
        Objects.equals(this.creditorDebtorStreet2, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorStreet2) &&
        Objects.equals(this.creditorDebtorSuffix, schedulesScheduleDGetDefaultResponseResultsInner.creditorDebtorSuffix) &&
        Objects.equals(this.electionCycle, schedulesScheduleDGetDefaultResponseResultsInner.electionCycle) &&
        Objects.equals(this.entityType, schedulesScheduleDGetDefaultResponseResultsInner.entityType) &&
        Objects.equals(this.fileNumber, schedulesScheduleDGetDefaultResponseResultsInner.fileNumber) &&
        Objects.equals(this.filingForm, schedulesScheduleDGetDefaultResponseResultsInner.filingForm) &&
        Objects.equals(this.imageNumber, schedulesScheduleDGetDefaultResponseResultsInner.imageNumber) &&
        Objects.equals(this.lineNumber, schedulesScheduleDGetDefaultResponseResultsInner.lineNumber) &&
        Objects.equals(this.linkId, schedulesScheduleDGetDefaultResponseResultsInner.linkId) &&
        Objects.equals(this.loadDate, schedulesScheduleDGetDefaultResponseResultsInner.loadDate) &&
        Objects.equals(this.natureOfDebt, schedulesScheduleDGetDefaultResponseResultsInner.natureOfDebt) &&
        Objects.equals(this.originalSubId, schedulesScheduleDGetDefaultResponseResultsInner.originalSubId) &&
        Objects.equals(this.outstandingBalanceBeginningOfPeriod, schedulesScheduleDGetDefaultResponseResultsInner.outstandingBalanceBeginningOfPeriod) &&
        Objects.equals(this.outstandingBalanceCloseOfPeriod, schedulesScheduleDGetDefaultResponseResultsInner.outstandingBalanceCloseOfPeriod) &&
        Objects.equals(this.paymentPeriod, schedulesScheduleDGetDefaultResponseResultsInner.paymentPeriod) &&
        Objects.equals(this.pdfUrl, schedulesScheduleDGetDefaultResponseResultsInner.pdfUrl) &&
        Objects.equals(this.reportType, schedulesScheduleDGetDefaultResponseResultsInner.reportType) &&
        Objects.equals(this.reportYear, schedulesScheduleDGetDefaultResponseResultsInner.reportYear) &&
        Objects.equals(this.scheduleType, schedulesScheduleDGetDefaultResponseResultsInner.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, schedulesScheduleDGetDefaultResponseResultsInner.scheduleTypeFull) &&
        Objects.equals(this.subId, schedulesScheduleDGetDefaultResponseResultsInner.subId) &&
        Objects.equals(this.transactionId, schedulesScheduleDGetDefaultResponseResultsInner.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionCode, actionCodeFull, amountIncurredPeriod, candidateFirstName, candidateId, candidateLastName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeState, candidateOfficeStateFull, committee, committeeId, committeeName, conduitCommitteeCity, conduitCommitteeId, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, creditorDebtorCity, creditorDebtorFirstName, creditorDebtorId, creditorDebtorLastName, creditorDebtorMiddleName, creditorDebtorName, creditorDebtorPrefix, creditorDebtorState, creditorDebtorStreet1, creditorDebtorStreet2, creditorDebtorSuffix, electionCycle, entityType, fileNumber, filingForm, imageNumber, lineNumber, linkId, loadDate, natureOfDebt, originalSubId, outstandingBalanceBeginningOfPeriod, outstandingBalanceCloseOfPeriod, paymentPeriod, pdfUrl, reportType, reportYear, scheduleType, scheduleTypeFull, subId, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedulesScheduleDGetDefaultResponseResultsInner {\n");
    sb.append("    actionCode: ").append(toIndentedString(actionCode)).append("\n");
    sb.append("    actionCodeFull: ").append(toIndentedString(actionCodeFull)).append("\n");
    sb.append("    amountIncurredPeriod: ").append(toIndentedString(amountIncurredPeriod)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateOfficeStateFull: ").append(toIndentedString(candidateOfficeStateFull)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    committeeName: ").append(toIndentedString(committeeName)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeId: ").append(toIndentedString(conduitCommitteeId)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    creditorDebtorCity: ").append(toIndentedString(creditorDebtorCity)).append("\n");
    sb.append("    creditorDebtorFirstName: ").append(toIndentedString(creditorDebtorFirstName)).append("\n");
    sb.append("    creditorDebtorId: ").append(toIndentedString(creditorDebtorId)).append("\n");
    sb.append("    creditorDebtorLastName: ").append(toIndentedString(creditorDebtorLastName)).append("\n");
    sb.append("    creditorDebtorMiddleName: ").append(toIndentedString(creditorDebtorMiddleName)).append("\n");
    sb.append("    creditorDebtorName: ").append(toIndentedString(creditorDebtorName)).append("\n");
    sb.append("    creditorDebtorPrefix: ").append(toIndentedString(creditorDebtorPrefix)).append("\n");
    sb.append("    creditorDebtorState: ").append(toIndentedString(creditorDebtorState)).append("\n");
    sb.append("    creditorDebtorStreet1: ").append(toIndentedString(creditorDebtorStreet1)).append("\n");
    sb.append("    creditorDebtorStreet2: ").append(toIndentedString(creditorDebtorStreet2)).append("\n");
    sb.append("    creditorDebtorSuffix: ").append(toIndentedString(creditorDebtorSuffix)).append("\n");
    sb.append("    electionCycle: ").append(toIndentedString(electionCycle)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    loadDate: ").append(toIndentedString(loadDate)).append("\n");
    sb.append("    natureOfDebt: ").append(toIndentedString(natureOfDebt)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    outstandingBalanceBeginningOfPeriod: ").append(toIndentedString(outstandingBalanceBeginningOfPeriod)).append("\n");
    sb.append("    outstandingBalanceCloseOfPeriod: ").append(toIndentedString(outstandingBalanceCloseOfPeriod)).append("\n");
    sb.append("    paymentPeriod: ").append(toIndentedString(paymentPeriod)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action_code");
    openapiFields.add("action_code_full");
    openapiFields.add("amount_incurred_period");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_office_state_full");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("committee_name");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_id");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("creditor_debtor_city");
    openapiFields.add("creditor_debtor_first_name");
    openapiFields.add("creditor_debtor_id");
    openapiFields.add("creditor_debtor_last_name");
    openapiFields.add("creditor_debtor_middle_name");
    openapiFields.add("creditor_debtor_name");
    openapiFields.add("creditor_debtor_prefix");
    openapiFields.add("creditor_debtor_state");
    openapiFields.add("creditor_debtor_street1");
    openapiFields.add("creditor_debtor_street2");
    openapiFields.add("creditor_debtor_suffix");
    openapiFields.add("election_cycle");
    openapiFields.add("entity_type");
    openapiFields.add("file_number");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("line_number");
    openapiFields.add("link_id");
    openapiFields.add("load_date");
    openapiFields.add("nature_of_debt");
    openapiFields.add("original_sub_id");
    openapiFields.add("outstanding_balance_beginning_of_period");
    openapiFields.add("outstanding_balance_close_of_period");
    openapiFields.add("payment_period");
    openapiFields.add("pdf_url");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("sub_id");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SchedulesScheduleDGetDefaultResponseResultsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SchedulesScheduleDGetDefaultResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SchedulesScheduleDGetDefaultResponseResultsInner is not found in the empty JSON string", SchedulesScheduleDGetDefaultResponseResultsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SchedulesScheduleDGetDefaultResponseResultsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SchedulesScheduleDGetDefaultResponseResultsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action_code") != null && !jsonObj.get("action_code").isJsonNull()) && !jsonObj.get("action_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code").toString()));
      }
      if ((jsonObj.get("action_code_full") != null && !jsonObj.get("action_code_full").isJsonNull()) && !jsonObj.get("action_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code_full").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_office_state_full") != null && !jsonObj.get("candidate_office_state_full").isJsonNull()) && !jsonObj.get("candidate_office_state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state_full").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("committee_name") != null && !jsonObj.get("committee_name").isJsonNull()) && !jsonObj.get("committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_id") != null && !jsonObj.get("conduit_committee_id").isJsonNull()) && !jsonObj.get("conduit_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      if ((jsonObj.get("creditor_debtor_city") != null && !jsonObj.get("creditor_debtor_city").isJsonNull()) && !jsonObj.get("creditor_debtor_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_city").toString()));
      }
      if ((jsonObj.get("creditor_debtor_first_name") != null && !jsonObj.get("creditor_debtor_first_name").isJsonNull()) && !jsonObj.get("creditor_debtor_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_first_name").toString()));
      }
      if ((jsonObj.get("creditor_debtor_id") != null && !jsonObj.get("creditor_debtor_id").isJsonNull()) && !jsonObj.get("creditor_debtor_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_id").toString()));
      }
      if ((jsonObj.get("creditor_debtor_last_name") != null && !jsonObj.get("creditor_debtor_last_name").isJsonNull()) && !jsonObj.get("creditor_debtor_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_last_name").toString()));
      }
      if ((jsonObj.get("creditor_debtor_middle_name") != null && !jsonObj.get("creditor_debtor_middle_name").isJsonNull()) && !jsonObj.get("creditor_debtor_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_middle_name").toString()));
      }
      if ((jsonObj.get("creditor_debtor_name") != null && !jsonObj.get("creditor_debtor_name").isJsonNull()) && !jsonObj.get("creditor_debtor_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_name").toString()));
      }
      if ((jsonObj.get("creditor_debtor_prefix") != null && !jsonObj.get("creditor_debtor_prefix").isJsonNull()) && !jsonObj.get("creditor_debtor_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_prefix").toString()));
      }
      if ((jsonObj.get("creditor_debtor_state") != null && !jsonObj.get("creditor_debtor_state").isJsonNull()) && !jsonObj.get("creditor_debtor_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_state").toString()));
      }
      if ((jsonObj.get("creditor_debtor_street1") != null && !jsonObj.get("creditor_debtor_street1").isJsonNull()) && !jsonObj.get("creditor_debtor_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_street1").toString()));
      }
      if ((jsonObj.get("creditor_debtor_street2") != null && !jsonObj.get("creditor_debtor_street2").isJsonNull()) && !jsonObj.get("creditor_debtor_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_street2").toString()));
      }
      if ((jsonObj.get("creditor_debtor_suffix") != null && !jsonObj.get("creditor_debtor_suffix").isJsonNull()) && !jsonObj.get("creditor_debtor_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditor_debtor_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditor_debtor_suffix").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("nature_of_debt") != null && !jsonObj.get("nature_of_debt").isJsonNull()) && !jsonObj.get("nature_of_debt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nature_of_debt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nature_of_debt").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SchedulesScheduleDGetDefaultResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SchedulesScheduleDGetDefaultResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SchedulesScheduleDGetDefaultResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SchedulesScheduleDGetDefaultResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SchedulesScheduleDGetDefaultResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, SchedulesScheduleDGetDefaultResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SchedulesScheduleDGetDefaultResponseResultsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SchedulesScheduleDGetDefaultResponseResultsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SchedulesScheduleDGetDefaultResponseResultsInner
   * @throws IOException if the JSON string is invalid with respect to SchedulesScheduleDGetDefaultResponseResultsInner
   */
  public static SchedulesScheduleDGetDefaultResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SchedulesScheduleDGetDefaultResponseResultsInner.class);
  }

  /**
   * Convert an instance of SchedulesScheduleDGetDefaultResponseResultsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

