/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.FilingsPage;
import java.time.LocalDate;
import org.openapitools.client.model.OperationsLogPage;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FilingsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public FilingsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public FilingsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for candidateCandidateIdFilingsGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call candidateCandidateIdFilingsGetCall(String apiKey, String candidateId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/candidate/{candidate_id}/filings/"
            .replace("{" + "candidate_id" + "}", localVarApiClient.escapeString(candidateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (isAmended != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("is_amended", isAmended));
        }

        if (minReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_receipt_date", minReceiptDate));
        }

        if (formCategory != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_category", formCategory));
        }

        if (requestType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "request_type", requestType));
        }

        if (primaryGeneralIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "primary_general_indicator", primaryGeneralIndicator));
        }

        if (cycle != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "cycle", cycle));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (maxReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_receipt_date", maxReceiptDate));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (fileNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "file_number", fileNumber));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (office != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "office", office));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (qFiler != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "q_filer", qFiler));
        }

        if (district != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "district", district));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (filerType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filer_type", filerType));
        }

        if (mostRecent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("most_recent", mostRecent));
        }

        if (reportType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_type", reportType));
        }

        if (committeeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("committee_type", committeeType));
        }

        if (party != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "party", party));
        }

        if (formType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_type", formType));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (state != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "state", state));
        }

        if (reportYear != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_year", reportYear));
        }

        if (amendmentIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "amendment_indicator", amendmentIndicator));
        }

        if (documentType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "document_type", documentType));
        }

        if (beginningImageNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "beginning_image_number", beginningImageNumber));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call candidateCandidateIdFilingsGetValidateBeforeCall(String apiKey, String candidateId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling candidateCandidateIdFilingsGet(Async)");
        }

        // verify the required parameter 'candidateId' is set
        if (candidateId == null) {
            throw new ApiException("Missing the required parameter 'candidateId' when calling candidateCandidateIdFilingsGet(Async)");
        }

        return candidateCandidateIdFilingsGetCall(apiKey, candidateId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, _callback);

    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return FilingsPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public FilingsPage candidateCandidateIdFilingsGet(String apiKey, String candidateId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        ApiResponse<FilingsPage> localVarResp = candidateCandidateIdFilingsGetWithHttpInfo(apiKey, candidateId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber);
        return localVarResp.getData();
    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return ApiResponse&lt;FilingsPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<FilingsPage> candidateCandidateIdFilingsGetWithHttpInfo(String apiKey, String candidateId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        okhttp3.Call localVarCall = candidateCandidateIdFilingsGetValidateBeforeCall(apiKey, candidateId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, null);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call candidateCandidateIdFilingsGetAsync(String apiKey, String candidateId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback<FilingsPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = candidateCandidateIdFilingsGetValidateBeforeCall(apiKey, candidateId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, _callback);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for committeeCommitteeIdFilingsGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call committeeCommitteeIdFilingsGetCall(String apiKey, String committeeId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/committee/{committee_id}/filings/"
            .replace("{" + "committee_id" + "}", localVarApiClient.escapeString(committeeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (isAmended != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("is_amended", isAmended));
        }

        if (minReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_receipt_date", minReceiptDate));
        }

        if (formCategory != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_category", formCategory));
        }

        if (requestType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "request_type", requestType));
        }

        if (primaryGeneralIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "primary_general_indicator", primaryGeneralIndicator));
        }

        if (cycle != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "cycle", cycle));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (maxReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_receipt_date", maxReceiptDate));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (fileNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "file_number", fileNumber));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (office != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "office", office));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (qFiler != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "q_filer", qFiler));
        }

        if (district != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "district", district));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (filerType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filer_type", filerType));
        }

        if (mostRecent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("most_recent", mostRecent));
        }

        if (reportType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_type", reportType));
        }

        if (committeeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("committee_type", committeeType));
        }

        if (party != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "party", party));
        }

        if (formType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_type", formType));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (state != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "state", state));
        }

        if (reportYear != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_year", reportYear));
        }

        if (amendmentIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "amendment_indicator", amendmentIndicator));
        }

        if (documentType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "document_type", documentType));
        }

        if (beginningImageNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "beginning_image_number", beginningImageNumber));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call committeeCommitteeIdFilingsGetValidateBeforeCall(String apiKey, String committeeId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling committeeCommitteeIdFilingsGet(Async)");
        }

        // verify the required parameter 'committeeId' is set
        if (committeeId == null) {
            throw new ApiException("Missing the required parameter 'committeeId' when calling committeeCommitteeIdFilingsGet(Async)");
        }

        return committeeCommitteeIdFilingsGetCall(apiKey, committeeId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, _callback);

    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return FilingsPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public FilingsPage committeeCommitteeIdFilingsGet(String apiKey, String committeeId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        ApiResponse<FilingsPage> localVarResp = committeeCommitteeIdFilingsGetWithHttpInfo(apiKey, committeeId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber);
        return localVarResp.getData();
    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return ApiResponse&lt;FilingsPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<FilingsPage> committeeCommitteeIdFilingsGetWithHttpInfo(String apiKey, String committeeId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        okhttp3.Call localVarCall = committeeCommitteeIdFilingsGetValidateBeforeCall(apiKey, committeeId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, null);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call committeeCommitteeIdFilingsGetAsync(String apiKey, String committeeId, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback<FilingsPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = committeeCommitteeIdFilingsGetValidateBeforeCall(apiKey, committeeId, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, amendmentIndicator, documentType, beginningImageNumber, _callback);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for filingsGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (optional)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call filingsGetCall(String apiKey, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<String> candidateId, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> committeeId, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/filings/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (isAmended != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("is_amended", isAmended));
        }

        if (minReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_receipt_date", minReceiptDate));
        }

        if (formCategory != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_category", formCategory));
        }

        if (requestType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "request_type", requestType));
        }

        if (primaryGeneralIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "primary_general_indicator", primaryGeneralIndicator));
        }

        if (cycle != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "cycle", cycle));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (maxReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_receipt_date", maxReceiptDate));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (candidateId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "candidate_id", candidateId));
        }

        if (fileNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "file_number", fileNumber));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (office != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "office", office));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (qFiler != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "q_filer", qFiler));
        }

        if (district != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "district", district));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (filerType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filer_type", filerType));
        }

        if (mostRecent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("most_recent", mostRecent));
        }

        if (reportType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_type", reportType));
        }

        if (committeeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("committee_type", committeeType));
        }

        if (party != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "party", party));
        }

        if (formType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_type", formType));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (state != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "state", state));
        }

        if (reportYear != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_year", reportYear));
        }

        if (committeeId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "committee_id", committeeId));
        }

        if (amendmentIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "amendment_indicator", amendmentIndicator));
        }

        if (documentType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "document_type", documentType));
        }

        if (beginningImageNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "beginning_image_number", beginningImageNumber));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call filingsGetValidateBeforeCall(String apiKey, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<String> candidateId, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> committeeId, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling filingsGet(Async)");
        }

        return filingsGetCall(apiKey, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, candidateId, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, committeeId, amendmentIndicator, documentType, beginningImageNumber, _callback);

    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (optional)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return FilingsPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public FilingsPage filingsGet(String apiKey, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<String> candidateId, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> committeeId, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        ApiResponse<FilingsPage> localVarResp = filingsGetWithHttpInfo(apiKey, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, candidateId, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, committeeId, amendmentIndicator, documentType, beginningImageNumber);
        return localVarResp.getData();
    }

    /**
     * 
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (optional)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @return ApiResponse&lt;FilingsPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<FilingsPage> filingsGetWithHttpInfo(String apiKey, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<String> candidateId, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> committeeId, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber) throws ApiException {
        okhttp3.Call localVarCall = filingsGetValidateBeforeCall(apiKey, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, candidateId, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, committeeId, amendmentIndicator, documentType, beginningImageNumber, null);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param isAmended  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.  (optional)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formCategory  The forms filed are categorized based on the nature of the filing:     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13     - NOTICE F5, F24, F6, F9, F10, F11     - STATEMENT F1, F2     - OTHER F1M, F8, F99, F12, FRQ  (optional)
     * @param requestType  Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status  (optional)
     * @param primaryGeneralIndicator  Primary, general or special election indicator.  (optional)
     * @param cycle  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param candidateId  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence.  (optional)
     * @param fileNumber Filing ID number (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param office Federal office candidate runs for: H, S or P (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param qFiler  Keyword search for filer name or ID  (optional)
     * @param district Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00. (optional)
     * @param filerType The method used to file with the FEC, either electronic or on paper. (optional)
     * @param mostRecent  Report is either new or is the most-recently filed amendment  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param committeeType The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditure filer (not a committee)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account  (optional)
     * @param party Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party. (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param state US state or territory where a candidate runs for office (optional)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param documentType  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call filingsGetAsync(String apiKey, Boolean isAmended, LocalDate minReceiptDate, List<String> formCategory, List<String> requestType, List<String> primaryGeneralIndicator, List<Integer> cycle, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, List<String> candidateId, List<Integer> fileNumber, Integer perPage, List<String> office, List<String> sort, List<String> qFiler, List<String> district, String filerType, Boolean mostRecent, List<String> reportType, String committeeType, List<String> party, List<String> formType, Boolean sortNullsLast, Integer page, List<String> state, List<Integer> reportYear, List<String> committeeId, List<String> amendmentIndicator, List<String> documentType, List<String> beginningImageNumber, final ApiCallback<FilingsPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = filingsGetValidateBeforeCall(apiKey, isAmended, minReceiptDate, formCategory, requestType, primaryGeneralIndicator, cycle, sortNullOnly, maxReceiptDate, sortHideNull, candidateId, fileNumber, perPage, office, sort, qFiler, district, filerType, mostRecent, reportType, committeeType, party, formType, sortNullsLast, page, state, reportYear, committeeId, amendmentIndicator, documentType, beginningImageNumber, _callback);
        Type localVarReturnType = new TypeToken<FilingsPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationsLogGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param candidateCommitteeId  A unique identifier of the registered filer.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param maxTransactionDataCompleteDate  Select all filings processed completely before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param minTransactionDataCompleteDate  Select all filings processed completely after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param maxCoverageEndDate  Ending date of the reporting period before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param statusNum  Status of the transactional report.     -0- Transaction is entered            into the system.           But not verified.     -1- Transaction is verified.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param minCoverageEndDate  Ending date of the reporting period after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationsLogGetCall(String apiKey, LocalDate minReceiptDate, List<String> candidateCommitteeId, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, LocalDate maxTransactionDataCompleteDate, Integer perPage, List<String> sort, List<String> reportType, LocalDate minTransactionDataCompleteDate, List<String> formType, Boolean sortNullsLast, LocalDate maxCoverageEndDate, Integer page, List<Integer> reportYear, List<String> statusNum, List<String> amendmentIndicator, List<String> beginningImageNumber, LocalDate minCoverageEndDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/operations-log/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (minReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_receipt_date", minReceiptDate));
        }

        if (candidateCommitteeId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "candidate_committee_id", candidateCommitteeId));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (maxReceiptDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_receipt_date", maxReceiptDate));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (maxTransactionDataCompleteDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_transaction_data_complete_date", maxTransactionDataCompleteDate));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (reportType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_type", reportType));
        }

        if (minTransactionDataCompleteDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_transaction_data_complete_date", minTransactionDataCompleteDate));
        }

        if (formType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "form_type", formType));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        if (maxCoverageEndDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_coverage_end_date", maxCoverageEndDate));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (reportYear != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "report_year", reportYear));
        }

        if (statusNum != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "status_num", statusNum));
        }

        if (amendmentIndicator != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "amendment_indicator", amendmentIndicator));
        }

        if (beginningImageNumber != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "beginning_image_number", beginningImageNumber));
        }

        if (minCoverageEndDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_coverage_end_date", minCoverageEndDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationsLogGetValidateBeforeCall(String apiKey, LocalDate minReceiptDate, List<String> candidateCommitteeId, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, LocalDate maxTransactionDataCompleteDate, Integer perPage, List<String> sort, List<String> reportType, LocalDate minTransactionDataCompleteDate, List<String> formType, Boolean sortNullsLast, LocalDate maxCoverageEndDate, Integer page, List<Integer> reportYear, List<String> statusNum, List<String> amendmentIndicator, List<String> beginningImageNumber, LocalDate minCoverageEndDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling operationsLogGet(Async)");
        }

        return operationsLogGetCall(apiKey, minReceiptDate, candidateCommitteeId, sortNullOnly, maxReceiptDate, sortHideNull, maxTransactionDataCompleteDate, perPage, sort, reportType, minTransactionDataCompleteDate, formType, sortNullsLast, maxCoverageEndDate, page, reportYear, statusNum, amendmentIndicator, beginningImageNumber, minCoverageEndDate, _callback);

    }

    /**
     * 
     *  The Operations log contains details of each report loaded into the database. It is primarily used as status check to determine when all of the data processes, from initial entry through review are complete. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param candidateCommitteeId  A unique identifier of the registered filer.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param maxTransactionDataCompleteDate  Select all filings processed completely before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param minTransactionDataCompleteDate  Select all filings processed completely after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param maxCoverageEndDate  Ending date of the reporting period before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param statusNum  Status of the transactional report.     -0- Transaction is entered            into the system.           But not verified.     -1- Transaction is verified.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param minCoverageEndDate  Ending date of the reporting period after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @return OperationsLogPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public OperationsLogPage operationsLogGet(String apiKey, LocalDate minReceiptDate, List<String> candidateCommitteeId, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, LocalDate maxTransactionDataCompleteDate, Integer perPage, List<String> sort, List<String> reportType, LocalDate minTransactionDataCompleteDate, List<String> formType, Boolean sortNullsLast, LocalDate maxCoverageEndDate, Integer page, List<Integer> reportYear, List<String> statusNum, List<String> amendmentIndicator, List<String> beginningImageNumber, LocalDate minCoverageEndDate) throws ApiException {
        ApiResponse<OperationsLogPage> localVarResp = operationsLogGetWithHttpInfo(apiKey, minReceiptDate, candidateCommitteeId, sortNullOnly, maxReceiptDate, sortHideNull, maxTransactionDataCompleteDate, perPage, sort, reportType, minTransactionDataCompleteDate, formType, sortNullsLast, maxCoverageEndDate, page, reportYear, statusNum, amendmentIndicator, beginningImageNumber, minCoverageEndDate);
        return localVarResp.getData();
    }

    /**
     * 
     *  The Operations log contains details of each report loaded into the database. It is primarily used as status check to determine when all of the data processes, from initial entry through review are complete. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param candidateCommitteeId  A unique identifier of the registered filer.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param maxTransactionDataCompleteDate  Select all filings processed completely before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param minTransactionDataCompleteDate  Select all filings processed completely after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param maxCoverageEndDate  Ending date of the reporting period before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param statusNum  Status of the transactional report.     -0- Transaction is entered            into the system.           But not verified.     -1- Transaction is verified.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param minCoverageEndDate  Ending date of the reporting period after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @return ApiResponse&lt;OperationsLogPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationsLogPage> operationsLogGetWithHttpInfo(String apiKey, LocalDate minReceiptDate, List<String> candidateCommitteeId, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, LocalDate maxTransactionDataCompleteDate, Integer perPage, List<String> sort, List<String> reportType, LocalDate minTransactionDataCompleteDate, List<String> formType, Boolean sortNullsLast, LocalDate maxCoverageEndDate, Integer page, List<Integer> reportYear, List<String> statusNum, List<String> amendmentIndicator, List<String> beginningImageNumber, LocalDate minCoverageEndDate) throws ApiException {
        okhttp3.Call localVarCall = operationsLogGetValidateBeforeCall(apiKey, minReceiptDate, candidateCommitteeId, sortNullOnly, maxReceiptDate, sortHideNull, maxTransactionDataCompleteDate, perPage, sort, reportType, minTransactionDataCompleteDate, formType, sortNullsLast, maxCoverageEndDate, page, reportYear, statusNum, amendmentIndicator, beginningImageNumber, minCoverageEndDate, null);
        Type localVarReturnType = new TypeToken<OperationsLogPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  The Operations log contains details of each report loaded into the database. It is primarily used as status check to determine when all of the data processes, from initial entry through review are complete. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minReceiptDate  Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param candidateCommitteeId  A unique identifier of the registered filer.  (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param maxReceiptDate  Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param maxTransactionDataCompleteDate  Select all filings processed completely before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param reportType Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)  (optional)
     * @param minTransactionDataCompleteDate  Select all filings processed completely after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param formType The form where the underlying data comes from, for example, Form 1 would appear as F1:     - F1   Statement of Organization     - F1M  Notification of Multicandidate Status     - F2   Statement of Candidacy     - F3   Report of Receipts and Disbursements for an Authorized Committee     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention     - F5   Report of Independent Expenditures Made and Contributions Received     - F6   48 Hour Notice of Contributions/Loans Received     - F7   Report of Communication Costs by Corporations and Membership Organizations     - F8   Debt Settlement Plan     - F9   24 Hour Notice of Disbursements for Electioneering Communications     - F13  Report of Donations Accepted for Inaugural Committee     - F99  Miscellaneous Text     - FRQ  Request for Additional Information  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param maxCoverageEndDate  Ending date of the reporting period before this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param reportYear  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.  (optional)
     * @param statusNum  Status of the transactional report.     -0- Transaction is entered            into the system.           But not verified.     -1- Transaction is verified.  (optional)
     * @param amendmentIndicator Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.  (optional)
     * @param beginningImageNumber  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.  (optional)
     * @param minCoverageEndDate  Ending date of the reporting period after this date(MM/DD/YYYY or YYYY-MM-DD)  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationsLogGetAsync(String apiKey, LocalDate minReceiptDate, List<String> candidateCommitteeId, Boolean sortNullOnly, LocalDate maxReceiptDate, Boolean sortHideNull, LocalDate maxTransactionDataCompleteDate, Integer perPage, List<String> sort, List<String> reportType, LocalDate minTransactionDataCompleteDate, List<String> formType, Boolean sortNullsLast, LocalDate maxCoverageEndDate, Integer page, List<Integer> reportYear, List<String> statusNum, List<String> amendmentIndicator, List<String> beginningImageNumber, LocalDate minCoverageEndDate, final ApiCallback<OperationsLogPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationsLogGetValidateBeforeCall(apiKey, minReceiptDate, candidateCommitteeId, sortNullOnly, maxReceiptDate, sortHideNull, maxTransactionDataCompleteDate, perPage, sort, reportType, minTransactionDataCompleteDate, formType, sortNullsLast, maxCoverageEndDate, page, reportYear, statusNum, amendmentIndicator, beginningImageNumber, minCoverageEndDate, _callback);
        Type localVarReturnType = new TypeToken<OperationsLogPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
