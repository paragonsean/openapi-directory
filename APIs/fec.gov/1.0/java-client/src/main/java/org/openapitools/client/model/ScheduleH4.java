/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleH4
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleH4 {
  public static final String SERIALIZED_NAME_ADDITIONAL_DESCRIPTION = "additional_description";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DESCRIPTION)
  private String additionalDescription;

  public static final String SERIALIZED_NAME_ADMINISTRATIVE_ACTIVITY_INIDCATOR = "administrative_activity_inidcator";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATIVE_ACTIVITY_INIDCATOR)
  private String administrativeActivityInidcator;

  public static final String SERIALIZED_NAME_ADMINISTRATIVE_VOTER_DRIVE_ACTIVITY_INDICATOR = "administrative_voter_drive_activity_indicator";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATIVE_VOTER_DRIVE_ACTIVITY_INDICATOR)
  private String administrativeVoterDriveActivityIndicator;

  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC = "amendment_indicator_desc";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC)
  private String amendmentIndicatorDesc;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_ID = "back_reference_schedule_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_ID)
  private String backReferenceScheduleId;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DESCRIPTION = "candidate_office_description";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DESCRIPTION)
  private String candidateOfficeDescription;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL = "candidate_office_state_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL)
  private String candidateOfficeStateFull;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "category_code";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_CATEGORY_CODE_FULL = "category_code_full";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE_FULL)
  private String categoryCodeFull;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ID = "conduit_committee_id";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ID)
  private String conduitCommitteeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  private BigDecimal cycle;

  public static final String SERIALIZED_NAME_DIRECT_CANDIDATE_SUPPORT_ACTIVITY_INDICATOR = "direct_candidate_support_activity_indicator";
  @SerializedName(SERIALIZED_NAME_DIRECT_CANDIDATE_SUPPORT_ACTIVITY_INDICATOR)
  private String directCandidateSupportActivityIndicator;

  public static final String SERIALIZED_NAME_DISBURSEMENT_AMOUNT = "disbursement_amount";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_AMOUNT)
  private BigDecimal disbursementAmount;

  public static final String SERIALIZED_NAME_DISBURSEMENT_TYPE = "disbursement_type";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_TYPE)
  private String disbursementType;

  public static final String SERIALIZED_NAME_DISBURSEMENT_TYPE_FULL = "disbursement_type_full";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_TYPE_FULL)
  private String disbursementTypeFull;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_DESC = "entity_type_desc";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_DESC)
  private String entityTypeDesc;

  public static final String SERIALIZED_NAME_EVENT_AMOUNT_YEAR_TO_DATE = "event_amount_year_to_date";
  @SerializedName(SERIALIZED_NAME_EVENT_AMOUNT_YEAR_TO_DATE)
  private BigDecimal eventAmountYearToDate;

  public static final String SERIALIZED_NAME_EVENT_PURPOSE_CATEGORY_TYPE = "event_purpose_category_type";
  @SerializedName(SERIALIZED_NAME_EVENT_PURPOSE_CATEGORY_TYPE)
  private String eventPurposeCategoryType;

  public static final String SERIALIZED_NAME_EVENT_PURPOSE_CATEGORY_TYPE_FULL = "event_purpose_category_type_full";
  @SerializedName(SERIALIZED_NAME_EVENT_PURPOSE_CATEGORY_TYPE_FULL)
  private String eventPurposeCategoryTypeFull;

  public static final String SERIALIZED_NAME_EVENT_PURPOSE_DATE = "event_purpose_date";
  @SerializedName(SERIALIZED_NAME_EVENT_PURPOSE_DATE)
  private LocalDate eventPurposeDate;

  public static final String SERIALIZED_NAME_EVENT_PURPOSE_DESCRIPTION = "event_purpose_description";
  @SerializedName(SERIALIZED_NAME_EVENT_PURPOSE_DESCRIPTION)
  private String eventPurposeDescription;

  public static final String SERIALIZED_NAME_EVENT_PURPOSE_NAME = "event_purpose_name";
  @SerializedName(SERIALIZED_NAME_EVENT_PURPOSE_NAME)
  private String eventPurposeName;

  public static final String SERIALIZED_NAME_EXEMPT_ACTIVITY_INDICATOR = "exempt_activity_indicator";
  @SerializedName(SERIALIZED_NAME_EXEMPT_ACTIVITY_INDICATOR)
  private String exemptActivityIndicator;

  public static final String SERIALIZED_NAME_FEDERAL_SHARE = "federal_share";
  @SerializedName(SERIALIZED_NAME_FEDERAL_SHARE)
  private BigDecimal federalShare;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILER_COMMITTEE_NAME = "filer_committee_name";
  @SerializedName(SERIALIZED_NAME_FILER_COMMITTEE_NAME)
  private String filerCommitteeName;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_FUNDRAISING_ACTIVITY_INDICATOR = "fundraising_activity_indicator";
  @SerializedName(SERIALIZED_NAME_FUNDRAISING_ACTIVITY_INDICATOR)
  private String fundraisingActivityIndicator;

  public static final String SERIALIZED_NAME_GENERAL_VOTER_DRIVE_ACTIVITY_INDICATOR = "general_voter_drive_activity_indicator";
  @SerializedName(SERIALIZED_NAME_GENERAL_VOTER_DRIVE_ACTIVITY_INDICATOR)
  private String generalVoterDriveActivityIndicator;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_LOAD_DATE = "load_date";
  @SerializedName(SERIALIZED_NAME_LOAD_DATE)
  private OffsetDateTime loadDate;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_CODE_DESCRIPTION = "memo_code_description";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE_DESCRIPTION)
  private String memoCodeDescription;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_NONFEDERAL_SHARE = "nonfederal_share";
  @SerializedName(SERIALIZED_NAME_NONFEDERAL_SHARE)
  private BigDecimal nonfederalShare;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private String originalSubId;

  public static final String SERIALIZED_NAME_PAYEE_CITY = "payee_city";
  @SerializedName(SERIALIZED_NAME_PAYEE_CITY)
  private String payeeCity;

  public static final String SERIALIZED_NAME_PAYEE_FIRST_NAME = "payee_first_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_FIRST_NAME)
  private String payeeFirstName;

  public static final String SERIALIZED_NAME_PAYEE_LAST_NAME = "payee_last_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_LAST_NAME)
  private String payeeLastName;

  public static final String SERIALIZED_NAME_PAYEE_MIDDLE_NAME = "payee_middle_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_MIDDLE_NAME)
  private String payeeMiddleName;

  public static final String SERIALIZED_NAME_PAYEE_NAME = "payee_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_NAME)
  private String payeeName;

  public static final String SERIALIZED_NAME_PAYEE_PREFIX = "payee_prefix";
  @SerializedName(SERIALIZED_NAME_PAYEE_PREFIX)
  private String payeePrefix;

  public static final String SERIALIZED_NAME_PAYEE_STATE = "payee_state";
  @SerializedName(SERIALIZED_NAME_PAYEE_STATE)
  private String payeeState;

  public static final String SERIALIZED_NAME_PAYEE_SUFFIX = "payee_suffix";
  @SerializedName(SERIALIZED_NAME_PAYEE_SUFFIX)
  private String payeeSuffix;

  public static final String SERIALIZED_NAME_PAYEE_ZIP = "payee_zip";
  @SerializedName(SERIALIZED_NAME_PAYEE_ZIP)
  private String payeeZip;

  public static final String SERIALIZED_NAME_PUBLISHED_COMMITTEE_REFERENCE_PARITY_CHECK = "published_committee_reference_parity_check";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_COMMITTEE_REFERENCE_PARITY_CHECK)
  private String publishedCommitteeReferenceParityCheck;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private BigDecimal reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public ScheduleH4() {
  }

  public ScheduleH4 additionalDescription(String additionalDescription) {
    this.additionalDescription = additionalDescription;
    return this;
  }

  /**
   * Get additionalDescription
   * @return additionalDescription
   */
  @javax.annotation.Nullable
  public String getAdditionalDescription() {
    return additionalDescription;
  }

  public void setAdditionalDescription(String additionalDescription) {
    this.additionalDescription = additionalDescription;
  }


  public ScheduleH4 administrativeActivityInidcator(String administrativeActivityInidcator) {
    this.administrativeActivityInidcator = administrativeActivityInidcator;
    return this;
  }

  /**
   * Get administrativeActivityInidcator
   * @return administrativeActivityInidcator
   */
  @javax.annotation.Nullable
  public String getAdministrativeActivityInidcator() {
    return administrativeActivityInidcator;
  }

  public void setAdministrativeActivityInidcator(String administrativeActivityInidcator) {
    this.administrativeActivityInidcator = administrativeActivityInidcator;
  }


  public ScheduleH4 administrativeVoterDriveActivityIndicator(String administrativeVoterDriveActivityIndicator) {
    this.administrativeVoterDriveActivityIndicator = administrativeVoterDriveActivityIndicator;
    return this;
  }

  /**
   * Get administrativeVoterDriveActivityIndicator
   * @return administrativeVoterDriveActivityIndicator
   */
  @javax.annotation.Nullable
  public String getAdministrativeVoterDriveActivityIndicator() {
    return administrativeVoterDriveActivityIndicator;
  }

  public void setAdministrativeVoterDriveActivityIndicator(String administrativeVoterDriveActivityIndicator) {
    this.administrativeVoterDriveActivityIndicator = administrativeVoterDriveActivityIndicator;
  }


  public ScheduleH4 amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleH4 amendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
    return this;
  }

  /**
   * Get amendmentIndicatorDesc
   * @return amendmentIndicatorDesc
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicatorDesc() {
    return amendmentIndicatorDesc;
  }

  public void setAmendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
  }


  public ScheduleH4 backReferenceScheduleId(String backReferenceScheduleId) {
    this.backReferenceScheduleId = backReferenceScheduleId;
    return this;
  }

  /**
   * Get backReferenceScheduleId
   * @return backReferenceScheduleId
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleId() {
    return backReferenceScheduleId;
  }

  public void setBackReferenceScheduleId(String backReferenceScheduleId) {
    this.backReferenceScheduleId = backReferenceScheduleId;
  }


  public ScheduleH4 backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleH4 candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public ScheduleH4 candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   *  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence. 
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public ScheduleH4 candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public ScheduleH4 candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public ScheduleH4 candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleH4 candidateOfficeDescription(String candidateOfficeDescription) {
    this.candidateOfficeDescription = candidateOfficeDescription;
    return this;
  }

  /**
   * Get candidateOfficeDescription
   * @return candidateOfficeDescription
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDescription() {
    return candidateOfficeDescription;
  }

  public void setCandidateOfficeDescription(String candidateOfficeDescription) {
    this.candidateOfficeDescription = candidateOfficeDescription;
  }


  public ScheduleH4 candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Get candidateOfficeDistrict
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleH4 candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public ScheduleH4 candidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
    return this;
  }

  /**
   * Get candidateOfficeStateFull
   * @return candidateOfficeStateFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeStateFull() {
    return candidateOfficeStateFull;
  }

  public void setCandidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
  }


  public ScheduleH4 categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public ScheduleH4 categoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
    return this;
  }

  /**
   * Get categoryCodeFull
   * @return categoryCodeFull
   */
  @javax.annotation.Nullable
  public String getCategoryCodeFull() {
    return categoryCodeFull;
  }

  public void setCategoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
  }


  public ScheduleH4 committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleH4 committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   * Get committeeId
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleH4 conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public ScheduleH4 conduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
    return this;
  }

  /**
   * Get conduitCommitteeId
   * @return conduitCommitteeId
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeId() {
    return conduitCommitteeId;
  }

  public void setConduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
  }


  public ScheduleH4 conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public ScheduleH4 conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public ScheduleH4 conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public ScheduleH4 conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public ScheduleH4 conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public ScheduleH4 cycle(BigDecimal cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nullable
  public BigDecimal getCycle() {
    return cycle;
  }

  public void setCycle(BigDecimal cycle) {
    this.cycle = cycle;
  }


  public ScheduleH4 directCandidateSupportActivityIndicator(String directCandidateSupportActivityIndicator) {
    this.directCandidateSupportActivityIndicator = directCandidateSupportActivityIndicator;
    return this;
  }

  /**
   * Get directCandidateSupportActivityIndicator
   * @return directCandidateSupportActivityIndicator
   */
  @javax.annotation.Nullable
  public String getDirectCandidateSupportActivityIndicator() {
    return directCandidateSupportActivityIndicator;
  }

  public void setDirectCandidateSupportActivityIndicator(String directCandidateSupportActivityIndicator) {
    this.directCandidateSupportActivityIndicator = directCandidateSupportActivityIndicator;
  }


  public ScheduleH4 disbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
    return this;
  }

  /**
   * Get disbursementAmount
   * @return disbursementAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDisbursementAmount() {
    return disbursementAmount;
  }

  public void setDisbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
  }


  public ScheduleH4 disbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
    return this;
  }

  /**
   * Get disbursementType
   * @return disbursementType
   */
  @javax.annotation.Nullable
  public String getDisbursementType() {
    return disbursementType;
  }

  public void setDisbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
  }


  public ScheduleH4 disbursementTypeFull(String disbursementTypeFull) {
    this.disbursementTypeFull = disbursementTypeFull;
    return this;
  }

  /**
   * Get disbursementTypeFull
   * @return disbursementTypeFull
   */
  @javax.annotation.Nullable
  public String getDisbursementTypeFull() {
    return disbursementTypeFull;
  }

  public void setDisbursementTypeFull(String disbursementTypeFull) {
    this.disbursementTypeFull = disbursementTypeFull;
  }


  public ScheduleH4 entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleH4 entityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
    return this;
  }

  /**
   * Get entityTypeDesc
   * @return entityTypeDesc
   */
  @javax.annotation.Nullable
  public String getEntityTypeDesc() {
    return entityTypeDesc;
  }

  public void setEntityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
  }


  public ScheduleH4 eventAmountYearToDate(BigDecimal eventAmountYearToDate) {
    this.eventAmountYearToDate = eventAmountYearToDate;
    return this;
  }

  /**
   * Get eventAmountYearToDate
   * @return eventAmountYearToDate
   */
  @javax.annotation.Nullable
  public BigDecimal getEventAmountYearToDate() {
    return eventAmountYearToDate;
  }

  public void setEventAmountYearToDate(BigDecimal eventAmountYearToDate) {
    this.eventAmountYearToDate = eventAmountYearToDate;
  }


  public ScheduleH4 eventPurposeCategoryType(String eventPurposeCategoryType) {
    this.eventPurposeCategoryType = eventPurposeCategoryType;
    return this;
  }

  /**
   * Get eventPurposeCategoryType
   * @return eventPurposeCategoryType
   */
  @javax.annotation.Nullable
  public String getEventPurposeCategoryType() {
    return eventPurposeCategoryType;
  }

  public void setEventPurposeCategoryType(String eventPurposeCategoryType) {
    this.eventPurposeCategoryType = eventPurposeCategoryType;
  }


  public ScheduleH4 eventPurposeCategoryTypeFull(String eventPurposeCategoryTypeFull) {
    this.eventPurposeCategoryTypeFull = eventPurposeCategoryTypeFull;
    return this;
  }

  /**
   * Get eventPurposeCategoryTypeFull
   * @return eventPurposeCategoryTypeFull
   */
  @javax.annotation.Nullable
  public String getEventPurposeCategoryTypeFull() {
    return eventPurposeCategoryTypeFull;
  }

  public void setEventPurposeCategoryTypeFull(String eventPurposeCategoryTypeFull) {
    this.eventPurposeCategoryTypeFull = eventPurposeCategoryTypeFull;
  }


  public ScheduleH4 eventPurposeDate(LocalDate eventPurposeDate) {
    this.eventPurposeDate = eventPurposeDate;
    return this;
  }

  /**
   * Get eventPurposeDate
   * @return eventPurposeDate
   */
  @javax.annotation.Nullable
  public LocalDate getEventPurposeDate() {
    return eventPurposeDate;
  }

  public void setEventPurposeDate(LocalDate eventPurposeDate) {
    this.eventPurposeDate = eventPurposeDate;
  }


  public ScheduleH4 eventPurposeDescription(String eventPurposeDescription) {
    this.eventPurposeDescription = eventPurposeDescription;
    return this;
  }

  /**
   * Get eventPurposeDescription
   * @return eventPurposeDescription
   */
  @javax.annotation.Nullable
  public String getEventPurposeDescription() {
    return eventPurposeDescription;
  }

  public void setEventPurposeDescription(String eventPurposeDescription) {
    this.eventPurposeDescription = eventPurposeDescription;
  }


  public ScheduleH4 eventPurposeName(String eventPurposeName) {
    this.eventPurposeName = eventPurposeName;
    return this;
  }

  /**
   * Get eventPurposeName
   * @return eventPurposeName
   */
  @javax.annotation.Nullable
  public String getEventPurposeName() {
    return eventPurposeName;
  }

  public void setEventPurposeName(String eventPurposeName) {
    this.eventPurposeName = eventPurposeName;
  }


  public ScheduleH4 exemptActivityIndicator(String exemptActivityIndicator) {
    this.exemptActivityIndicator = exemptActivityIndicator;
    return this;
  }

  /**
   * Get exemptActivityIndicator
   * @return exemptActivityIndicator
   */
  @javax.annotation.Nullable
  public String getExemptActivityIndicator() {
    return exemptActivityIndicator;
  }

  public void setExemptActivityIndicator(String exemptActivityIndicator) {
    this.exemptActivityIndicator = exemptActivityIndicator;
  }


  public ScheduleH4 federalShare(BigDecimal federalShare) {
    this.federalShare = federalShare;
    return this;
  }

  /**
   * Get federalShare
   * @return federalShare
   */
  @javax.annotation.Nullable
  public BigDecimal getFederalShare() {
    return federalShare;
  }

  public void setFederalShare(BigDecimal federalShare) {
    this.federalShare = federalShare;
  }


  public ScheduleH4 fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleH4 filerCommitteeName(String filerCommitteeName) {
    this.filerCommitteeName = filerCommitteeName;
    return this;
  }

  /**
   * Get filerCommitteeName
   * @return filerCommitteeName
   */
  @javax.annotation.Nullable
  public String getFilerCommitteeName() {
    return filerCommitteeName;
  }

  public void setFilerCommitteeName(String filerCommitteeName) {
    this.filerCommitteeName = filerCommitteeName;
  }


  public ScheduleH4 filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public ScheduleH4 fundraisingActivityIndicator(String fundraisingActivityIndicator) {
    this.fundraisingActivityIndicator = fundraisingActivityIndicator;
    return this;
  }

  /**
   * Get fundraisingActivityIndicator
   * @return fundraisingActivityIndicator
   */
  @javax.annotation.Nullable
  public String getFundraisingActivityIndicator() {
    return fundraisingActivityIndicator;
  }

  public void setFundraisingActivityIndicator(String fundraisingActivityIndicator) {
    this.fundraisingActivityIndicator = fundraisingActivityIndicator;
  }


  public ScheduleH4 generalVoterDriveActivityIndicator(String generalVoterDriveActivityIndicator) {
    this.generalVoterDriveActivityIndicator = generalVoterDriveActivityIndicator;
    return this;
  }

  /**
   * Get generalVoterDriveActivityIndicator
   * @return generalVoterDriveActivityIndicator
   */
  @javax.annotation.Nullable
  public String getGeneralVoterDriveActivityIndicator() {
    return generalVoterDriveActivityIndicator;
  }

  public void setGeneralVoterDriveActivityIndicator(String generalVoterDriveActivityIndicator) {
    this.generalVoterDriveActivityIndicator = generalVoterDriveActivityIndicator;
  }


  public ScheduleH4 imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   * Get imageNumber
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleH4 lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleH4 linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public ScheduleH4 loadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
    return this;
  }

  /**
   * Get loadDate
   * @return loadDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadDate() {
    return loadDate;
  }

  public void setLoadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
  }


  public ScheduleH4 memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleH4 memoCodeDescription(String memoCodeDescription) {
    this.memoCodeDescription = memoCodeDescription;
    return this;
  }

  /**
   * Get memoCodeDescription
   * @return memoCodeDescription
   */
  @javax.annotation.Nullable
  public String getMemoCodeDescription() {
    return memoCodeDescription;
  }

  public void setMemoCodeDescription(String memoCodeDescription) {
    this.memoCodeDescription = memoCodeDescription;
  }


  public ScheduleH4 memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleH4 nonfederalShare(BigDecimal nonfederalShare) {
    this.nonfederalShare = nonfederalShare;
    return this;
  }

  /**
   * Get nonfederalShare
   * @return nonfederalShare
   */
  @javax.annotation.Nullable
  public BigDecimal getNonfederalShare() {
    return nonfederalShare;
  }

  public void setNonfederalShare(BigDecimal nonfederalShare) {
    this.nonfederalShare = nonfederalShare;
  }


  public ScheduleH4 originalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public String getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
  }


  public ScheduleH4 payeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
    return this;
  }

  /**
   * Get payeeCity
   * @return payeeCity
   */
  @javax.annotation.Nullable
  public String getPayeeCity() {
    return payeeCity;
  }

  public void setPayeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
  }


  public ScheduleH4 payeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
    return this;
  }

  /**
   * Get payeeFirstName
   * @return payeeFirstName
   */
  @javax.annotation.Nullable
  public String getPayeeFirstName() {
    return payeeFirstName;
  }

  public void setPayeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
  }


  public ScheduleH4 payeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
    return this;
  }

  /**
   * Get payeeLastName
   * @return payeeLastName
   */
  @javax.annotation.Nullable
  public String getPayeeLastName() {
    return payeeLastName;
  }

  public void setPayeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
  }


  public ScheduleH4 payeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
    return this;
  }

  /**
   * Get payeeMiddleName
   * @return payeeMiddleName
   */
  @javax.annotation.Nullable
  public String getPayeeMiddleName() {
    return payeeMiddleName;
  }

  public void setPayeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
  }


  public ScheduleH4 payeeName(String payeeName) {
    this.payeeName = payeeName;
    return this;
  }

  /**
   * Get payeeName
   * @return payeeName
   */
  @javax.annotation.Nullable
  public String getPayeeName() {
    return payeeName;
  }

  public void setPayeeName(String payeeName) {
    this.payeeName = payeeName;
  }


  public ScheduleH4 payeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
    return this;
  }

  /**
   * Get payeePrefix
   * @return payeePrefix
   */
  @javax.annotation.Nullable
  public String getPayeePrefix() {
    return payeePrefix;
  }

  public void setPayeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
  }


  public ScheduleH4 payeeState(String payeeState) {
    this.payeeState = payeeState;
    return this;
  }

  /**
   * Get payeeState
   * @return payeeState
   */
  @javax.annotation.Nullable
  public String getPayeeState() {
    return payeeState;
  }

  public void setPayeeState(String payeeState) {
    this.payeeState = payeeState;
  }


  public ScheduleH4 payeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
    return this;
  }

  /**
   * Get payeeSuffix
   * @return payeeSuffix
   */
  @javax.annotation.Nullable
  public String getPayeeSuffix() {
    return payeeSuffix;
  }

  public void setPayeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
  }


  public ScheduleH4 payeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
    return this;
  }

  /**
   * Get payeeZip
   * @return payeeZip
   */
  @javax.annotation.Nullable
  public String getPayeeZip() {
    return payeeZip;
  }

  public void setPayeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
  }


  public ScheduleH4 publishedCommitteeReferenceParityCheck(String publishedCommitteeReferenceParityCheck) {
    this.publishedCommitteeReferenceParityCheck = publishedCommitteeReferenceParityCheck;
    return this;
  }

  /**
   * Get publishedCommitteeReferenceParityCheck
   * @return publishedCommitteeReferenceParityCheck
   */
  @javax.annotation.Nullable
  public String getPublishedCommitteeReferenceParityCheck() {
    return publishedCommitteeReferenceParityCheck;
  }

  public void setPublishedCommitteeReferenceParityCheck(String publishedCommitteeReferenceParityCheck) {
    this.publishedCommitteeReferenceParityCheck = publishedCommitteeReferenceParityCheck;
  }


  public ScheduleH4 reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleH4 reportYear(BigDecimal reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   * Get reportYear
   * @return reportYear
   */
  @javax.annotation.Nullable
  public BigDecimal getReportYear() {
    return reportYear;
  }

  public void setReportYear(BigDecimal reportYear) {
    this.reportYear = reportYear;
  }


  public ScheduleH4 scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public ScheduleH4 scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public ScheduleH4 subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public ScheduleH4 transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleH4 scheduleH4 = (ScheduleH4) o;
    return Objects.equals(this.additionalDescription, scheduleH4.additionalDescription) &&
        Objects.equals(this.administrativeActivityInidcator, scheduleH4.administrativeActivityInidcator) &&
        Objects.equals(this.administrativeVoterDriveActivityIndicator, scheduleH4.administrativeVoterDriveActivityIndicator) &&
        Objects.equals(this.amendmentIndicator, scheduleH4.amendmentIndicator) &&
        Objects.equals(this.amendmentIndicatorDesc, scheduleH4.amendmentIndicatorDesc) &&
        Objects.equals(this.backReferenceScheduleId, scheduleH4.backReferenceScheduleId) &&
        Objects.equals(this.backReferenceTransactionId, scheduleH4.backReferenceTransactionId) &&
        Objects.equals(this.candidateFirstName, scheduleH4.candidateFirstName) &&
        Objects.equals(this.candidateId, scheduleH4.candidateId) &&
        Objects.equals(this.candidateLastName, scheduleH4.candidateLastName) &&
        Objects.equals(this.candidateName, scheduleH4.candidateName) &&
        Objects.equals(this.candidateOffice, scheduleH4.candidateOffice) &&
        Objects.equals(this.candidateOfficeDescription, scheduleH4.candidateOfficeDescription) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleH4.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeState, scheduleH4.candidateOfficeState) &&
        Objects.equals(this.candidateOfficeStateFull, scheduleH4.candidateOfficeStateFull) &&
        Objects.equals(this.categoryCode, scheduleH4.categoryCode) &&
        Objects.equals(this.categoryCodeFull, scheduleH4.categoryCodeFull) &&
        Objects.equals(this.committee, scheduleH4.committee) &&
        Objects.equals(this.committeeId, scheduleH4.committeeId) &&
        Objects.equals(this.conduitCommitteeCity, scheduleH4.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeId, scheduleH4.conduitCommitteeId) &&
        Objects.equals(this.conduitCommitteeName, scheduleH4.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, scheduleH4.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, scheduleH4.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, scheduleH4.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, scheduleH4.conduitCommitteeZip) &&
        Objects.equals(this.cycle, scheduleH4.cycle) &&
        Objects.equals(this.directCandidateSupportActivityIndicator, scheduleH4.directCandidateSupportActivityIndicator) &&
        Objects.equals(this.disbursementAmount, scheduleH4.disbursementAmount) &&
        Objects.equals(this.disbursementType, scheduleH4.disbursementType) &&
        Objects.equals(this.disbursementTypeFull, scheduleH4.disbursementTypeFull) &&
        Objects.equals(this.entityType, scheduleH4.entityType) &&
        Objects.equals(this.entityTypeDesc, scheduleH4.entityTypeDesc) &&
        Objects.equals(this.eventAmountYearToDate, scheduleH4.eventAmountYearToDate) &&
        Objects.equals(this.eventPurposeCategoryType, scheduleH4.eventPurposeCategoryType) &&
        Objects.equals(this.eventPurposeCategoryTypeFull, scheduleH4.eventPurposeCategoryTypeFull) &&
        Objects.equals(this.eventPurposeDate, scheduleH4.eventPurposeDate) &&
        Objects.equals(this.eventPurposeDescription, scheduleH4.eventPurposeDescription) &&
        Objects.equals(this.eventPurposeName, scheduleH4.eventPurposeName) &&
        Objects.equals(this.exemptActivityIndicator, scheduleH4.exemptActivityIndicator) &&
        Objects.equals(this.federalShare, scheduleH4.federalShare) &&
        Objects.equals(this.fileNumber, scheduleH4.fileNumber) &&
        Objects.equals(this.filerCommitteeName, scheduleH4.filerCommitteeName) &&
        Objects.equals(this.filingForm, scheduleH4.filingForm) &&
        Objects.equals(this.fundraisingActivityIndicator, scheduleH4.fundraisingActivityIndicator) &&
        Objects.equals(this.generalVoterDriveActivityIndicator, scheduleH4.generalVoterDriveActivityIndicator) &&
        Objects.equals(this.imageNumber, scheduleH4.imageNumber) &&
        Objects.equals(this.lineNumber, scheduleH4.lineNumber) &&
        Objects.equals(this.linkId, scheduleH4.linkId) &&
        Objects.equals(this.loadDate, scheduleH4.loadDate) &&
        Objects.equals(this.memoCode, scheduleH4.memoCode) &&
        Objects.equals(this.memoCodeDescription, scheduleH4.memoCodeDescription) &&
        Objects.equals(this.memoText, scheduleH4.memoText) &&
        Objects.equals(this.nonfederalShare, scheduleH4.nonfederalShare) &&
        Objects.equals(this.originalSubId, scheduleH4.originalSubId) &&
        Objects.equals(this.payeeCity, scheduleH4.payeeCity) &&
        Objects.equals(this.payeeFirstName, scheduleH4.payeeFirstName) &&
        Objects.equals(this.payeeLastName, scheduleH4.payeeLastName) &&
        Objects.equals(this.payeeMiddleName, scheduleH4.payeeMiddleName) &&
        Objects.equals(this.payeeName, scheduleH4.payeeName) &&
        Objects.equals(this.payeePrefix, scheduleH4.payeePrefix) &&
        Objects.equals(this.payeeState, scheduleH4.payeeState) &&
        Objects.equals(this.payeeSuffix, scheduleH4.payeeSuffix) &&
        Objects.equals(this.payeeZip, scheduleH4.payeeZip) &&
        Objects.equals(this.publishedCommitteeReferenceParityCheck, scheduleH4.publishedCommitteeReferenceParityCheck) &&
        Objects.equals(this.reportType, scheduleH4.reportType) &&
        Objects.equals(this.reportYear, scheduleH4.reportYear) &&
        Objects.equals(this.scheduleType, scheduleH4.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, scheduleH4.scheduleTypeFull) &&
        Objects.equals(this.subId, scheduleH4.subId) &&
        Objects.equals(this.transactionId, scheduleH4.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalDescription, administrativeActivityInidcator, administrativeVoterDriveActivityIndicator, amendmentIndicator, amendmentIndicatorDesc, backReferenceScheduleId, backReferenceTransactionId, candidateFirstName, candidateId, candidateLastName, candidateName, candidateOffice, candidateOfficeDescription, candidateOfficeDistrict, candidateOfficeState, candidateOfficeStateFull, categoryCode, categoryCodeFull, committee, committeeId, conduitCommitteeCity, conduitCommitteeId, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, cycle, directCandidateSupportActivityIndicator, disbursementAmount, disbursementType, disbursementTypeFull, entityType, entityTypeDesc, eventAmountYearToDate, eventPurposeCategoryType, eventPurposeCategoryTypeFull, eventPurposeDate, eventPurposeDescription, eventPurposeName, exemptActivityIndicator, federalShare, fileNumber, filerCommitteeName, filingForm, fundraisingActivityIndicator, generalVoterDriveActivityIndicator, imageNumber, lineNumber, linkId, loadDate, memoCode, memoCodeDescription, memoText, nonfederalShare, originalSubId, payeeCity, payeeFirstName, payeeLastName, payeeMiddleName, payeeName, payeePrefix, payeeState, payeeSuffix, payeeZip, publishedCommitteeReferenceParityCheck, reportType, reportYear, scheduleType, scheduleTypeFull, subId, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleH4 {\n");
    sb.append("    additionalDescription: ").append(toIndentedString(additionalDescription)).append("\n");
    sb.append("    administrativeActivityInidcator: ").append(toIndentedString(administrativeActivityInidcator)).append("\n");
    sb.append("    administrativeVoterDriveActivityIndicator: ").append(toIndentedString(administrativeVoterDriveActivityIndicator)).append("\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    amendmentIndicatorDesc: ").append(toIndentedString(amendmentIndicatorDesc)).append("\n");
    sb.append("    backReferenceScheduleId: ").append(toIndentedString(backReferenceScheduleId)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDescription: ").append(toIndentedString(candidateOfficeDescription)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateOfficeStateFull: ").append(toIndentedString(candidateOfficeStateFull)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    categoryCodeFull: ").append(toIndentedString(categoryCodeFull)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeId: ").append(toIndentedString(conduitCommitteeId)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    directCandidateSupportActivityIndicator: ").append(toIndentedString(directCandidateSupportActivityIndicator)).append("\n");
    sb.append("    disbursementAmount: ").append(toIndentedString(disbursementAmount)).append("\n");
    sb.append("    disbursementType: ").append(toIndentedString(disbursementType)).append("\n");
    sb.append("    disbursementTypeFull: ").append(toIndentedString(disbursementTypeFull)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityTypeDesc: ").append(toIndentedString(entityTypeDesc)).append("\n");
    sb.append("    eventAmountYearToDate: ").append(toIndentedString(eventAmountYearToDate)).append("\n");
    sb.append("    eventPurposeCategoryType: ").append(toIndentedString(eventPurposeCategoryType)).append("\n");
    sb.append("    eventPurposeCategoryTypeFull: ").append(toIndentedString(eventPurposeCategoryTypeFull)).append("\n");
    sb.append("    eventPurposeDate: ").append(toIndentedString(eventPurposeDate)).append("\n");
    sb.append("    eventPurposeDescription: ").append(toIndentedString(eventPurposeDescription)).append("\n");
    sb.append("    eventPurposeName: ").append(toIndentedString(eventPurposeName)).append("\n");
    sb.append("    exemptActivityIndicator: ").append(toIndentedString(exemptActivityIndicator)).append("\n");
    sb.append("    federalShare: ").append(toIndentedString(federalShare)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filerCommitteeName: ").append(toIndentedString(filerCommitteeName)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    fundraisingActivityIndicator: ").append(toIndentedString(fundraisingActivityIndicator)).append("\n");
    sb.append("    generalVoterDriveActivityIndicator: ").append(toIndentedString(generalVoterDriveActivityIndicator)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    loadDate: ").append(toIndentedString(loadDate)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoCodeDescription: ").append(toIndentedString(memoCodeDescription)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    nonfederalShare: ").append(toIndentedString(nonfederalShare)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    payeeCity: ").append(toIndentedString(payeeCity)).append("\n");
    sb.append("    payeeFirstName: ").append(toIndentedString(payeeFirstName)).append("\n");
    sb.append("    payeeLastName: ").append(toIndentedString(payeeLastName)).append("\n");
    sb.append("    payeeMiddleName: ").append(toIndentedString(payeeMiddleName)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    payeePrefix: ").append(toIndentedString(payeePrefix)).append("\n");
    sb.append("    payeeState: ").append(toIndentedString(payeeState)).append("\n");
    sb.append("    payeeSuffix: ").append(toIndentedString(payeeSuffix)).append("\n");
    sb.append("    payeeZip: ").append(toIndentedString(payeeZip)).append("\n");
    sb.append("    publishedCommitteeReferenceParityCheck: ").append(toIndentedString(publishedCommitteeReferenceParityCheck)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_description");
    openapiFields.add("administrative_activity_inidcator");
    openapiFields.add("administrative_voter_drive_activity_indicator");
    openapiFields.add("amendment_indicator");
    openapiFields.add("amendment_indicator_desc");
    openapiFields.add("back_reference_schedule_id");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_description");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_office_state_full");
    openapiFields.add("category_code");
    openapiFields.add("category_code_full");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_id");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("cycle");
    openapiFields.add("direct_candidate_support_activity_indicator");
    openapiFields.add("disbursement_amount");
    openapiFields.add("disbursement_type");
    openapiFields.add("disbursement_type_full");
    openapiFields.add("entity_type");
    openapiFields.add("entity_type_desc");
    openapiFields.add("event_amount_year_to_date");
    openapiFields.add("event_purpose_category_type");
    openapiFields.add("event_purpose_category_type_full");
    openapiFields.add("event_purpose_date");
    openapiFields.add("event_purpose_description");
    openapiFields.add("event_purpose_name");
    openapiFields.add("exempt_activity_indicator");
    openapiFields.add("federal_share");
    openapiFields.add("file_number");
    openapiFields.add("filer_committee_name");
    openapiFields.add("filing_form");
    openapiFields.add("fundraising_activity_indicator");
    openapiFields.add("general_voter_drive_activity_indicator");
    openapiFields.add("image_number");
    openapiFields.add("line_number");
    openapiFields.add("link_id");
    openapiFields.add("load_date");
    openapiFields.add("memo_code");
    openapiFields.add("memo_code_description");
    openapiFields.add("memo_text");
    openapiFields.add("nonfederal_share");
    openapiFields.add("original_sub_id");
    openapiFields.add("payee_city");
    openapiFields.add("payee_first_name");
    openapiFields.add("payee_last_name");
    openapiFields.add("payee_middle_name");
    openapiFields.add("payee_name");
    openapiFields.add("payee_prefix");
    openapiFields.add("payee_state");
    openapiFields.add("payee_suffix");
    openapiFields.add("payee_zip");
    openapiFields.add("published_committee_reference_parity_check");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("sub_id");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleH4
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleH4.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleH4 is not found in the empty JSON string", ScheduleH4.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleH4.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleH4` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("additional_description") != null && !jsonObj.get("additional_description").isJsonNull()) && !jsonObj.get("additional_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_description").toString()));
      }
      if ((jsonObj.get("administrative_activity_inidcator") != null && !jsonObj.get("administrative_activity_inidcator").isJsonNull()) && !jsonObj.get("administrative_activity_inidcator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `administrative_activity_inidcator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("administrative_activity_inidcator").toString()));
      }
      if ((jsonObj.get("administrative_voter_drive_activity_indicator") != null && !jsonObj.get("administrative_voter_drive_activity_indicator").isJsonNull()) && !jsonObj.get("administrative_voter_drive_activity_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `administrative_voter_drive_activity_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("administrative_voter_drive_activity_indicator").toString()));
      }
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("amendment_indicator_desc") != null && !jsonObj.get("amendment_indicator_desc").isJsonNull()) && !jsonObj.get("amendment_indicator_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator_desc").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_id") != null && !jsonObj.get("back_reference_schedule_id").isJsonNull()) && !jsonObj.get("back_reference_schedule_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_id").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_description") != null && !jsonObj.get("candidate_office_description").isJsonNull()) && !jsonObj.get("candidate_office_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_description").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_office_state_full") != null && !jsonObj.get("candidate_office_state_full").isJsonNull()) && !jsonObj.get("candidate_office_state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state_full").toString()));
      }
      if ((jsonObj.get("category_code") != null && !jsonObj.get("category_code").isJsonNull()) && !jsonObj.get("category_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code").toString()));
      }
      if ((jsonObj.get("category_code_full") != null && !jsonObj.get("category_code_full").isJsonNull()) && !jsonObj.get("category_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code_full").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_id") != null && !jsonObj.get("conduit_committee_id").isJsonNull()) && !jsonObj.get("conduit_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      if ((jsonObj.get("direct_candidate_support_activity_indicator") != null && !jsonObj.get("direct_candidate_support_activity_indicator").isJsonNull()) && !jsonObj.get("direct_candidate_support_activity_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direct_candidate_support_activity_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direct_candidate_support_activity_indicator").toString()));
      }
      if ((jsonObj.get("disbursement_type") != null && !jsonObj.get("disbursement_type").isJsonNull()) && !jsonObj.get("disbursement_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_type").toString()));
      }
      if ((jsonObj.get("disbursement_type_full") != null && !jsonObj.get("disbursement_type_full").isJsonNull()) && !jsonObj.get("disbursement_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_type_full").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("entity_type_desc") != null && !jsonObj.get("entity_type_desc").isJsonNull()) && !jsonObj.get("entity_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type_desc").toString()));
      }
      if ((jsonObj.get("event_purpose_category_type") != null && !jsonObj.get("event_purpose_category_type").isJsonNull()) && !jsonObj.get("event_purpose_category_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event_purpose_category_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event_purpose_category_type").toString()));
      }
      if ((jsonObj.get("event_purpose_category_type_full") != null && !jsonObj.get("event_purpose_category_type_full").isJsonNull()) && !jsonObj.get("event_purpose_category_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event_purpose_category_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event_purpose_category_type_full").toString()));
      }
      if ((jsonObj.get("event_purpose_description") != null && !jsonObj.get("event_purpose_description").isJsonNull()) && !jsonObj.get("event_purpose_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event_purpose_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event_purpose_description").toString()));
      }
      if ((jsonObj.get("event_purpose_name") != null && !jsonObj.get("event_purpose_name").isJsonNull()) && !jsonObj.get("event_purpose_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event_purpose_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event_purpose_name").toString()));
      }
      if ((jsonObj.get("exempt_activity_indicator") != null && !jsonObj.get("exempt_activity_indicator").isJsonNull()) && !jsonObj.get("exempt_activity_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exempt_activity_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exempt_activity_indicator").toString()));
      }
      if ((jsonObj.get("filer_committee_name") != null && !jsonObj.get("filer_committee_name").isJsonNull()) && !jsonObj.get("filer_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_committee_name").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("fundraising_activity_indicator") != null && !jsonObj.get("fundraising_activity_indicator").isJsonNull()) && !jsonObj.get("fundraising_activity_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fundraising_activity_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fundraising_activity_indicator").toString()));
      }
      if ((jsonObj.get("general_voter_drive_activity_indicator") != null && !jsonObj.get("general_voter_drive_activity_indicator").isJsonNull()) && !jsonObj.get("general_voter_drive_activity_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `general_voter_drive_activity_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("general_voter_drive_activity_indicator").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_code_description") != null && !jsonObj.get("memo_code_description").isJsonNull()) && !jsonObj.get("memo_code_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code_description").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("original_sub_id") != null && !jsonObj.get("original_sub_id").isJsonNull()) && !jsonObj.get("original_sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_sub_id").toString()));
      }
      if ((jsonObj.get("payee_city") != null && !jsonObj.get("payee_city").isJsonNull()) && !jsonObj.get("payee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_city").toString()));
      }
      if ((jsonObj.get("payee_first_name") != null && !jsonObj.get("payee_first_name").isJsonNull()) && !jsonObj.get("payee_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_first_name").toString()));
      }
      if ((jsonObj.get("payee_last_name") != null && !jsonObj.get("payee_last_name").isJsonNull()) && !jsonObj.get("payee_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_last_name").toString()));
      }
      if ((jsonObj.get("payee_middle_name") != null && !jsonObj.get("payee_middle_name").isJsonNull()) && !jsonObj.get("payee_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_middle_name").toString()));
      }
      if ((jsonObj.get("payee_name") != null && !jsonObj.get("payee_name").isJsonNull()) && !jsonObj.get("payee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_name").toString()));
      }
      if ((jsonObj.get("payee_prefix") != null && !jsonObj.get("payee_prefix").isJsonNull()) && !jsonObj.get("payee_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_prefix").toString()));
      }
      if ((jsonObj.get("payee_state") != null && !jsonObj.get("payee_state").isJsonNull()) && !jsonObj.get("payee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_state").toString()));
      }
      if ((jsonObj.get("payee_suffix") != null && !jsonObj.get("payee_suffix").isJsonNull()) && !jsonObj.get("payee_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_suffix").toString()));
      }
      if ((jsonObj.get("payee_zip") != null && !jsonObj.get("payee_zip").isJsonNull()) && !jsonObj.get("payee_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_zip").toString()));
      }
      if ((jsonObj.get("published_committee_reference_parity_check") != null && !jsonObj.get("published_committee_reference_parity_check").isJsonNull()) && !jsonObj.get("published_committee_reference_parity_check").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `published_committee_reference_parity_check` to be a primitive type in the JSON string but got `%s`", jsonObj.get("published_committee_reference_parity_check").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleH4.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleH4' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleH4> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleH4.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleH4>() {
           @Override
           public void write(JsonWriter out, ScheduleH4 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleH4 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleH4 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleH4
   * @throws IOException if the JSON string is invalid with respect to ScheduleH4
   */
  public static ScheduleH4 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleH4.class);
  }

  /**
   * Convert an instance of ScheduleH4 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

