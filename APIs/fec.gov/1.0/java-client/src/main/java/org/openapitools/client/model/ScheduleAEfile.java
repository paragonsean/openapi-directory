/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.client.model.EFilings;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleAEfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleAEfile {
  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME = "back_reference_schedule_name";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME)
  private String backReferenceScheduleName;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER = "beginning_image_number";
  @SerializedName(SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER)
  private String beginningImageNumber;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ID = "conduit_committee_id";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ID)
  private String conduitCommitteeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_CONTRIBUTION_RECEIPT_AMOUNT = "contribution_receipt_amount";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTION_RECEIPT_AMOUNT)
  private BigDecimal contributionReceiptAmount;

  public static final String SERIALIZED_NAME_CONTRIBUTION_RECEIPT_DATE = "contribution_receipt_date";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTION_RECEIPT_DATE)
  private LocalDate contributionReceiptDate;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_AGGREGATE_YTD = "contributor_aggregate_ytd";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_AGGREGATE_YTD)
  private BigDecimal contributorAggregateYtd;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_CITY = "contributor_city";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_CITY)
  private String contributorCity;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_EMPLOYER = "contributor_employer";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_EMPLOYER)
  private String contributorEmployer;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_FIRST_NAME = "contributor_first_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_FIRST_NAME)
  private String contributorFirstName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_LAST_NAME = "contributor_last_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_LAST_NAME)
  private String contributorLastName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_MIDDLE_NAME = "contributor_middle_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_MIDDLE_NAME)
  private String contributorMiddleName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_NAME = "contributor_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_NAME)
  private String contributorName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_OCCUPATION = "contributor_occupation";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_OCCUPATION)
  private String contributorOccupation;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_PREFIX = "contributor_prefix";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_PREFIX)
  private String contributorPrefix;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_STATE = "contributor_state";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_STATE)
  private String contributorState;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_SUFFIX = "contributor_suffix";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_SUFFIX)
  private String contributorSuffix;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_ZIP = "contributor_zip";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_ZIP)
  private String contributorZip;

  public static final String SERIALIZED_NAME_CSV_URL = "csv_url";
  @SerializedName(SERIALIZED_NAME_CSV_URL)
  private String csvUrl;

  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  private Integer cycle;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC = "fec_election_type_desc";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC)
  private String fecElectionTypeDesc;

  public static final String SERIALIZED_NAME_FEC_URL = "fec_url";
  @SerializedName(SERIALIZED_NAME_FEC_URL)
  private String fecUrl;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING = "filing";
  @SerializedName(SERIALIZED_NAME_FILING)
  private EFilings filing;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LOAD_TIMESTAMP = "load_timestamp";
  @SerializedName(SERIALIZED_NAME_LOAD_TIMESTAMP)
  private OffsetDateTime loadTimestamp;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_PGO = "pgo";
  @SerializedName(SERIALIZED_NAME_PGO)
  private String pgo;

  public static final String SERIALIZED_NAME_RELATED_LINE_NUMBER = "related_line_number";
  @SerializedName(SERIALIZED_NAME_RELATED_LINE_NUMBER)
  private Integer relatedLineNumber;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public ScheduleAEfile() {
  }

  public ScheduleAEfile amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleAEfile backReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
    return this;
  }

  /**
   * Get backReferenceScheduleName
   * @return backReferenceScheduleName
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleName() {
    return backReferenceScheduleName;
  }

  public void setBackReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
  }


  public ScheduleAEfile backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleAEfile beginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
    return this;
  }

  /**
   * Get beginningImageNumber
   * @return beginningImageNumber
   */
  @javax.annotation.Nullable
  public String getBeginningImageNumber() {
    return beginningImageNumber;
  }

  public void setBeginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
  }


  public ScheduleAEfile committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleAEfile committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleAEfile conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public ScheduleAEfile conduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
    return this;
  }

  /**
   * Get conduitCommitteeId
   * @return conduitCommitteeId
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeId() {
    return conduitCommitteeId;
  }

  public void setConduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
  }


  public ScheduleAEfile conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public ScheduleAEfile conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public ScheduleAEfile conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public ScheduleAEfile conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public ScheduleAEfile conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public ScheduleAEfile contributionReceiptAmount(BigDecimal contributionReceiptAmount) {
    this.contributionReceiptAmount = contributionReceiptAmount;
    return this;
  }

  /**
   * Get contributionReceiptAmount
   * @return contributionReceiptAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getContributionReceiptAmount() {
    return contributionReceiptAmount;
  }

  public void setContributionReceiptAmount(BigDecimal contributionReceiptAmount) {
    this.contributionReceiptAmount = contributionReceiptAmount;
  }


  public ScheduleAEfile contributionReceiptDate(LocalDate contributionReceiptDate) {
    this.contributionReceiptDate = contributionReceiptDate;
    return this;
  }

  /**
   * Get contributionReceiptDate
   * @return contributionReceiptDate
   */
  @javax.annotation.Nullable
  public LocalDate getContributionReceiptDate() {
    return contributionReceiptDate;
  }

  public void setContributionReceiptDate(LocalDate contributionReceiptDate) {
    this.contributionReceiptDate = contributionReceiptDate;
  }


  public ScheduleAEfile contributorAggregateYtd(BigDecimal contributorAggregateYtd) {
    this.contributorAggregateYtd = contributorAggregateYtd;
    return this;
  }

  /**
   * Get contributorAggregateYtd
   * @return contributorAggregateYtd
   */
  @javax.annotation.Nullable
  public BigDecimal getContributorAggregateYtd() {
    return contributorAggregateYtd;
  }

  public void setContributorAggregateYtd(BigDecimal contributorAggregateYtd) {
    this.contributorAggregateYtd = contributorAggregateYtd;
  }


  public ScheduleAEfile contributorCity(String contributorCity) {
    this.contributorCity = contributorCity;
    return this;
  }

  /**
   * City of contributor
   * @return contributorCity
   */
  @javax.annotation.Nullable
  public String getContributorCity() {
    return contributorCity;
  }

  public void setContributorCity(String contributorCity) {
    this.contributorCity = contributorCity;
  }


  public ScheduleAEfile contributorEmployer(String contributorEmployer) {
    this.contributorEmployer = contributorEmployer;
    return this;
  }

  /**
   * Employer of contributor, filers need to make an effort to gather this information
   * @return contributorEmployer
   */
  @javax.annotation.Nullable
  public String getContributorEmployer() {
    return contributorEmployer;
  }

  public void setContributorEmployer(String contributorEmployer) {
    this.contributorEmployer = contributorEmployer;
  }


  public ScheduleAEfile contributorFirstName(String contributorFirstName) {
    this.contributorFirstName = contributorFirstName;
    return this;
  }

  /**
   * Get contributorFirstName
   * @return contributorFirstName
   */
  @javax.annotation.Nullable
  public String getContributorFirstName() {
    return contributorFirstName;
  }

  public void setContributorFirstName(String contributorFirstName) {
    this.contributorFirstName = contributorFirstName;
  }


  public ScheduleAEfile contributorLastName(String contributorLastName) {
    this.contributorLastName = contributorLastName;
    return this;
  }

  /**
   * Get contributorLastName
   * @return contributorLastName
   */
  @javax.annotation.Nullable
  public String getContributorLastName() {
    return contributorLastName;
  }

  public void setContributorLastName(String contributorLastName) {
    this.contributorLastName = contributorLastName;
  }


  public ScheduleAEfile contributorMiddleName(String contributorMiddleName) {
    this.contributorMiddleName = contributorMiddleName;
    return this;
  }

  /**
   * Get contributorMiddleName
   * @return contributorMiddleName
   */
  @javax.annotation.Nullable
  public String getContributorMiddleName() {
    return contributorMiddleName;
  }

  public void setContributorMiddleName(String contributorMiddleName) {
    this.contributorMiddleName = contributorMiddleName;
  }


  public ScheduleAEfile contributorName(String contributorName) {
    this.contributorName = contributorName;
    return this;
  }

  /**
   * Get contributorName
   * @return contributorName
   */
  @javax.annotation.Nullable
  public String getContributorName() {
    return contributorName;
  }

  public void setContributorName(String contributorName) {
    this.contributorName = contributorName;
  }


  public ScheduleAEfile contributorOccupation(String contributorOccupation) {
    this.contributorOccupation = contributorOccupation;
    return this;
  }

  /**
   * Occupation of contributor, filers need to make an effort to gather this information
   * @return contributorOccupation
   */
  @javax.annotation.Nullable
  public String getContributorOccupation() {
    return contributorOccupation;
  }

  public void setContributorOccupation(String contributorOccupation) {
    this.contributorOccupation = contributorOccupation;
  }


  public ScheduleAEfile contributorPrefix(String contributorPrefix) {
    this.contributorPrefix = contributorPrefix;
    return this;
  }

  /**
   * Get contributorPrefix
   * @return contributorPrefix
   */
  @javax.annotation.Nullable
  public String getContributorPrefix() {
    return contributorPrefix;
  }

  public void setContributorPrefix(String contributorPrefix) {
    this.contributorPrefix = contributorPrefix;
  }


  public ScheduleAEfile contributorState(String contributorState) {
    this.contributorState = contributorState;
    return this;
  }

  /**
   * State of contributor
   * @return contributorState
   */
  @javax.annotation.Nullable
  public String getContributorState() {
    return contributorState;
  }

  public void setContributorState(String contributorState) {
    this.contributorState = contributorState;
  }


  public ScheduleAEfile contributorSuffix(String contributorSuffix) {
    this.contributorSuffix = contributorSuffix;
    return this;
  }

  /**
   * Get contributorSuffix
   * @return contributorSuffix
   */
  @javax.annotation.Nullable
  public String getContributorSuffix() {
    return contributorSuffix;
  }

  public void setContributorSuffix(String contributorSuffix) {
    this.contributorSuffix = contributorSuffix;
  }


  public ScheduleAEfile contributorZip(String contributorZip) {
    this.contributorZip = contributorZip;
    return this;
  }

  /**
   * Zip code of contributor
   * @return contributorZip
   */
  @javax.annotation.Nullable
  public String getContributorZip() {
    return contributorZip;
  }

  public void setContributorZip(String contributorZip) {
    this.contributorZip = contributorZip;
  }


  public ScheduleAEfile csvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
    return this;
  }

  /**
   * Get csvUrl
   * @return csvUrl
   */
  @javax.annotation.Nullable
  public String getCsvUrl() {
    return csvUrl;
  }

  public void setCsvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
  }


  public ScheduleAEfile cycle(Integer cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nullable
  public Integer getCycle() {
    return cycle;
  }

  public void setCycle(Integer cycle) {
    this.cycle = cycle;
  }


  public ScheduleAEfile entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleAEfile fecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
    return this;
  }

  /**
   * Get fecElectionTypeDesc
   * @return fecElectionTypeDesc
   */
  @javax.annotation.Nullable
  public String getFecElectionTypeDesc() {
    return fecElectionTypeDesc;
  }

  public void setFecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
  }


  public ScheduleAEfile fecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
    return this;
  }

  /**
   * Get fecUrl
   * @return fecUrl
   */
  @javax.annotation.Nullable
  public String getFecUrl() {
    return fecUrl;
  }

  public void setFecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
  }


  public ScheduleAEfile fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nonnull
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleAEfile filing(EFilings filing) {
    this.filing = filing;
    return this;
  }

  /**
   * Get filing
   * @return filing
   */
  @javax.annotation.Nullable
  public EFilings getFiling() {
    return filing;
  }

  public void setFiling(EFilings filing) {
    this.filing = filing;
  }


  public ScheduleAEfile imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   *  An unique identifier for each page where the electronic or paper filing is reported. 
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleAEfile lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleAEfile loadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
    return this;
  }

  /**
   * Get loadTimestamp
   * @return loadTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadTimestamp() {
    return loadTimestamp;
  }

  public void setLoadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
  }


  public ScheduleAEfile memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleAEfile memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleAEfile pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleAEfile pgo(String pgo) {
    this.pgo = pgo;
    return this;
  }

  /**
   * Get pgo
   * @return pgo
   */
  @javax.annotation.Nullable
  public String getPgo() {
    return pgo;
  }

  public void setPgo(String pgo) {
    this.pgo = pgo;
  }


  public ScheduleAEfile relatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
    return this;
  }

  /**
   * Get relatedLineNumber
   * @return relatedLineNumber
   */
  @javax.annotation.Nonnull
  public Integer getRelatedLineNumber() {
    return relatedLineNumber;
  }

  public void setRelatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
  }


  public ScheduleAEfile reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleAEfile transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleAEfile scheduleAEfile = (ScheduleAEfile) o;
    return Objects.equals(this.amendmentIndicator, scheduleAEfile.amendmentIndicator) &&
        Objects.equals(this.backReferenceScheduleName, scheduleAEfile.backReferenceScheduleName) &&
        Objects.equals(this.backReferenceTransactionId, scheduleAEfile.backReferenceTransactionId) &&
        Objects.equals(this.beginningImageNumber, scheduleAEfile.beginningImageNumber) &&
        Objects.equals(this.committee, scheduleAEfile.committee) &&
        Objects.equals(this.committeeId, scheduleAEfile.committeeId) &&
        Objects.equals(this.conduitCommitteeCity, scheduleAEfile.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeId, scheduleAEfile.conduitCommitteeId) &&
        Objects.equals(this.conduitCommitteeName, scheduleAEfile.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, scheduleAEfile.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, scheduleAEfile.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, scheduleAEfile.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, scheduleAEfile.conduitCommitteeZip) &&
        Objects.equals(this.contributionReceiptAmount, scheduleAEfile.contributionReceiptAmount) &&
        Objects.equals(this.contributionReceiptDate, scheduleAEfile.contributionReceiptDate) &&
        Objects.equals(this.contributorAggregateYtd, scheduleAEfile.contributorAggregateYtd) &&
        Objects.equals(this.contributorCity, scheduleAEfile.contributorCity) &&
        Objects.equals(this.contributorEmployer, scheduleAEfile.contributorEmployer) &&
        Objects.equals(this.contributorFirstName, scheduleAEfile.contributorFirstName) &&
        Objects.equals(this.contributorLastName, scheduleAEfile.contributorLastName) &&
        Objects.equals(this.contributorMiddleName, scheduleAEfile.contributorMiddleName) &&
        Objects.equals(this.contributorName, scheduleAEfile.contributorName) &&
        Objects.equals(this.contributorOccupation, scheduleAEfile.contributorOccupation) &&
        Objects.equals(this.contributorPrefix, scheduleAEfile.contributorPrefix) &&
        Objects.equals(this.contributorState, scheduleAEfile.contributorState) &&
        Objects.equals(this.contributorSuffix, scheduleAEfile.contributorSuffix) &&
        Objects.equals(this.contributorZip, scheduleAEfile.contributorZip) &&
        Objects.equals(this.csvUrl, scheduleAEfile.csvUrl) &&
        Objects.equals(this.cycle, scheduleAEfile.cycle) &&
        Objects.equals(this.entityType, scheduleAEfile.entityType) &&
        Objects.equals(this.fecElectionTypeDesc, scheduleAEfile.fecElectionTypeDesc) &&
        Objects.equals(this.fecUrl, scheduleAEfile.fecUrl) &&
        Objects.equals(this.fileNumber, scheduleAEfile.fileNumber) &&
        Objects.equals(this.filing, scheduleAEfile.filing) &&
        Objects.equals(this.imageNumber, scheduleAEfile.imageNumber) &&
        Objects.equals(this.lineNumber, scheduleAEfile.lineNumber) &&
        Objects.equals(this.loadTimestamp, scheduleAEfile.loadTimestamp) &&
        Objects.equals(this.memoCode, scheduleAEfile.memoCode) &&
        Objects.equals(this.memoText, scheduleAEfile.memoText) &&
        Objects.equals(this.pdfUrl, scheduleAEfile.pdfUrl) &&
        Objects.equals(this.pgo, scheduleAEfile.pgo) &&
        Objects.equals(this.relatedLineNumber, scheduleAEfile.relatedLineNumber) &&
        Objects.equals(this.reportType, scheduleAEfile.reportType) &&
        Objects.equals(this.transactionId, scheduleAEfile.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentIndicator, backReferenceScheduleName, backReferenceTransactionId, beginningImageNumber, committee, committeeId, conduitCommitteeCity, conduitCommitteeId, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, contributionReceiptAmount, contributionReceiptDate, contributorAggregateYtd, contributorCity, contributorEmployer, contributorFirstName, contributorLastName, contributorMiddleName, contributorName, contributorOccupation, contributorPrefix, contributorState, contributorSuffix, contributorZip, csvUrl, cycle, entityType, fecElectionTypeDesc, fecUrl, fileNumber, filing, imageNumber, lineNumber, loadTimestamp, memoCode, memoText, pdfUrl, pgo, relatedLineNumber, reportType, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleAEfile {\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    backReferenceScheduleName: ").append(toIndentedString(backReferenceScheduleName)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    beginningImageNumber: ").append(toIndentedString(beginningImageNumber)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeId: ").append(toIndentedString(conduitCommitteeId)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    contributionReceiptAmount: ").append(toIndentedString(contributionReceiptAmount)).append("\n");
    sb.append("    contributionReceiptDate: ").append(toIndentedString(contributionReceiptDate)).append("\n");
    sb.append("    contributorAggregateYtd: ").append(toIndentedString(contributorAggregateYtd)).append("\n");
    sb.append("    contributorCity: ").append(toIndentedString(contributorCity)).append("\n");
    sb.append("    contributorEmployer: ").append(toIndentedString(contributorEmployer)).append("\n");
    sb.append("    contributorFirstName: ").append(toIndentedString(contributorFirstName)).append("\n");
    sb.append("    contributorLastName: ").append(toIndentedString(contributorLastName)).append("\n");
    sb.append("    contributorMiddleName: ").append(toIndentedString(contributorMiddleName)).append("\n");
    sb.append("    contributorName: ").append(toIndentedString(contributorName)).append("\n");
    sb.append("    contributorOccupation: ").append(toIndentedString(contributorOccupation)).append("\n");
    sb.append("    contributorPrefix: ").append(toIndentedString(contributorPrefix)).append("\n");
    sb.append("    contributorState: ").append(toIndentedString(contributorState)).append("\n");
    sb.append("    contributorSuffix: ").append(toIndentedString(contributorSuffix)).append("\n");
    sb.append("    contributorZip: ").append(toIndentedString(contributorZip)).append("\n");
    sb.append("    csvUrl: ").append(toIndentedString(csvUrl)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fecElectionTypeDesc: ").append(toIndentedString(fecElectionTypeDesc)).append("\n");
    sb.append("    fecUrl: ").append(toIndentedString(fecUrl)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filing: ").append(toIndentedString(filing)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    loadTimestamp: ").append(toIndentedString(loadTimestamp)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    pgo: ").append(toIndentedString(pgo)).append("\n");
    sb.append("    relatedLineNumber: ").append(toIndentedString(relatedLineNumber)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendment_indicator");
    openapiFields.add("back_reference_schedule_name");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("beginning_image_number");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_id");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("contribution_receipt_amount");
    openapiFields.add("contribution_receipt_date");
    openapiFields.add("contributor_aggregate_ytd");
    openapiFields.add("contributor_city");
    openapiFields.add("contributor_employer");
    openapiFields.add("contributor_first_name");
    openapiFields.add("contributor_last_name");
    openapiFields.add("contributor_middle_name");
    openapiFields.add("contributor_name");
    openapiFields.add("contributor_occupation");
    openapiFields.add("contributor_prefix");
    openapiFields.add("contributor_state");
    openapiFields.add("contributor_suffix");
    openapiFields.add("contributor_zip");
    openapiFields.add("csv_url");
    openapiFields.add("cycle");
    openapiFields.add("entity_type");
    openapiFields.add("fec_election_type_desc");
    openapiFields.add("fec_url");
    openapiFields.add("file_number");
    openapiFields.add("filing");
    openapiFields.add("image_number");
    openapiFields.add("line_number");
    openapiFields.add("load_timestamp");
    openapiFields.add("memo_code");
    openapiFields.add("memo_text");
    openapiFields.add("pdf_url");
    openapiFields.add("pgo");
    openapiFields.add("related_line_number");
    openapiFields.add("report_type");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("file_number");
    openapiRequiredFields.add("related_line_number");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleAEfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleAEfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleAEfile is not found in the empty JSON string", ScheduleAEfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleAEfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleAEfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScheduleAEfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_name") != null && !jsonObj.get("back_reference_schedule_name").isJsonNull()) && !jsonObj.get("back_reference_schedule_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_name").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("beginning_image_number") != null && !jsonObj.get("beginning_image_number").isJsonNull()) && !jsonObj.get("beginning_image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginning_image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginning_image_number").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_id") != null && !jsonObj.get("conduit_committee_id").isJsonNull()) && !jsonObj.get("conduit_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      if ((jsonObj.get("contributor_city") != null && !jsonObj.get("contributor_city").isJsonNull()) && !jsonObj.get("contributor_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_city").toString()));
      }
      if ((jsonObj.get("contributor_employer") != null && !jsonObj.get("contributor_employer").isJsonNull()) && !jsonObj.get("contributor_employer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_employer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_employer").toString()));
      }
      if ((jsonObj.get("contributor_first_name") != null && !jsonObj.get("contributor_first_name").isJsonNull()) && !jsonObj.get("contributor_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_first_name").toString()));
      }
      if ((jsonObj.get("contributor_last_name") != null && !jsonObj.get("contributor_last_name").isJsonNull()) && !jsonObj.get("contributor_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_last_name").toString()));
      }
      if ((jsonObj.get("contributor_middle_name") != null && !jsonObj.get("contributor_middle_name").isJsonNull()) && !jsonObj.get("contributor_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_middle_name").toString()));
      }
      if ((jsonObj.get("contributor_name") != null && !jsonObj.get("contributor_name").isJsonNull()) && !jsonObj.get("contributor_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_name").toString()));
      }
      if ((jsonObj.get("contributor_occupation") != null && !jsonObj.get("contributor_occupation").isJsonNull()) && !jsonObj.get("contributor_occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_occupation").toString()));
      }
      if ((jsonObj.get("contributor_prefix") != null && !jsonObj.get("contributor_prefix").isJsonNull()) && !jsonObj.get("contributor_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_prefix").toString()));
      }
      if ((jsonObj.get("contributor_state") != null && !jsonObj.get("contributor_state").isJsonNull()) && !jsonObj.get("contributor_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_state").toString()));
      }
      if ((jsonObj.get("contributor_suffix") != null && !jsonObj.get("contributor_suffix").isJsonNull()) && !jsonObj.get("contributor_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_suffix").toString()));
      }
      if ((jsonObj.get("contributor_zip") != null && !jsonObj.get("contributor_zip").isJsonNull()) && !jsonObj.get("contributor_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_zip").toString()));
      }
      if ((jsonObj.get("csv_url") != null && !jsonObj.get("csv_url").isJsonNull()) && !jsonObj.get("csv_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csv_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csv_url").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("fec_election_type_desc") != null && !jsonObj.get("fec_election_type_desc").isJsonNull()) && !jsonObj.get("fec_election_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_type_desc").toString()));
      }
      if ((jsonObj.get("fec_url") != null && !jsonObj.get("fec_url").isJsonNull()) && !jsonObj.get("fec_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_url").toString()));
      }
      // validate the optional field `filing`
      if (jsonObj.get("filing") != null && !jsonObj.get("filing").isJsonNull()) {
        EFilings.validateJsonElement(jsonObj.get("filing"));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("pgo") != null && !jsonObj.get("pgo").isJsonNull()) && !jsonObj.get("pgo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pgo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pgo").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleAEfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleAEfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleAEfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleAEfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleAEfile>() {
           @Override
           public void write(JsonWriter out, ScheduleAEfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleAEfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleAEfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleAEfile
   * @throws IOException if the JSON string is invalid with respect to ScheduleAEfile
   */
  public static ScheduleAEfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleAEfile.class);
  }

  /**
   * Convert an instance of ScheduleAEfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

