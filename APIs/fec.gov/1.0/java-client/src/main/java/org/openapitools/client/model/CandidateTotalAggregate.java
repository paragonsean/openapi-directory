/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CandidateTotalAggregate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CandidateTotalAggregate {
  public static final String SERIALIZED_NAME_DISTRICT = "district";
  @SerializedName(SERIALIZED_NAME_DISTRICT)
  private String district;

  public static final String SERIALIZED_NAME_DISTRICT_NUMBER = "district_number";
  @SerializedName(SERIALIZED_NAME_DISTRICT_NUMBER)
  private Integer districtNumber;

  public static final String SERIALIZED_NAME_ELECTION_YEAR = "election_year";
  @SerializedName(SERIALIZED_NAME_ELECTION_YEAR)
  private Integer electionYear;

  public static final String SERIALIZED_NAME_OFFICE = "office";
  @SerializedName(SERIALIZED_NAME_OFFICE)
  private String office;

  public static final String SERIALIZED_NAME_PARTY = "party";
  @SerializedName(SERIALIZED_NAME_PARTY)
  private String party;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATE_FULL = "state_full";
  @SerializedName(SERIALIZED_NAME_STATE_FULL)
  private String stateFull;

  public static final String SERIALIZED_NAME_TOTAL_CASH_ON_HAND_END_PERIOD = "total_cash_on_hand_end_period";
  @SerializedName(SERIALIZED_NAME_TOTAL_CASH_ON_HAND_END_PERIOD)
  private BigDecimal totalCashOnHandEndPeriod;

  public static final String SERIALIZED_NAME_TOTAL_DEBTS_OWED_BY_COMMITTEE = "total_debts_owed_by_committee";
  @SerializedName(SERIALIZED_NAME_TOTAL_DEBTS_OWED_BY_COMMITTEE)
  private BigDecimal totalDebtsOwedByCommittee;

  public static final String SERIALIZED_NAME_TOTAL_DISBURSEMENTS = "total_disbursements";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISBURSEMENTS)
  private BigDecimal totalDisbursements;

  public static final String SERIALIZED_NAME_TOTAL_INDIVIDUAL_ITEMIZED_CONTRIBUTIONS = "total_individual_itemized_contributions";
  @SerializedName(SERIALIZED_NAME_TOTAL_INDIVIDUAL_ITEMIZED_CONTRIBUTIONS)
  private BigDecimal totalIndividualItemizedContributions;

  public static final String SERIALIZED_NAME_TOTAL_OTHER_POLITICAL_COMMITTEE_CONTRIBUTIONS = "total_other_political_committee_contributions";
  @SerializedName(SERIALIZED_NAME_TOTAL_OTHER_POLITICAL_COMMITTEE_CONTRIBUTIONS)
  private BigDecimal totalOtherPoliticalCommitteeContributions;

  public static final String SERIALIZED_NAME_TOTAL_RECEIPTS = "total_receipts";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECEIPTS)
  private BigDecimal totalReceipts;

  public static final String SERIALIZED_NAME_TOTAL_TRANSFERS_FROM_OTHER_AUTHORIZED_COMMITTEE = "total_transfers_from_other_authorized_committee";
  @SerializedName(SERIALIZED_NAME_TOTAL_TRANSFERS_FROM_OTHER_AUTHORIZED_COMMITTEE)
  private BigDecimal totalTransfersFromOtherAuthorizedCommittee;

  public CandidateTotalAggregate() {
  }

  public CandidateTotalAggregate district(String district) {
    this.district = district;
    return this;
  }

  /**
   * Get district
   * @return district
   */
  @javax.annotation.Nullable
  public String getDistrict() {
    return district;
  }

  public void setDistrict(String district) {
    this.district = district;
  }


  public CandidateTotalAggregate districtNumber(Integer districtNumber) {
    this.districtNumber = districtNumber;
    return this;
  }

  /**
   * Get districtNumber
   * @return districtNumber
   */
  @javax.annotation.Nullable
  public Integer getDistrictNumber() {
    return districtNumber;
  }

  public void setDistrictNumber(Integer districtNumber) {
    this.districtNumber = districtNumber;
  }


  public CandidateTotalAggregate electionYear(Integer electionYear) {
    this.electionYear = electionYear;
    return this;
  }

  /**
   * Get electionYear
   * @return electionYear
   */
  @javax.annotation.Nullable
  public Integer getElectionYear() {
    return electionYear;
  }

  public void setElectionYear(Integer electionYear) {
    this.electionYear = electionYear;
  }


  public CandidateTotalAggregate office(String office) {
    this.office = office;
    return this;
  }

  /**
   * Get office
   * @return office
   */
  @javax.annotation.Nullable
  public String getOffice() {
    return office;
  }

  public void setOffice(String office) {
    this.office = office;
  }


  public CandidateTotalAggregate party(String party) {
    this.party = party;
    return this;
  }

  /**
   * Get party
   * @return party
   */
  @javax.annotation.Nullable
  public String getParty() {
    return party;
  }

  public void setParty(String party) {
    this.party = party;
  }


  public CandidateTotalAggregate state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public CandidateTotalAggregate stateFull(String stateFull) {
    this.stateFull = stateFull;
    return this;
  }

  /**
   * Get stateFull
   * @return stateFull
   */
  @javax.annotation.Nullable
  public String getStateFull() {
    return stateFull;
  }

  public void setStateFull(String stateFull) {
    this.stateFull = stateFull;
  }


  public CandidateTotalAggregate totalCashOnHandEndPeriod(BigDecimal totalCashOnHandEndPeriod) {
    this.totalCashOnHandEndPeriod = totalCashOnHandEndPeriod;
    return this;
  }

  /**
   * Get totalCashOnHandEndPeriod
   * @return totalCashOnHandEndPeriod
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalCashOnHandEndPeriod() {
    return totalCashOnHandEndPeriod;
  }

  public void setTotalCashOnHandEndPeriod(BigDecimal totalCashOnHandEndPeriod) {
    this.totalCashOnHandEndPeriod = totalCashOnHandEndPeriod;
  }


  public CandidateTotalAggregate totalDebtsOwedByCommittee(BigDecimal totalDebtsOwedByCommittee) {
    this.totalDebtsOwedByCommittee = totalDebtsOwedByCommittee;
    return this;
  }

  /**
   * Get totalDebtsOwedByCommittee
   * @return totalDebtsOwedByCommittee
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalDebtsOwedByCommittee() {
    return totalDebtsOwedByCommittee;
  }

  public void setTotalDebtsOwedByCommittee(BigDecimal totalDebtsOwedByCommittee) {
    this.totalDebtsOwedByCommittee = totalDebtsOwedByCommittee;
  }


  public CandidateTotalAggregate totalDisbursements(BigDecimal totalDisbursements) {
    this.totalDisbursements = totalDisbursements;
    return this;
  }

  /**
   * Get totalDisbursements
   * @return totalDisbursements
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalDisbursements() {
    return totalDisbursements;
  }

  public void setTotalDisbursements(BigDecimal totalDisbursements) {
    this.totalDisbursements = totalDisbursements;
  }


  public CandidateTotalAggregate totalIndividualItemizedContributions(BigDecimal totalIndividualItemizedContributions) {
    this.totalIndividualItemizedContributions = totalIndividualItemizedContributions;
    return this;
  }

  /**
   * Get totalIndividualItemizedContributions
   * @return totalIndividualItemizedContributions
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalIndividualItemizedContributions() {
    return totalIndividualItemizedContributions;
  }

  public void setTotalIndividualItemizedContributions(BigDecimal totalIndividualItemizedContributions) {
    this.totalIndividualItemizedContributions = totalIndividualItemizedContributions;
  }


  public CandidateTotalAggregate totalOtherPoliticalCommitteeContributions(BigDecimal totalOtherPoliticalCommitteeContributions) {
    this.totalOtherPoliticalCommitteeContributions = totalOtherPoliticalCommitteeContributions;
    return this;
  }

  /**
   * Get totalOtherPoliticalCommitteeContributions
   * @return totalOtherPoliticalCommitteeContributions
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalOtherPoliticalCommitteeContributions() {
    return totalOtherPoliticalCommitteeContributions;
  }

  public void setTotalOtherPoliticalCommitteeContributions(BigDecimal totalOtherPoliticalCommitteeContributions) {
    this.totalOtherPoliticalCommitteeContributions = totalOtherPoliticalCommitteeContributions;
  }


  public CandidateTotalAggregate totalReceipts(BigDecimal totalReceipts) {
    this.totalReceipts = totalReceipts;
    return this;
  }

  /**
   * Get totalReceipts
   * @return totalReceipts
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalReceipts() {
    return totalReceipts;
  }

  public void setTotalReceipts(BigDecimal totalReceipts) {
    this.totalReceipts = totalReceipts;
  }


  public CandidateTotalAggregate totalTransfersFromOtherAuthorizedCommittee(BigDecimal totalTransfersFromOtherAuthorizedCommittee) {
    this.totalTransfersFromOtherAuthorizedCommittee = totalTransfersFromOtherAuthorizedCommittee;
    return this;
  }

  /**
   * Get totalTransfersFromOtherAuthorizedCommittee
   * @return totalTransfersFromOtherAuthorizedCommittee
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalTransfersFromOtherAuthorizedCommittee() {
    return totalTransfersFromOtherAuthorizedCommittee;
  }

  public void setTotalTransfersFromOtherAuthorizedCommittee(BigDecimal totalTransfersFromOtherAuthorizedCommittee) {
    this.totalTransfersFromOtherAuthorizedCommittee = totalTransfersFromOtherAuthorizedCommittee;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandidateTotalAggregate candidateTotalAggregate = (CandidateTotalAggregate) o;
    return Objects.equals(this.district, candidateTotalAggregate.district) &&
        Objects.equals(this.districtNumber, candidateTotalAggregate.districtNumber) &&
        Objects.equals(this.electionYear, candidateTotalAggregate.electionYear) &&
        Objects.equals(this.office, candidateTotalAggregate.office) &&
        Objects.equals(this.party, candidateTotalAggregate.party) &&
        Objects.equals(this.state, candidateTotalAggregate.state) &&
        Objects.equals(this.stateFull, candidateTotalAggregate.stateFull) &&
        Objects.equals(this.totalCashOnHandEndPeriod, candidateTotalAggregate.totalCashOnHandEndPeriod) &&
        Objects.equals(this.totalDebtsOwedByCommittee, candidateTotalAggregate.totalDebtsOwedByCommittee) &&
        Objects.equals(this.totalDisbursements, candidateTotalAggregate.totalDisbursements) &&
        Objects.equals(this.totalIndividualItemizedContributions, candidateTotalAggregate.totalIndividualItemizedContributions) &&
        Objects.equals(this.totalOtherPoliticalCommitteeContributions, candidateTotalAggregate.totalOtherPoliticalCommitteeContributions) &&
        Objects.equals(this.totalReceipts, candidateTotalAggregate.totalReceipts) &&
        Objects.equals(this.totalTransfersFromOtherAuthorizedCommittee, candidateTotalAggregate.totalTransfersFromOtherAuthorizedCommittee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(district, districtNumber, electionYear, office, party, state, stateFull, totalCashOnHandEndPeriod, totalDebtsOwedByCommittee, totalDisbursements, totalIndividualItemizedContributions, totalOtherPoliticalCommitteeContributions, totalReceipts, totalTransfersFromOtherAuthorizedCommittee);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandidateTotalAggregate {\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    districtNumber: ").append(toIndentedString(districtNumber)).append("\n");
    sb.append("    electionYear: ").append(toIndentedString(electionYear)).append("\n");
    sb.append("    office: ").append(toIndentedString(office)).append("\n");
    sb.append("    party: ").append(toIndentedString(party)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateFull: ").append(toIndentedString(stateFull)).append("\n");
    sb.append("    totalCashOnHandEndPeriod: ").append(toIndentedString(totalCashOnHandEndPeriod)).append("\n");
    sb.append("    totalDebtsOwedByCommittee: ").append(toIndentedString(totalDebtsOwedByCommittee)).append("\n");
    sb.append("    totalDisbursements: ").append(toIndentedString(totalDisbursements)).append("\n");
    sb.append("    totalIndividualItemizedContributions: ").append(toIndentedString(totalIndividualItemizedContributions)).append("\n");
    sb.append("    totalOtherPoliticalCommitteeContributions: ").append(toIndentedString(totalOtherPoliticalCommitteeContributions)).append("\n");
    sb.append("    totalReceipts: ").append(toIndentedString(totalReceipts)).append("\n");
    sb.append("    totalTransfersFromOtherAuthorizedCommittee: ").append(toIndentedString(totalTransfersFromOtherAuthorizedCommittee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("district");
    openapiFields.add("district_number");
    openapiFields.add("election_year");
    openapiFields.add("office");
    openapiFields.add("party");
    openapiFields.add("state");
    openapiFields.add("state_full");
    openapiFields.add("total_cash_on_hand_end_period");
    openapiFields.add("total_debts_owed_by_committee");
    openapiFields.add("total_disbursements");
    openapiFields.add("total_individual_itemized_contributions");
    openapiFields.add("total_other_political_committee_contributions");
    openapiFields.add("total_receipts");
    openapiFields.add("total_transfers_from_other_authorized_committee");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CandidateTotalAggregate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CandidateTotalAggregate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CandidateTotalAggregate is not found in the empty JSON string", CandidateTotalAggregate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CandidateTotalAggregate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CandidateTotalAggregate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("district") != null && !jsonObj.get("district").isJsonNull()) && !jsonObj.get("district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("district").toString()));
      }
      if ((jsonObj.get("office") != null && !jsonObj.get("office").isJsonNull()) && !jsonObj.get("office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("office").toString()));
      }
      if ((jsonObj.get("party") != null && !jsonObj.get("party").isJsonNull()) && !jsonObj.get("party").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("state_full") != null && !jsonObj.get("state_full").isJsonNull()) && !jsonObj.get("state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_full").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CandidateTotalAggregate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CandidateTotalAggregate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CandidateTotalAggregate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CandidateTotalAggregate.class));

       return (TypeAdapter<T>) new TypeAdapter<CandidateTotalAggregate>() {
           @Override
           public void write(JsonWriter out, CandidateTotalAggregate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CandidateTotalAggregate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CandidateTotalAggregate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CandidateTotalAggregate
   * @throws IOException if the JSON string is invalid with respect to CandidateTotalAggregate
   */
  public static CandidateTotalAggregate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CandidateTotalAggregate.class);
  }

  /**
   * Convert an instance of CandidateTotalAggregate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

