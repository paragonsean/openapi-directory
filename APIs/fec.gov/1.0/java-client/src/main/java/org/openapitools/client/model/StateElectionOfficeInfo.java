/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StateElectionOfficeInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StateElectionOfficeInfo {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "address_line1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "address_line2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "fax_number";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  private String faxNumber;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS1 = "mailing_address1";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS1)
  private String mailingAddress1;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS2 = "mailing_address2";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS2)
  private String mailingAddress2;

  public static final String SERIALIZED_NAME_MAILING_CITY = "mailing_city";
  @SerializedName(SERIALIZED_NAME_MAILING_CITY)
  private String mailingCity;

  public static final String SERIALIZED_NAME_MAILING_STATE = "mailing_state";
  @SerializedName(SERIALIZED_NAME_MAILING_STATE)
  private String mailingState;

  public static final String SERIALIZED_NAME_MAILING_ZIPCODE = "mailing_zipcode";
  @SerializedName(SERIALIZED_NAME_MAILING_ZIPCODE)
  private String mailingZipcode;

  public static final String SERIALIZED_NAME_OFFICE_NAME = "office_name";
  @SerializedName(SERIALIZED_NAME_OFFICE_NAME)
  private String officeName;

  public static final String SERIALIZED_NAME_OFFICE_TYPE = "office_type";
  @SerializedName(SERIALIZED_NAME_OFFICE_TYPE)
  private String officeType;

  public static final String SERIALIZED_NAME_PRIMARY_PHONE_NUMBER = "primary_phone_number";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PHONE_NUMBER)
  private String primaryPhoneNumber;

  public static final String SERIALIZED_NAME_SECONDARY_PHONE_NUMBER = "secondary_phone_number";
  @SerializedName(SERIALIZED_NAME_SECONDARY_PHONE_NUMBER)
  private String secondaryPhoneNumber;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATE_FULL_NAME = "state_full_name";
  @SerializedName(SERIALIZED_NAME_STATE_FULL_NAME)
  private String stateFullName;

  public static final String SERIALIZED_NAME_WEBSITE_URL1 = "website_url1";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL1)
  private String websiteUrl1;

  public static final String SERIALIZED_NAME_WEBSITE_URL2 = "website_url2";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL2)
  private String websiteUrl2;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zip_code";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;

  public StateElectionOfficeInfo() {
  }

  public StateElectionOfficeInfo addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public StateElectionOfficeInfo addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public StateElectionOfficeInfo city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public StateElectionOfficeInfo email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public StateElectionOfficeInfo faxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

  /**
   * Get faxNumber
   * @return faxNumber
   */
  @javax.annotation.Nullable
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public StateElectionOfficeInfo mailingAddress1(String mailingAddress1) {
    this.mailingAddress1 = mailingAddress1;
    return this;
  }

  /**
   * Get mailingAddress1
   * @return mailingAddress1
   */
  @javax.annotation.Nullable
  public String getMailingAddress1() {
    return mailingAddress1;
  }

  public void setMailingAddress1(String mailingAddress1) {
    this.mailingAddress1 = mailingAddress1;
  }


  public StateElectionOfficeInfo mailingAddress2(String mailingAddress2) {
    this.mailingAddress2 = mailingAddress2;
    return this;
  }

  /**
   * Get mailingAddress2
   * @return mailingAddress2
   */
  @javax.annotation.Nullable
  public String getMailingAddress2() {
    return mailingAddress2;
  }

  public void setMailingAddress2(String mailingAddress2) {
    this.mailingAddress2 = mailingAddress2;
  }


  public StateElectionOfficeInfo mailingCity(String mailingCity) {
    this.mailingCity = mailingCity;
    return this;
  }

  /**
   * Get mailingCity
   * @return mailingCity
   */
  @javax.annotation.Nullable
  public String getMailingCity() {
    return mailingCity;
  }

  public void setMailingCity(String mailingCity) {
    this.mailingCity = mailingCity;
  }


  public StateElectionOfficeInfo mailingState(String mailingState) {
    this.mailingState = mailingState;
    return this;
  }

  /**
   * Get mailingState
   * @return mailingState
   */
  @javax.annotation.Nullable
  public String getMailingState() {
    return mailingState;
  }

  public void setMailingState(String mailingState) {
    this.mailingState = mailingState;
  }


  public StateElectionOfficeInfo mailingZipcode(String mailingZipcode) {
    this.mailingZipcode = mailingZipcode;
    return this;
  }

  /**
   * Get mailingZipcode
   * @return mailingZipcode
   */
  @javax.annotation.Nullable
  public String getMailingZipcode() {
    return mailingZipcode;
  }

  public void setMailingZipcode(String mailingZipcode) {
    this.mailingZipcode = mailingZipcode;
  }


  public StateElectionOfficeInfo officeName(String officeName) {
    this.officeName = officeName;
    return this;
  }

  /**
   * Get officeName
   * @return officeName
   */
  @javax.annotation.Nullable
  public String getOfficeName() {
    return officeName;
  }

  public void setOfficeName(String officeName) {
    this.officeName = officeName;
  }


  public StateElectionOfficeInfo officeType(String officeType) {
    this.officeType = officeType;
    return this;
  }

  /**
   * Get officeType
   * @return officeType
   */
  @javax.annotation.Nonnull
  public String getOfficeType() {
    return officeType;
  }

  public void setOfficeType(String officeType) {
    this.officeType = officeType;
  }


  public StateElectionOfficeInfo primaryPhoneNumber(String primaryPhoneNumber) {
    this.primaryPhoneNumber = primaryPhoneNumber;
    return this;
  }

  /**
   * Get primaryPhoneNumber
   * @return primaryPhoneNumber
   */
  @javax.annotation.Nullable
  public String getPrimaryPhoneNumber() {
    return primaryPhoneNumber;
  }

  public void setPrimaryPhoneNumber(String primaryPhoneNumber) {
    this.primaryPhoneNumber = primaryPhoneNumber;
  }


  public StateElectionOfficeInfo secondaryPhoneNumber(String secondaryPhoneNumber) {
    this.secondaryPhoneNumber = secondaryPhoneNumber;
    return this;
  }

  /**
   * Get secondaryPhoneNumber
   * @return secondaryPhoneNumber
   */
  @javax.annotation.Nullable
  public String getSecondaryPhoneNumber() {
    return secondaryPhoneNumber;
  }

  public void setSecondaryPhoneNumber(String secondaryPhoneNumber) {
    this.secondaryPhoneNumber = secondaryPhoneNumber;
  }


  public StateElectionOfficeInfo state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nonnull
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public StateElectionOfficeInfo stateFullName(String stateFullName) {
    this.stateFullName = stateFullName;
    return this;
  }

  /**
   * Get stateFullName
   * @return stateFullName
   */
  @javax.annotation.Nullable
  public String getStateFullName() {
    return stateFullName;
  }

  public void setStateFullName(String stateFullName) {
    this.stateFullName = stateFullName;
  }


  public StateElectionOfficeInfo websiteUrl1(String websiteUrl1) {
    this.websiteUrl1 = websiteUrl1;
    return this;
  }

  /**
   * Get websiteUrl1
   * @return websiteUrl1
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl1() {
    return websiteUrl1;
  }

  public void setWebsiteUrl1(String websiteUrl1) {
    this.websiteUrl1 = websiteUrl1;
  }


  public StateElectionOfficeInfo websiteUrl2(String websiteUrl2) {
    this.websiteUrl2 = websiteUrl2;
    return this;
  }

  /**
   * Get websiteUrl2
   * @return websiteUrl2
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl2() {
    return websiteUrl2;
  }

  public void setWebsiteUrl2(String websiteUrl2) {
    this.websiteUrl2 = websiteUrl2;
  }


  public StateElectionOfficeInfo zipCode(String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

  /**
   * Get zipCode
   * @return zipCode
   */
  @javax.annotation.Nullable
  public String getZipCode() {
    return zipCode;
  }

  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StateElectionOfficeInfo stateElectionOfficeInfo = (StateElectionOfficeInfo) o;
    return Objects.equals(this.addressLine1, stateElectionOfficeInfo.addressLine1) &&
        Objects.equals(this.addressLine2, stateElectionOfficeInfo.addressLine2) &&
        Objects.equals(this.city, stateElectionOfficeInfo.city) &&
        Objects.equals(this.email, stateElectionOfficeInfo.email) &&
        Objects.equals(this.faxNumber, stateElectionOfficeInfo.faxNumber) &&
        Objects.equals(this.mailingAddress1, stateElectionOfficeInfo.mailingAddress1) &&
        Objects.equals(this.mailingAddress2, stateElectionOfficeInfo.mailingAddress2) &&
        Objects.equals(this.mailingCity, stateElectionOfficeInfo.mailingCity) &&
        Objects.equals(this.mailingState, stateElectionOfficeInfo.mailingState) &&
        Objects.equals(this.mailingZipcode, stateElectionOfficeInfo.mailingZipcode) &&
        Objects.equals(this.officeName, stateElectionOfficeInfo.officeName) &&
        Objects.equals(this.officeType, stateElectionOfficeInfo.officeType) &&
        Objects.equals(this.primaryPhoneNumber, stateElectionOfficeInfo.primaryPhoneNumber) &&
        Objects.equals(this.secondaryPhoneNumber, stateElectionOfficeInfo.secondaryPhoneNumber) &&
        Objects.equals(this.state, stateElectionOfficeInfo.state) &&
        Objects.equals(this.stateFullName, stateElectionOfficeInfo.stateFullName) &&
        Objects.equals(this.websiteUrl1, stateElectionOfficeInfo.websiteUrl1) &&
        Objects.equals(this.websiteUrl2, stateElectionOfficeInfo.websiteUrl2) &&
        Objects.equals(this.zipCode, stateElectionOfficeInfo.zipCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, city, email, faxNumber, mailingAddress1, mailingAddress2, mailingCity, mailingState, mailingZipcode, officeName, officeType, primaryPhoneNumber, secondaryPhoneNumber, state, stateFullName, websiteUrl1, websiteUrl2, zipCode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StateElectionOfficeInfo {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    mailingAddress1: ").append(toIndentedString(mailingAddress1)).append("\n");
    sb.append("    mailingAddress2: ").append(toIndentedString(mailingAddress2)).append("\n");
    sb.append("    mailingCity: ").append(toIndentedString(mailingCity)).append("\n");
    sb.append("    mailingState: ").append(toIndentedString(mailingState)).append("\n");
    sb.append("    mailingZipcode: ").append(toIndentedString(mailingZipcode)).append("\n");
    sb.append("    officeName: ").append(toIndentedString(officeName)).append("\n");
    sb.append("    officeType: ").append(toIndentedString(officeType)).append("\n");
    sb.append("    primaryPhoneNumber: ").append(toIndentedString(primaryPhoneNumber)).append("\n");
    sb.append("    secondaryPhoneNumber: ").append(toIndentedString(secondaryPhoneNumber)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateFullName: ").append(toIndentedString(stateFullName)).append("\n");
    sb.append("    websiteUrl1: ").append(toIndentedString(websiteUrl1)).append("\n");
    sb.append("    websiteUrl2: ").append(toIndentedString(websiteUrl2)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address_line1");
    openapiFields.add("address_line2");
    openapiFields.add("city");
    openapiFields.add("email");
    openapiFields.add("fax_number");
    openapiFields.add("mailing_address1");
    openapiFields.add("mailing_address2");
    openapiFields.add("mailing_city");
    openapiFields.add("mailing_state");
    openapiFields.add("mailing_zipcode");
    openapiFields.add("office_name");
    openapiFields.add("office_type");
    openapiFields.add("primary_phone_number");
    openapiFields.add("secondary_phone_number");
    openapiFields.add("state");
    openapiFields.add("state_full_name");
    openapiFields.add("website_url1");
    openapiFields.add("website_url2");
    openapiFields.add("zip_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("office_type");
    openapiRequiredFields.add("state");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StateElectionOfficeInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StateElectionOfficeInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StateElectionOfficeInfo is not found in the empty JSON string", StateElectionOfficeInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StateElectionOfficeInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StateElectionOfficeInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StateElectionOfficeInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address_line1") != null && !jsonObj.get("address_line1").isJsonNull()) && !jsonObj.get("address_line1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_line1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line1").toString()));
      }
      if ((jsonObj.get("address_line2") != null && !jsonObj.get("address_line2").isJsonNull()) && !jsonObj.get("address_line2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_line2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line2").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("fax_number") != null && !jsonObj.get("fax_number").isJsonNull()) && !jsonObj.get("fax_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax_number").toString()));
      }
      if ((jsonObj.get("mailing_address1") != null && !jsonObj.get("mailing_address1").isJsonNull()) && !jsonObj.get("mailing_address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailing_address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailing_address1").toString()));
      }
      if ((jsonObj.get("mailing_address2") != null && !jsonObj.get("mailing_address2").isJsonNull()) && !jsonObj.get("mailing_address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailing_address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailing_address2").toString()));
      }
      if ((jsonObj.get("mailing_city") != null && !jsonObj.get("mailing_city").isJsonNull()) && !jsonObj.get("mailing_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailing_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailing_city").toString()));
      }
      if ((jsonObj.get("mailing_state") != null && !jsonObj.get("mailing_state").isJsonNull()) && !jsonObj.get("mailing_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailing_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailing_state").toString()));
      }
      if ((jsonObj.get("mailing_zipcode") != null && !jsonObj.get("mailing_zipcode").isJsonNull()) && !jsonObj.get("mailing_zipcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailing_zipcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailing_zipcode").toString()));
      }
      if ((jsonObj.get("office_name") != null && !jsonObj.get("office_name").isJsonNull()) && !jsonObj.get("office_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `office_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("office_name").toString()));
      }
      if (!jsonObj.get("office_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `office_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("office_type").toString()));
      }
      if ((jsonObj.get("primary_phone_number") != null && !jsonObj.get("primary_phone_number").isJsonNull()) && !jsonObj.get("primary_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_phone_number").toString()));
      }
      if ((jsonObj.get("secondary_phone_number") != null && !jsonObj.get("secondary_phone_number").isJsonNull()) && !jsonObj.get("secondary_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondary_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondary_phone_number").toString()));
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("state_full_name") != null && !jsonObj.get("state_full_name").isJsonNull()) && !jsonObj.get("state_full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_full_name").toString()));
      }
      if ((jsonObj.get("website_url1") != null && !jsonObj.get("website_url1").isJsonNull()) && !jsonObj.get("website_url1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_url1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website_url1").toString()));
      }
      if ((jsonObj.get("website_url2") != null && !jsonObj.get("website_url2").isJsonNull()) && !jsonObj.get("website_url2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_url2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website_url2").toString()));
      }
      if ((jsonObj.get("zip_code") != null && !jsonObj.get("zip_code").isJsonNull()) && !jsonObj.get("zip_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zip_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zip_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StateElectionOfficeInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StateElectionOfficeInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StateElectionOfficeInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StateElectionOfficeInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<StateElectionOfficeInfo>() {
           @Override
           public void write(JsonWriter out, StateElectionOfficeInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StateElectionOfficeInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StateElectionOfficeInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StateElectionOfficeInfo
   * @throws IOException if the JSON string is invalid with respect to StateElectionOfficeInfo
   */
  public static StateElectionOfficeInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StateElectionOfficeInfo.class);
  }

  /**
   * Convert an instance of StateElectionOfficeInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

