/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LegalSearchGetDefaultResponseAdminFinesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LegalSearchGetDefaultResponseAdminFinesInner {
  public static final String SERIALIZED_NAME_CHALLENGE_OUTCOME = "challenge_outcome";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_OUTCOME)
  private String challengeOutcome;

  public static final String SERIALIZED_NAME_CHALLENGE_RECEIPT_DATE = "challenge_receipt_date";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_RECEIPT_DATE)
  private LocalDate challengeReceiptDate;

  public static final String SERIALIZED_NAME_CHECK_AMOUNT = "check_amount";
  @SerializedName(SERIALIZED_NAME_CHECK_AMOUNT)
  private BigDecimal checkAmount;

  public static final String SERIALIZED_NAME_COMMISSION_VOTES = "commission_votes";
  @SerializedName(SERIALIZED_NAME_COMMISSION_VOTES)
  private List<LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner> commissionVotes = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_DOC_ID = "doc_id";
  @SerializedName(SERIALIZED_NAME_DOC_ID)
  private String docId;

  public static final String SERIALIZED_NAME_DOCUMENT_HIGHLIGHTS = "document_highlights";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_HIGHLIGHTS)
  private Object documentHighlights;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner> documents = new ArrayList<>();

  public static final String SERIALIZED_NAME_FINAL_DETERMINATION_AMOUNT = "final_determination_amount";
  @SerializedName(SERIALIZED_NAME_FINAL_DETERMINATION_AMOUNT)
  private BigDecimal finalDeterminationAmount;

  public static final String SERIALIZED_NAME_FINAL_DETERMINATION_DATE = "final_determination_date";
  @SerializedName(SERIALIZED_NAME_FINAL_DETERMINATION_DATE)
  private LocalDate finalDeterminationDate;

  public static final String SERIALIZED_NAME_HIGHLIGHTS = "highlights";
  @SerializedName(SERIALIZED_NAME_HIGHLIGHTS)
  private List<String> highlights = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FALSE = "false";
  @SerializedName(SERIALIZED_NAME_FALSE)
  private String false;

  public static final String SERIALIZED_NAME_PETITION_COURT_DECISION_DATE = "petition_court_decision_date";
  @SerializedName(SERIALIZED_NAME_PETITION_COURT_DECISION_DATE)
  private LocalDate petitionCourtDecisionDate;

  public static final String SERIALIZED_NAME_PETITION_COURT_FILING_DATE = "petition_court_filing_date";
  @SerializedName(SERIALIZED_NAME_PETITION_COURT_FILING_DATE)
  private LocalDate petitionCourtFilingDate;

  public static final String SERIALIZED_NAME_REASON_TO_BELIEVE_ACTION_DATE = "reason_to_believe_action_date";
  @SerializedName(SERIALIZED_NAME_REASON_TO_BELIEVE_ACTION_DATE)
  private LocalDate reasonToBelieveActionDate;

  public static final String SERIALIZED_NAME_REASON_TO_BELIEVE_FINE_AMOUNT = "reason_to_believe_fine_amount";
  @SerializedName(SERIALIZED_NAME_REASON_TO_BELIEVE_FINE_AMOUNT)
  private BigDecimal reasonToBelieveFineAmount;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private String reportYear;

  public static final String SERIALIZED_NAME_TREASURY_REFERRAL_AMOUNT = "treasury_referral_amount";
  @SerializedName(SERIALIZED_NAME_TREASURY_REFERRAL_AMOUNT)
  private BigDecimal treasuryReferralAmount;

  public static final String SERIALIZED_NAME_TREASURY_REFERRAL_DATE = "treasury_referral_date";
  @SerializedName(SERIALIZED_NAME_TREASURY_REFERRAL_DATE)
  private LocalDate treasuryReferralDate;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public LegalSearchGetDefaultResponseAdminFinesInner() {
  }

  public LegalSearchGetDefaultResponseAdminFinesInner challengeOutcome(String challengeOutcome) {
    this.challengeOutcome = challengeOutcome;
    return this;
  }

  /**
   * Get challengeOutcome
   * @return challengeOutcome
   */
  @javax.annotation.Nullable
  public String getChallengeOutcome() {
    return challengeOutcome;
  }

  public void setChallengeOutcome(String challengeOutcome) {
    this.challengeOutcome = challengeOutcome;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner challengeReceiptDate(LocalDate challengeReceiptDate) {
    this.challengeReceiptDate = challengeReceiptDate;
    return this;
  }

  /**
   * Get challengeReceiptDate
   * @return challengeReceiptDate
   */
  @javax.annotation.Nullable
  public LocalDate getChallengeReceiptDate() {
    return challengeReceiptDate;
  }

  public void setChallengeReceiptDate(LocalDate challengeReceiptDate) {
    this.challengeReceiptDate = challengeReceiptDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner checkAmount(BigDecimal checkAmount) {
    this.checkAmount = checkAmount;
    return this;
  }

  /**
   * Get checkAmount
   * @return checkAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getCheckAmount() {
    return checkAmount;
  }

  public void setCheckAmount(BigDecimal checkAmount) {
    this.checkAmount = checkAmount;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner commissionVotes(List<LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner> commissionVotes) {
    this.commissionVotes = commissionVotes;
    return this;
  }

  public LegalSearchGetDefaultResponseAdminFinesInner addCommissionVotesItem(LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner commissionVotesItem) {
    if (this.commissionVotes == null) {
      this.commissionVotes = new ArrayList<>();
    }
    this.commissionVotes.add(commissionVotesItem);
    return this;
  }

  /**
   * Get commissionVotes
   * @return commissionVotes
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner> getCommissionVotes() {
    return commissionVotes;
  }

  public void setCommissionVotes(List<LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner> commissionVotes) {
    this.commissionVotes = commissionVotes;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   * Get committeeId
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner docId(String docId) {
    this.docId = docId;
    return this;
  }

  /**
   * Get docId
   * @return docId
   */
  @javax.annotation.Nullable
  public String getDocId() {
    return docId;
  }

  public void setDocId(String docId) {
    this.docId = docId;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner documentHighlights(Object documentHighlights) {
    this.documentHighlights = documentHighlights;
    return this;
  }

  /**
   * Get documentHighlights
   * @return documentHighlights
   */
  @javax.annotation.Nullable
  public Object getDocumentHighlights() {
    return documentHighlights;
  }

  public void setDocumentHighlights(Object documentHighlights) {
    this.documentHighlights = documentHighlights;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner documents(List<LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner> documents) {
    this.documents = documents;
    return this;
  }

  public LegalSearchGetDefaultResponseAdminFinesInner addDocumentsItem(LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

  /**
   * Get documents
   * @return documents
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner> getDocuments() {
    return documents;
  }

  public void setDocuments(List<LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner> documents) {
    this.documents = documents;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner finalDeterminationAmount(BigDecimal finalDeterminationAmount) {
    this.finalDeterminationAmount = finalDeterminationAmount;
    return this;
  }

  /**
   * Get finalDeterminationAmount
   * @return finalDeterminationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getFinalDeterminationAmount() {
    return finalDeterminationAmount;
  }

  public void setFinalDeterminationAmount(BigDecimal finalDeterminationAmount) {
    this.finalDeterminationAmount = finalDeterminationAmount;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner finalDeterminationDate(LocalDate finalDeterminationDate) {
    this.finalDeterminationDate = finalDeterminationDate;
    return this;
  }

  /**
   * Get finalDeterminationDate
   * @return finalDeterminationDate
   */
  @javax.annotation.Nullable
  public LocalDate getFinalDeterminationDate() {
    return finalDeterminationDate;
  }

  public void setFinalDeterminationDate(LocalDate finalDeterminationDate) {
    this.finalDeterminationDate = finalDeterminationDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner highlights(List<String> highlights) {
    this.highlights = highlights;
    return this;
  }

  public LegalSearchGetDefaultResponseAdminFinesInner addHighlightsItem(String highlightsItem) {
    if (this.highlights == null) {
      this.highlights = new ArrayList<>();
    }
    this.highlights.add(highlightsItem);
    return this;
  }

  /**
   * Get highlights
   * @return highlights
   */
  @javax.annotation.Nullable
  public List<String> getHighlights() {
    return highlights;
  }

  public void setHighlights(List<String> highlights) {
    this.highlights = highlights;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner false(String false) {
    this.false = false;
    return this;
  }

  /**
   * Get false
   * @return false
   */
  @javax.annotation.Nullable
  public String getFalse() {
    return false;
  }

  public void setFalse(String false) {
    this.false = false;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner petitionCourtDecisionDate(LocalDate petitionCourtDecisionDate) {
    this.petitionCourtDecisionDate = petitionCourtDecisionDate;
    return this;
  }

  /**
   * Get petitionCourtDecisionDate
   * @return petitionCourtDecisionDate
   */
  @javax.annotation.Nullable
  public LocalDate getPetitionCourtDecisionDate() {
    return petitionCourtDecisionDate;
  }

  public void setPetitionCourtDecisionDate(LocalDate petitionCourtDecisionDate) {
    this.petitionCourtDecisionDate = petitionCourtDecisionDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner petitionCourtFilingDate(LocalDate petitionCourtFilingDate) {
    this.petitionCourtFilingDate = petitionCourtFilingDate;
    return this;
  }

  /**
   * Get petitionCourtFilingDate
   * @return petitionCourtFilingDate
   */
  @javax.annotation.Nullable
  public LocalDate getPetitionCourtFilingDate() {
    return petitionCourtFilingDate;
  }

  public void setPetitionCourtFilingDate(LocalDate petitionCourtFilingDate) {
    this.petitionCourtFilingDate = petitionCourtFilingDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner reasonToBelieveActionDate(LocalDate reasonToBelieveActionDate) {
    this.reasonToBelieveActionDate = reasonToBelieveActionDate;
    return this;
  }

  /**
   * Get reasonToBelieveActionDate
   * @return reasonToBelieveActionDate
   */
  @javax.annotation.Nullable
  public LocalDate getReasonToBelieveActionDate() {
    return reasonToBelieveActionDate;
  }

  public void setReasonToBelieveActionDate(LocalDate reasonToBelieveActionDate) {
    this.reasonToBelieveActionDate = reasonToBelieveActionDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner reasonToBelieveFineAmount(BigDecimal reasonToBelieveFineAmount) {
    this.reasonToBelieveFineAmount = reasonToBelieveFineAmount;
    return this;
  }

  /**
   * Get reasonToBelieveFineAmount
   * @return reasonToBelieveFineAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getReasonToBelieveFineAmount() {
    return reasonToBelieveFineAmount;
  }

  public void setReasonToBelieveFineAmount(BigDecimal reasonToBelieveFineAmount) {
    this.reasonToBelieveFineAmount = reasonToBelieveFineAmount;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner reportYear(String reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   * Get reportYear
   * @return reportYear
   */
  @javax.annotation.Nullable
  public String getReportYear() {
    return reportYear;
  }

  public void setReportYear(String reportYear) {
    this.reportYear = reportYear;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner treasuryReferralAmount(BigDecimal treasuryReferralAmount) {
    this.treasuryReferralAmount = treasuryReferralAmount;
    return this;
  }

  /**
   * Get treasuryReferralAmount
   * @return treasuryReferralAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getTreasuryReferralAmount() {
    return treasuryReferralAmount;
  }

  public void setTreasuryReferralAmount(BigDecimal treasuryReferralAmount) {
    this.treasuryReferralAmount = treasuryReferralAmount;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner treasuryReferralDate(LocalDate treasuryReferralDate) {
    this.treasuryReferralDate = treasuryReferralDate;
    return this;
  }

  /**
   * Get treasuryReferralDate
   * @return treasuryReferralDate
   */
  @javax.annotation.Nullable
  public LocalDate getTreasuryReferralDate() {
    return treasuryReferralDate;
  }

  public void setTreasuryReferralDate(LocalDate treasuryReferralDate) {
    this.treasuryReferralDate = treasuryReferralDate;
  }


  public LegalSearchGetDefaultResponseAdminFinesInner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalSearchGetDefaultResponseAdminFinesInner legalSearchGetDefaultResponseAdminFinesInner = (LegalSearchGetDefaultResponseAdminFinesInner) o;
    return Objects.equals(this.challengeOutcome, legalSearchGetDefaultResponseAdminFinesInner.challengeOutcome) &&
        Objects.equals(this.challengeReceiptDate, legalSearchGetDefaultResponseAdminFinesInner.challengeReceiptDate) &&
        Objects.equals(this.checkAmount, legalSearchGetDefaultResponseAdminFinesInner.checkAmount) &&
        Objects.equals(this.commissionVotes, legalSearchGetDefaultResponseAdminFinesInner.commissionVotes) &&
        Objects.equals(this.committeeId, legalSearchGetDefaultResponseAdminFinesInner.committeeId) &&
        Objects.equals(this.docId, legalSearchGetDefaultResponseAdminFinesInner.docId) &&
        Objects.equals(this.documentHighlights, legalSearchGetDefaultResponseAdminFinesInner.documentHighlights) &&
        Objects.equals(this.documents, legalSearchGetDefaultResponseAdminFinesInner.documents) &&
        Objects.equals(this.finalDeterminationAmount, legalSearchGetDefaultResponseAdminFinesInner.finalDeterminationAmount) &&
        Objects.equals(this.finalDeterminationDate, legalSearchGetDefaultResponseAdminFinesInner.finalDeterminationDate) &&
        Objects.equals(this.highlights, legalSearchGetDefaultResponseAdminFinesInner.highlights) &&
        Objects.equals(this.name, legalSearchGetDefaultResponseAdminFinesInner.name) &&
        Objects.equals(this.false, legalSearchGetDefaultResponseAdminFinesInner.false) &&
        Objects.equals(this.petitionCourtDecisionDate, legalSearchGetDefaultResponseAdminFinesInner.petitionCourtDecisionDate) &&
        Objects.equals(this.petitionCourtFilingDate, legalSearchGetDefaultResponseAdminFinesInner.petitionCourtFilingDate) &&
        Objects.equals(this.reasonToBelieveActionDate, legalSearchGetDefaultResponseAdminFinesInner.reasonToBelieveActionDate) &&
        Objects.equals(this.reasonToBelieveFineAmount, legalSearchGetDefaultResponseAdminFinesInner.reasonToBelieveFineAmount) &&
        Objects.equals(this.reportType, legalSearchGetDefaultResponseAdminFinesInner.reportType) &&
        Objects.equals(this.reportYear, legalSearchGetDefaultResponseAdminFinesInner.reportYear) &&
        Objects.equals(this.treasuryReferralAmount, legalSearchGetDefaultResponseAdminFinesInner.treasuryReferralAmount) &&
        Objects.equals(this.treasuryReferralDate, legalSearchGetDefaultResponseAdminFinesInner.treasuryReferralDate) &&
        Objects.equals(this.url, legalSearchGetDefaultResponseAdminFinesInner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challengeOutcome, challengeReceiptDate, checkAmount, commissionVotes, committeeId, docId, documentHighlights, documents, finalDeterminationAmount, finalDeterminationDate, highlights, name, false, petitionCourtDecisionDate, petitionCourtFilingDate, reasonToBelieveActionDate, reasonToBelieveFineAmount, reportType, reportYear, treasuryReferralAmount, treasuryReferralDate, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalSearchGetDefaultResponseAdminFinesInner {\n");
    sb.append("    challengeOutcome: ").append(toIndentedString(challengeOutcome)).append("\n");
    sb.append("    challengeReceiptDate: ").append(toIndentedString(challengeReceiptDate)).append("\n");
    sb.append("    checkAmount: ").append(toIndentedString(checkAmount)).append("\n");
    sb.append("    commissionVotes: ").append(toIndentedString(commissionVotes)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    docId: ").append(toIndentedString(docId)).append("\n");
    sb.append("    documentHighlights: ").append(toIndentedString(documentHighlights)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    finalDeterminationAmount: ").append(toIndentedString(finalDeterminationAmount)).append("\n");
    sb.append("    finalDeterminationDate: ").append(toIndentedString(finalDeterminationDate)).append("\n");
    sb.append("    highlights: ").append(toIndentedString(highlights)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    false: ").append(toIndentedString(false)).append("\n");
    sb.append("    petitionCourtDecisionDate: ").append(toIndentedString(petitionCourtDecisionDate)).append("\n");
    sb.append("    petitionCourtFilingDate: ").append(toIndentedString(petitionCourtFilingDate)).append("\n");
    sb.append("    reasonToBelieveActionDate: ").append(toIndentedString(reasonToBelieveActionDate)).append("\n");
    sb.append("    reasonToBelieveFineAmount: ").append(toIndentedString(reasonToBelieveFineAmount)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    treasuryReferralAmount: ").append(toIndentedString(treasuryReferralAmount)).append("\n");
    sb.append("    treasuryReferralDate: ").append(toIndentedString(treasuryReferralDate)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("challenge_outcome");
    openapiFields.add("challenge_receipt_date");
    openapiFields.add("check_amount");
    openapiFields.add("commission_votes");
    openapiFields.add("committee_id");
    openapiFields.add("doc_id");
    openapiFields.add("document_highlights");
    openapiFields.add("documents");
    openapiFields.add("final_determination_amount");
    openapiFields.add("final_determination_date");
    openapiFields.add("highlights");
    openapiFields.add("name");
    openapiFields.add("false");
    openapiFields.add("petition_court_decision_date");
    openapiFields.add("petition_court_filing_date");
    openapiFields.add("reason_to_believe_action_date");
    openapiFields.add("reason_to_believe_fine_amount");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("treasury_referral_amount");
    openapiFields.add("treasury_referral_date");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LegalSearchGetDefaultResponseAdminFinesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LegalSearchGetDefaultResponseAdminFinesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LegalSearchGetDefaultResponseAdminFinesInner is not found in the empty JSON string", LegalSearchGetDefaultResponseAdminFinesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LegalSearchGetDefaultResponseAdminFinesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LegalSearchGetDefaultResponseAdminFinesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("challenge_outcome") != null && !jsonObj.get("challenge_outcome").isJsonNull()) && !jsonObj.get("challenge_outcome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challenge_outcome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challenge_outcome").toString()));
      }
      if (jsonObj.get("commission_votes") != null && !jsonObj.get("commission_votes").isJsonNull()) {
        JsonArray jsonArraycommissionVotes = jsonObj.getAsJsonArray("commission_votes");
        if (jsonArraycommissionVotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("commission_votes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `commission_votes` to be an array in the JSON string but got `%s`", jsonObj.get("commission_votes").toString()));
          }

          // validate the optional field `commission_votes` (array)
          for (int i = 0; i < jsonArraycommissionVotes.size(); i++) {
            LegalSearchGetDefaultResponseAdminFinesInnerCommissionVotesInner.validateJsonElement(jsonArraycommissionVotes.get(i));
          };
        }
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("doc_id") != null && !jsonObj.get("doc_id").isJsonNull()) && !jsonObj.get("doc_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `doc_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("doc_id").toString()));
      }
      if (jsonObj.get("documents") != null && !jsonObj.get("documents").isJsonNull()) {
        JsonArray jsonArraydocuments = jsonObj.getAsJsonArray("documents");
        if (jsonArraydocuments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("documents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `documents` to be an array in the JSON string but got `%s`", jsonObj.get("documents").toString()));
          }

          // validate the optional field `documents` (array)
          for (int i = 0; i < jsonArraydocuments.size(); i++) {
            LegalSearchGetDefaultResponseAdminFinesInnerDocumentsInner.validateJsonElement(jsonArraydocuments.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("highlights") != null && !jsonObj.get("highlights").isJsonNull() && !jsonObj.get("highlights").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `highlights` to be an array in the JSON string but got `%s`", jsonObj.get("highlights").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("false") != null && !jsonObj.get("false").isJsonNull()) && !jsonObj.get("false").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `false` to be a primitive type in the JSON string but got `%s`", jsonObj.get("false").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("report_year") != null && !jsonObj.get("report_year").isJsonNull()) && !jsonObj.get("report_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_year").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LegalSearchGetDefaultResponseAdminFinesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LegalSearchGetDefaultResponseAdminFinesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LegalSearchGetDefaultResponseAdminFinesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LegalSearchGetDefaultResponseAdminFinesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<LegalSearchGetDefaultResponseAdminFinesInner>() {
           @Override
           public void write(JsonWriter out, LegalSearchGetDefaultResponseAdminFinesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LegalSearchGetDefaultResponseAdminFinesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LegalSearchGetDefaultResponseAdminFinesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LegalSearchGetDefaultResponseAdminFinesInner
   * @throws IOException if the JSON string is invalid with respect to LegalSearchGetDefaultResponseAdminFinesInner
   */
  public static LegalSearchGetDefaultResponseAdminFinesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LegalSearchGetDefaultResponseAdminFinesInner.class);
  }

  /**
   * Convert an instance of LegalSearchGetDefaultResponseAdminFinesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

