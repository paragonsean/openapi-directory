/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleA
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleA {
  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC = "amendment_indicator_desc";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR_DESC)
  private String amendmentIndicatorDesc;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME = "back_reference_schedule_name";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME)
  private String backReferenceScheduleName;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_FULL = "candidate_office_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_FULL)
  private String candidateOfficeFull;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL = "candidate_office_state_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL)
  private String candidateOfficeStateFull;

  public static final String SERIALIZED_NAME_CANDIDATE_PREFIX = "candidate_prefix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PREFIX)
  private String candidatePrefix;

  public static final String SERIALIZED_NAME_CANDIDATE_SUFFIX = "candidate_suffix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_SUFFIX)
  private String candidateSuffix;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_COMMITTEE_NAME = "committee_name";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_NAME)
  private String committeeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ID = "conduit_committee_id";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ID)
  private String conduitCommitteeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_CONTRIBUTION_RECEIPT_AMOUNT = "contribution_receipt_amount";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTION_RECEIPT_AMOUNT)
  private BigDecimal contributionReceiptAmount;

  public static final String SERIALIZED_NAME_CONTRIBUTION_RECEIPT_DATE = "contribution_receipt_date";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTION_RECEIPT_DATE)
  private LocalDate contributionReceiptDate;

  public static final String SERIALIZED_NAME_CONTRIBUTOR = "contributor";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR)
  private CommitteeHistory contributor;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_AGGREGATE_YTD = "contributor_aggregate_ytd";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_AGGREGATE_YTD)
  private BigDecimal contributorAggregateYtd;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_CITY = "contributor_city";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_CITY)
  private String contributorCity;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_EMPLOYER = "contributor_employer";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_EMPLOYER)
  private String contributorEmployer;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_FIRST_NAME = "contributor_first_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_FIRST_NAME)
  private String contributorFirstName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_ID = "contributor_id";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_ID)
  private String contributorId;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_LAST_NAME = "contributor_last_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_LAST_NAME)
  private String contributorLastName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_MIDDLE_NAME = "contributor_middle_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_MIDDLE_NAME)
  private String contributorMiddleName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_NAME = "contributor_name";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_NAME)
  private String contributorName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_OCCUPATION = "contributor_occupation";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_OCCUPATION)
  private String contributorOccupation;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_PREFIX = "contributor_prefix";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_PREFIX)
  private String contributorPrefix;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_STATE = "contributor_state";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_STATE)
  private String contributorState;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_STREET1 = "contributor_street_1";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_STREET1)
  private String contributorStreet1;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_STREET2 = "contributor_street_2";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_STREET2)
  private String contributorStreet2;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_SUFFIX = "contributor_suffix";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_SUFFIX)
  private String contributorSuffix;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_ZIP = "contributor_zip";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_ZIP)
  private String contributorZip;

  public static final String SERIALIZED_NAME_DONOR_COMMITTEE_NAME = "donor_committee_name";
  @SerializedName(SERIALIZED_NAME_DONOR_COMMITTEE_NAME)
  private String donorCommitteeName;

  public static final String SERIALIZED_NAME_ELECTION_TYPE = "election_type";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE)
  private String electionType;

  public static final String SERIALIZED_NAME_ELECTION_TYPE_FULL = "election_type_full";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE_FULL)
  private String electionTypeFull;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_DESC = "entity_type_desc";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_DESC)
  private String entityTypeDesc;

  public static final String SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC = "fec_election_type_desc";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_TYPE_DESC)
  private String fecElectionTypeDesc;

  public static final String SERIALIZED_NAME_FEC_ELECTION_YEAR = "fec_election_year";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_YEAR)
  private String fecElectionYear;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_INCREASED_LIMIT = "increased_limit";
  @SerializedName(SERIALIZED_NAME_INCREASED_LIMIT)
  private String increasedLimit;

  public static final String SERIALIZED_NAME_IS_INDIVIDUAL = "is_individual";
  @SerializedName(SERIALIZED_NAME_IS_INDIVIDUAL)
  private Boolean isIndividual;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER_LABEL = "line_number_label";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER_LABEL)
  private String lineNumberLabel;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_LOAD_DATE = "load_date";
  @SerializedName(SERIALIZED_NAME_LOAD_DATE)
  private OffsetDateTime loadDate;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_CODE_FULL = "memo_code_full";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE_FULL)
  private String memoCodeFull;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_MEMOED_SUBTOTAL = "memoed_subtotal";
  @SerializedName(SERIALIZED_NAME_MEMOED_SUBTOTAL)
  private Boolean memoedSubtotal;

  public static final String SERIALIZED_NAME_NATIONAL_COMMITTEE_NONFEDERAL_ACCOUNT = "national_committee_nonfederal_account";
  @SerializedName(SERIALIZED_NAME_NATIONAL_COMMITTEE_NONFEDERAL_ACCOUNT)
  private String nationalCommitteeNonfederalAccount;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private String originalSubId;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_RECEIPT_TYPE = "receipt_type";
  @SerializedName(SERIALIZED_NAME_RECEIPT_TYPE)
  private String receiptType;

  public static final String SERIALIZED_NAME_RECEIPT_TYPE_DESC = "receipt_type_desc";
  @SerializedName(SERIALIZED_NAME_RECEIPT_TYPE_DESC)
  private String receiptTypeDesc;

  public static final String SERIALIZED_NAME_RECEIPT_TYPE_FULL = "receipt_type_full";
  @SerializedName(SERIALIZED_NAME_RECEIPT_TYPE_FULL)
  private String receiptTypeFull;

  public static final String SERIALIZED_NAME_RECIPIENT_COMMITTEE_DESIGNATION = "recipient_committee_designation";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_COMMITTEE_DESIGNATION)
  private String recipientCommitteeDesignation;

  public static final String SERIALIZED_NAME_RECIPIENT_COMMITTEE_ORG_TYPE = "recipient_committee_org_type";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_COMMITTEE_ORG_TYPE)
  private String recipientCommitteeOrgType;

  public static final String SERIALIZED_NAME_RECIPIENT_COMMITTEE_TYPE = "recipient_committee_type";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_COMMITTEE_TYPE)
  private String recipientCommitteeType;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_TWO_YEAR_TRANSACTION_PERIOD = "two_year_transaction_period";
  @SerializedName(SERIALIZED_NAME_TWO_YEAR_TRANSACTION_PERIOD)
  private Integer twoYearTransactionPeriod;

  public static final String SERIALIZED_NAME_UNUSED_CONTBR_ID = "unused_contbr_id";
  @SerializedName(SERIALIZED_NAME_UNUSED_CONTBR_ID)
  private String unusedContbrId;

  public ScheduleA() {
  }

  public ScheduleA amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleA amendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
    return this;
  }

  /**
   * Get amendmentIndicatorDesc
   * @return amendmentIndicatorDesc
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicatorDesc() {
    return amendmentIndicatorDesc;
  }

  public void setAmendmentIndicatorDesc(String amendmentIndicatorDesc) {
    this.amendmentIndicatorDesc = amendmentIndicatorDesc;
  }


  public ScheduleA backReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
    return this;
  }

  /**
   * Get backReferenceScheduleName
   * @return backReferenceScheduleName
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleName() {
    return backReferenceScheduleName;
  }

  public void setBackReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
  }


  public ScheduleA backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleA candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public ScheduleA candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   *  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence. 
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public ScheduleA candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public ScheduleA candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public ScheduleA candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public ScheduleA candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleA candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleA candidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
    return this;
  }

  /**
   * Get candidateOfficeFull
   * @return candidateOfficeFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeFull() {
    return candidateOfficeFull;
  }

  public void setCandidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
  }


  public ScheduleA candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public ScheduleA candidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
    return this;
  }

  /**
   * Get candidateOfficeStateFull
   * @return candidateOfficeStateFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeStateFull() {
    return candidateOfficeStateFull;
  }

  public void setCandidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
  }


  public ScheduleA candidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
    return this;
  }

  /**
   * Get candidatePrefix
   * @return candidatePrefix
   */
  @javax.annotation.Nullable
  public String getCandidatePrefix() {
    return candidatePrefix;
  }

  public void setCandidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
  }


  public ScheduleA candidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
    return this;
  }

  /**
   * Get candidateSuffix
   * @return candidateSuffix
   */
  @javax.annotation.Nullable
  public String getCandidateSuffix() {
    return candidateSuffix;
  }

  public void setCandidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
  }


  public ScheduleA committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleA committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleA committeeName(String committeeName) {
    this.committeeName = committeeName;
    return this;
  }

  /**
   * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
   * @return committeeName
   */
  @javax.annotation.Nullable
  public String getCommitteeName() {
    return committeeName;
  }

  public void setCommitteeName(String committeeName) {
    this.committeeName = committeeName;
  }


  public ScheduleA conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public ScheduleA conduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
    return this;
  }

  /**
   * Get conduitCommitteeId
   * @return conduitCommitteeId
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeId() {
    return conduitCommitteeId;
  }

  public void setConduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
  }


  public ScheduleA conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public ScheduleA conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public ScheduleA conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public ScheduleA conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public ScheduleA conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public ScheduleA contributionReceiptAmount(BigDecimal contributionReceiptAmount) {
    this.contributionReceiptAmount = contributionReceiptAmount;
    return this;
  }

  /**
   * Get contributionReceiptAmount
   * @return contributionReceiptAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getContributionReceiptAmount() {
    return contributionReceiptAmount;
  }

  public void setContributionReceiptAmount(BigDecimal contributionReceiptAmount) {
    this.contributionReceiptAmount = contributionReceiptAmount;
  }


  public ScheduleA contributionReceiptDate(LocalDate contributionReceiptDate) {
    this.contributionReceiptDate = contributionReceiptDate;
    return this;
  }

  /**
   * Get contributionReceiptDate
   * @return contributionReceiptDate
   */
  @javax.annotation.Nullable
  public LocalDate getContributionReceiptDate() {
    return contributionReceiptDate;
  }

  public void setContributionReceiptDate(LocalDate contributionReceiptDate) {
    this.contributionReceiptDate = contributionReceiptDate;
  }


  public ScheduleA contributor(CommitteeHistory contributor) {
    this.contributor = contributor;
    return this;
  }

  /**
   * Get contributor
   * @return contributor
   */
  @javax.annotation.Nullable
  public CommitteeHistory getContributor() {
    return contributor;
  }

  public void setContributor(CommitteeHistory contributor) {
    this.contributor = contributor;
  }


  public ScheduleA contributorAggregateYtd(BigDecimal contributorAggregateYtd) {
    this.contributorAggregateYtd = contributorAggregateYtd;
    return this;
  }

  /**
   * Get contributorAggregateYtd
   * @return contributorAggregateYtd
   */
  @javax.annotation.Nullable
  public BigDecimal getContributorAggregateYtd() {
    return contributorAggregateYtd;
  }

  public void setContributorAggregateYtd(BigDecimal contributorAggregateYtd) {
    this.contributorAggregateYtd = contributorAggregateYtd;
  }


  public ScheduleA contributorCity(String contributorCity) {
    this.contributorCity = contributorCity;
    return this;
  }

  /**
   * City of contributor
   * @return contributorCity
   */
  @javax.annotation.Nullable
  public String getContributorCity() {
    return contributorCity;
  }

  public void setContributorCity(String contributorCity) {
    this.contributorCity = contributorCity;
  }


  public ScheduleA contributorEmployer(String contributorEmployer) {
    this.contributorEmployer = contributorEmployer;
    return this;
  }

  /**
   * Employer of contributor, filers need to make an effort to gather this information
   * @return contributorEmployer
   */
  @javax.annotation.Nullable
  public String getContributorEmployer() {
    return contributorEmployer;
  }

  public void setContributorEmployer(String contributorEmployer) {
    this.contributorEmployer = contributorEmployer;
  }


  public ScheduleA contributorFirstName(String contributorFirstName) {
    this.contributorFirstName = contributorFirstName;
    return this;
  }

  /**
   * Get contributorFirstName
   * @return contributorFirstName
   */
  @javax.annotation.Nullable
  public String getContributorFirstName() {
    return contributorFirstName;
  }

  public void setContributorFirstName(String contributorFirstName) {
    this.contributorFirstName = contributorFirstName;
  }


  public ScheduleA contributorId(String contributorId) {
    this.contributorId = contributorId;
    return this;
  }

  /**
   * The FEC identifier should be represented here if the contributor is registered with the FEC.
   * @return contributorId
   */
  @javax.annotation.Nullable
  public String getContributorId() {
    return contributorId;
  }

  public void setContributorId(String contributorId) {
    this.contributorId = contributorId;
  }


  public ScheduleA contributorLastName(String contributorLastName) {
    this.contributorLastName = contributorLastName;
    return this;
  }

  /**
   * Get contributorLastName
   * @return contributorLastName
   */
  @javax.annotation.Nullable
  public String getContributorLastName() {
    return contributorLastName;
  }

  public void setContributorLastName(String contributorLastName) {
    this.contributorLastName = contributorLastName;
  }


  public ScheduleA contributorMiddleName(String contributorMiddleName) {
    this.contributorMiddleName = contributorMiddleName;
    return this;
  }

  /**
   * Get contributorMiddleName
   * @return contributorMiddleName
   */
  @javax.annotation.Nullable
  public String getContributorMiddleName() {
    return contributorMiddleName;
  }

  public void setContributorMiddleName(String contributorMiddleName) {
    this.contributorMiddleName = contributorMiddleName;
  }


  public ScheduleA contributorName(String contributorName) {
    this.contributorName = contributorName;
    return this;
  }

  /**
   * Name of contributor
   * @return contributorName
   */
  @javax.annotation.Nullable
  public String getContributorName() {
    return contributorName;
  }

  public void setContributorName(String contributorName) {
    this.contributorName = contributorName;
  }


  public ScheduleA contributorOccupation(String contributorOccupation) {
    this.contributorOccupation = contributorOccupation;
    return this;
  }

  /**
   * Occupation of contributor, filers need to make an effort to gather this information
   * @return contributorOccupation
   */
  @javax.annotation.Nullable
  public String getContributorOccupation() {
    return contributorOccupation;
  }

  public void setContributorOccupation(String contributorOccupation) {
    this.contributorOccupation = contributorOccupation;
  }


  public ScheduleA contributorPrefix(String contributorPrefix) {
    this.contributorPrefix = contributorPrefix;
    return this;
  }

  /**
   * Get contributorPrefix
   * @return contributorPrefix
   */
  @javax.annotation.Nullable
  public String getContributorPrefix() {
    return contributorPrefix;
  }

  public void setContributorPrefix(String contributorPrefix) {
    this.contributorPrefix = contributorPrefix;
  }


  public ScheduleA contributorState(String contributorState) {
    this.contributorState = contributorState;
    return this;
  }

  /**
   * State of contributor
   * @return contributorState
   */
  @javax.annotation.Nullable
  public String getContributorState() {
    return contributorState;
  }

  public void setContributorState(String contributorState) {
    this.contributorState = contributorState;
  }


  public ScheduleA contributorStreet1(String contributorStreet1) {
    this.contributorStreet1 = contributorStreet1;
    return this;
  }

  /**
   * Get contributorStreet1
   * @return contributorStreet1
   */
  @javax.annotation.Nullable
  public String getContributorStreet1() {
    return contributorStreet1;
  }

  public void setContributorStreet1(String contributorStreet1) {
    this.contributorStreet1 = contributorStreet1;
  }


  public ScheduleA contributorStreet2(String contributorStreet2) {
    this.contributorStreet2 = contributorStreet2;
    return this;
  }

  /**
   * Get contributorStreet2
   * @return contributorStreet2
   */
  @javax.annotation.Nullable
  public String getContributorStreet2() {
    return contributorStreet2;
  }

  public void setContributorStreet2(String contributorStreet2) {
    this.contributorStreet2 = contributorStreet2;
  }


  public ScheduleA contributorSuffix(String contributorSuffix) {
    this.contributorSuffix = contributorSuffix;
    return this;
  }

  /**
   * Get contributorSuffix
   * @return contributorSuffix
   */
  @javax.annotation.Nullable
  public String getContributorSuffix() {
    return contributorSuffix;
  }

  public void setContributorSuffix(String contributorSuffix) {
    this.contributorSuffix = contributorSuffix;
  }


  public ScheduleA contributorZip(String contributorZip) {
    this.contributorZip = contributorZip;
    return this;
  }

  /**
   * Zip code of contributor
   * @return contributorZip
   */
  @javax.annotation.Nullable
  public String getContributorZip() {
    return contributorZip;
  }

  public void setContributorZip(String contributorZip) {
    this.contributorZip = contributorZip;
  }


  public ScheduleA donorCommitteeName(String donorCommitteeName) {
    this.donorCommitteeName = donorCommitteeName;
    return this;
  }

  /**
   * Get donorCommitteeName
   * @return donorCommitteeName
   */
  @javax.annotation.Nullable
  public String getDonorCommitteeName() {
    return donorCommitteeName;
  }

  public void setDonorCommitteeName(String donorCommitteeName) {
    this.donorCommitteeName = donorCommitteeName;
  }


  public ScheduleA electionType(String electionType) {
    this.electionType = electionType;
    return this;
  }

  /**
   * Get electionType
   * @return electionType
   */
  @javax.annotation.Nullable
  public String getElectionType() {
    return electionType;
  }

  public void setElectionType(String electionType) {
    this.electionType = electionType;
  }


  public ScheduleA electionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
    return this;
  }

  /**
   * Get electionTypeFull
   * @return electionTypeFull
   */
  @javax.annotation.Nullable
  public String getElectionTypeFull() {
    return electionTypeFull;
  }

  public void setElectionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
  }


  public ScheduleA entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleA entityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
    return this;
  }

  /**
   * Get entityTypeDesc
   * @return entityTypeDesc
   */
  @javax.annotation.Nullable
  public String getEntityTypeDesc() {
    return entityTypeDesc;
  }

  public void setEntityTypeDesc(String entityTypeDesc) {
    this.entityTypeDesc = entityTypeDesc;
  }


  public ScheduleA fecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
    return this;
  }

  /**
   * Get fecElectionTypeDesc
   * @return fecElectionTypeDesc
   */
  @javax.annotation.Nullable
  public String getFecElectionTypeDesc() {
    return fecElectionTypeDesc;
  }

  public void setFecElectionTypeDesc(String fecElectionTypeDesc) {
    this.fecElectionTypeDesc = fecElectionTypeDesc;
  }


  public ScheduleA fecElectionYear(String fecElectionYear) {
    this.fecElectionYear = fecElectionYear;
    return this;
  }

  /**
   * Get fecElectionYear
   * @return fecElectionYear
   */
  @javax.annotation.Nullable
  public String getFecElectionYear() {
    return fecElectionYear;
  }

  public void setFecElectionYear(String fecElectionYear) {
    this.fecElectionYear = fecElectionYear;
  }


  public ScheduleA fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleA filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public ScheduleA imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   * Get imageNumber
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleA increasedLimit(String increasedLimit) {
    this.increasedLimit = increasedLimit;
    return this;
  }

  /**
   * Get increasedLimit
   * @return increasedLimit
   */
  @javax.annotation.Nullable
  public String getIncreasedLimit() {
    return increasedLimit;
  }

  public void setIncreasedLimit(String increasedLimit) {
    this.increasedLimit = increasedLimit;
  }


  public ScheduleA isIndividual(Boolean isIndividual) {
    this.isIndividual = isIndividual;
    return this;
  }

  /**
   * Get isIndividual
   * @return isIndividual
   */
  @javax.annotation.Nullable
  public Boolean getIsIndividual() {
    return isIndividual;
  }

  public void setIsIndividual(Boolean isIndividual) {
    this.isIndividual = isIndividual;
  }


  public ScheduleA lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleA lineNumberLabel(String lineNumberLabel) {
    this.lineNumberLabel = lineNumberLabel;
    return this;
  }

  /**
   * Get lineNumberLabel
   * @return lineNumberLabel
   */
  @javax.annotation.Nullable
  public String getLineNumberLabel() {
    return lineNumberLabel;
  }

  public void setLineNumberLabel(String lineNumberLabel) {
    this.lineNumberLabel = lineNumberLabel;
  }


  public ScheduleA linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public ScheduleA loadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
    return this;
  }

  /**
   * Get loadDate
   * @return loadDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadDate() {
    return loadDate;
  }

  public void setLoadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
  }


  public ScheduleA memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleA memoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
    return this;
  }

  /**
   * Get memoCodeFull
   * @return memoCodeFull
   */
  @javax.annotation.Nullable
  public String getMemoCodeFull() {
    return memoCodeFull;
  }

  public void setMemoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
  }


  public ScheduleA memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleA memoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
    return this;
  }

  /**
   * Get memoedSubtotal
   * @return memoedSubtotal
   */
  @javax.annotation.Nullable
  public Boolean getMemoedSubtotal() {
    return memoedSubtotal;
  }

  public void setMemoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
  }


  public ScheduleA nationalCommitteeNonfederalAccount(String nationalCommitteeNonfederalAccount) {
    this.nationalCommitteeNonfederalAccount = nationalCommitteeNonfederalAccount;
    return this;
  }

  /**
   * Get nationalCommitteeNonfederalAccount
   * @return nationalCommitteeNonfederalAccount
   */
  @javax.annotation.Nullable
  public String getNationalCommitteeNonfederalAccount() {
    return nationalCommitteeNonfederalAccount;
  }

  public void setNationalCommitteeNonfederalAccount(String nationalCommitteeNonfederalAccount) {
    this.nationalCommitteeNonfederalAccount = nationalCommitteeNonfederalAccount;
  }


  public ScheduleA originalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public String getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
  }


  public ScheduleA pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleA receiptType(String receiptType) {
    this.receiptType = receiptType;
    return this;
  }

  /**
   * Get receiptType
   * @return receiptType
   */
  @javax.annotation.Nullable
  public String getReceiptType() {
    return receiptType;
  }

  public void setReceiptType(String receiptType) {
    this.receiptType = receiptType;
  }


  public ScheduleA receiptTypeDesc(String receiptTypeDesc) {
    this.receiptTypeDesc = receiptTypeDesc;
    return this;
  }

  /**
   * Get receiptTypeDesc
   * @return receiptTypeDesc
   */
  @javax.annotation.Nullable
  public String getReceiptTypeDesc() {
    return receiptTypeDesc;
  }

  public void setReceiptTypeDesc(String receiptTypeDesc) {
    this.receiptTypeDesc = receiptTypeDesc;
  }


  public ScheduleA receiptTypeFull(String receiptTypeFull) {
    this.receiptTypeFull = receiptTypeFull;
    return this;
  }

  /**
   * Get receiptTypeFull
   * @return receiptTypeFull
   */
  @javax.annotation.Nullable
  public String getReceiptTypeFull() {
    return receiptTypeFull;
  }

  public void setReceiptTypeFull(String receiptTypeFull) {
    this.receiptTypeFull = receiptTypeFull;
  }


  public ScheduleA recipientCommitteeDesignation(String recipientCommitteeDesignation) {
    this.recipientCommitteeDesignation = recipientCommitteeDesignation;
    return this;
  }

  /**
   * Get recipientCommitteeDesignation
   * @return recipientCommitteeDesignation
   */
  @javax.annotation.Nullable
  public String getRecipientCommitteeDesignation() {
    return recipientCommitteeDesignation;
  }

  public void setRecipientCommitteeDesignation(String recipientCommitteeDesignation) {
    this.recipientCommitteeDesignation = recipientCommitteeDesignation;
  }


  public ScheduleA recipientCommitteeOrgType(String recipientCommitteeOrgType) {
    this.recipientCommitteeOrgType = recipientCommitteeOrgType;
    return this;
  }

  /**
   * Get recipientCommitteeOrgType
   * @return recipientCommitteeOrgType
   */
  @javax.annotation.Nullable
  public String getRecipientCommitteeOrgType() {
    return recipientCommitteeOrgType;
  }

  public void setRecipientCommitteeOrgType(String recipientCommitteeOrgType) {
    this.recipientCommitteeOrgType = recipientCommitteeOrgType;
  }


  public ScheduleA recipientCommitteeType(String recipientCommitteeType) {
    this.recipientCommitteeType = recipientCommitteeType;
    return this;
  }

  /**
   * Get recipientCommitteeType
   * @return recipientCommitteeType
   */
  @javax.annotation.Nullable
  public String getRecipientCommitteeType() {
    return recipientCommitteeType;
  }

  public void setRecipientCommitteeType(String recipientCommitteeType) {
    this.recipientCommitteeType = recipientCommitteeType;
  }


  public ScheduleA reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleA reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public ScheduleA scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public ScheduleA scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public ScheduleA subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public ScheduleA transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public ScheduleA twoYearTransactionPeriod(Integer twoYearTransactionPeriod) {
    this.twoYearTransactionPeriod = twoYearTransactionPeriod;
    return this;
  }

  /**
   *  This is a two-year period that is derived from the year a transaction took place in the Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b) the two_year_transaction_period is named after the ending, even-numbered year. If we do not have the date  of the transaction, we fall back to using the report year (report_year in both tables) instead,  making the same cycle adjustment as necessary. If no transaction year is specified, the results default to the most current cycle. 
   * @return twoYearTransactionPeriod
   */
  @javax.annotation.Nullable
  public Integer getTwoYearTransactionPeriod() {
    return twoYearTransactionPeriod;
  }

  public void setTwoYearTransactionPeriod(Integer twoYearTransactionPeriod) {
    this.twoYearTransactionPeriod = twoYearTransactionPeriod;
  }


  public ScheduleA unusedContbrId(String unusedContbrId) {
    this.unusedContbrId = unusedContbrId;
    return this;
  }

  /**
   * Get unusedContbrId
   * @return unusedContbrId
   */
  @javax.annotation.Nullable
  public String getUnusedContbrId() {
    return unusedContbrId;
  }

  public void setUnusedContbrId(String unusedContbrId) {
    this.unusedContbrId = unusedContbrId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleA scheduleA = (ScheduleA) o;
    return Objects.equals(this.amendmentIndicator, scheduleA.amendmentIndicator) &&
        Objects.equals(this.amendmentIndicatorDesc, scheduleA.amendmentIndicatorDesc) &&
        Objects.equals(this.backReferenceScheduleName, scheduleA.backReferenceScheduleName) &&
        Objects.equals(this.backReferenceTransactionId, scheduleA.backReferenceTransactionId) &&
        Objects.equals(this.candidateFirstName, scheduleA.candidateFirstName) &&
        Objects.equals(this.candidateId, scheduleA.candidateId) &&
        Objects.equals(this.candidateLastName, scheduleA.candidateLastName) &&
        Objects.equals(this.candidateMiddleName, scheduleA.candidateMiddleName) &&
        Objects.equals(this.candidateName, scheduleA.candidateName) &&
        Objects.equals(this.candidateOffice, scheduleA.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleA.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeFull, scheduleA.candidateOfficeFull) &&
        Objects.equals(this.candidateOfficeState, scheduleA.candidateOfficeState) &&
        Objects.equals(this.candidateOfficeStateFull, scheduleA.candidateOfficeStateFull) &&
        Objects.equals(this.candidatePrefix, scheduleA.candidatePrefix) &&
        Objects.equals(this.candidateSuffix, scheduleA.candidateSuffix) &&
        Objects.equals(this.committee, scheduleA.committee) &&
        Objects.equals(this.committeeId, scheduleA.committeeId) &&
        Objects.equals(this.committeeName, scheduleA.committeeName) &&
        Objects.equals(this.conduitCommitteeCity, scheduleA.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeId, scheduleA.conduitCommitteeId) &&
        Objects.equals(this.conduitCommitteeName, scheduleA.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, scheduleA.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, scheduleA.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, scheduleA.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, scheduleA.conduitCommitteeZip) &&
        Objects.equals(this.contributionReceiptAmount, scheduleA.contributionReceiptAmount) &&
        Objects.equals(this.contributionReceiptDate, scheduleA.contributionReceiptDate) &&
        Objects.equals(this.contributor, scheduleA.contributor) &&
        Objects.equals(this.contributorAggregateYtd, scheduleA.contributorAggregateYtd) &&
        Objects.equals(this.contributorCity, scheduleA.contributorCity) &&
        Objects.equals(this.contributorEmployer, scheduleA.contributorEmployer) &&
        Objects.equals(this.contributorFirstName, scheduleA.contributorFirstName) &&
        Objects.equals(this.contributorId, scheduleA.contributorId) &&
        Objects.equals(this.contributorLastName, scheduleA.contributorLastName) &&
        Objects.equals(this.contributorMiddleName, scheduleA.contributorMiddleName) &&
        Objects.equals(this.contributorName, scheduleA.contributorName) &&
        Objects.equals(this.contributorOccupation, scheduleA.contributorOccupation) &&
        Objects.equals(this.contributorPrefix, scheduleA.contributorPrefix) &&
        Objects.equals(this.contributorState, scheduleA.contributorState) &&
        Objects.equals(this.contributorStreet1, scheduleA.contributorStreet1) &&
        Objects.equals(this.contributorStreet2, scheduleA.contributorStreet2) &&
        Objects.equals(this.contributorSuffix, scheduleA.contributorSuffix) &&
        Objects.equals(this.contributorZip, scheduleA.contributorZip) &&
        Objects.equals(this.donorCommitteeName, scheduleA.donorCommitteeName) &&
        Objects.equals(this.electionType, scheduleA.electionType) &&
        Objects.equals(this.electionTypeFull, scheduleA.electionTypeFull) &&
        Objects.equals(this.entityType, scheduleA.entityType) &&
        Objects.equals(this.entityTypeDesc, scheduleA.entityTypeDesc) &&
        Objects.equals(this.fecElectionTypeDesc, scheduleA.fecElectionTypeDesc) &&
        Objects.equals(this.fecElectionYear, scheduleA.fecElectionYear) &&
        Objects.equals(this.fileNumber, scheduleA.fileNumber) &&
        Objects.equals(this.filingForm, scheduleA.filingForm) &&
        Objects.equals(this.imageNumber, scheduleA.imageNumber) &&
        Objects.equals(this.increasedLimit, scheduleA.increasedLimit) &&
        Objects.equals(this.isIndividual, scheduleA.isIndividual) &&
        Objects.equals(this.lineNumber, scheduleA.lineNumber) &&
        Objects.equals(this.lineNumberLabel, scheduleA.lineNumberLabel) &&
        Objects.equals(this.linkId, scheduleA.linkId) &&
        Objects.equals(this.loadDate, scheduleA.loadDate) &&
        Objects.equals(this.memoCode, scheduleA.memoCode) &&
        Objects.equals(this.memoCodeFull, scheduleA.memoCodeFull) &&
        Objects.equals(this.memoText, scheduleA.memoText) &&
        Objects.equals(this.memoedSubtotal, scheduleA.memoedSubtotal) &&
        Objects.equals(this.nationalCommitteeNonfederalAccount, scheduleA.nationalCommitteeNonfederalAccount) &&
        Objects.equals(this.originalSubId, scheduleA.originalSubId) &&
        Objects.equals(this.pdfUrl, scheduleA.pdfUrl) &&
        Objects.equals(this.receiptType, scheduleA.receiptType) &&
        Objects.equals(this.receiptTypeDesc, scheduleA.receiptTypeDesc) &&
        Objects.equals(this.receiptTypeFull, scheduleA.receiptTypeFull) &&
        Objects.equals(this.recipientCommitteeDesignation, scheduleA.recipientCommitteeDesignation) &&
        Objects.equals(this.recipientCommitteeOrgType, scheduleA.recipientCommitteeOrgType) &&
        Objects.equals(this.recipientCommitteeType, scheduleA.recipientCommitteeType) &&
        Objects.equals(this.reportType, scheduleA.reportType) &&
        Objects.equals(this.reportYear, scheduleA.reportYear) &&
        Objects.equals(this.scheduleType, scheduleA.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, scheduleA.scheduleTypeFull) &&
        Objects.equals(this.subId, scheduleA.subId) &&
        Objects.equals(this.transactionId, scheduleA.transactionId) &&
        Objects.equals(this.twoYearTransactionPeriod, scheduleA.twoYearTransactionPeriod) &&
        Objects.equals(this.unusedContbrId, scheduleA.unusedContbrId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentIndicator, amendmentIndicatorDesc, backReferenceScheduleName, backReferenceTransactionId, candidateFirstName, candidateId, candidateLastName, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeFull, candidateOfficeState, candidateOfficeStateFull, candidatePrefix, candidateSuffix, committee, committeeId, committeeName, conduitCommitteeCity, conduitCommitteeId, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, contributionReceiptAmount, contributionReceiptDate, contributor, contributorAggregateYtd, contributorCity, contributorEmployer, contributorFirstName, contributorId, contributorLastName, contributorMiddleName, contributorName, contributorOccupation, contributorPrefix, contributorState, contributorStreet1, contributorStreet2, contributorSuffix, contributorZip, donorCommitteeName, electionType, electionTypeFull, entityType, entityTypeDesc, fecElectionTypeDesc, fecElectionYear, fileNumber, filingForm, imageNumber, increasedLimit, isIndividual, lineNumber, lineNumberLabel, linkId, loadDate, memoCode, memoCodeFull, memoText, memoedSubtotal, nationalCommitteeNonfederalAccount, originalSubId, pdfUrl, receiptType, receiptTypeDesc, receiptTypeFull, recipientCommitteeDesignation, recipientCommitteeOrgType, recipientCommitteeType, reportType, reportYear, scheduleType, scheduleTypeFull, subId, transactionId, twoYearTransactionPeriod, unusedContbrId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleA {\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    amendmentIndicatorDesc: ").append(toIndentedString(amendmentIndicatorDesc)).append("\n");
    sb.append("    backReferenceScheduleName: ").append(toIndentedString(backReferenceScheduleName)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeFull: ").append(toIndentedString(candidateOfficeFull)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateOfficeStateFull: ").append(toIndentedString(candidateOfficeStateFull)).append("\n");
    sb.append("    candidatePrefix: ").append(toIndentedString(candidatePrefix)).append("\n");
    sb.append("    candidateSuffix: ").append(toIndentedString(candidateSuffix)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    committeeName: ").append(toIndentedString(committeeName)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeId: ").append(toIndentedString(conduitCommitteeId)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    contributionReceiptAmount: ").append(toIndentedString(contributionReceiptAmount)).append("\n");
    sb.append("    contributionReceiptDate: ").append(toIndentedString(contributionReceiptDate)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    contributorAggregateYtd: ").append(toIndentedString(contributorAggregateYtd)).append("\n");
    sb.append("    contributorCity: ").append(toIndentedString(contributorCity)).append("\n");
    sb.append("    contributorEmployer: ").append(toIndentedString(contributorEmployer)).append("\n");
    sb.append("    contributorFirstName: ").append(toIndentedString(contributorFirstName)).append("\n");
    sb.append("    contributorId: ").append(toIndentedString(contributorId)).append("\n");
    sb.append("    contributorLastName: ").append(toIndentedString(contributorLastName)).append("\n");
    sb.append("    contributorMiddleName: ").append(toIndentedString(contributorMiddleName)).append("\n");
    sb.append("    contributorName: ").append(toIndentedString(contributorName)).append("\n");
    sb.append("    contributorOccupation: ").append(toIndentedString(contributorOccupation)).append("\n");
    sb.append("    contributorPrefix: ").append(toIndentedString(contributorPrefix)).append("\n");
    sb.append("    contributorState: ").append(toIndentedString(contributorState)).append("\n");
    sb.append("    contributorStreet1: ").append(toIndentedString(contributorStreet1)).append("\n");
    sb.append("    contributorStreet2: ").append(toIndentedString(contributorStreet2)).append("\n");
    sb.append("    contributorSuffix: ").append(toIndentedString(contributorSuffix)).append("\n");
    sb.append("    contributorZip: ").append(toIndentedString(contributorZip)).append("\n");
    sb.append("    donorCommitteeName: ").append(toIndentedString(donorCommitteeName)).append("\n");
    sb.append("    electionType: ").append(toIndentedString(electionType)).append("\n");
    sb.append("    electionTypeFull: ").append(toIndentedString(electionTypeFull)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityTypeDesc: ").append(toIndentedString(entityTypeDesc)).append("\n");
    sb.append("    fecElectionTypeDesc: ").append(toIndentedString(fecElectionTypeDesc)).append("\n");
    sb.append("    fecElectionYear: ").append(toIndentedString(fecElectionYear)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    increasedLimit: ").append(toIndentedString(increasedLimit)).append("\n");
    sb.append("    isIndividual: ").append(toIndentedString(isIndividual)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    lineNumberLabel: ").append(toIndentedString(lineNumberLabel)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    loadDate: ").append(toIndentedString(loadDate)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoCodeFull: ").append(toIndentedString(memoCodeFull)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    memoedSubtotal: ").append(toIndentedString(memoedSubtotal)).append("\n");
    sb.append("    nationalCommitteeNonfederalAccount: ").append(toIndentedString(nationalCommitteeNonfederalAccount)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    receiptType: ").append(toIndentedString(receiptType)).append("\n");
    sb.append("    receiptTypeDesc: ").append(toIndentedString(receiptTypeDesc)).append("\n");
    sb.append("    receiptTypeFull: ").append(toIndentedString(receiptTypeFull)).append("\n");
    sb.append("    recipientCommitteeDesignation: ").append(toIndentedString(recipientCommitteeDesignation)).append("\n");
    sb.append("    recipientCommitteeOrgType: ").append(toIndentedString(recipientCommitteeOrgType)).append("\n");
    sb.append("    recipientCommitteeType: ").append(toIndentedString(recipientCommitteeType)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    twoYearTransactionPeriod: ").append(toIndentedString(twoYearTransactionPeriod)).append("\n");
    sb.append("    unusedContbrId: ").append(toIndentedString(unusedContbrId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendment_indicator");
    openapiFields.add("amendment_indicator_desc");
    openapiFields.add("back_reference_schedule_name");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_full");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_office_state_full");
    openapiFields.add("candidate_prefix");
    openapiFields.add("candidate_suffix");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("committee_name");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_id");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("contribution_receipt_amount");
    openapiFields.add("contribution_receipt_date");
    openapiFields.add("contributor");
    openapiFields.add("contributor_aggregate_ytd");
    openapiFields.add("contributor_city");
    openapiFields.add("contributor_employer");
    openapiFields.add("contributor_first_name");
    openapiFields.add("contributor_id");
    openapiFields.add("contributor_last_name");
    openapiFields.add("contributor_middle_name");
    openapiFields.add("contributor_name");
    openapiFields.add("contributor_occupation");
    openapiFields.add("contributor_prefix");
    openapiFields.add("contributor_state");
    openapiFields.add("contributor_street_1");
    openapiFields.add("contributor_street_2");
    openapiFields.add("contributor_suffix");
    openapiFields.add("contributor_zip");
    openapiFields.add("donor_committee_name");
    openapiFields.add("election_type");
    openapiFields.add("election_type_full");
    openapiFields.add("entity_type");
    openapiFields.add("entity_type_desc");
    openapiFields.add("fec_election_type_desc");
    openapiFields.add("fec_election_year");
    openapiFields.add("file_number");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("increased_limit");
    openapiFields.add("is_individual");
    openapiFields.add("line_number");
    openapiFields.add("line_number_label");
    openapiFields.add("link_id");
    openapiFields.add("load_date");
    openapiFields.add("memo_code");
    openapiFields.add("memo_code_full");
    openapiFields.add("memo_text");
    openapiFields.add("memoed_subtotal");
    openapiFields.add("national_committee_nonfederal_account");
    openapiFields.add("original_sub_id");
    openapiFields.add("pdf_url");
    openapiFields.add("receipt_type");
    openapiFields.add("receipt_type_desc");
    openapiFields.add("receipt_type_full");
    openapiFields.add("recipient_committee_designation");
    openapiFields.add("recipient_committee_org_type");
    openapiFields.add("recipient_committee_type");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("sub_id");
    openapiFields.add("transaction_id");
    openapiFields.add("two_year_transaction_period");
    openapiFields.add("unused_contbr_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleA
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleA.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleA is not found in the empty JSON string", ScheduleA.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleA.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleA` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("amendment_indicator_desc") != null && !jsonObj.get("amendment_indicator_desc").isJsonNull()) && !jsonObj.get("amendment_indicator_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator_desc").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_name") != null && !jsonObj.get("back_reference_schedule_name").isJsonNull()) && !jsonObj.get("back_reference_schedule_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_name").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_full") != null && !jsonObj.get("candidate_office_full").isJsonNull()) && !jsonObj.get("candidate_office_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_full").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_office_state_full") != null && !jsonObj.get("candidate_office_state_full").isJsonNull()) && !jsonObj.get("candidate_office_state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state_full").toString()));
      }
      if ((jsonObj.get("candidate_prefix") != null && !jsonObj.get("candidate_prefix").isJsonNull()) && !jsonObj.get("candidate_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_prefix").toString()));
      }
      if ((jsonObj.get("candidate_suffix") != null && !jsonObj.get("candidate_suffix").isJsonNull()) && !jsonObj.get("candidate_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_suffix").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("committee_name") != null && !jsonObj.get("committee_name").isJsonNull()) && !jsonObj.get("committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_id") != null && !jsonObj.get("conduit_committee_id").isJsonNull()) && !jsonObj.get("conduit_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      // validate the optional field `contributor`
      if (jsonObj.get("contributor") != null && !jsonObj.get("contributor").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("contributor"));
      }
      if ((jsonObj.get("contributor_city") != null && !jsonObj.get("contributor_city").isJsonNull()) && !jsonObj.get("contributor_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_city").toString()));
      }
      if ((jsonObj.get("contributor_employer") != null && !jsonObj.get("contributor_employer").isJsonNull()) && !jsonObj.get("contributor_employer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_employer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_employer").toString()));
      }
      if ((jsonObj.get("contributor_first_name") != null && !jsonObj.get("contributor_first_name").isJsonNull()) && !jsonObj.get("contributor_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_first_name").toString()));
      }
      if ((jsonObj.get("contributor_id") != null && !jsonObj.get("contributor_id").isJsonNull()) && !jsonObj.get("contributor_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_id").toString()));
      }
      if ((jsonObj.get("contributor_last_name") != null && !jsonObj.get("contributor_last_name").isJsonNull()) && !jsonObj.get("contributor_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_last_name").toString()));
      }
      if ((jsonObj.get("contributor_middle_name") != null && !jsonObj.get("contributor_middle_name").isJsonNull()) && !jsonObj.get("contributor_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_middle_name").toString()));
      }
      if ((jsonObj.get("contributor_name") != null && !jsonObj.get("contributor_name").isJsonNull()) && !jsonObj.get("contributor_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_name").toString()));
      }
      if ((jsonObj.get("contributor_occupation") != null && !jsonObj.get("contributor_occupation").isJsonNull()) && !jsonObj.get("contributor_occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_occupation").toString()));
      }
      if ((jsonObj.get("contributor_prefix") != null && !jsonObj.get("contributor_prefix").isJsonNull()) && !jsonObj.get("contributor_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_prefix").toString()));
      }
      if ((jsonObj.get("contributor_state") != null && !jsonObj.get("contributor_state").isJsonNull()) && !jsonObj.get("contributor_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_state").toString()));
      }
      if ((jsonObj.get("contributor_street_1") != null && !jsonObj.get("contributor_street_1").isJsonNull()) && !jsonObj.get("contributor_street_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_street_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_street_1").toString()));
      }
      if ((jsonObj.get("contributor_street_2") != null && !jsonObj.get("contributor_street_2").isJsonNull()) && !jsonObj.get("contributor_street_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_street_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_street_2").toString()));
      }
      if ((jsonObj.get("contributor_suffix") != null && !jsonObj.get("contributor_suffix").isJsonNull()) && !jsonObj.get("contributor_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_suffix").toString()));
      }
      if ((jsonObj.get("contributor_zip") != null && !jsonObj.get("contributor_zip").isJsonNull()) && !jsonObj.get("contributor_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_zip").toString()));
      }
      if ((jsonObj.get("donor_committee_name") != null && !jsonObj.get("donor_committee_name").isJsonNull()) && !jsonObj.get("donor_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `donor_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("donor_committee_name").toString()));
      }
      if ((jsonObj.get("election_type") != null && !jsonObj.get("election_type").isJsonNull()) && !jsonObj.get("election_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type").toString()));
      }
      if ((jsonObj.get("election_type_full") != null && !jsonObj.get("election_type_full").isJsonNull()) && !jsonObj.get("election_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type_full").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("entity_type_desc") != null && !jsonObj.get("entity_type_desc").isJsonNull()) && !jsonObj.get("entity_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type_desc").toString()));
      }
      if ((jsonObj.get("fec_election_type_desc") != null && !jsonObj.get("fec_election_type_desc").isJsonNull()) && !jsonObj.get("fec_election_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_type_desc").toString()));
      }
      if ((jsonObj.get("fec_election_year") != null && !jsonObj.get("fec_election_year").isJsonNull()) && !jsonObj.get("fec_election_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_year").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("increased_limit") != null && !jsonObj.get("increased_limit").isJsonNull()) && !jsonObj.get("increased_limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `increased_limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("increased_limit").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("line_number_label") != null && !jsonObj.get("line_number_label").isJsonNull()) && !jsonObj.get("line_number_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number_label").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_code_full") != null && !jsonObj.get("memo_code_full").isJsonNull()) && !jsonObj.get("memo_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code_full").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("national_committee_nonfederal_account") != null && !jsonObj.get("national_committee_nonfederal_account").isJsonNull()) && !jsonObj.get("national_committee_nonfederal_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `national_committee_nonfederal_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("national_committee_nonfederal_account").toString()));
      }
      if ((jsonObj.get("original_sub_id") != null && !jsonObj.get("original_sub_id").isJsonNull()) && !jsonObj.get("original_sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_sub_id").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("receipt_type") != null && !jsonObj.get("receipt_type").isJsonNull()) && !jsonObj.get("receipt_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receipt_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receipt_type").toString()));
      }
      if ((jsonObj.get("receipt_type_desc") != null && !jsonObj.get("receipt_type_desc").isJsonNull()) && !jsonObj.get("receipt_type_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receipt_type_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receipt_type_desc").toString()));
      }
      if ((jsonObj.get("receipt_type_full") != null && !jsonObj.get("receipt_type_full").isJsonNull()) && !jsonObj.get("receipt_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receipt_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receipt_type_full").toString()));
      }
      if ((jsonObj.get("recipient_committee_designation") != null && !jsonObj.get("recipient_committee_designation").isJsonNull()) && !jsonObj.get("recipient_committee_designation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_committee_designation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_committee_designation").toString()));
      }
      if ((jsonObj.get("recipient_committee_org_type") != null && !jsonObj.get("recipient_committee_org_type").isJsonNull()) && !jsonObj.get("recipient_committee_org_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_committee_org_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_committee_org_type").toString()));
      }
      if ((jsonObj.get("recipient_committee_type") != null && !jsonObj.get("recipient_committee_type").isJsonNull()) && !jsonObj.get("recipient_committee_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_committee_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_committee_type").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
      if ((jsonObj.get("unused_contbr_id") != null && !jsonObj.get("unused_contbr_id").isJsonNull()) && !jsonObj.get("unused_contbr_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unused_contbr_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unused_contbr_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleA.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleA' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleA> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleA.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleA>() {
           @Override
           public void write(JsonWriter out, ScheduleA value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleA read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleA given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleA
   * @throws IOException if the JSON string is invalid with respect to ScheduleA
   */
  public static ScheduleA fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleA.class);
  }

  /**
   * Convert an instance of ScheduleA to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

