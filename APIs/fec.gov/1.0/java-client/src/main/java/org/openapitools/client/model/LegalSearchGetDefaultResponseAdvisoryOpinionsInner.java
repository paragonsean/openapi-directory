/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner;
import org.openapitools.client.model.LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LegalSearchGetDefaultResponseAdvisoryOpinionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LegalSearchGetDefaultResponseAdvisoryOpinionsInner {
  public static final String SERIALIZED_NAME_AO_CITATIONS = "ao_citations";
  @SerializedName(SERIALIZED_NAME_AO_CITATIONS)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aoCitations = new ArrayList<>();

  public static final String SERIALIZED_NAME_AOS_CITED_BY = "aos_cited_by";
  @SerializedName(SERIALIZED_NAME_AOS_CITED_BY)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aosCitedBy = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENTER_NAMES = "commenter_names";
  @SerializedName(SERIALIZED_NAME_COMMENTER_NAMES)
  private List<String> commenterNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENT_HIGHLIGHTS = "document_highlights";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_HIGHLIGHTS)
  private Object documentHighlights;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner> documents = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENTITIES = "entities";
  @SerializedName(SERIALIZED_NAME_ENTITIES)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner> entities = new ArrayList<>();

  public static final String SERIALIZED_NAME_HIGHLIGHTS = "highlights";
  @SerializedName(SERIALIZED_NAME_HIGHLIGHTS)
  private List<String> highlights = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_PENDING = "is_pending";
  @SerializedName(SERIALIZED_NAME_IS_PENDING)
  private Boolean isPending;

  public static final String SERIALIZED_NAME_ISSUE_DATE = "issue_date";
  @SerializedName(SERIALIZED_NAME_ISSUE_DATE)
  private LocalDate issueDate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FALSE = "false";
  @SerializedName(SERIALIZED_NAME_FALSE)
  private String false;

  public static final String SERIALIZED_NAME_REGULATORY_CITATIONS = "regulatory_citations";
  @SerializedName(SERIALIZED_NAME_REGULATORY_CITATIONS)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner> regulatoryCitations = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPRESENTATIVE_NAMES = "representative_names";
  @SerializedName(SERIALIZED_NAME_REPRESENTATIVE_NAMES)
  private List<String> representativeNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUEST_DATE = "request_date";
  @SerializedName(SERIALIZED_NAME_REQUEST_DATE)
  private LocalDate requestDate;

  public static final String SERIALIZED_NAME_REQUESTOR_NAMES = "requestor_names";
  @SerializedName(SERIALIZED_NAME_REQUESTOR_NAMES)
  private List<String> requestorNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUESTOR_TYPES = "requestor_types";
  @SerializedName(SERIALIZED_NAME_REQUESTOR_TYPES)
  private List<String> requestorTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUTORY_CITATIONS = "statutory_citations";
  @SerializedName(SERIALIZED_NAME_STATUTORY_CITATIONS)
  private List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner> statutoryCitations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner() {
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner aoCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aoCitations) {
    this.aoCitations = aoCitations;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addAoCitationsItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner aoCitationsItem) {
    if (this.aoCitations == null) {
      this.aoCitations = new ArrayList<>();
    }
    this.aoCitations.add(aoCitationsItem);
    return this;
  }

  /**
   * Get aoCitations
   * @return aoCitations
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> getAoCitations() {
    return aoCitations;
  }

  public void setAoCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aoCitations) {
    this.aoCitations = aoCitations;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner aosCitedBy(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aosCitedBy) {
    this.aosCitedBy = aosCitedBy;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addAosCitedByItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner aosCitedByItem) {
    if (this.aosCitedBy == null) {
      this.aosCitedBy = new ArrayList<>();
    }
    this.aosCitedBy.add(aosCitedByItem);
    return this;
  }

  /**
   * Get aosCitedBy
   * @return aosCitedBy
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> getAosCitedBy() {
    return aosCitedBy;
  }

  public void setAosCitedBy(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner> aosCitedBy) {
    this.aosCitedBy = aosCitedBy;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner commenterNames(List<String> commenterNames) {
    this.commenterNames = commenterNames;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addCommenterNamesItem(String commenterNamesItem) {
    if (this.commenterNames == null) {
      this.commenterNames = new ArrayList<>();
    }
    this.commenterNames.add(commenterNamesItem);
    return this;
  }

  /**
   * Get commenterNames
   * @return commenterNames
   */
  @javax.annotation.Nullable
  public List<String> getCommenterNames() {
    return commenterNames;
  }

  public void setCommenterNames(List<String> commenterNames) {
    this.commenterNames = commenterNames;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner documentHighlights(Object documentHighlights) {
    this.documentHighlights = documentHighlights;
    return this;
  }

  /**
   * Get documentHighlights
   * @return documentHighlights
   */
  @javax.annotation.Nullable
  public Object getDocumentHighlights() {
    return documentHighlights;
  }

  public void setDocumentHighlights(Object documentHighlights) {
    this.documentHighlights = documentHighlights;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner documents(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner> documents) {
    this.documents = documents;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addDocumentsItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

  /**
   * Get documents
   * @return documents
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner> getDocuments() {
    return documents;
  }

  public void setDocuments(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner> documents) {
    this.documents = documents;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner entities(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner> entities) {
    this.entities = entities;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addEntitiesItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

  /**
   * Get entities
   * @return entities
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner> getEntities() {
    return entities;
  }

  public void setEntities(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner> entities) {
    this.entities = entities;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner highlights(List<String> highlights) {
    this.highlights = highlights;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addHighlightsItem(String highlightsItem) {
    if (this.highlights == null) {
      this.highlights = new ArrayList<>();
    }
    this.highlights.add(highlightsItem);
    return this;
  }

  /**
   * Get highlights
   * @return highlights
   */
  @javax.annotation.Nullable
  public List<String> getHighlights() {
    return highlights;
  }

  public void setHighlights(List<String> highlights) {
    this.highlights = highlights;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner isPending(Boolean isPending) {
    this.isPending = isPending;
    return this;
  }

  /**
   * Get isPending
   * @return isPending
   */
  @javax.annotation.Nullable
  public Boolean getIsPending() {
    return isPending;
  }

  public void setIsPending(Boolean isPending) {
    this.isPending = isPending;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner issueDate(LocalDate issueDate) {
    this.issueDate = issueDate;
    return this;
  }

  /**
   * Get issueDate
   * @return issueDate
   */
  @javax.annotation.Nullable
  public LocalDate getIssueDate() {
    return issueDate;
  }

  public void setIssueDate(LocalDate issueDate) {
    this.issueDate = issueDate;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner false(String false) {
    this.false = false;
    return this;
  }

  /**
   * Get false
   * @return false
   */
  @javax.annotation.Nullable
  public String getFalse() {
    return false;
  }

  public void setFalse(String false) {
    this.false = false;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner regulatoryCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner> regulatoryCitations) {
    this.regulatoryCitations = regulatoryCitations;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addRegulatoryCitationsItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner regulatoryCitationsItem) {
    if (this.regulatoryCitations == null) {
      this.regulatoryCitations = new ArrayList<>();
    }
    this.regulatoryCitations.add(regulatoryCitationsItem);
    return this;
  }

  /**
   * Get regulatoryCitations
   * @return regulatoryCitations
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner> getRegulatoryCitations() {
    return regulatoryCitations;
  }

  public void setRegulatoryCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner> regulatoryCitations) {
    this.regulatoryCitations = regulatoryCitations;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner representativeNames(List<String> representativeNames) {
    this.representativeNames = representativeNames;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addRepresentativeNamesItem(String representativeNamesItem) {
    if (this.representativeNames == null) {
      this.representativeNames = new ArrayList<>();
    }
    this.representativeNames.add(representativeNamesItem);
    return this;
  }

  /**
   * Get representativeNames
   * @return representativeNames
   */
  @javax.annotation.Nullable
  public List<String> getRepresentativeNames() {
    return representativeNames;
  }

  public void setRepresentativeNames(List<String> representativeNames) {
    this.representativeNames = representativeNames;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner requestDate(LocalDate requestDate) {
    this.requestDate = requestDate;
    return this;
  }

  /**
   * Get requestDate
   * @return requestDate
   */
  @javax.annotation.Nullable
  public LocalDate getRequestDate() {
    return requestDate;
  }

  public void setRequestDate(LocalDate requestDate) {
    this.requestDate = requestDate;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner requestorNames(List<String> requestorNames) {
    this.requestorNames = requestorNames;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addRequestorNamesItem(String requestorNamesItem) {
    if (this.requestorNames == null) {
      this.requestorNames = new ArrayList<>();
    }
    this.requestorNames.add(requestorNamesItem);
    return this;
  }

  /**
   * Get requestorNames
   * @return requestorNames
   */
  @javax.annotation.Nullable
  public List<String> getRequestorNames() {
    return requestorNames;
  }

  public void setRequestorNames(List<String> requestorNames) {
    this.requestorNames = requestorNames;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner requestorTypes(List<String> requestorTypes) {
    this.requestorTypes = requestorTypes;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addRequestorTypesItem(String requestorTypesItem) {
    if (this.requestorTypes == null) {
      this.requestorTypes = new ArrayList<>();
    }
    this.requestorTypes.add(requestorTypesItem);
    return this;
  }

  /**
   * Get requestorTypes
   * @return requestorTypes
   */
  @javax.annotation.Nullable
  public List<String> getRequestorTypes() {
    return requestorTypes;
  }

  public void setRequestorTypes(List<String> requestorTypes) {
    this.requestorTypes = requestorTypes;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner statutoryCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner> statutoryCitations) {
    this.statutoryCitations = statutoryCitations;
    return this;
  }

  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner addStatutoryCitationsItem(LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner statutoryCitationsItem) {
    if (this.statutoryCitations == null) {
      this.statutoryCitations = new ArrayList<>();
    }
    this.statutoryCitations.add(statutoryCitationsItem);
    return this;
  }

  /**
   * Get statutoryCitations
   * @return statutoryCitations
   */
  @javax.annotation.Nullable
  public List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner> getStatutoryCitations() {
    return statutoryCitations;
  }

  public void setStatutoryCitations(List<LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner> statutoryCitations) {
    this.statutoryCitations = statutoryCitations;
  }


  public LegalSearchGetDefaultResponseAdvisoryOpinionsInner summary(String summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalSearchGetDefaultResponseAdvisoryOpinionsInner legalSearchGetDefaultResponseAdvisoryOpinionsInner = (LegalSearchGetDefaultResponseAdvisoryOpinionsInner) o;
    return Objects.equals(this.aoCitations, legalSearchGetDefaultResponseAdvisoryOpinionsInner.aoCitations) &&
        Objects.equals(this.aosCitedBy, legalSearchGetDefaultResponseAdvisoryOpinionsInner.aosCitedBy) &&
        Objects.equals(this.commenterNames, legalSearchGetDefaultResponseAdvisoryOpinionsInner.commenterNames) &&
        Objects.equals(this.documentHighlights, legalSearchGetDefaultResponseAdvisoryOpinionsInner.documentHighlights) &&
        Objects.equals(this.documents, legalSearchGetDefaultResponseAdvisoryOpinionsInner.documents) &&
        Objects.equals(this.entities, legalSearchGetDefaultResponseAdvisoryOpinionsInner.entities) &&
        Objects.equals(this.highlights, legalSearchGetDefaultResponseAdvisoryOpinionsInner.highlights) &&
        Objects.equals(this.isPending, legalSearchGetDefaultResponseAdvisoryOpinionsInner.isPending) &&
        Objects.equals(this.issueDate, legalSearchGetDefaultResponseAdvisoryOpinionsInner.issueDate) &&
        Objects.equals(this.name, legalSearchGetDefaultResponseAdvisoryOpinionsInner.name) &&
        Objects.equals(this.false, legalSearchGetDefaultResponseAdvisoryOpinionsInner.false) &&
        Objects.equals(this.regulatoryCitations, legalSearchGetDefaultResponseAdvisoryOpinionsInner.regulatoryCitations) &&
        Objects.equals(this.representativeNames, legalSearchGetDefaultResponseAdvisoryOpinionsInner.representativeNames) &&
        Objects.equals(this.requestDate, legalSearchGetDefaultResponseAdvisoryOpinionsInner.requestDate) &&
        Objects.equals(this.requestorNames, legalSearchGetDefaultResponseAdvisoryOpinionsInner.requestorNames) &&
        Objects.equals(this.requestorTypes, legalSearchGetDefaultResponseAdvisoryOpinionsInner.requestorTypes) &&
        Objects.equals(this.status, legalSearchGetDefaultResponseAdvisoryOpinionsInner.status) &&
        Objects.equals(this.statutoryCitations, legalSearchGetDefaultResponseAdvisoryOpinionsInner.statutoryCitations) &&
        Objects.equals(this.summary, legalSearchGetDefaultResponseAdvisoryOpinionsInner.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aoCitations, aosCitedBy, commenterNames, documentHighlights, documents, entities, highlights, isPending, issueDate, name, false, regulatoryCitations, representativeNames, requestDate, requestorNames, requestorTypes, status, statutoryCitations, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalSearchGetDefaultResponseAdvisoryOpinionsInner {\n");
    sb.append("    aoCitations: ").append(toIndentedString(aoCitations)).append("\n");
    sb.append("    aosCitedBy: ").append(toIndentedString(aosCitedBy)).append("\n");
    sb.append("    commenterNames: ").append(toIndentedString(commenterNames)).append("\n");
    sb.append("    documentHighlights: ").append(toIndentedString(documentHighlights)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    highlights: ").append(toIndentedString(highlights)).append("\n");
    sb.append("    isPending: ").append(toIndentedString(isPending)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    false: ").append(toIndentedString(false)).append("\n");
    sb.append("    regulatoryCitations: ").append(toIndentedString(regulatoryCitations)).append("\n");
    sb.append("    representativeNames: ").append(toIndentedString(representativeNames)).append("\n");
    sb.append("    requestDate: ").append(toIndentedString(requestDate)).append("\n");
    sb.append("    requestorNames: ").append(toIndentedString(requestorNames)).append("\n");
    sb.append("    requestorTypes: ").append(toIndentedString(requestorTypes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statutoryCitations: ").append(toIndentedString(statutoryCitations)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ao_citations");
    openapiFields.add("aos_cited_by");
    openapiFields.add("commenter_names");
    openapiFields.add("document_highlights");
    openapiFields.add("documents");
    openapiFields.add("entities");
    openapiFields.add("highlights");
    openapiFields.add("is_pending");
    openapiFields.add("issue_date");
    openapiFields.add("name");
    openapiFields.add("false");
    openapiFields.add("regulatory_citations");
    openapiFields.add("representative_names");
    openapiFields.add("request_date");
    openapiFields.add("requestor_names");
    openapiFields.add("requestor_types");
    openapiFields.add("status");
    openapiFields.add("statutory_citations");
    openapiFields.add("summary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LegalSearchGetDefaultResponseAdvisoryOpinionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LegalSearchGetDefaultResponseAdvisoryOpinionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LegalSearchGetDefaultResponseAdvisoryOpinionsInner is not found in the empty JSON string", LegalSearchGetDefaultResponseAdvisoryOpinionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LegalSearchGetDefaultResponseAdvisoryOpinionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LegalSearchGetDefaultResponseAdvisoryOpinionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("ao_citations") != null && !jsonObj.get("ao_citations").isJsonNull()) {
        JsonArray jsonArrayaoCitations = jsonObj.getAsJsonArray("ao_citations");
        if (jsonArrayaoCitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ao_citations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ao_citations` to be an array in the JSON string but got `%s`", jsonObj.get("ao_citations").toString()));
          }

          // validate the optional field `ao_citations` (array)
          for (int i = 0; i < jsonArrayaoCitations.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner.validateJsonElement(jsonArrayaoCitations.get(i));
          };
        }
      }
      if (jsonObj.get("aos_cited_by") != null && !jsonObj.get("aos_cited_by").isJsonNull()) {
        JsonArray jsonArrayaosCitedBy = jsonObj.getAsJsonArray("aos_cited_by");
        if (jsonArrayaosCitedBy != null) {
          // ensure the json data is an array
          if (!jsonObj.get("aos_cited_by").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `aos_cited_by` to be an array in the JSON string but got `%s`", jsonObj.get("aos_cited_by").toString()));
          }

          // validate the optional field `aos_cited_by` (array)
          for (int i = 0; i < jsonArrayaosCitedBy.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner.validateJsonElement(jsonArrayaosCitedBy.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("commenter_names") != null && !jsonObj.get("commenter_names").isJsonNull() && !jsonObj.get("commenter_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenter_names` to be an array in the JSON string but got `%s`", jsonObj.get("commenter_names").toString()));
      }
      if (jsonObj.get("documents") != null && !jsonObj.get("documents").isJsonNull()) {
        JsonArray jsonArraydocuments = jsonObj.getAsJsonArray("documents");
        if (jsonArraydocuments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("documents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `documents` to be an array in the JSON string but got `%s`", jsonObj.get("documents").toString()));
          }

          // validate the optional field `documents` (array)
          for (int i = 0; i < jsonArraydocuments.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner.validateJsonElement(jsonArraydocuments.get(i));
          };
        }
      }
      if (jsonObj.get("entities") != null && !jsonObj.get("entities").isJsonNull()) {
        JsonArray jsonArrayentities = jsonObj.getAsJsonArray("entities");
        if (jsonArrayentities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("entities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `entities` to be an array in the JSON string but got `%s`", jsonObj.get("entities").toString()));
          }

          // validate the optional field `entities` (array)
          for (int i = 0; i < jsonArrayentities.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner.validateJsonElement(jsonArrayentities.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("highlights") != null && !jsonObj.get("highlights").isJsonNull() && !jsonObj.get("highlights").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `highlights` to be an array in the JSON string but got `%s`", jsonObj.get("highlights").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("false") != null && !jsonObj.get("false").isJsonNull()) && !jsonObj.get("false").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `false` to be a primitive type in the JSON string but got `%s`", jsonObj.get("false").toString()));
      }
      if (jsonObj.get("regulatory_citations") != null && !jsonObj.get("regulatory_citations").isJsonNull()) {
        JsonArray jsonArrayregulatoryCitations = jsonObj.getAsJsonArray("regulatory_citations");
        if (jsonArrayregulatoryCitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("regulatory_citations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `regulatory_citations` to be an array in the JSON string but got `%s`", jsonObj.get("regulatory_citations").toString()));
          }

          // validate the optional field `regulatory_citations` (array)
          for (int i = 0; i < jsonArrayregulatoryCitations.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.validateJsonElement(jsonArrayregulatoryCitations.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("representative_names") != null && !jsonObj.get("representative_names").isJsonNull() && !jsonObj.get("representative_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `representative_names` to be an array in the JSON string but got `%s`", jsonObj.get("representative_names").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("requestor_names") != null && !jsonObj.get("requestor_names").isJsonNull() && !jsonObj.get("requestor_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestor_names` to be an array in the JSON string but got `%s`", jsonObj.get("requestor_names").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("requestor_types") != null && !jsonObj.get("requestor_types").isJsonNull() && !jsonObj.get("requestor_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestor_types` to be an array in the JSON string but got `%s`", jsonObj.get("requestor_types").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("statutory_citations") != null && !jsonObj.get("statutory_citations").isJsonNull()) {
        JsonArray jsonArraystatutoryCitations = jsonObj.getAsJsonArray("statutory_citations");
        if (jsonArraystatutoryCitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("statutory_citations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `statutory_citations` to be an array in the JSON string but got `%s`", jsonObj.get("statutory_citations").toString()));
          }

          // validate the optional field `statutory_citations` (array)
          for (int i = 0; i < jsonArraystatutoryCitations.size(); i++) {
            LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner.validateJsonElement(jsonArraystatutoryCitations.get(i));
          };
        }
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LegalSearchGetDefaultResponseAdvisoryOpinionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LegalSearchGetDefaultResponseAdvisoryOpinionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LegalSearchGetDefaultResponseAdvisoryOpinionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LegalSearchGetDefaultResponseAdvisoryOpinionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<LegalSearchGetDefaultResponseAdvisoryOpinionsInner>() {
           @Override
           public void write(JsonWriter out, LegalSearchGetDefaultResponseAdvisoryOpinionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LegalSearchGetDefaultResponseAdvisoryOpinionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LegalSearchGetDefaultResponseAdvisoryOpinionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LegalSearchGetDefaultResponseAdvisoryOpinionsInner
   * @throws IOException if the JSON string is invalid with respect to LegalSearchGetDefaultResponseAdvisoryOpinionsInner
   */
  public static LegalSearchGetDefaultResponseAdvisoryOpinionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LegalSearchGetDefaultResponseAdvisoryOpinionsInner.class);
  }

  /**
   * Convert an instance of LegalSearchGetDefaultResponseAdvisoryOpinionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

