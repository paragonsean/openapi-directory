/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CommunicationCost
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CommunicationCost {
  public static final String SERIALIZED_NAME_ACTION_CODE = "action_code";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE)
  private String actionCode;

  public static final String SERIALIZED_NAME_ACTION_CODE_FULL = "action_code_full";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE_FULL)
  private String actionCodeFull;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_FULL = "candidate_office_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_FULL)
  private String candidateOfficeFull;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_COMMITTEE_NAME = "committee_name";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_NAME)
  private String committeeName;

  public static final String SERIALIZED_NAME_COMMUNICATION_CLASS = "communication_class";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_CLASS)
  private String communicationClass;

  public static final String SERIALIZED_NAME_COMMUNICATION_TYPE = "communication_type";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_TYPE)
  private String communicationType;

  public static final String SERIALIZED_NAME_COMMUNICATION_TYPE_FULL = "communication_type_full";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_TYPE_FULL)
  private String communicationTypeFull;

  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  private Integer cycle;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FORM_TYPE_CODE = "form_type_code";
  @SerializedName(SERIALIZED_NAME_FORM_TYPE_CODE)
  private String formTypeCode;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private Integer originalSubId;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_PRIMARY_GENERAL_INDICATOR = "primary_general_indicator";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GENERAL_INDICATOR)
  private String primaryGeneralIndicator;

  public static final String SERIALIZED_NAME_PRIMARY_GENERAL_INDICATOR_DESCRIPTION = "primary_general_indicator_description";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GENERAL_INDICATOR_DESCRIPTION)
  private String primaryGeneralIndicatorDescription;

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  private String purpose;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_STATE_FULL = "state_full";
  @SerializedName(SERIALIZED_NAME_STATE_FULL)
  private String stateFull;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private Integer subId;

  public static final String SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR = "support_oppose_indicator";
  @SerializedName(SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR)
  private String supportOpposeIndicator;

  public static final String SERIALIZED_NAME_TRAN_ID = "tran_id";
  @SerializedName(SERIALIZED_NAME_TRAN_ID)
  private String tranId;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT = "transaction_amount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT)
  private BigDecimal transactionAmount;

  public static final String SERIALIZED_NAME_TRANSACTION_DATE = "transaction_date";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_DATE)
  private LocalDate transactionDate;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transaction_type";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private String transactionType;

  public CommunicationCost() {
  }

  public CommunicationCost actionCode(String actionCode) {
    this.actionCode = actionCode;
    return this;
  }

  /**
   * Get actionCode
   * @return actionCode
   */
  @javax.annotation.Nullable
  public String getActionCode() {
    return actionCode;
  }

  public void setActionCode(String actionCode) {
    this.actionCode = actionCode;
  }


  public CommunicationCost actionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
    return this;
  }

  /**
   * Get actionCodeFull
   * @return actionCodeFull
   */
  @javax.annotation.Nullable
  public String getActionCodeFull() {
    return actionCodeFull;
  }

  public void setActionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
  }


  public CommunicationCost candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public CommunicationCost candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   * Get candidateId
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public CommunicationCost candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public CommunicationCost candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public CommunicationCost candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Get candidateName
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public CommunicationCost candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public CommunicationCost candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Get candidateOfficeDistrict
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public CommunicationCost candidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
    return this;
  }

  /**
   * Get candidateOfficeFull
   * @return candidateOfficeFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeFull() {
    return candidateOfficeFull;
  }

  public void setCandidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
  }


  public CommunicationCost candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public CommunicationCost committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   * Get committeeId
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public CommunicationCost committeeName(String committeeName) {
    this.committeeName = committeeName;
    return this;
  }

  /**
   * Get committeeName
   * @return committeeName
   */
  @javax.annotation.Nullable
  public String getCommitteeName() {
    return committeeName;
  }

  public void setCommitteeName(String committeeName) {
    this.committeeName = committeeName;
  }


  public CommunicationCost communicationClass(String communicationClass) {
    this.communicationClass = communicationClass;
    return this;
  }

  /**
   * Get communicationClass
   * @return communicationClass
   */
  @javax.annotation.Nullable
  public String getCommunicationClass() {
    return communicationClass;
  }

  public void setCommunicationClass(String communicationClass) {
    this.communicationClass = communicationClass;
  }


  public CommunicationCost communicationType(String communicationType) {
    this.communicationType = communicationType;
    return this;
  }

  /**
   * Get communicationType
   * @return communicationType
   */
  @javax.annotation.Nullable
  public String getCommunicationType() {
    return communicationType;
  }

  public void setCommunicationType(String communicationType) {
    this.communicationType = communicationType;
  }


  public CommunicationCost communicationTypeFull(String communicationTypeFull) {
    this.communicationTypeFull = communicationTypeFull;
    return this;
  }

  /**
   * Get communicationTypeFull
   * @return communicationTypeFull
   */
  @javax.annotation.Nullable
  public String getCommunicationTypeFull() {
    return communicationTypeFull;
  }

  public void setCommunicationTypeFull(String communicationTypeFull) {
    this.communicationTypeFull = communicationTypeFull;
  }


  public CommunicationCost cycle(Integer cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nullable
  public Integer getCycle() {
    return cycle;
  }

  public void setCycle(Integer cycle) {
    this.cycle = cycle;
  }


  public CommunicationCost fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public CommunicationCost formTypeCode(String formTypeCode) {
    this.formTypeCode = formTypeCode;
    return this;
  }

  /**
   * Get formTypeCode
   * @return formTypeCode
   */
  @javax.annotation.Nullable
  public String getFormTypeCode() {
    return formTypeCode;
  }

  public void setFormTypeCode(String formTypeCode) {
    this.formTypeCode = formTypeCode;
  }


  public CommunicationCost imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   * Get imageNumber
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public CommunicationCost originalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public Integer getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
  }


  public CommunicationCost pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public CommunicationCost primaryGeneralIndicator(String primaryGeneralIndicator) {
    this.primaryGeneralIndicator = primaryGeneralIndicator;
    return this;
  }

  /**
   * Get primaryGeneralIndicator
   * @return primaryGeneralIndicator
   */
  @javax.annotation.Nullable
  public String getPrimaryGeneralIndicator() {
    return primaryGeneralIndicator;
  }

  public void setPrimaryGeneralIndicator(String primaryGeneralIndicator) {
    this.primaryGeneralIndicator = primaryGeneralIndicator;
  }


  public CommunicationCost primaryGeneralIndicatorDescription(String primaryGeneralIndicatorDescription) {
    this.primaryGeneralIndicatorDescription = primaryGeneralIndicatorDescription;
    return this;
  }

  /**
   * Get primaryGeneralIndicatorDescription
   * @return primaryGeneralIndicatorDescription
   */
  @javax.annotation.Nullable
  public String getPrimaryGeneralIndicatorDescription() {
    return primaryGeneralIndicatorDescription;
  }

  public void setPrimaryGeneralIndicatorDescription(String primaryGeneralIndicatorDescription) {
    this.primaryGeneralIndicatorDescription = primaryGeneralIndicatorDescription;
  }


  public CommunicationCost purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

  /**
   * Get purpose
   * @return purpose
   */
  @javax.annotation.Nullable
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public CommunicationCost reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public CommunicationCost reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   * Get reportYear
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public CommunicationCost scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public CommunicationCost scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public CommunicationCost stateFull(String stateFull) {
    this.stateFull = stateFull;
    return this;
  }

  /**
   * Get stateFull
   * @return stateFull
   */
  @javax.annotation.Nullable
  public String getStateFull() {
    return stateFull;
  }

  public void setStateFull(String stateFull) {
    this.stateFull = stateFull;
  }


  public CommunicationCost subId(Integer subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public Integer getSubId() {
    return subId;
  }

  public void setSubId(Integer subId) {
    this.subId = subId;
  }


  public CommunicationCost supportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
    return this;
  }

  /**
   * Get supportOpposeIndicator
   * @return supportOpposeIndicator
   */
  @javax.annotation.Nullable
  public String getSupportOpposeIndicator() {
    return supportOpposeIndicator;
  }

  public void setSupportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
  }


  public CommunicationCost tranId(String tranId) {
    this.tranId = tranId;
    return this;
  }

  /**
   * Get tranId
   * @return tranId
   */
  @javax.annotation.Nullable
  public String getTranId() {
    return tranId;
  }

  public void setTranId(String tranId) {
    this.tranId = tranId;
  }


  public CommunicationCost transactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
    return this;
  }

  /**
   * Get transactionAmount
   * @return transactionAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getTransactionAmount() {
    return transactionAmount;
  }

  public void setTransactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public CommunicationCost transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

  /**
   * Get transactionDate
   * @return transactionDate
   */
  @javax.annotation.Nullable
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }


  public CommunicationCost transactionType(String transactionType) {
    this.transactionType = transactionType;
    return this;
  }

  /**
   * Get transactionType
   * @return transactionType
   */
  @javax.annotation.Nullable
  public String getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationCost communicationCost = (CommunicationCost) o;
    return Objects.equals(this.actionCode, communicationCost.actionCode) &&
        Objects.equals(this.actionCodeFull, communicationCost.actionCodeFull) &&
        Objects.equals(this.candidateFirstName, communicationCost.candidateFirstName) &&
        Objects.equals(this.candidateId, communicationCost.candidateId) &&
        Objects.equals(this.candidateLastName, communicationCost.candidateLastName) &&
        Objects.equals(this.candidateMiddleName, communicationCost.candidateMiddleName) &&
        Objects.equals(this.candidateName, communicationCost.candidateName) &&
        Objects.equals(this.candidateOffice, communicationCost.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, communicationCost.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeFull, communicationCost.candidateOfficeFull) &&
        Objects.equals(this.candidateOfficeState, communicationCost.candidateOfficeState) &&
        Objects.equals(this.committeeId, communicationCost.committeeId) &&
        Objects.equals(this.committeeName, communicationCost.committeeName) &&
        Objects.equals(this.communicationClass, communicationCost.communicationClass) &&
        Objects.equals(this.communicationType, communicationCost.communicationType) &&
        Objects.equals(this.communicationTypeFull, communicationCost.communicationTypeFull) &&
        Objects.equals(this.cycle, communicationCost.cycle) &&
        Objects.equals(this.fileNumber, communicationCost.fileNumber) &&
        Objects.equals(this.formTypeCode, communicationCost.formTypeCode) &&
        Objects.equals(this.imageNumber, communicationCost.imageNumber) &&
        Objects.equals(this.originalSubId, communicationCost.originalSubId) &&
        Objects.equals(this.pdfUrl, communicationCost.pdfUrl) &&
        Objects.equals(this.primaryGeneralIndicator, communicationCost.primaryGeneralIndicator) &&
        Objects.equals(this.primaryGeneralIndicatorDescription, communicationCost.primaryGeneralIndicatorDescription) &&
        Objects.equals(this.purpose, communicationCost.purpose) &&
        Objects.equals(this.reportType, communicationCost.reportType) &&
        Objects.equals(this.reportYear, communicationCost.reportYear) &&
        Objects.equals(this.scheduleType, communicationCost.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, communicationCost.scheduleTypeFull) &&
        Objects.equals(this.stateFull, communicationCost.stateFull) &&
        Objects.equals(this.subId, communicationCost.subId) &&
        Objects.equals(this.supportOpposeIndicator, communicationCost.supportOpposeIndicator) &&
        Objects.equals(this.tranId, communicationCost.tranId) &&
        Objects.equals(this.transactionAmount, communicationCost.transactionAmount) &&
        Objects.equals(this.transactionDate, communicationCost.transactionDate) &&
        Objects.equals(this.transactionType, communicationCost.transactionType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionCode, actionCodeFull, candidateFirstName, candidateId, candidateLastName, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeFull, candidateOfficeState, committeeId, committeeName, communicationClass, communicationType, communicationTypeFull, cycle, fileNumber, formTypeCode, imageNumber, originalSubId, pdfUrl, primaryGeneralIndicator, primaryGeneralIndicatorDescription, purpose, reportType, reportYear, scheduleType, scheduleTypeFull, stateFull, subId, supportOpposeIndicator, tranId, transactionAmount, transactionDate, transactionType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationCost {\n");
    sb.append("    actionCode: ").append(toIndentedString(actionCode)).append("\n");
    sb.append("    actionCodeFull: ").append(toIndentedString(actionCodeFull)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeFull: ").append(toIndentedString(candidateOfficeFull)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    committeeName: ").append(toIndentedString(committeeName)).append("\n");
    sb.append("    communicationClass: ").append(toIndentedString(communicationClass)).append("\n");
    sb.append("    communicationType: ").append(toIndentedString(communicationType)).append("\n");
    sb.append("    communicationTypeFull: ").append(toIndentedString(communicationTypeFull)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    formTypeCode: ").append(toIndentedString(formTypeCode)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    primaryGeneralIndicator: ").append(toIndentedString(primaryGeneralIndicator)).append("\n");
    sb.append("    primaryGeneralIndicatorDescription: ").append(toIndentedString(primaryGeneralIndicatorDescription)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    stateFull: ").append(toIndentedString(stateFull)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    supportOpposeIndicator: ").append(toIndentedString(supportOpposeIndicator)).append("\n");
    sb.append("    tranId: ").append(toIndentedString(tranId)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action_code");
    openapiFields.add("action_code_full");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_full");
    openapiFields.add("candidate_office_state");
    openapiFields.add("committee_id");
    openapiFields.add("committee_name");
    openapiFields.add("communication_class");
    openapiFields.add("communication_type");
    openapiFields.add("communication_type_full");
    openapiFields.add("cycle");
    openapiFields.add("file_number");
    openapiFields.add("form_type_code");
    openapiFields.add("image_number");
    openapiFields.add("original_sub_id");
    openapiFields.add("pdf_url");
    openapiFields.add("primary_general_indicator");
    openapiFields.add("primary_general_indicator_description");
    openapiFields.add("purpose");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("state_full");
    openapiFields.add("sub_id");
    openapiFields.add("support_oppose_indicator");
    openapiFields.add("tran_id");
    openapiFields.add("transaction_amount");
    openapiFields.add("transaction_date");
    openapiFields.add("transaction_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommunicationCost
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunicationCost.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationCost is not found in the empty JSON string", CommunicationCost.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunicationCost.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationCost` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action_code") != null && !jsonObj.get("action_code").isJsonNull()) && !jsonObj.get("action_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code").toString()));
      }
      if ((jsonObj.get("action_code_full") != null && !jsonObj.get("action_code_full").isJsonNull()) && !jsonObj.get("action_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code_full").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_full") != null && !jsonObj.get("candidate_office_full").isJsonNull()) && !jsonObj.get("candidate_office_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_full").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("committee_name") != null && !jsonObj.get("committee_name").isJsonNull()) && !jsonObj.get("committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_name").toString()));
      }
      if ((jsonObj.get("communication_class") != null && !jsonObj.get("communication_class").isJsonNull()) && !jsonObj.get("communication_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communication_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communication_class").toString()));
      }
      if ((jsonObj.get("communication_type") != null && !jsonObj.get("communication_type").isJsonNull()) && !jsonObj.get("communication_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communication_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communication_type").toString()));
      }
      if ((jsonObj.get("communication_type_full") != null && !jsonObj.get("communication_type_full").isJsonNull()) && !jsonObj.get("communication_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communication_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communication_type_full").toString()));
      }
      if ((jsonObj.get("form_type_code") != null && !jsonObj.get("form_type_code").isJsonNull()) && !jsonObj.get("form_type_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `form_type_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("form_type_code").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("primary_general_indicator") != null && !jsonObj.get("primary_general_indicator").isJsonNull()) && !jsonObj.get("primary_general_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_general_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_general_indicator").toString()));
      }
      if ((jsonObj.get("primary_general_indicator_description") != null && !jsonObj.get("primary_general_indicator_description").isJsonNull()) && !jsonObj.get("primary_general_indicator_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_general_indicator_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_general_indicator_description").toString()));
      }
      if ((jsonObj.get("purpose") != null && !jsonObj.get("purpose").isJsonNull()) && !jsonObj.get("purpose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purpose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purpose").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("state_full") != null && !jsonObj.get("state_full").isJsonNull()) && !jsonObj.get("state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_full").toString()));
      }
      if ((jsonObj.get("support_oppose_indicator") != null && !jsonObj.get("support_oppose_indicator").isJsonNull()) && !jsonObj.get("support_oppose_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_oppose_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_oppose_indicator").toString()));
      }
      if ((jsonObj.get("tran_id") != null && !jsonObj.get("tran_id").isJsonNull()) && !jsonObj.get("tran_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tran_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tran_id").toString()));
      }
      if ((jsonObj.get("transaction_type") != null && !jsonObj.get("transaction_type").isJsonNull()) && !jsonObj.get("transaction_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationCost.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationCost' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationCost> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationCost.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationCost>() {
           @Override
           public void write(JsonWriter out, CommunicationCost value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationCost read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommunicationCost given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommunicationCost
   * @throws IOException if the JSON string is invalid with respect to CommunicationCost
   */
  public static CommunicationCost fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationCost.class);
  }

  /**
   * Convert an instance of CommunicationCost to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

