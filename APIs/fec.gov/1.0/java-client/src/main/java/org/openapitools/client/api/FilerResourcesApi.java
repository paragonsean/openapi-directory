/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.LocalDate;
import org.openapitools.client.model.RadAnalystPage;
import org.openapitools.client.model.StateElectionOfficeInfoPage;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FilerResourcesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public FilerResourcesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public FilerResourcesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for radAnalystGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minAssignmentUpdateDate Filter results for assignment updates made after this date (optional)
     * @param telephoneExt Telephone extension of RAD analyst (optional)
     * @param analystId ID of RAD analyst (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param name Name of RAD analyst (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param email Email of RAD analyst (optional)
     * @param title Title of RAD analyst (optional)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param maxAssignmentUpdateDate Filter results for assignment updates made before this date (optional)
     * @param analystShortId Short ID of RAD analyst (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call radAnalystGetCall(String apiKey, LocalDate minAssignmentUpdateDate, List<Integer> telephoneExt, List<Integer> analystId, Boolean sortNullOnly, Integer page, List<String> committeeId, Boolean sortNullsLast, Boolean sortHideNull, List<String> name, Integer perPage, List<String> email, List<String> title, String sort, LocalDate maxAssignmentUpdateDate, List<Integer> analystShortId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rad-analyst/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (minAssignmentUpdateDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_assignment_update_date", minAssignmentUpdateDate));
        }

        if (telephoneExt != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "telephone_ext", telephoneExt));
        }

        if (analystId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "analyst_id", analystId));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (committeeId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "committee_id", committeeId));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (name != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "name", name));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (email != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "email", email));
        }

        if (title != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "title", title));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (maxAssignmentUpdateDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_assignment_update_date", maxAssignmentUpdateDate));
        }

        if (analystShortId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "analyst_short_id", analystShortId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call radAnalystGetValidateBeforeCall(String apiKey, LocalDate minAssignmentUpdateDate, List<Integer> telephoneExt, List<Integer> analystId, Boolean sortNullOnly, Integer page, List<String> committeeId, Boolean sortNullsLast, Boolean sortHideNull, List<String> name, Integer perPage, List<String> email, List<String> title, String sort, LocalDate maxAssignmentUpdateDate, List<Integer> analystShortId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling radAnalystGet(Async)");
        }

        return radAnalystGetCall(apiKey, minAssignmentUpdateDate, telephoneExt, analystId, sortNullOnly, page, committeeId, sortNullsLast, sortHideNull, name, perPage, email, title, sort, maxAssignmentUpdateDate, analystShortId, _callback);

    }

    /**
     * 
     *  Use this endpoint to look up the RAD Analyst for a committee.  The mission of the Reports Analysis Division (RAD) is to ensure that campaigns and political committees file timely and accurate reports that fully disclose their financial activities.  RAD is responsible for reviewing statements and financial reports filed by political committees participating in federal elections, providing assistance and guidance to the committees to properly file their reports, and for taking appropriate action to ensure compliance with the Federal Election Campaign Act (FECA). 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minAssignmentUpdateDate Filter results for assignment updates made after this date (optional)
     * @param telephoneExt Telephone extension of RAD analyst (optional)
     * @param analystId ID of RAD analyst (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param name Name of RAD analyst (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param email Email of RAD analyst (optional)
     * @param title Title of RAD analyst (optional)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param maxAssignmentUpdateDate Filter results for assignment updates made before this date (optional)
     * @param analystShortId Short ID of RAD analyst (optional)
     * @return RadAnalystPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public RadAnalystPage radAnalystGet(String apiKey, LocalDate minAssignmentUpdateDate, List<Integer> telephoneExt, List<Integer> analystId, Boolean sortNullOnly, Integer page, List<String> committeeId, Boolean sortNullsLast, Boolean sortHideNull, List<String> name, Integer perPage, List<String> email, List<String> title, String sort, LocalDate maxAssignmentUpdateDate, List<Integer> analystShortId) throws ApiException {
        ApiResponse<RadAnalystPage> localVarResp = radAnalystGetWithHttpInfo(apiKey, minAssignmentUpdateDate, telephoneExt, analystId, sortNullOnly, page, committeeId, sortNullsLast, sortHideNull, name, perPage, email, title, sort, maxAssignmentUpdateDate, analystShortId);
        return localVarResp.getData();
    }

    /**
     * 
     *  Use this endpoint to look up the RAD Analyst for a committee.  The mission of the Reports Analysis Division (RAD) is to ensure that campaigns and political committees file timely and accurate reports that fully disclose their financial activities.  RAD is responsible for reviewing statements and financial reports filed by political committees participating in federal elections, providing assistance and guidance to the committees to properly file their reports, and for taking appropriate action to ensure compliance with the Federal Election Campaign Act (FECA). 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minAssignmentUpdateDate Filter results for assignment updates made after this date (optional)
     * @param telephoneExt Telephone extension of RAD analyst (optional)
     * @param analystId ID of RAD analyst (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param name Name of RAD analyst (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param email Email of RAD analyst (optional)
     * @param title Title of RAD analyst (optional)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param maxAssignmentUpdateDate Filter results for assignment updates made before this date (optional)
     * @param analystShortId Short ID of RAD analyst (optional)
     * @return ApiResponse&lt;RadAnalystPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RadAnalystPage> radAnalystGetWithHttpInfo(String apiKey, LocalDate minAssignmentUpdateDate, List<Integer> telephoneExt, List<Integer> analystId, Boolean sortNullOnly, Integer page, List<String> committeeId, Boolean sortNullsLast, Boolean sortHideNull, List<String> name, Integer perPage, List<String> email, List<String> title, String sort, LocalDate maxAssignmentUpdateDate, List<Integer> analystShortId) throws ApiException {
        okhttp3.Call localVarCall = radAnalystGetValidateBeforeCall(apiKey, minAssignmentUpdateDate, telephoneExt, analystId, sortNullOnly, page, committeeId, sortNullsLast, sortHideNull, name, perPage, email, title, sort, maxAssignmentUpdateDate, analystShortId, null);
        Type localVarReturnType = new TypeToken<RadAnalystPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  Use this endpoint to look up the RAD Analyst for a committee.  The mission of the Reports Analysis Division (RAD) is to ensure that campaigns and political committees file timely and accurate reports that fully disclose their financial activities.  RAD is responsible for reviewing statements and financial reports filed by political committees participating in federal elections, providing assistance and guidance to the committees to properly file their reports, and for taking appropriate action to ensure compliance with the Federal Election Campaign Act (FECA). 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param minAssignmentUpdateDate Filter results for assignment updates made after this date (optional)
     * @param telephoneExt Telephone extension of RAD analyst (optional)
     * @param analystId ID of RAD analyst (optional)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param committeeId  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param name Name of RAD analyst (optional)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param email Email of RAD analyst (optional)
     * @param title Title of RAD analyst (optional)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param maxAssignmentUpdateDate Filter results for assignment updates made before this date (optional)
     * @param analystShortId Short ID of RAD analyst (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call radAnalystGetAsync(String apiKey, LocalDate minAssignmentUpdateDate, List<Integer> telephoneExt, List<Integer> analystId, Boolean sortNullOnly, Integer page, List<String> committeeId, Boolean sortNullsLast, Boolean sortHideNull, List<String> name, Integer perPage, List<String> email, List<String> title, String sort, LocalDate maxAssignmentUpdateDate, List<Integer> analystShortId, final ApiCallback<RadAnalystPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = radAnalystGetValidateBeforeCall(apiKey, minAssignmentUpdateDate, telephoneExt, analystId, sortNullOnly, page, committeeId, sortNullsLast, sortHideNull, name, perPage, email, title, sort, maxAssignmentUpdateDate, analystShortId, _callback);
        Type localVarReturnType = new TypeToken<RadAnalystPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stateElectionOfficeGet
     * @param state  Enter a state (Ex: AK, TX, VA etc..) to find the local election offices contact information.   (required)
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stateElectionOfficeGetCall(String state, String apiKey, Integer page, Boolean sortHideNull, Integer perPage, Boolean sortNullOnly, String sort, Boolean sortNullsLast, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/state-election-office/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (state != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("state", state));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (sortHideNull != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_hide_null", sortHideNull));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (sortNullOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_null_only", sortNullOnly));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (sortNullsLast != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_nulls_last", sortNullsLast));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stateElectionOfficeGetValidateBeforeCall(String state, String apiKey, Integer page, Boolean sortHideNull, Integer perPage, Boolean sortNullOnly, String sort, Boolean sortNullsLast, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'state' is set
        if (state == null) {
            throw new ApiException("Missing the required parameter 'state' when calling stateElectionOfficeGet(Async)");
        }

        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling stateElectionOfficeGet(Async)");
        }

        return stateElectionOfficeGetCall(state, apiKey, page, sortHideNull, perPage, sortNullOnly, sort, sortNullsLast, _callback);

    }

    /**
     * 
     *  State laws and procedures govern elections for state or local offices as well as how candidates appear on election ballots. Contact the appropriate state election office for more information. 
     * @param state  Enter a state (Ex: AK, TX, VA etc..) to find the local election offices contact information.   (required)
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @return StateElectionOfficeInfoPage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public StateElectionOfficeInfoPage stateElectionOfficeGet(String state, String apiKey, Integer page, Boolean sortHideNull, Integer perPage, Boolean sortNullOnly, String sort, Boolean sortNullsLast) throws ApiException {
        ApiResponse<StateElectionOfficeInfoPage> localVarResp = stateElectionOfficeGetWithHttpInfo(state, apiKey, page, sortHideNull, perPage, sortNullOnly, sort, sortNullsLast);
        return localVarResp.getData();
    }

    /**
     * 
     *  State laws and procedures govern elections for state or local offices as well as how candidates appear on election ballots. Contact the appropriate state election office for more information. 
     * @param state  Enter a state (Ex: AK, TX, VA etc..) to find the local election offices contact information.   (required)
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @return ApiResponse&lt;StateElectionOfficeInfoPage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StateElectionOfficeInfoPage> stateElectionOfficeGetWithHttpInfo(String state, String apiKey, Integer page, Boolean sortHideNull, Integer perPage, Boolean sortNullOnly, String sort, Boolean sortNullsLast) throws ApiException {
        okhttp3.Call localVarCall = stateElectionOfficeGetValidateBeforeCall(state, apiKey, page, sortHideNull, perPage, sortNullOnly, sort, sortNullsLast, null);
        Type localVarReturnType = new TypeToken<StateElectionOfficeInfoPage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  State laws and procedures govern elections for state or local offices as well as how candidates appear on election ballots. Contact the appropriate state election office for more information. 
     * @param state  Enter a state (Ex: AK, TX, VA etc..) to find the local election offices contact information.   (required)
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param page For paginating through results, starting at page 1 (optional, default to 1)
     * @param sortHideNull Hide null values on sorted column(s). (optional, default to false)
     * @param perPage The number of results returned per page. Defaults to 20. (optional, default to 20)
     * @param sortNullOnly Toggle that filters out all rows having sort column that is non-null (optional, default to false)
     * @param sort Provide a field to sort by. Use &#x60;-&#x60; for descending order.  (optional)
     * @param sortNullsLast Toggle that sorts null values last (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stateElectionOfficeGetAsync(String state, String apiKey, Integer page, Boolean sortHideNull, Integer perPage, Boolean sortNullOnly, String sort, Boolean sortNullsLast, final ApiCallback<StateElectionOfficeInfoPage> _callback) throws ApiException {

        okhttp3.Call localVarCall = stateElectionOfficeGetValidateBeforeCall(state, apiKey, page, sortHideNull, perPage, sortNullOnly, sort, sortNullsLast, _callback);
        Type localVarReturnType = new TypeToken<StateElectionOfficeInfoPage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
