/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.LegalSearchGetDefaultResponse;
import java.time.LocalDate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LegalApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LegalApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LegalApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for legalSearchGet
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param caseStatutoryCitation  Statutory citations  (optional)
     * @param afMinRtbDate  The earliest Reason to Believe date  (optional)
     * @param afReportYear  Admin fine report year  (optional)
     * @param q  Text to search legal documents for  (optional)
     * @param fromHit  Get results starting from this index  (optional)
     * @param aoRequestorType  Code of the advisory opinion requestor type.  (optional)
     * @param caseMaxCloseDate  The latest date closed of case  (optional)
     * @param aoIsPending  AO is pending  (optional)
     * @param afFdFineAmount  Final Determination fine amount  (optional)
     * @param caseMinOpenDate  The earliest date opened of case  (optional)
     * @param aoMinIssueDate  Earliest issue date of advisory opinion  (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param aoCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDocCategoryId  Select one or more case_doc_category_id to filter by corresponding CASE_DOCUMENT_CATEGORY:         - 1 - Conciliation and Settlement Agreements         - 2 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 3 - General Counsel Reports, Briefs, Notifications and Responses         - 4 - Certifications         - 5 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 6 - Statement of Reasons          - 1001 - ADR Settlement Agreements         - 1002 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 1003 - ADR Memoranda, Notifications and Responses         - 1004 - Certifications         - 1005 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 1006 - Statement of Reasons          - 2001 - Administrative Fine Case  (optional)
     * @param aoStatus  Status of AO (pending, withdrawn, or final)  (optional)
     * @param afMaxRtbDate  The latest Reason to Believe date  (optional)
     * @param afRtbFineAmount  Reason to Believe fine amount  (optional)
     * @param caseRespondents  Cases respondents  (optional)
     * @param aoEntityName  Name of commenter or representative  (optional)
     * @param aoRequestor  The requestor of the advisory opinion  (optional)
     * @param aoCategory  Category of the document  (optional)
     * @param aoRegulatoryCitation  Regulatory citations  (optional)
     * @param caseRegulatoryCitation  Regulatory citations  (optional)
     * @param caseCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDispositions  Cases dispositions  (optional)
     * @param aoName  Force advisory opinion name  (optional)
     * @param afMaxFdDate  The latest Final Determination date  (optional)
     * @param aoMaxRequestDate  Latest request date of advisory opinion  (optional)
     * @param murType  Type of MUR : current or archived  (optional)
     * @param hitsReturned  Number of results to return (max 10)  (optional)
     * @param caseElectionCycles  Cases election cycles  (optional)
     * @param caseMinCloseDate  The earliest date closed of case  (optional)
     * @param aoMaxIssueDate  Latest issue date of advisory opinion  (optional)
     * @param afCommitteeId  Admin fine committee ID  (optional)
     * @param afMinFdDate  The earliest Final Determination date  (optional)
     * @param caseMaxOpenDate  The latest date opened of case  (optional)
     * @param aoMinRequestDate  Earliest request date of advisory opinion  (optional)
     * @param aoNo  Force advisory opinion number  (optional)
     * @param type  Choose a legal document type  (optional)
     * @param caseNo  Enforcement matter case number  (optional)
     * @param aoStatutoryCitation  Statutory citations  (optional)
     * @param afName  Admin fine committee name  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td> Legal search results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call legalSearchGetCall(String apiKey, List<String> caseStatutoryCitation, LocalDate afMinRtbDate, String afReportYear, String q, Integer fromHit, List<Integer> aoRequestorType, LocalDate caseMaxCloseDate, Boolean aoIsPending, Integer afFdFineAmount, LocalDate caseMinOpenDate, LocalDate aoMinIssueDate, String sort, Boolean aoCitationRequireAll, List<String> caseDocCategoryId, String aoStatus, LocalDate afMaxRtbDate, Integer afRtbFineAmount, String caseRespondents, List<String> aoEntityName, String aoRequestor, List<String> aoCategory, List<String> aoRegulatoryCitation, List<String> caseRegulatoryCitation, Boolean caseCitationRequireAll, List<String> caseDispositions, List<String> aoName, LocalDate afMaxFdDate, LocalDate aoMaxRequestDate, String murType, Integer hitsReturned, Integer caseElectionCycles, LocalDate caseMinCloseDate, LocalDate aoMaxIssueDate, String afCommitteeId, LocalDate afMinFdDate, LocalDate caseMaxOpenDate, LocalDate aoMinRequestDate, List<String> aoNo, String type, List<String> caseNo, List<String> aoStatutoryCitation, List<String> afName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/legal/search/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (caseStatutoryCitation != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "case_statutory_citation", caseStatutoryCitation));
        }

        if (afMinRtbDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_min_rtb_date", afMinRtbDate));
        }

        if (afReportYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_report_year", afReportYear));
        }

        if (q != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("q", q));
        }

        if (fromHit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("from_hit", fromHit));
        }

        if (aoRequestorType != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_requestor_type", aoRequestorType));
        }

        if (caseMaxCloseDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_max_close_date", caseMaxCloseDate));
        }

        if (aoIsPending != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_is_pending", aoIsPending));
        }

        if (afFdFineAmount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_fd_fine_amount", afFdFineAmount));
        }

        if (caseMinOpenDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_min_open_date", caseMinOpenDate));
        }

        if (aoMinIssueDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_min_issue_date", aoMinIssueDate));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (aoCitationRequireAll != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_citation_require_all", aoCitationRequireAll));
        }

        if (caseDocCategoryId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "case_doc_category_id", caseDocCategoryId));
        }

        if (aoStatus != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_status", aoStatus));
        }

        if (afMaxRtbDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_max_rtb_date", afMaxRtbDate));
        }

        if (afRtbFineAmount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_rtb_fine_amount", afRtbFineAmount));
        }

        if (caseRespondents != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_respondents", caseRespondents));
        }

        if (aoEntityName != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_entity_name", aoEntityName));
        }

        if (aoRequestor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_requestor", aoRequestor));
        }

        if (aoCategory != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_category", aoCategory));
        }

        if (aoRegulatoryCitation != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_regulatory_citation", aoRegulatoryCitation));
        }

        if (caseRegulatoryCitation != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "case_regulatory_citation", caseRegulatoryCitation));
        }

        if (caseCitationRequireAll != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_citation_require_all", caseCitationRequireAll));
        }

        if (caseDispositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "case_dispositions", caseDispositions));
        }

        if (aoName != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_name", aoName));
        }

        if (afMaxFdDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_max_fd_date", afMaxFdDate));
        }

        if (aoMaxRequestDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_max_request_date", aoMaxRequestDate));
        }

        if (murType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mur_type", murType));
        }

        if (hitsReturned != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hits_returned", hitsReturned));
        }

        if (caseElectionCycles != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_election_cycles", caseElectionCycles));
        }

        if (caseMinCloseDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_min_close_date", caseMinCloseDate));
        }

        if (aoMaxIssueDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_max_issue_date", aoMaxIssueDate));
        }

        if (afCommitteeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_committee_id", afCommitteeId));
        }

        if (afMinFdDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("af_min_fd_date", afMinFdDate));
        }

        if (caseMaxOpenDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("case_max_open_date", caseMaxOpenDate));
        }

        if (apiKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api_key", apiKey));
        }

        if (aoMinRequestDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ao_min_request_date", aoMinRequestDate));
        }

        if (aoNo != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_no", aoNo));
        }

        if (type != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("type", type));
        }

        if (caseNo != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "case_no", caseNo));
        }

        if (aoStatutoryCitation != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "ao_statutory_citation", aoStatutoryCitation));
        }

        if (afName != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "af_name", afName));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyHeaderAuth", "ApiKeyQueryAuth", "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call legalSearchGetValidateBeforeCall(String apiKey, List<String> caseStatutoryCitation, LocalDate afMinRtbDate, String afReportYear, String q, Integer fromHit, List<Integer> aoRequestorType, LocalDate caseMaxCloseDate, Boolean aoIsPending, Integer afFdFineAmount, LocalDate caseMinOpenDate, LocalDate aoMinIssueDate, String sort, Boolean aoCitationRequireAll, List<String> caseDocCategoryId, String aoStatus, LocalDate afMaxRtbDate, Integer afRtbFineAmount, String caseRespondents, List<String> aoEntityName, String aoRequestor, List<String> aoCategory, List<String> aoRegulatoryCitation, List<String> caseRegulatoryCitation, Boolean caseCitationRequireAll, List<String> caseDispositions, List<String> aoName, LocalDate afMaxFdDate, LocalDate aoMaxRequestDate, String murType, Integer hitsReturned, Integer caseElectionCycles, LocalDate caseMinCloseDate, LocalDate aoMaxIssueDate, String afCommitteeId, LocalDate afMinFdDate, LocalDate caseMaxOpenDate, LocalDate aoMinRequestDate, List<String> aoNo, String type, List<String> caseNo, List<String> aoStatutoryCitation, List<String> afName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling legalSearchGet(Async)");
        }

        return legalSearchGetCall(apiKey, caseStatutoryCitation, afMinRtbDate, afReportYear, q, fromHit, aoRequestorType, caseMaxCloseDate, aoIsPending, afFdFineAmount, caseMinOpenDate, aoMinIssueDate, sort, aoCitationRequireAll, caseDocCategoryId, aoStatus, afMaxRtbDate, afRtbFineAmount, caseRespondents, aoEntityName, aoRequestor, aoCategory, aoRegulatoryCitation, caseRegulatoryCitation, caseCitationRequireAll, caseDispositions, aoName, afMaxFdDate, aoMaxRequestDate, murType, hitsReturned, caseElectionCycles, caseMinCloseDate, aoMaxIssueDate, afCommitteeId, afMinFdDate, caseMaxOpenDate, aoMinRequestDate, aoNo, type, caseNo, aoStatutoryCitation, afName, _callback);

    }

    /**
     * 
     *  Search legal documents by document type, or across all document types using keywords, parameter values and ranges. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param caseStatutoryCitation  Statutory citations  (optional)
     * @param afMinRtbDate  The earliest Reason to Believe date  (optional)
     * @param afReportYear  Admin fine report year  (optional)
     * @param q  Text to search legal documents for  (optional)
     * @param fromHit  Get results starting from this index  (optional)
     * @param aoRequestorType  Code of the advisory opinion requestor type.  (optional)
     * @param caseMaxCloseDate  The latest date closed of case  (optional)
     * @param aoIsPending  AO is pending  (optional)
     * @param afFdFineAmount  Final Determination fine amount  (optional)
     * @param caseMinOpenDate  The earliest date opened of case  (optional)
     * @param aoMinIssueDate  Earliest issue date of advisory opinion  (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param aoCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDocCategoryId  Select one or more case_doc_category_id to filter by corresponding CASE_DOCUMENT_CATEGORY:         - 1 - Conciliation and Settlement Agreements         - 2 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 3 - General Counsel Reports, Briefs, Notifications and Responses         - 4 - Certifications         - 5 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 6 - Statement of Reasons          - 1001 - ADR Settlement Agreements         - 1002 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 1003 - ADR Memoranda, Notifications and Responses         - 1004 - Certifications         - 1005 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 1006 - Statement of Reasons          - 2001 - Administrative Fine Case  (optional)
     * @param aoStatus  Status of AO (pending, withdrawn, or final)  (optional)
     * @param afMaxRtbDate  The latest Reason to Believe date  (optional)
     * @param afRtbFineAmount  Reason to Believe fine amount  (optional)
     * @param caseRespondents  Cases respondents  (optional)
     * @param aoEntityName  Name of commenter or representative  (optional)
     * @param aoRequestor  The requestor of the advisory opinion  (optional)
     * @param aoCategory  Category of the document  (optional)
     * @param aoRegulatoryCitation  Regulatory citations  (optional)
     * @param caseRegulatoryCitation  Regulatory citations  (optional)
     * @param caseCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDispositions  Cases dispositions  (optional)
     * @param aoName  Force advisory opinion name  (optional)
     * @param afMaxFdDate  The latest Final Determination date  (optional)
     * @param aoMaxRequestDate  Latest request date of advisory opinion  (optional)
     * @param murType  Type of MUR : current or archived  (optional)
     * @param hitsReturned  Number of results to return (max 10)  (optional)
     * @param caseElectionCycles  Cases election cycles  (optional)
     * @param caseMinCloseDate  The earliest date closed of case  (optional)
     * @param aoMaxIssueDate  Latest issue date of advisory opinion  (optional)
     * @param afCommitteeId  Admin fine committee ID  (optional)
     * @param afMinFdDate  The earliest Final Determination date  (optional)
     * @param caseMaxOpenDate  The latest date opened of case  (optional)
     * @param aoMinRequestDate  Earliest request date of advisory opinion  (optional)
     * @param aoNo  Force advisory opinion number  (optional)
     * @param type  Choose a legal document type  (optional)
     * @param caseNo  Enforcement matter case number  (optional)
     * @param aoStatutoryCitation  Statutory citations  (optional)
     * @param afName  Admin fine committee name  (optional)
     * @return LegalSearchGetDefaultResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td> Legal search results </td><td>  -  </td></tr>
     </table>
     */
    public LegalSearchGetDefaultResponse legalSearchGet(String apiKey, List<String> caseStatutoryCitation, LocalDate afMinRtbDate, String afReportYear, String q, Integer fromHit, List<Integer> aoRequestorType, LocalDate caseMaxCloseDate, Boolean aoIsPending, Integer afFdFineAmount, LocalDate caseMinOpenDate, LocalDate aoMinIssueDate, String sort, Boolean aoCitationRequireAll, List<String> caseDocCategoryId, String aoStatus, LocalDate afMaxRtbDate, Integer afRtbFineAmount, String caseRespondents, List<String> aoEntityName, String aoRequestor, List<String> aoCategory, List<String> aoRegulatoryCitation, List<String> caseRegulatoryCitation, Boolean caseCitationRequireAll, List<String> caseDispositions, List<String> aoName, LocalDate afMaxFdDate, LocalDate aoMaxRequestDate, String murType, Integer hitsReturned, Integer caseElectionCycles, LocalDate caseMinCloseDate, LocalDate aoMaxIssueDate, String afCommitteeId, LocalDate afMinFdDate, LocalDate caseMaxOpenDate, LocalDate aoMinRequestDate, List<String> aoNo, String type, List<String> caseNo, List<String> aoStatutoryCitation, List<String> afName) throws ApiException {
        ApiResponse<LegalSearchGetDefaultResponse> localVarResp = legalSearchGetWithHttpInfo(apiKey, caseStatutoryCitation, afMinRtbDate, afReportYear, q, fromHit, aoRequestorType, caseMaxCloseDate, aoIsPending, afFdFineAmount, caseMinOpenDate, aoMinIssueDate, sort, aoCitationRequireAll, caseDocCategoryId, aoStatus, afMaxRtbDate, afRtbFineAmount, caseRespondents, aoEntityName, aoRequestor, aoCategory, aoRegulatoryCitation, caseRegulatoryCitation, caseCitationRequireAll, caseDispositions, aoName, afMaxFdDate, aoMaxRequestDate, murType, hitsReturned, caseElectionCycles, caseMinCloseDate, aoMaxIssueDate, afCommitteeId, afMinFdDate, caseMaxOpenDate, aoMinRequestDate, aoNo, type, caseNo, aoStatutoryCitation, afName);
        return localVarResp.getData();
    }

    /**
     * 
     *  Search legal documents by document type, or across all document types using keywords, parameter values and ranges. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param caseStatutoryCitation  Statutory citations  (optional)
     * @param afMinRtbDate  The earliest Reason to Believe date  (optional)
     * @param afReportYear  Admin fine report year  (optional)
     * @param q  Text to search legal documents for  (optional)
     * @param fromHit  Get results starting from this index  (optional)
     * @param aoRequestorType  Code of the advisory opinion requestor type.  (optional)
     * @param caseMaxCloseDate  The latest date closed of case  (optional)
     * @param aoIsPending  AO is pending  (optional)
     * @param afFdFineAmount  Final Determination fine amount  (optional)
     * @param caseMinOpenDate  The earliest date opened of case  (optional)
     * @param aoMinIssueDate  Earliest issue date of advisory opinion  (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param aoCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDocCategoryId  Select one or more case_doc_category_id to filter by corresponding CASE_DOCUMENT_CATEGORY:         - 1 - Conciliation and Settlement Agreements         - 2 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 3 - General Counsel Reports, Briefs, Notifications and Responses         - 4 - Certifications         - 5 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 6 - Statement of Reasons          - 1001 - ADR Settlement Agreements         - 1002 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 1003 - ADR Memoranda, Notifications and Responses         - 1004 - Certifications         - 1005 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 1006 - Statement of Reasons          - 2001 - Administrative Fine Case  (optional)
     * @param aoStatus  Status of AO (pending, withdrawn, or final)  (optional)
     * @param afMaxRtbDate  The latest Reason to Believe date  (optional)
     * @param afRtbFineAmount  Reason to Believe fine amount  (optional)
     * @param caseRespondents  Cases respondents  (optional)
     * @param aoEntityName  Name of commenter or representative  (optional)
     * @param aoRequestor  The requestor of the advisory opinion  (optional)
     * @param aoCategory  Category of the document  (optional)
     * @param aoRegulatoryCitation  Regulatory citations  (optional)
     * @param caseRegulatoryCitation  Regulatory citations  (optional)
     * @param caseCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDispositions  Cases dispositions  (optional)
     * @param aoName  Force advisory opinion name  (optional)
     * @param afMaxFdDate  The latest Final Determination date  (optional)
     * @param aoMaxRequestDate  Latest request date of advisory opinion  (optional)
     * @param murType  Type of MUR : current or archived  (optional)
     * @param hitsReturned  Number of results to return (max 10)  (optional)
     * @param caseElectionCycles  Cases election cycles  (optional)
     * @param caseMinCloseDate  The earliest date closed of case  (optional)
     * @param aoMaxIssueDate  Latest issue date of advisory opinion  (optional)
     * @param afCommitteeId  Admin fine committee ID  (optional)
     * @param afMinFdDate  The earliest Final Determination date  (optional)
     * @param caseMaxOpenDate  The latest date opened of case  (optional)
     * @param aoMinRequestDate  Earliest request date of advisory opinion  (optional)
     * @param aoNo  Force advisory opinion number  (optional)
     * @param type  Choose a legal document type  (optional)
     * @param caseNo  Enforcement matter case number  (optional)
     * @param aoStatutoryCitation  Statutory citations  (optional)
     * @param afName  Admin fine committee name  (optional)
     * @return ApiResponse&lt;LegalSearchGetDefaultResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td> Legal search results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LegalSearchGetDefaultResponse> legalSearchGetWithHttpInfo(String apiKey, List<String> caseStatutoryCitation, LocalDate afMinRtbDate, String afReportYear, String q, Integer fromHit, List<Integer> aoRequestorType, LocalDate caseMaxCloseDate, Boolean aoIsPending, Integer afFdFineAmount, LocalDate caseMinOpenDate, LocalDate aoMinIssueDate, String sort, Boolean aoCitationRequireAll, List<String> caseDocCategoryId, String aoStatus, LocalDate afMaxRtbDate, Integer afRtbFineAmount, String caseRespondents, List<String> aoEntityName, String aoRequestor, List<String> aoCategory, List<String> aoRegulatoryCitation, List<String> caseRegulatoryCitation, Boolean caseCitationRequireAll, List<String> caseDispositions, List<String> aoName, LocalDate afMaxFdDate, LocalDate aoMaxRequestDate, String murType, Integer hitsReturned, Integer caseElectionCycles, LocalDate caseMinCloseDate, LocalDate aoMaxIssueDate, String afCommitteeId, LocalDate afMinFdDate, LocalDate caseMaxOpenDate, LocalDate aoMinRequestDate, List<String> aoNo, String type, List<String> caseNo, List<String> aoStatutoryCitation, List<String> afName) throws ApiException {
        okhttp3.Call localVarCall = legalSearchGetValidateBeforeCall(apiKey, caseStatutoryCitation, afMinRtbDate, afReportYear, q, fromHit, aoRequestorType, caseMaxCloseDate, aoIsPending, afFdFineAmount, caseMinOpenDate, aoMinIssueDate, sort, aoCitationRequireAll, caseDocCategoryId, aoStatus, afMaxRtbDate, afRtbFineAmount, caseRespondents, aoEntityName, aoRequestor, aoCategory, aoRegulatoryCitation, caseRegulatoryCitation, caseCitationRequireAll, caseDispositions, aoName, afMaxFdDate, aoMaxRequestDate, murType, hitsReturned, caseElectionCycles, caseMinCloseDate, aoMaxIssueDate, afCommitteeId, afMinFdDate, caseMaxOpenDate, aoMinRequestDate, aoNo, type, caseNo, aoStatutoryCitation, afName, null);
        Type localVarReturnType = new TypeToken<LegalSearchGetDefaultResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  Search legal documents by document type, or across all document types using keywords, parameter values and ranges. 
     * @param apiKey  API key for https://api.data.gov. Get one at https://api.data.gov/signup.  (required)
     * @param caseStatutoryCitation  Statutory citations  (optional)
     * @param afMinRtbDate  The earliest Reason to Believe date  (optional)
     * @param afReportYear  Admin fine report year  (optional)
     * @param q  Text to search legal documents for  (optional)
     * @param fromHit  Get results starting from this index  (optional)
     * @param aoRequestorType  Code of the advisory opinion requestor type.  (optional)
     * @param caseMaxCloseDate  The latest date closed of case  (optional)
     * @param aoIsPending  AO is pending  (optional)
     * @param afFdFineAmount  Final Determination fine amount  (optional)
     * @param caseMinOpenDate  The earliest date opened of case  (optional)
     * @param aoMinIssueDate  Earliest issue date of advisory opinion  (optional)
     * @param sort  Provide a field to sort by. Use &#x60;-&#x60; for descending order. ex: &#x60;-case_no&#x60;  (optional)
     * @param aoCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDocCategoryId  Select one or more case_doc_category_id to filter by corresponding CASE_DOCUMENT_CATEGORY:         - 1 - Conciliation and Settlement Agreements         - 2 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 3 - General Counsel Reports, Briefs, Notifications and Responses         - 4 - Certifications         - 5 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 6 - Statement of Reasons          - 1001 - ADR Settlement Agreements         - 1002 - Complaint, Responses, Designation of Counsel and Extensions of Time         - 1003 - ADR Memoranda, Notifications and Responses         - 1004 - Certifications         - 1005 - Civil Penalties, Disgorgements, Other Payments and Letters of Compliance         - 1006 - Statement of Reasons          - 2001 - Administrative Fine Case  (optional)
     * @param aoStatus  Status of AO (pending, withdrawn, or final)  (optional)
     * @param afMaxRtbDate  The latest Reason to Believe date  (optional)
     * @param afRtbFineAmount  Reason to Believe fine amount  (optional)
     * @param caseRespondents  Cases respondents  (optional)
     * @param aoEntityName  Name of commenter or representative  (optional)
     * @param aoRequestor  The requestor of the advisory opinion  (optional)
     * @param aoCategory  Category of the document  (optional)
     * @param aoRegulatoryCitation  Regulatory citations  (optional)
     * @param caseRegulatoryCitation  Regulatory citations  (optional)
     * @param caseCitationRequireAll  Require all citations to be in document (default behavior is any)  (optional)
     * @param caseDispositions  Cases dispositions  (optional)
     * @param aoName  Force advisory opinion name  (optional)
     * @param afMaxFdDate  The latest Final Determination date  (optional)
     * @param aoMaxRequestDate  Latest request date of advisory opinion  (optional)
     * @param murType  Type of MUR : current or archived  (optional)
     * @param hitsReturned  Number of results to return (max 10)  (optional)
     * @param caseElectionCycles  Cases election cycles  (optional)
     * @param caseMinCloseDate  The earliest date closed of case  (optional)
     * @param aoMaxIssueDate  Latest issue date of advisory opinion  (optional)
     * @param afCommitteeId  Admin fine committee ID  (optional)
     * @param afMinFdDate  The earliest Final Determination date  (optional)
     * @param caseMaxOpenDate  The latest date opened of case  (optional)
     * @param aoMinRequestDate  Earliest request date of advisory opinion  (optional)
     * @param aoNo  Force advisory opinion number  (optional)
     * @param type  Choose a legal document type  (optional)
     * @param caseNo  Enforcement matter case number  (optional)
     * @param aoStatutoryCitation  Statutory citations  (optional)
     * @param afName  Admin fine committee name  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 0 </td><td> Legal search results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call legalSearchGetAsync(String apiKey, List<String> caseStatutoryCitation, LocalDate afMinRtbDate, String afReportYear, String q, Integer fromHit, List<Integer> aoRequestorType, LocalDate caseMaxCloseDate, Boolean aoIsPending, Integer afFdFineAmount, LocalDate caseMinOpenDate, LocalDate aoMinIssueDate, String sort, Boolean aoCitationRequireAll, List<String> caseDocCategoryId, String aoStatus, LocalDate afMaxRtbDate, Integer afRtbFineAmount, String caseRespondents, List<String> aoEntityName, String aoRequestor, List<String> aoCategory, List<String> aoRegulatoryCitation, List<String> caseRegulatoryCitation, Boolean caseCitationRequireAll, List<String> caseDispositions, List<String> aoName, LocalDate afMaxFdDate, LocalDate aoMaxRequestDate, String murType, Integer hitsReturned, Integer caseElectionCycles, LocalDate caseMinCloseDate, LocalDate aoMaxIssueDate, String afCommitteeId, LocalDate afMinFdDate, LocalDate caseMaxOpenDate, LocalDate aoMinRequestDate, List<String> aoNo, String type, List<String> caseNo, List<String> aoStatutoryCitation, List<String> afName, final ApiCallback<LegalSearchGetDefaultResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = legalSearchGetValidateBeforeCall(apiKey, caseStatutoryCitation, afMinRtbDate, afReportYear, q, fromHit, aoRequestorType, caseMaxCloseDate, aoIsPending, afFdFineAmount, caseMinOpenDate, aoMinIssueDate, sort, aoCitationRequireAll, caseDocCategoryId, aoStatus, afMaxRtbDate, afRtbFineAmount, caseRespondents, aoEntityName, aoRequestor, aoCategory, aoRegulatoryCitation, caseRegulatoryCitation, caseCitationRequireAll, caseDispositions, aoName, afMaxFdDate, aoMaxRequestDate, murType, hitsReturned, caseElectionCycles, caseMinCloseDate, aoMaxIssueDate, afCommitteeId, afMinFdDate, caseMaxOpenDate, aoMinRequestDate, aoNo, type, caseNo, aoStatutoryCitation, afName, _callback);
        Type localVarReturnType = new TypeToken<LegalSearchGetDefaultResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
