/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SchedulesScheduleCGetDefaultResponseResultsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SchedulesScheduleCGetDefaultResponseResultsInner {
  public static final String SERIALIZED_NAME_ACTION_CODE = "action_code";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE)
  private String actionCode;

  public static final String SERIALIZED_NAME_ACTION_CODE_FULL = "action_code_full";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE_FULL)
  private String actionCodeFull;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_FULL = "candidate_office_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_FULL)
  private String candidateOfficeFull;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL = "candidate_office_state_full";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE_FULL)
  private String candidateOfficeStateFull;

  public static final String SERIALIZED_NAME_CANDIDATE_PREFIX = "candidate_prefix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PREFIX)
  private String candidatePrefix;

  public static final String SERIALIZED_NAME_CANDIDATE_SUFFIX = "candidate_suffix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_SUFFIX)
  private String candidateSuffix;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CYCLE = "cycle";
  @SerializedName(SERIALIZED_NAME_CYCLE)
  private Integer cycle;

  public static final String SERIALIZED_NAME_DUE_DATE_TERMS = "due_date_terms";
  @SerializedName(SERIALIZED_NAME_DUE_DATE_TERMS)
  private String dueDateTerms;

  public static final String SERIALIZED_NAME_ELECTION_TYPE = "election_type";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE)
  private String electionType;

  public static final String SERIALIZED_NAME_ELECTION_TYPE_FULL = "election_type_full";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE_FULL)
  private String electionTypeFull;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_FULL = "entity_type_full";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_FULL)
  private String entityTypeFull;

  public static final String SERIALIZED_NAME_FEC_COMMITTEE_ID = "fec_committee_id";
  @SerializedName(SERIALIZED_NAME_FEC_COMMITTEE_ID)
  private String fecCommitteeId;

  public static final String SERIALIZED_NAME_FEC_ELECTION_TYPE_FULL = "fec_election_type_full";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_TYPE_FULL)
  private String fecElectionTypeFull;

  public static final String SERIALIZED_NAME_FEC_ELECTION_TYPE_YEAR = "fec_election_type_year";
  @SerializedName(SERIALIZED_NAME_FEC_ELECTION_TYPE_YEAR)
  private String fecElectionTypeYear;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_INCURRED_DATE = "incurred_date";
  @SerializedName(SERIALIZED_NAME_INCURRED_DATE)
  private LocalDate incurredDate;

  public static final String SERIALIZED_NAME_INTEREST_RATE_TERMS = "interest_rate_terms";
  @SerializedName(SERIALIZED_NAME_INTEREST_RATE_TERMS)
  private String interestRateTerms;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_LOAD_DATE = "load_date";
  @SerializedName(SERIALIZED_NAME_LOAD_DATE)
  private OffsetDateTime loadDate;

  public static final String SERIALIZED_NAME_LOAN_BALANCE = "loan_balance";
  @SerializedName(SERIALIZED_NAME_LOAN_BALANCE)
  private Float loanBalance;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_CITY = "loan_source_city";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_CITY)
  private String loanSourceCity;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_FIRST_NAME = "loan_source_first_name";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_FIRST_NAME)
  private String loanSourceFirstName;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_LAST_NAME = "loan_source_last_name";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_LAST_NAME)
  private String loanSourceLastName;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_MIDDLE_NAME = "loan_source_middle_name";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_MIDDLE_NAME)
  private String loanSourceMiddleName;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_NAME = "loan_source_name";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_NAME)
  private String loanSourceName;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_PREFIX = "loan_source_prefix";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_PREFIX)
  private String loanSourcePrefix;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_STATE = "loan_source_state";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_STATE)
  private String loanSourceState;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_STREET1 = "loan_source_street_1";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_STREET1)
  private String loanSourceStreet1;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_STREET2 = "loan_source_street_2";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_STREET2)
  private String loanSourceStreet2;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_SUFFIX = "loan_source_suffix";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_SUFFIX)
  private String loanSourceSuffix;

  public static final String SERIALIZED_NAME_LOAN_SOURCE_ZIP = "loan_source_zip";
  @SerializedName(SERIALIZED_NAME_LOAN_SOURCE_ZIP)
  private Integer loanSourceZip;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_ORIGINAL_LOAN_AMOUNT = "original_loan_amount";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_LOAN_AMOUNT)
  private Float originalLoanAmount;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private Integer originalSubId;

  public static final String SERIALIZED_NAME_PAYMENT_TO_DATE = "payment_to_date";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TO_DATE)
  private Float paymentToDate;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_PERSONALLY_FUNDED = "personally_funded";
  @SerializedName(SERIALIZED_NAME_PERSONALLY_FUNDED)
  private String personallyFunded;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_A_LINE_NUMBER = "schedule_a_line_number";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_A_LINE_NUMBER)
  private Integer scheduleALineNumber;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SECURED_IND = "secured_ind";
  @SerializedName(SERIALIZED_NAME_SECURED_IND)
  private String securedInd;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public SchedulesScheduleCGetDefaultResponseResultsInner() {
  }

  public SchedulesScheduleCGetDefaultResponseResultsInner actionCode(String actionCode) {
    this.actionCode = actionCode;
    return this;
  }

  /**
   * Get actionCode
   * @return actionCode
   */
  @javax.annotation.Nullable
  public String getActionCode() {
    return actionCode;
  }

  public void setActionCode(String actionCode) {
    this.actionCode = actionCode;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner actionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
    return this;
  }

  /**
   * Get actionCodeFull
   * @return actionCodeFull
   */
  @javax.annotation.Nullable
  public String getActionCodeFull() {
    return actionCodeFull;
  }

  public void setActionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   *  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don&#39;t have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member&#39;s district changes during re-districting. Presidential IDs don&#39;t have districts. The rest is sequence. 
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
    return this;
  }

  /**
   * Get candidateOfficeFull
   * @return candidateOfficeFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeFull() {
    return candidateOfficeFull;
  }

  public void setCandidateOfficeFull(String candidateOfficeFull) {
    this.candidateOfficeFull = candidateOfficeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * Get candidateOfficeState
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
    return this;
  }

  /**
   * Get candidateOfficeStateFull
   * @return candidateOfficeStateFull
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeStateFull() {
    return candidateOfficeStateFull;
  }

  public void setCandidateOfficeStateFull(String candidateOfficeStateFull) {
    this.candidateOfficeStateFull = candidateOfficeStateFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
    return this;
  }

  /**
   * Get candidatePrefix
   * @return candidatePrefix
   */
  @javax.annotation.Nullable
  public String getCandidatePrefix() {
    return candidatePrefix;
  }

  public void setCandidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner candidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
    return this;
  }

  /**
   * Get candidateSuffix
   * @return candidateSuffix
   */
  @javax.annotation.Nullable
  public String getCandidateSuffix() {
    return candidateSuffix;
  }

  public void setCandidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner cycle(Integer cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @javax.annotation.Nullable
  public Integer getCycle() {
    return cycle;
  }

  public void setCycle(Integer cycle) {
    this.cycle = cycle;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner dueDateTerms(String dueDateTerms) {
    this.dueDateTerms = dueDateTerms;
    return this;
  }

  /**
   * Get dueDateTerms
   * @return dueDateTerms
   */
  @javax.annotation.Nullable
  public String getDueDateTerms() {
    return dueDateTerms;
  }

  public void setDueDateTerms(String dueDateTerms) {
    this.dueDateTerms = dueDateTerms;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner electionType(String electionType) {
    this.electionType = electionType;
    return this;
  }

  /**
   * Get electionType
   * @return electionType
   */
  @javax.annotation.Nullable
  public String getElectionType() {
    return electionType;
  }

  public void setElectionType(String electionType) {
    this.electionType = electionType;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner electionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
    return this;
  }

  /**
   * Get electionTypeFull
   * @return electionTypeFull
   */
  @javax.annotation.Nullable
  public String getElectionTypeFull() {
    return electionTypeFull;
  }

  public void setElectionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner entityTypeFull(String entityTypeFull) {
    this.entityTypeFull = entityTypeFull;
    return this;
  }

  /**
   * Get entityTypeFull
   * @return entityTypeFull
   */
  @javax.annotation.Nullable
  public String getEntityTypeFull() {
    return entityTypeFull;
  }

  public void setEntityTypeFull(String entityTypeFull) {
    this.entityTypeFull = entityTypeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner fecCommitteeId(String fecCommitteeId) {
    this.fecCommitteeId = fecCommitteeId;
    return this;
  }

  /**
   * Get fecCommitteeId
   * @return fecCommitteeId
   */
  @javax.annotation.Nullable
  public String getFecCommitteeId() {
    return fecCommitteeId;
  }

  public void setFecCommitteeId(String fecCommitteeId) {
    this.fecCommitteeId = fecCommitteeId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner fecElectionTypeFull(String fecElectionTypeFull) {
    this.fecElectionTypeFull = fecElectionTypeFull;
    return this;
  }

  /**
   * Get fecElectionTypeFull
   * @return fecElectionTypeFull
   */
  @javax.annotation.Nullable
  public String getFecElectionTypeFull() {
    return fecElectionTypeFull;
  }

  public void setFecElectionTypeFull(String fecElectionTypeFull) {
    this.fecElectionTypeFull = fecElectionTypeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner fecElectionTypeYear(String fecElectionTypeYear) {
    this.fecElectionTypeYear = fecElectionTypeYear;
    return this;
  }

  /**
   * Get fecElectionTypeYear
   * @return fecElectionTypeYear
   */
  @javax.annotation.Nullable
  public String getFecElectionTypeYear() {
    return fecElectionTypeYear;
  }

  public void setFecElectionTypeYear(String fecElectionTypeYear) {
    this.fecElectionTypeYear = fecElectionTypeYear;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   *  An unique identifier for each page where the electronic or paper filing is reported. 
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner incurredDate(LocalDate incurredDate) {
    this.incurredDate = incurredDate;
    return this;
  }

  /**
   * Get incurredDate
   * @return incurredDate
   */
  @javax.annotation.Nullable
  public LocalDate getIncurredDate() {
    return incurredDate;
  }

  public void setIncurredDate(LocalDate incurredDate) {
    this.incurredDate = incurredDate;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner interestRateTerms(String interestRateTerms) {
    this.interestRateTerms = interestRateTerms;
    return this;
  }

  /**
   * Get interestRateTerms
   * @return interestRateTerms
   */
  @javax.annotation.Nullable
  public String getInterestRateTerms() {
    return interestRateTerms;
  }

  public void setInterestRateTerms(String interestRateTerms) {
    this.interestRateTerms = interestRateTerms;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
    return this;
  }

  /**
   * Get loadDate
   * @return loadDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadDate() {
    return loadDate;
  }

  public void setLoadDate(OffsetDateTime loadDate) {
    this.loadDate = loadDate;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanBalance(Float loanBalance) {
    this.loanBalance = loanBalance;
    return this;
  }

  /**
   * Get loanBalance
   * @return loanBalance
   */
  @javax.annotation.Nullable
  public Float getLoanBalance() {
    return loanBalance;
  }

  public void setLoanBalance(Float loanBalance) {
    this.loanBalance = loanBalance;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceCity(String loanSourceCity) {
    this.loanSourceCity = loanSourceCity;
    return this;
  }

  /**
   * Get loanSourceCity
   * @return loanSourceCity
   */
  @javax.annotation.Nullable
  public String getLoanSourceCity() {
    return loanSourceCity;
  }

  public void setLoanSourceCity(String loanSourceCity) {
    this.loanSourceCity = loanSourceCity;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceFirstName(String loanSourceFirstName) {
    this.loanSourceFirstName = loanSourceFirstName;
    return this;
  }

  /**
   * Get loanSourceFirstName
   * @return loanSourceFirstName
   */
  @javax.annotation.Nullable
  public String getLoanSourceFirstName() {
    return loanSourceFirstName;
  }

  public void setLoanSourceFirstName(String loanSourceFirstName) {
    this.loanSourceFirstName = loanSourceFirstName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceLastName(String loanSourceLastName) {
    this.loanSourceLastName = loanSourceLastName;
    return this;
  }

  /**
   * Get loanSourceLastName
   * @return loanSourceLastName
   */
  @javax.annotation.Nullable
  public String getLoanSourceLastName() {
    return loanSourceLastName;
  }

  public void setLoanSourceLastName(String loanSourceLastName) {
    this.loanSourceLastName = loanSourceLastName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceMiddleName(String loanSourceMiddleName) {
    this.loanSourceMiddleName = loanSourceMiddleName;
    return this;
  }

  /**
   * Get loanSourceMiddleName
   * @return loanSourceMiddleName
   */
  @javax.annotation.Nullable
  public String getLoanSourceMiddleName() {
    return loanSourceMiddleName;
  }

  public void setLoanSourceMiddleName(String loanSourceMiddleName) {
    this.loanSourceMiddleName = loanSourceMiddleName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceName(String loanSourceName) {
    this.loanSourceName = loanSourceName;
    return this;
  }

  /**
   * Source of the loan (i.e., bank loan, brokerage account, credit card, home equity line of credit,               other line of credit, or personal funds of the candidate
   * @return loanSourceName
   */
  @javax.annotation.Nullable
  public String getLoanSourceName() {
    return loanSourceName;
  }

  public void setLoanSourceName(String loanSourceName) {
    this.loanSourceName = loanSourceName;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourcePrefix(String loanSourcePrefix) {
    this.loanSourcePrefix = loanSourcePrefix;
    return this;
  }

  /**
   * Get loanSourcePrefix
   * @return loanSourcePrefix
   */
  @javax.annotation.Nullable
  public String getLoanSourcePrefix() {
    return loanSourcePrefix;
  }

  public void setLoanSourcePrefix(String loanSourcePrefix) {
    this.loanSourcePrefix = loanSourcePrefix;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceState(String loanSourceState) {
    this.loanSourceState = loanSourceState;
    return this;
  }

  /**
   * Get loanSourceState
   * @return loanSourceState
   */
  @javax.annotation.Nullable
  public String getLoanSourceState() {
    return loanSourceState;
  }

  public void setLoanSourceState(String loanSourceState) {
    this.loanSourceState = loanSourceState;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceStreet1(String loanSourceStreet1) {
    this.loanSourceStreet1 = loanSourceStreet1;
    return this;
  }

  /**
   * Get loanSourceStreet1
   * @return loanSourceStreet1
   */
  @javax.annotation.Nullable
  public String getLoanSourceStreet1() {
    return loanSourceStreet1;
  }

  public void setLoanSourceStreet1(String loanSourceStreet1) {
    this.loanSourceStreet1 = loanSourceStreet1;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceStreet2(String loanSourceStreet2) {
    this.loanSourceStreet2 = loanSourceStreet2;
    return this;
  }

  /**
   * Get loanSourceStreet2
   * @return loanSourceStreet2
   */
  @javax.annotation.Nullable
  public String getLoanSourceStreet2() {
    return loanSourceStreet2;
  }

  public void setLoanSourceStreet2(String loanSourceStreet2) {
    this.loanSourceStreet2 = loanSourceStreet2;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceSuffix(String loanSourceSuffix) {
    this.loanSourceSuffix = loanSourceSuffix;
    return this;
  }

  /**
   * Get loanSourceSuffix
   * @return loanSourceSuffix
   */
  @javax.annotation.Nullable
  public String getLoanSourceSuffix() {
    return loanSourceSuffix;
  }

  public void setLoanSourceSuffix(String loanSourceSuffix) {
    this.loanSourceSuffix = loanSourceSuffix;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner loanSourceZip(Integer loanSourceZip) {
    this.loanSourceZip = loanSourceZip;
    return this;
  }

  /**
   * Get loanSourceZip
   * @return loanSourceZip
   */
  @javax.annotation.Nullable
  public Integer getLoanSourceZip() {
    return loanSourceZip;
  }

  public void setLoanSourceZip(Integer loanSourceZip) {
    this.loanSourceZip = loanSourceZip;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner originalLoanAmount(Float originalLoanAmount) {
    this.originalLoanAmount = originalLoanAmount;
    return this;
  }

  /**
   * Get originalLoanAmount
   * @return originalLoanAmount
   */
  @javax.annotation.Nullable
  public Float getOriginalLoanAmount() {
    return originalLoanAmount;
  }

  public void setOriginalLoanAmount(Float originalLoanAmount) {
    this.originalLoanAmount = originalLoanAmount;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner originalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public Integer getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(Integer originalSubId) {
    this.originalSubId = originalSubId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner paymentToDate(Float paymentToDate) {
    this.paymentToDate = paymentToDate;
    return this;
  }

  /**
   * Get paymentToDate
   * @return paymentToDate
   */
  @javax.annotation.Nullable
  public Float getPaymentToDate() {
    return paymentToDate;
  }

  public void setPaymentToDate(Float paymentToDate) {
    this.paymentToDate = paymentToDate;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner personallyFunded(String personallyFunded) {
    this.personallyFunded = personallyFunded;
    return this;
  }

  /**
   * Get personallyFunded
   * @return personallyFunded
   */
  @javax.annotation.Nullable
  public String getPersonallyFunded() {
    return personallyFunded;
  }

  public void setPersonallyFunded(String personallyFunded) {
    this.personallyFunded = personallyFunded;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner scheduleALineNumber(Integer scheduleALineNumber) {
    this.scheduleALineNumber = scheduleALineNumber;
    return this;
  }

  /**
   * Get scheduleALineNumber
   * @return scheduleALineNumber
   */
  @javax.annotation.Nullable
  public Integer getScheduleALineNumber() {
    return scheduleALineNumber;
  }

  public void setScheduleALineNumber(Integer scheduleALineNumber) {
    this.scheduleALineNumber = scheduleALineNumber;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner securedInd(String securedInd) {
    this.securedInd = securedInd;
    return this;
  }

  /**
   * Get securedInd
   * @return securedInd
   */
  @javax.annotation.Nullable
  public String getSecuredInd() {
    return securedInd;
  }

  public void setSecuredInd(String securedInd) {
    this.securedInd = securedInd;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public SchedulesScheduleCGetDefaultResponseResultsInner transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedulesScheduleCGetDefaultResponseResultsInner schedulesScheduleCGetDefaultResponseResultsInner = (SchedulesScheduleCGetDefaultResponseResultsInner) o;
    return Objects.equals(this.actionCode, schedulesScheduleCGetDefaultResponseResultsInner.actionCode) &&
        Objects.equals(this.actionCodeFull, schedulesScheduleCGetDefaultResponseResultsInner.actionCodeFull) &&
        Objects.equals(this.candidateFirstName, schedulesScheduleCGetDefaultResponseResultsInner.candidateFirstName) &&
        Objects.equals(this.candidateId, schedulesScheduleCGetDefaultResponseResultsInner.candidateId) &&
        Objects.equals(this.candidateLastName, schedulesScheduleCGetDefaultResponseResultsInner.candidateLastName) &&
        Objects.equals(this.candidateMiddleName, schedulesScheduleCGetDefaultResponseResultsInner.candidateMiddleName) &&
        Objects.equals(this.candidateName, schedulesScheduleCGetDefaultResponseResultsInner.candidateName) &&
        Objects.equals(this.candidateOffice, schedulesScheduleCGetDefaultResponseResultsInner.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, schedulesScheduleCGetDefaultResponseResultsInner.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeFull, schedulesScheduleCGetDefaultResponseResultsInner.candidateOfficeFull) &&
        Objects.equals(this.candidateOfficeState, schedulesScheduleCGetDefaultResponseResultsInner.candidateOfficeState) &&
        Objects.equals(this.candidateOfficeStateFull, schedulesScheduleCGetDefaultResponseResultsInner.candidateOfficeStateFull) &&
        Objects.equals(this.candidatePrefix, schedulesScheduleCGetDefaultResponseResultsInner.candidatePrefix) &&
        Objects.equals(this.candidateSuffix, schedulesScheduleCGetDefaultResponseResultsInner.candidateSuffix) &&
        Objects.equals(this.committee, schedulesScheduleCGetDefaultResponseResultsInner.committee) &&
        Objects.equals(this.committeeId, schedulesScheduleCGetDefaultResponseResultsInner.committeeId) &&
        Objects.equals(this.cycle, schedulesScheduleCGetDefaultResponseResultsInner.cycle) &&
        Objects.equals(this.dueDateTerms, schedulesScheduleCGetDefaultResponseResultsInner.dueDateTerms) &&
        Objects.equals(this.electionType, schedulesScheduleCGetDefaultResponseResultsInner.electionType) &&
        Objects.equals(this.electionTypeFull, schedulesScheduleCGetDefaultResponseResultsInner.electionTypeFull) &&
        Objects.equals(this.entityType, schedulesScheduleCGetDefaultResponseResultsInner.entityType) &&
        Objects.equals(this.entityTypeFull, schedulesScheduleCGetDefaultResponseResultsInner.entityTypeFull) &&
        Objects.equals(this.fecCommitteeId, schedulesScheduleCGetDefaultResponseResultsInner.fecCommitteeId) &&
        Objects.equals(this.fecElectionTypeFull, schedulesScheduleCGetDefaultResponseResultsInner.fecElectionTypeFull) &&
        Objects.equals(this.fecElectionTypeYear, schedulesScheduleCGetDefaultResponseResultsInner.fecElectionTypeYear) &&
        Objects.equals(this.fileNumber, schedulesScheduleCGetDefaultResponseResultsInner.fileNumber) &&
        Objects.equals(this.filingForm, schedulesScheduleCGetDefaultResponseResultsInner.filingForm) &&
        Objects.equals(this.imageNumber, schedulesScheduleCGetDefaultResponseResultsInner.imageNumber) &&
        Objects.equals(this.incurredDate, schedulesScheduleCGetDefaultResponseResultsInner.incurredDate) &&
        Objects.equals(this.interestRateTerms, schedulesScheduleCGetDefaultResponseResultsInner.interestRateTerms) &&
        Objects.equals(this.lineNumber, schedulesScheduleCGetDefaultResponseResultsInner.lineNumber) &&
        Objects.equals(this.linkId, schedulesScheduleCGetDefaultResponseResultsInner.linkId) &&
        Objects.equals(this.loadDate, schedulesScheduleCGetDefaultResponseResultsInner.loadDate) &&
        Objects.equals(this.loanBalance, schedulesScheduleCGetDefaultResponseResultsInner.loanBalance) &&
        Objects.equals(this.loanSourceCity, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceCity) &&
        Objects.equals(this.loanSourceFirstName, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceFirstName) &&
        Objects.equals(this.loanSourceLastName, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceLastName) &&
        Objects.equals(this.loanSourceMiddleName, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceMiddleName) &&
        Objects.equals(this.loanSourceName, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceName) &&
        Objects.equals(this.loanSourcePrefix, schedulesScheduleCGetDefaultResponseResultsInner.loanSourcePrefix) &&
        Objects.equals(this.loanSourceState, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceState) &&
        Objects.equals(this.loanSourceStreet1, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceStreet1) &&
        Objects.equals(this.loanSourceStreet2, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceStreet2) &&
        Objects.equals(this.loanSourceSuffix, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceSuffix) &&
        Objects.equals(this.loanSourceZip, schedulesScheduleCGetDefaultResponseResultsInner.loanSourceZip) &&
        Objects.equals(this.memoCode, schedulesScheduleCGetDefaultResponseResultsInner.memoCode) &&
        Objects.equals(this.memoText, schedulesScheduleCGetDefaultResponseResultsInner.memoText) &&
        Objects.equals(this.originalLoanAmount, schedulesScheduleCGetDefaultResponseResultsInner.originalLoanAmount) &&
        Objects.equals(this.originalSubId, schedulesScheduleCGetDefaultResponseResultsInner.originalSubId) &&
        Objects.equals(this.paymentToDate, schedulesScheduleCGetDefaultResponseResultsInner.paymentToDate) &&
        Objects.equals(this.pdfUrl, schedulesScheduleCGetDefaultResponseResultsInner.pdfUrl) &&
        Objects.equals(this.personallyFunded, schedulesScheduleCGetDefaultResponseResultsInner.personallyFunded) &&
        Objects.equals(this.reportType, schedulesScheduleCGetDefaultResponseResultsInner.reportType) &&
        Objects.equals(this.reportYear, schedulesScheduleCGetDefaultResponseResultsInner.reportYear) &&
        Objects.equals(this.scheduleALineNumber, schedulesScheduleCGetDefaultResponseResultsInner.scheduleALineNumber) &&
        Objects.equals(this.scheduleType, schedulesScheduleCGetDefaultResponseResultsInner.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, schedulesScheduleCGetDefaultResponseResultsInner.scheduleTypeFull) &&
        Objects.equals(this.securedInd, schedulesScheduleCGetDefaultResponseResultsInner.securedInd) &&
        Objects.equals(this.subId, schedulesScheduleCGetDefaultResponseResultsInner.subId) &&
        Objects.equals(this.transactionId, schedulesScheduleCGetDefaultResponseResultsInner.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionCode, actionCodeFull, candidateFirstName, candidateId, candidateLastName, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeFull, candidateOfficeState, candidateOfficeStateFull, candidatePrefix, candidateSuffix, committee, committeeId, cycle, dueDateTerms, electionType, electionTypeFull, entityType, entityTypeFull, fecCommitteeId, fecElectionTypeFull, fecElectionTypeYear, fileNumber, filingForm, imageNumber, incurredDate, interestRateTerms, lineNumber, linkId, loadDate, loanBalance, loanSourceCity, loanSourceFirstName, loanSourceLastName, loanSourceMiddleName, loanSourceName, loanSourcePrefix, loanSourceState, loanSourceStreet1, loanSourceStreet2, loanSourceSuffix, loanSourceZip, memoCode, memoText, originalLoanAmount, originalSubId, paymentToDate, pdfUrl, personallyFunded, reportType, reportYear, scheduleALineNumber, scheduleType, scheduleTypeFull, securedInd, subId, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedulesScheduleCGetDefaultResponseResultsInner {\n");
    sb.append("    actionCode: ").append(toIndentedString(actionCode)).append("\n");
    sb.append("    actionCodeFull: ").append(toIndentedString(actionCodeFull)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeFull: ").append(toIndentedString(candidateOfficeFull)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateOfficeStateFull: ").append(toIndentedString(candidateOfficeStateFull)).append("\n");
    sb.append("    candidatePrefix: ").append(toIndentedString(candidatePrefix)).append("\n");
    sb.append("    candidateSuffix: ").append(toIndentedString(candidateSuffix)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    dueDateTerms: ").append(toIndentedString(dueDateTerms)).append("\n");
    sb.append("    electionType: ").append(toIndentedString(electionType)).append("\n");
    sb.append("    electionTypeFull: ").append(toIndentedString(electionTypeFull)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityTypeFull: ").append(toIndentedString(entityTypeFull)).append("\n");
    sb.append("    fecCommitteeId: ").append(toIndentedString(fecCommitteeId)).append("\n");
    sb.append("    fecElectionTypeFull: ").append(toIndentedString(fecElectionTypeFull)).append("\n");
    sb.append("    fecElectionTypeYear: ").append(toIndentedString(fecElectionTypeYear)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    incurredDate: ").append(toIndentedString(incurredDate)).append("\n");
    sb.append("    interestRateTerms: ").append(toIndentedString(interestRateTerms)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    loadDate: ").append(toIndentedString(loadDate)).append("\n");
    sb.append("    loanBalance: ").append(toIndentedString(loanBalance)).append("\n");
    sb.append("    loanSourceCity: ").append(toIndentedString(loanSourceCity)).append("\n");
    sb.append("    loanSourceFirstName: ").append(toIndentedString(loanSourceFirstName)).append("\n");
    sb.append("    loanSourceLastName: ").append(toIndentedString(loanSourceLastName)).append("\n");
    sb.append("    loanSourceMiddleName: ").append(toIndentedString(loanSourceMiddleName)).append("\n");
    sb.append("    loanSourceName: ").append(toIndentedString(loanSourceName)).append("\n");
    sb.append("    loanSourcePrefix: ").append(toIndentedString(loanSourcePrefix)).append("\n");
    sb.append("    loanSourceState: ").append(toIndentedString(loanSourceState)).append("\n");
    sb.append("    loanSourceStreet1: ").append(toIndentedString(loanSourceStreet1)).append("\n");
    sb.append("    loanSourceStreet2: ").append(toIndentedString(loanSourceStreet2)).append("\n");
    sb.append("    loanSourceSuffix: ").append(toIndentedString(loanSourceSuffix)).append("\n");
    sb.append("    loanSourceZip: ").append(toIndentedString(loanSourceZip)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    originalLoanAmount: ").append(toIndentedString(originalLoanAmount)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    paymentToDate: ").append(toIndentedString(paymentToDate)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    personallyFunded: ").append(toIndentedString(personallyFunded)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleALineNumber: ").append(toIndentedString(scheduleALineNumber)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    securedInd: ").append(toIndentedString(securedInd)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action_code");
    openapiFields.add("action_code_full");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_full");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_office_state_full");
    openapiFields.add("candidate_prefix");
    openapiFields.add("candidate_suffix");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("cycle");
    openapiFields.add("due_date_terms");
    openapiFields.add("election_type");
    openapiFields.add("election_type_full");
    openapiFields.add("entity_type");
    openapiFields.add("entity_type_full");
    openapiFields.add("fec_committee_id");
    openapiFields.add("fec_election_type_full");
    openapiFields.add("fec_election_type_year");
    openapiFields.add("file_number");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("incurred_date");
    openapiFields.add("interest_rate_terms");
    openapiFields.add("line_number");
    openapiFields.add("link_id");
    openapiFields.add("load_date");
    openapiFields.add("loan_balance");
    openapiFields.add("loan_source_city");
    openapiFields.add("loan_source_first_name");
    openapiFields.add("loan_source_last_name");
    openapiFields.add("loan_source_middle_name");
    openapiFields.add("loan_source_name");
    openapiFields.add("loan_source_prefix");
    openapiFields.add("loan_source_state");
    openapiFields.add("loan_source_street_1");
    openapiFields.add("loan_source_street_2");
    openapiFields.add("loan_source_suffix");
    openapiFields.add("loan_source_zip");
    openapiFields.add("memo_code");
    openapiFields.add("memo_text");
    openapiFields.add("original_loan_amount");
    openapiFields.add("original_sub_id");
    openapiFields.add("payment_to_date");
    openapiFields.add("pdf_url");
    openapiFields.add("personally_funded");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_a_line_number");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("secured_ind");
    openapiFields.add("sub_id");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SchedulesScheduleCGetDefaultResponseResultsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SchedulesScheduleCGetDefaultResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SchedulesScheduleCGetDefaultResponseResultsInner is not found in the empty JSON string", SchedulesScheduleCGetDefaultResponseResultsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SchedulesScheduleCGetDefaultResponseResultsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SchedulesScheduleCGetDefaultResponseResultsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action_code") != null && !jsonObj.get("action_code").isJsonNull()) && !jsonObj.get("action_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code").toString()));
      }
      if ((jsonObj.get("action_code_full") != null && !jsonObj.get("action_code_full").isJsonNull()) && !jsonObj.get("action_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code_full").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_full") != null && !jsonObj.get("candidate_office_full").isJsonNull()) && !jsonObj.get("candidate_office_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_full").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_office_state_full") != null && !jsonObj.get("candidate_office_state_full").isJsonNull()) && !jsonObj.get("candidate_office_state_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state_full").toString()));
      }
      if ((jsonObj.get("candidate_prefix") != null && !jsonObj.get("candidate_prefix").isJsonNull()) && !jsonObj.get("candidate_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_prefix").toString()));
      }
      if ((jsonObj.get("candidate_suffix") != null && !jsonObj.get("candidate_suffix").isJsonNull()) && !jsonObj.get("candidate_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_suffix").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("due_date_terms") != null && !jsonObj.get("due_date_terms").isJsonNull()) && !jsonObj.get("due_date_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `due_date_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("due_date_terms").toString()));
      }
      if ((jsonObj.get("election_type") != null && !jsonObj.get("election_type").isJsonNull()) && !jsonObj.get("election_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type").toString()));
      }
      if ((jsonObj.get("election_type_full") != null && !jsonObj.get("election_type_full").isJsonNull()) && !jsonObj.get("election_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type_full").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("entity_type_full") != null && !jsonObj.get("entity_type_full").isJsonNull()) && !jsonObj.get("entity_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type_full").toString()));
      }
      if ((jsonObj.get("fec_committee_id") != null && !jsonObj.get("fec_committee_id").isJsonNull()) && !jsonObj.get("fec_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_committee_id").toString()));
      }
      if ((jsonObj.get("fec_election_type_full") != null && !jsonObj.get("fec_election_type_full").isJsonNull()) && !jsonObj.get("fec_election_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_type_full").toString()));
      }
      if ((jsonObj.get("fec_election_type_year") != null && !jsonObj.get("fec_election_type_year").isJsonNull()) && !jsonObj.get("fec_election_type_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_election_type_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_election_type_year").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("interest_rate_terms") != null && !jsonObj.get("interest_rate_terms").isJsonNull()) && !jsonObj.get("interest_rate_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interest_rate_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interest_rate_terms").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("loan_source_city") != null && !jsonObj.get("loan_source_city").isJsonNull()) && !jsonObj.get("loan_source_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_city").toString()));
      }
      if ((jsonObj.get("loan_source_first_name") != null && !jsonObj.get("loan_source_first_name").isJsonNull()) && !jsonObj.get("loan_source_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_first_name").toString()));
      }
      if ((jsonObj.get("loan_source_last_name") != null && !jsonObj.get("loan_source_last_name").isJsonNull()) && !jsonObj.get("loan_source_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_last_name").toString()));
      }
      if ((jsonObj.get("loan_source_middle_name") != null && !jsonObj.get("loan_source_middle_name").isJsonNull()) && !jsonObj.get("loan_source_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_middle_name").toString()));
      }
      if ((jsonObj.get("loan_source_name") != null && !jsonObj.get("loan_source_name").isJsonNull()) && !jsonObj.get("loan_source_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_name").toString()));
      }
      if ((jsonObj.get("loan_source_prefix") != null && !jsonObj.get("loan_source_prefix").isJsonNull()) && !jsonObj.get("loan_source_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_prefix").toString()));
      }
      if ((jsonObj.get("loan_source_state") != null && !jsonObj.get("loan_source_state").isJsonNull()) && !jsonObj.get("loan_source_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_state").toString()));
      }
      if ((jsonObj.get("loan_source_street_1") != null && !jsonObj.get("loan_source_street_1").isJsonNull()) && !jsonObj.get("loan_source_street_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_street_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_street_1").toString()));
      }
      if ((jsonObj.get("loan_source_street_2") != null && !jsonObj.get("loan_source_street_2").isJsonNull()) && !jsonObj.get("loan_source_street_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_street_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_street_2").toString()));
      }
      if ((jsonObj.get("loan_source_suffix") != null && !jsonObj.get("loan_source_suffix").isJsonNull()) && !jsonObj.get("loan_source_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loan_source_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loan_source_suffix").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("personally_funded") != null && !jsonObj.get("personally_funded").isJsonNull()) && !jsonObj.get("personally_funded").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personally_funded` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personally_funded").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("secured_ind") != null && !jsonObj.get("secured_ind").isJsonNull()) && !jsonObj.get("secured_ind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secured_ind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secured_ind").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SchedulesScheduleCGetDefaultResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SchedulesScheduleCGetDefaultResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SchedulesScheduleCGetDefaultResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SchedulesScheduleCGetDefaultResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SchedulesScheduleCGetDefaultResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, SchedulesScheduleCGetDefaultResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SchedulesScheduleCGetDefaultResponseResultsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SchedulesScheduleCGetDefaultResponseResultsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SchedulesScheduleCGetDefaultResponseResultsInner
   * @throws IOException if the JSON string is invalid with respect to SchedulesScheduleCGetDefaultResponseResultsInner
   */
  public static SchedulesScheduleCGetDefaultResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SchedulesScheduleCGetDefaultResponseResultsInner.class);
  }

  /**
   * Convert an instance of SchedulesScheduleCGetDefaultResponseResultsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

