/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.client.model.EFilings;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleBEfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleBEfile {
  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME = "back_reference_schedule_name";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME)
  private String backReferenceScheduleName;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER = "beginning_image_number";
  @SerializedName(SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER)
  private String beginningImageNumber;

  public static final String SERIALIZED_NAME_BENEFICIARY_COMMITTEE_NAME = "beneficiary_committee_name";
  @SerializedName(SERIALIZED_NAME_BENEFICIARY_COMMITTEE_NAME)
  private String beneficiaryCommitteeName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CSV_URL = "csv_url";
  @SerializedName(SERIALIZED_NAME_CSV_URL)
  private String csvUrl;

  public static final String SERIALIZED_NAME_DISBURSEMENT_AMOUNT = "disbursement_amount";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_AMOUNT)
  private BigDecimal disbursementAmount;

  public static final String SERIALIZED_NAME_DISBURSEMENT_DATE = "disbursement_date";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_DATE)
  private LocalDate disbursementDate;

  public static final String SERIALIZED_NAME_DISBURSEMENT_DESCRIPTION = "disbursement_description";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_DESCRIPTION)
  private String disbursementDescription;

  public static final String SERIALIZED_NAME_DISBURSEMENT_TYPE = "disbursement_type";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_TYPE)
  private String disbursementType;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_FEC_URL = "fec_url";
  @SerializedName(SERIALIZED_NAME_FEC_URL)
  private String fecUrl;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILING = "filing";
  @SerializedName(SERIALIZED_NAME_FILING)
  private EFilings filing;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_IS_NOTICE = "is_notice";
  @SerializedName(SERIALIZED_NAME_IS_NOTICE)
  private Boolean isNotice;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LOAD_TIMESTAMP = "load_timestamp";
  @SerializedName(SERIALIZED_NAME_LOAD_TIMESTAMP)
  private OffsetDateTime loadTimestamp;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_PAYEE_NAME = "payee_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_NAME)
  private String payeeName;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_RECIPIENT_CITY = "recipient_city";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_CITY)
  private String recipientCity;

  public static final String SERIALIZED_NAME_RECIPIENT_NAME = "recipient_name";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_NAME)
  private String recipientName;

  public static final String SERIALIZED_NAME_RECIPIENT_PREFIX = "recipient_prefix";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_PREFIX)
  private String recipientPrefix;

  public static final String SERIALIZED_NAME_RECIPIENT_STATE = "recipient_state";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_STATE)
  private String recipientState;

  public static final String SERIALIZED_NAME_RECIPIENT_SUFFIX = "recipient_suffix";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_SUFFIX)
  private String recipientSuffix;

  public static final String SERIALIZED_NAME_RECIPIENT_ZIP = "recipient_zip";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ZIP)
  private String recipientZip;

  public static final String SERIALIZED_NAME_RELATED_LINE_NUMBER = "related_line_number";
  @SerializedName(SERIALIZED_NAME_RELATED_LINE_NUMBER)
  private Integer relatedLineNumber;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_SEMI_ANNUAL_BUNDLED_REFUND = "semi_annual_bundled_refund";
  @SerializedName(SERIALIZED_NAME_SEMI_ANNUAL_BUNDLED_REFUND)
  private Integer semiAnnualBundledRefund;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public ScheduleBEfile() {
  }

  public ScheduleBEfile amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleBEfile backReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
    return this;
  }

  /**
   * Get backReferenceScheduleName
   * @return backReferenceScheduleName
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleName() {
    return backReferenceScheduleName;
  }

  public void setBackReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
  }


  public ScheduleBEfile backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleBEfile beginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
    return this;
  }

  /**
   * Get beginningImageNumber
   * @return beginningImageNumber
   */
  @javax.annotation.Nullable
  public String getBeginningImageNumber() {
    return beginningImageNumber;
  }

  public void setBeginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
  }


  public ScheduleBEfile beneficiaryCommitteeName(String beneficiaryCommitteeName) {
    this.beneficiaryCommitteeName = beneficiaryCommitteeName;
    return this;
  }

  /**
   * Get beneficiaryCommitteeName
   * @return beneficiaryCommitteeName
   */
  @javax.annotation.Nullable
  public String getBeneficiaryCommitteeName() {
    return beneficiaryCommitteeName;
  }

  public void setBeneficiaryCommitteeName(String beneficiaryCommitteeName) {
    this.beneficiaryCommitteeName = beneficiaryCommitteeName;
  }


  public ScheduleBEfile candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Get candidateOffice
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleBEfile candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Get candidateOfficeDistrict
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleBEfile committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleBEfile committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleBEfile csvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
    return this;
  }

  /**
   * Get csvUrl
   * @return csvUrl
   */
  @javax.annotation.Nullable
  public String getCsvUrl() {
    return csvUrl;
  }

  public void setCsvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
  }


  public ScheduleBEfile disbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
    return this;
  }

  /**
   * Get disbursementAmount
   * @return disbursementAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDisbursementAmount() {
    return disbursementAmount;
  }

  public void setDisbursementAmount(BigDecimal disbursementAmount) {
    this.disbursementAmount = disbursementAmount;
  }


  public ScheduleBEfile disbursementDate(LocalDate disbursementDate) {
    this.disbursementDate = disbursementDate;
    return this;
  }

  /**
   * Get disbursementDate
   * @return disbursementDate
   */
  @javax.annotation.Nullable
  public LocalDate getDisbursementDate() {
    return disbursementDate;
  }

  public void setDisbursementDate(LocalDate disbursementDate) {
    this.disbursementDate = disbursementDate;
  }


  public ScheduleBEfile disbursementDescription(String disbursementDescription) {
    this.disbursementDescription = disbursementDescription;
    return this;
  }

  /**
   * Get disbursementDescription
   * @return disbursementDescription
   */
  @javax.annotation.Nullable
  public String getDisbursementDescription() {
    return disbursementDescription;
  }

  public void setDisbursementDescription(String disbursementDescription) {
    this.disbursementDescription = disbursementDescription;
  }


  public ScheduleBEfile disbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
    return this;
  }

  /**
   * Get disbursementType
   * @return disbursementType
   */
  @javax.annotation.Nullable
  public String getDisbursementType() {
    return disbursementType;
  }

  public void setDisbursementType(String disbursementType) {
    this.disbursementType = disbursementType;
  }


  public ScheduleBEfile entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleBEfile fecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
    return this;
  }

  /**
   * Get fecUrl
   * @return fecUrl
   */
  @javax.annotation.Nullable
  public String getFecUrl() {
    return fecUrl;
  }

  public void setFecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
  }


  public ScheduleBEfile fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nonnull
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleBEfile filing(EFilings filing) {
    this.filing = filing;
    return this;
  }

  /**
   * Get filing
   * @return filing
   */
  @javax.annotation.Nullable
  public EFilings getFiling() {
    return filing;
  }

  public void setFiling(EFilings filing) {
    this.filing = filing;
  }


  public ScheduleBEfile imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   *  An unique identifier for each page where the electronic or paper filing is reported. 
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleBEfile isNotice(Boolean isNotice) {
    this.isNotice = isNotice;
    return this;
  }

  /**
   * Get isNotice
   * @return isNotice
   */
  @javax.annotation.Nullable
  public Boolean getIsNotice() {
    return isNotice;
  }

  public void setIsNotice(Boolean isNotice) {
    this.isNotice = isNotice;
  }


  public ScheduleBEfile lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleBEfile loadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
    return this;
  }

  /**
   * Get loadTimestamp
   * @return loadTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadTimestamp() {
    return loadTimestamp;
  }

  public void setLoadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
  }


  public ScheduleBEfile memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleBEfile memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleBEfile payeeName(String payeeName) {
    this.payeeName = payeeName;
    return this;
  }

  /**
   * Get payeeName
   * @return payeeName
   */
  @javax.annotation.Nullable
  public String getPayeeName() {
    return payeeName;
  }

  public void setPayeeName(String payeeName) {
    this.payeeName = payeeName;
  }


  public ScheduleBEfile pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleBEfile recipientCity(String recipientCity) {
    this.recipientCity = recipientCity;
    return this;
  }

  /**
   * Get recipientCity
   * @return recipientCity
   */
  @javax.annotation.Nullable
  public String getRecipientCity() {
    return recipientCity;
  }

  public void setRecipientCity(String recipientCity) {
    this.recipientCity = recipientCity;
  }


  public ScheduleBEfile recipientName(String recipientName) {
    this.recipientName = recipientName;
    return this;
  }

  /**
   * Get recipientName
   * @return recipientName
   */
  @javax.annotation.Nullable
  public String getRecipientName() {
    return recipientName;
  }

  public void setRecipientName(String recipientName) {
    this.recipientName = recipientName;
  }


  public ScheduleBEfile recipientPrefix(String recipientPrefix) {
    this.recipientPrefix = recipientPrefix;
    return this;
  }

  /**
   * Get recipientPrefix
   * @return recipientPrefix
   */
  @javax.annotation.Nullable
  public String getRecipientPrefix() {
    return recipientPrefix;
  }

  public void setRecipientPrefix(String recipientPrefix) {
    this.recipientPrefix = recipientPrefix;
  }


  public ScheduleBEfile recipientState(String recipientState) {
    this.recipientState = recipientState;
    return this;
  }

  /**
   * Get recipientState
   * @return recipientState
   */
  @javax.annotation.Nullable
  public String getRecipientState() {
    return recipientState;
  }

  public void setRecipientState(String recipientState) {
    this.recipientState = recipientState;
  }


  public ScheduleBEfile recipientSuffix(String recipientSuffix) {
    this.recipientSuffix = recipientSuffix;
    return this;
  }

  /**
   * Get recipientSuffix
   * @return recipientSuffix
   */
  @javax.annotation.Nullable
  public String getRecipientSuffix() {
    return recipientSuffix;
  }

  public void setRecipientSuffix(String recipientSuffix) {
    this.recipientSuffix = recipientSuffix;
  }


  public ScheduleBEfile recipientZip(String recipientZip) {
    this.recipientZip = recipientZip;
    return this;
  }

  /**
   * Get recipientZip
   * @return recipientZip
   */
  @javax.annotation.Nullable
  public String getRecipientZip() {
    return recipientZip;
  }

  public void setRecipientZip(String recipientZip) {
    this.recipientZip = recipientZip;
  }


  public ScheduleBEfile relatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
    return this;
  }

  /**
   * Get relatedLineNumber
   * @return relatedLineNumber
   */
  @javax.annotation.Nonnull
  public Integer getRelatedLineNumber() {
    return relatedLineNumber;
  }

  public void setRelatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
  }


  public ScheduleBEfile reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleBEfile semiAnnualBundledRefund(Integer semiAnnualBundledRefund) {
    this.semiAnnualBundledRefund = semiAnnualBundledRefund;
    return this;
  }

  /**
   * Get semiAnnualBundledRefund
   * @return semiAnnualBundledRefund
   */
  @javax.annotation.Nullable
  public Integer getSemiAnnualBundledRefund() {
    return semiAnnualBundledRefund;
  }

  public void setSemiAnnualBundledRefund(Integer semiAnnualBundledRefund) {
    this.semiAnnualBundledRefund = semiAnnualBundledRefund;
  }


  public ScheduleBEfile transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleBEfile scheduleBEfile = (ScheduleBEfile) o;
    return Objects.equals(this.amendmentIndicator, scheduleBEfile.amendmentIndicator) &&
        Objects.equals(this.backReferenceScheduleName, scheduleBEfile.backReferenceScheduleName) &&
        Objects.equals(this.backReferenceTransactionId, scheduleBEfile.backReferenceTransactionId) &&
        Objects.equals(this.beginningImageNumber, scheduleBEfile.beginningImageNumber) &&
        Objects.equals(this.beneficiaryCommitteeName, scheduleBEfile.beneficiaryCommitteeName) &&
        Objects.equals(this.candidateOffice, scheduleBEfile.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleBEfile.candidateOfficeDistrict) &&
        Objects.equals(this.committee, scheduleBEfile.committee) &&
        Objects.equals(this.committeeId, scheduleBEfile.committeeId) &&
        Objects.equals(this.csvUrl, scheduleBEfile.csvUrl) &&
        Objects.equals(this.disbursementAmount, scheduleBEfile.disbursementAmount) &&
        Objects.equals(this.disbursementDate, scheduleBEfile.disbursementDate) &&
        Objects.equals(this.disbursementDescription, scheduleBEfile.disbursementDescription) &&
        Objects.equals(this.disbursementType, scheduleBEfile.disbursementType) &&
        Objects.equals(this.entityType, scheduleBEfile.entityType) &&
        Objects.equals(this.fecUrl, scheduleBEfile.fecUrl) &&
        Objects.equals(this.fileNumber, scheduleBEfile.fileNumber) &&
        Objects.equals(this.filing, scheduleBEfile.filing) &&
        Objects.equals(this.imageNumber, scheduleBEfile.imageNumber) &&
        Objects.equals(this.isNotice, scheduleBEfile.isNotice) &&
        Objects.equals(this.lineNumber, scheduleBEfile.lineNumber) &&
        Objects.equals(this.loadTimestamp, scheduleBEfile.loadTimestamp) &&
        Objects.equals(this.memoCode, scheduleBEfile.memoCode) &&
        Objects.equals(this.memoText, scheduleBEfile.memoText) &&
        Objects.equals(this.payeeName, scheduleBEfile.payeeName) &&
        Objects.equals(this.pdfUrl, scheduleBEfile.pdfUrl) &&
        Objects.equals(this.recipientCity, scheduleBEfile.recipientCity) &&
        Objects.equals(this.recipientName, scheduleBEfile.recipientName) &&
        Objects.equals(this.recipientPrefix, scheduleBEfile.recipientPrefix) &&
        Objects.equals(this.recipientState, scheduleBEfile.recipientState) &&
        Objects.equals(this.recipientSuffix, scheduleBEfile.recipientSuffix) &&
        Objects.equals(this.recipientZip, scheduleBEfile.recipientZip) &&
        Objects.equals(this.relatedLineNumber, scheduleBEfile.relatedLineNumber) &&
        Objects.equals(this.reportType, scheduleBEfile.reportType) &&
        Objects.equals(this.semiAnnualBundledRefund, scheduleBEfile.semiAnnualBundledRefund) &&
        Objects.equals(this.transactionId, scheduleBEfile.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentIndicator, backReferenceScheduleName, backReferenceTransactionId, beginningImageNumber, beneficiaryCommitteeName, candidateOffice, candidateOfficeDistrict, committee, committeeId, csvUrl, disbursementAmount, disbursementDate, disbursementDescription, disbursementType, entityType, fecUrl, fileNumber, filing, imageNumber, isNotice, lineNumber, loadTimestamp, memoCode, memoText, payeeName, pdfUrl, recipientCity, recipientName, recipientPrefix, recipientState, recipientSuffix, recipientZip, relatedLineNumber, reportType, semiAnnualBundledRefund, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleBEfile {\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    backReferenceScheduleName: ").append(toIndentedString(backReferenceScheduleName)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    beginningImageNumber: ").append(toIndentedString(beginningImageNumber)).append("\n");
    sb.append("    beneficiaryCommitteeName: ").append(toIndentedString(beneficiaryCommitteeName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    csvUrl: ").append(toIndentedString(csvUrl)).append("\n");
    sb.append("    disbursementAmount: ").append(toIndentedString(disbursementAmount)).append("\n");
    sb.append("    disbursementDate: ").append(toIndentedString(disbursementDate)).append("\n");
    sb.append("    disbursementDescription: ").append(toIndentedString(disbursementDescription)).append("\n");
    sb.append("    disbursementType: ").append(toIndentedString(disbursementType)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fecUrl: ").append(toIndentedString(fecUrl)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filing: ").append(toIndentedString(filing)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    isNotice: ").append(toIndentedString(isNotice)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    loadTimestamp: ").append(toIndentedString(loadTimestamp)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    recipientCity: ").append(toIndentedString(recipientCity)).append("\n");
    sb.append("    recipientName: ").append(toIndentedString(recipientName)).append("\n");
    sb.append("    recipientPrefix: ").append(toIndentedString(recipientPrefix)).append("\n");
    sb.append("    recipientState: ").append(toIndentedString(recipientState)).append("\n");
    sb.append("    recipientSuffix: ").append(toIndentedString(recipientSuffix)).append("\n");
    sb.append("    recipientZip: ").append(toIndentedString(recipientZip)).append("\n");
    sb.append("    relatedLineNumber: ").append(toIndentedString(relatedLineNumber)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    semiAnnualBundledRefund: ").append(toIndentedString(semiAnnualBundledRefund)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendment_indicator");
    openapiFields.add("back_reference_schedule_name");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("beginning_image_number");
    openapiFields.add("beneficiary_committee_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("csv_url");
    openapiFields.add("disbursement_amount");
    openapiFields.add("disbursement_date");
    openapiFields.add("disbursement_description");
    openapiFields.add("disbursement_type");
    openapiFields.add("entity_type");
    openapiFields.add("fec_url");
    openapiFields.add("file_number");
    openapiFields.add("filing");
    openapiFields.add("image_number");
    openapiFields.add("is_notice");
    openapiFields.add("line_number");
    openapiFields.add("load_timestamp");
    openapiFields.add("memo_code");
    openapiFields.add("memo_text");
    openapiFields.add("payee_name");
    openapiFields.add("pdf_url");
    openapiFields.add("recipient_city");
    openapiFields.add("recipient_name");
    openapiFields.add("recipient_prefix");
    openapiFields.add("recipient_state");
    openapiFields.add("recipient_suffix");
    openapiFields.add("recipient_zip");
    openapiFields.add("related_line_number");
    openapiFields.add("report_type");
    openapiFields.add("semi_annual_bundled_refund");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("file_number");
    openapiRequiredFields.add("related_line_number");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleBEfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleBEfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleBEfile is not found in the empty JSON string", ScheduleBEfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleBEfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleBEfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScheduleBEfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_name") != null && !jsonObj.get("back_reference_schedule_name").isJsonNull()) && !jsonObj.get("back_reference_schedule_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_name").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("beginning_image_number") != null && !jsonObj.get("beginning_image_number").isJsonNull()) && !jsonObj.get("beginning_image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginning_image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginning_image_number").toString()));
      }
      if ((jsonObj.get("beneficiary_committee_name") != null && !jsonObj.get("beneficiary_committee_name").isJsonNull()) && !jsonObj.get("beneficiary_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beneficiary_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beneficiary_committee_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("csv_url") != null && !jsonObj.get("csv_url").isJsonNull()) && !jsonObj.get("csv_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csv_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csv_url").toString()));
      }
      if ((jsonObj.get("disbursement_description") != null && !jsonObj.get("disbursement_description").isJsonNull()) && !jsonObj.get("disbursement_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_description").toString()));
      }
      if ((jsonObj.get("disbursement_type") != null && !jsonObj.get("disbursement_type").isJsonNull()) && !jsonObj.get("disbursement_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disbursement_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disbursement_type").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("fec_url") != null && !jsonObj.get("fec_url").isJsonNull()) && !jsonObj.get("fec_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_url").toString()));
      }
      // validate the optional field `filing`
      if (jsonObj.get("filing") != null && !jsonObj.get("filing").isJsonNull()) {
        EFilings.validateJsonElement(jsonObj.get("filing"));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("payee_name") != null && !jsonObj.get("payee_name").isJsonNull()) && !jsonObj.get("payee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_name").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("recipient_city") != null && !jsonObj.get("recipient_city").isJsonNull()) && !jsonObj.get("recipient_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_city").toString()));
      }
      if ((jsonObj.get("recipient_name") != null && !jsonObj.get("recipient_name").isJsonNull()) && !jsonObj.get("recipient_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_name").toString()));
      }
      if ((jsonObj.get("recipient_prefix") != null && !jsonObj.get("recipient_prefix").isJsonNull()) && !jsonObj.get("recipient_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_prefix").toString()));
      }
      if ((jsonObj.get("recipient_state") != null && !jsonObj.get("recipient_state").isJsonNull()) && !jsonObj.get("recipient_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_state").toString()));
      }
      if ((jsonObj.get("recipient_suffix") != null && !jsonObj.get("recipient_suffix").isJsonNull()) && !jsonObj.get("recipient_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_suffix").toString()));
      }
      if ((jsonObj.get("recipient_zip") != null && !jsonObj.get("recipient_zip").isJsonNull()) && !jsonObj.get("recipient_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_zip").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleBEfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleBEfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleBEfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleBEfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleBEfile>() {
           @Override
           public void write(JsonWriter out, ScheduleBEfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleBEfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleBEfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleBEfile
   * @throws IOException if the JSON string is invalid with respect to ScheduleBEfile
   */
  public static ScheduleBEfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleBEfile.class);
  }

  /**
   * Convert an instance of ScheduleBEfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

