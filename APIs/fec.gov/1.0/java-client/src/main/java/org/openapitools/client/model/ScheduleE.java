/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleE
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleE {
  public static final String SERIALIZED_NAME_ACTION_CODE = "action_code";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE)
  private String actionCode;

  public static final String SERIALIZED_NAME_ACTION_CODE_FULL = "action_code_full";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE_FULL)
  private String actionCodeFull;

  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_AMENDMENT_NUMBER = "amendment_number";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_NUMBER)
  private Integer amendmentNumber;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME = "back_reference_schedule_name";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME)
  private String backReferenceScheduleName;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_CANDIDATE = "candidate";
  @SerializedName(SERIALIZED_NAME_CANDIDATE)
  private String candidate;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_LAST_NAME = "candidate_last_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_LAST_NAME)
  private String candidateLastName;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_PARTY = "candidate_party";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PARTY)
  private String candidateParty;

  public static final String SERIALIZED_NAME_CANDIDATE_PREFIX = "candidate_prefix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PREFIX)
  private String candidatePrefix;

  public static final String SERIALIZED_NAME_CANDIDATE_SUFFIX = "candidate_suffix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_SUFFIX)
  private String candidateSuffix;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "category_code";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_CATEGORY_CODE_FULL = "category_code_full";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE_FULL)
  private String categoryCodeFull;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY = "conduit_committee_city";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_CITY)
  private String conduitCommitteeCity;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ID = "conduit_committee_id";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ID)
  private String conduitCommitteeId;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME = "conduit_committee_name";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_NAME)
  private String conduitCommitteeName;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE = "conduit_committee_state";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STATE)
  private String conduitCommitteeState;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1 = "conduit_committee_street1";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET1)
  private String conduitCommitteeStreet1;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2 = "conduit_committee_street2";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_STREET2)
  private String conduitCommitteeStreet2;

  public static final String SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP = "conduit_committee_zip";
  @SerializedName(SERIALIZED_NAME_CONDUIT_COMMITTEE_ZIP)
  private Integer conduitCommitteeZip;

  public static final String SERIALIZED_NAME_DISSEMINATION_DATE = "dissemination_date";
  @SerializedName(SERIALIZED_NAME_DISSEMINATION_DATE)
  private LocalDate disseminationDate;

  public static final String SERIALIZED_NAME_ELECTION_TYPE = "election_type";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE)
  private String electionType;

  public static final String SERIALIZED_NAME_ELECTION_TYPE_FULL = "election_type_full";
  @SerializedName(SERIALIZED_NAME_ELECTION_TYPE_FULL)
  private String electionTypeFull;

  public static final String SERIALIZED_NAME_EXPENDITURE_AMOUNT = "expenditure_amount";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_AMOUNT)
  private BigDecimal expenditureAmount;

  public static final String SERIALIZED_NAME_EXPENDITURE_DATE = "expenditure_date";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_DATE)
  private LocalDate expenditureDate;

  public static final String SERIALIZED_NAME_EXPENDITURE_DESCRIPTION = "expenditure_description";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_DESCRIPTION)
  private String expenditureDescription;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILER_FIRST_NAME = "filer_first_name";
  @SerializedName(SERIALIZED_NAME_FILER_FIRST_NAME)
  private String filerFirstName;

  public static final String SERIALIZED_NAME_FILER_LAST_NAME = "filer_last_name";
  @SerializedName(SERIALIZED_NAME_FILER_LAST_NAME)
  private String filerLastName;

  public static final String SERIALIZED_NAME_FILER_MIDDLE_NAME = "filer_middle_name";
  @SerializedName(SERIALIZED_NAME_FILER_MIDDLE_NAME)
  private String filerMiddleName;

  public static final String SERIALIZED_NAME_FILER_PREFIX = "filer_prefix";
  @SerializedName(SERIALIZED_NAME_FILER_PREFIX)
  private String filerPrefix;

  public static final String SERIALIZED_NAME_FILER_SUFFIX = "filer_suffix";
  @SerializedName(SERIALIZED_NAME_FILER_SUFFIX)
  private String filerSuffix;

  public static final String SERIALIZED_NAME_FILING_DATE = "filing_date";
  @SerializedName(SERIALIZED_NAME_FILING_DATE)
  private LocalDate filingDate;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_INDEPENDENT_SIGN_DATE = "independent_sign_date";
  @SerializedName(SERIALIZED_NAME_INDEPENDENT_SIGN_DATE)
  private LocalDate independentSignDate;

  public static final String SERIALIZED_NAME_INDEPENDENT_SIGN_NAME = "independent_sign_name";
  @SerializedName(SERIALIZED_NAME_INDEPENDENT_SIGN_NAME)
  private String independentSignName;

  public static final String SERIALIZED_NAME_IS_NOTICE = "is_notice";
  @SerializedName(SERIALIZED_NAME_IS_NOTICE)
  private Boolean isNotice;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LINK_ID = "link_id";
  @SerializedName(SERIALIZED_NAME_LINK_ID)
  private Integer linkId;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_CODE_FULL = "memo_code_full";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE_FULL)
  private String memoCodeFull;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_MEMOED_SUBTOTAL = "memoed_subtotal";
  @SerializedName(SERIALIZED_NAME_MEMOED_SUBTOTAL)
  private Boolean memoedSubtotal;

  public static final String SERIALIZED_NAME_MOST_RECENT = "most_recent";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT)
  private Boolean mostRecent;

  public static final String SERIALIZED_NAME_NOTARY_COMMISSION_EXPIRATION_DATE = "notary_commission_expiration_date";
  @SerializedName(SERIALIZED_NAME_NOTARY_COMMISSION_EXPIRATION_DATE)
  private LocalDate notaryCommissionExpirationDate;

  public static final String SERIALIZED_NAME_NOTARY_SIGN_DATE = "notary_sign_date";
  @SerializedName(SERIALIZED_NAME_NOTARY_SIGN_DATE)
  private LocalDate notarySignDate;

  public static final String SERIALIZED_NAME_NOTARY_SIGN_NAME = "notary_sign_name";
  @SerializedName(SERIALIZED_NAME_NOTARY_SIGN_NAME)
  private String notarySignName;

  public static final String SERIALIZED_NAME_OFFICE_TOTAL_YTD = "office_total_ytd";
  @SerializedName(SERIALIZED_NAME_OFFICE_TOTAL_YTD)
  private BigDecimal officeTotalYtd;

  public static final String SERIALIZED_NAME_ORIGINAL_SUB_ID = "original_sub_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SUB_ID)
  private String originalSubId;

  public static final String SERIALIZED_NAME_PAYEE_CITY = "payee_city";
  @SerializedName(SERIALIZED_NAME_PAYEE_CITY)
  private String payeeCity;

  public static final String SERIALIZED_NAME_PAYEE_FIRST_NAME = "payee_first_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_FIRST_NAME)
  private String payeeFirstName;

  public static final String SERIALIZED_NAME_PAYEE_LAST_NAME = "payee_last_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_LAST_NAME)
  private String payeeLastName;

  public static final String SERIALIZED_NAME_PAYEE_MIDDLE_NAME = "payee_middle_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_MIDDLE_NAME)
  private String payeeMiddleName;

  public static final String SERIALIZED_NAME_PAYEE_NAME = "payee_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_NAME)
  private String payeeName;

  public static final String SERIALIZED_NAME_PAYEE_PREFIX = "payee_prefix";
  @SerializedName(SERIALIZED_NAME_PAYEE_PREFIX)
  private String payeePrefix;

  public static final String SERIALIZED_NAME_PAYEE_STATE = "payee_state";
  @SerializedName(SERIALIZED_NAME_PAYEE_STATE)
  private String payeeState;

  public static final String SERIALIZED_NAME_PAYEE_STREET1 = "payee_street_1";
  @SerializedName(SERIALIZED_NAME_PAYEE_STREET1)
  private String payeeStreet1;

  public static final String SERIALIZED_NAME_PAYEE_STREET2 = "payee_street_2";
  @SerializedName(SERIALIZED_NAME_PAYEE_STREET2)
  private String payeeStreet2;

  public static final String SERIALIZED_NAME_PAYEE_SUFFIX = "payee_suffix";
  @SerializedName(SERIALIZED_NAME_PAYEE_SUFFIX)
  private String payeeSuffix;

  public static final String SERIALIZED_NAME_PAYEE_ZIP = "payee_zip";
  @SerializedName(SERIALIZED_NAME_PAYEE_ZIP)
  private String payeeZip;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_PREVIOUS_FILE_NUMBER = "previous_file_number";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_FILE_NUMBER)
  private Integer previousFileNumber;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_REPORT_YEAR = "report_year";
  @SerializedName(SERIALIZED_NAME_REPORT_YEAR)
  private Integer reportYear;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private String scheduleType;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE_FULL = "schedule_type_full";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE_FULL)
  private String scheduleTypeFull;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR = "support_oppose_indicator";
  @SerializedName(SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR)
  private String supportOpposeIndicator;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public ScheduleE() {
  }

  public ScheduleE actionCode(String actionCode) {
    this.actionCode = actionCode;
    return this;
  }

  /**
   * Get actionCode
   * @return actionCode
   */
  @javax.annotation.Nullable
  public String getActionCode() {
    return actionCode;
  }

  public void setActionCode(String actionCode) {
    this.actionCode = actionCode;
  }


  public ScheduleE actionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
    return this;
  }

  /**
   * Get actionCodeFull
   * @return actionCodeFull
   */
  @javax.annotation.Nullable
  public String getActionCodeFull() {
    return actionCodeFull;
  }

  public void setActionCodeFull(String actionCodeFull) {
    this.actionCodeFull = actionCodeFull;
  }


  public ScheduleE amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleE amendmentNumber(Integer amendmentNumber) {
    this.amendmentNumber = amendmentNumber;
    return this;
  }

  /**
   *  Number of times the report has been amended. 
   * @return amendmentNumber
   */
  @javax.annotation.Nullable
  public Integer getAmendmentNumber() {
    return amendmentNumber;
  }

  public void setAmendmentNumber(Integer amendmentNumber) {
    this.amendmentNumber = amendmentNumber;
  }


  public ScheduleE backReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
    return this;
  }

  /**
   * Get backReferenceScheduleName
   * @return backReferenceScheduleName
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleName() {
    return backReferenceScheduleName;
  }

  public void setBackReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
  }


  public ScheduleE backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleE candidate(String candidate) {
    this.candidate = candidate;
    return this;
  }

  /**
   * Get candidate
   * @return candidate
   */
  @javax.annotation.Nullable
  public String getCandidate() {
    return candidate;
  }

  public void setCandidate(String candidate) {
    this.candidate = candidate;
  }


  public ScheduleE candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public ScheduleE candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   * Get candidateId
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public ScheduleE candidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
    return this;
  }

  /**
   * Get candidateLastName
   * @return candidateLastName
   */
  @javax.annotation.Nullable
  public String getCandidateLastName() {
    return candidateLastName;
  }

  public void setCandidateLastName(String candidateLastName) {
    this.candidateLastName = candidateLastName;
  }


  public ScheduleE candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public ScheduleE candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public ScheduleE candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Federal office candidate runs for: H, S or P
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleE candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleE candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * US state or territory
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public ScheduleE candidateParty(String candidateParty) {
    this.candidateParty = candidateParty;
    return this;
  }

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   * @return candidateParty
   */
  @javax.annotation.Nullable
  public String getCandidateParty() {
    return candidateParty;
  }

  public void setCandidateParty(String candidateParty) {
    this.candidateParty = candidateParty;
  }


  public ScheduleE candidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
    return this;
  }

  /**
   * Get candidatePrefix
   * @return candidatePrefix
   */
  @javax.annotation.Nullable
  public String getCandidatePrefix() {
    return candidatePrefix;
  }

  public void setCandidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
  }


  public ScheduleE candidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
    return this;
  }

  /**
   * Get candidateSuffix
   * @return candidateSuffix
   */
  @javax.annotation.Nullable
  public String getCandidateSuffix() {
    return candidateSuffix;
  }

  public void setCandidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
  }


  public ScheduleE categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public ScheduleE categoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
    return this;
  }

  /**
   * Get categoryCodeFull
   * @return categoryCodeFull
   */
  @javax.annotation.Nullable
  public String getCategoryCodeFull() {
    return categoryCodeFull;
  }

  public void setCategoryCodeFull(String categoryCodeFull) {
    this.categoryCodeFull = categoryCodeFull;
  }


  public ScheduleE committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleE committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleE conduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
    return this;
  }

  /**
   * Get conduitCommitteeCity
   * @return conduitCommitteeCity
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeCity() {
    return conduitCommitteeCity;
  }

  public void setConduitCommitteeCity(String conduitCommitteeCity) {
    this.conduitCommitteeCity = conduitCommitteeCity;
  }


  public ScheduleE conduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
    return this;
  }

  /**
   * Get conduitCommitteeId
   * @return conduitCommitteeId
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeId() {
    return conduitCommitteeId;
  }

  public void setConduitCommitteeId(String conduitCommitteeId) {
    this.conduitCommitteeId = conduitCommitteeId;
  }


  public ScheduleE conduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
    return this;
  }

  /**
   * Get conduitCommitteeName
   * @return conduitCommitteeName
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeName() {
    return conduitCommitteeName;
  }

  public void setConduitCommitteeName(String conduitCommitteeName) {
    this.conduitCommitteeName = conduitCommitteeName;
  }


  public ScheduleE conduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
    return this;
  }

  /**
   * Get conduitCommitteeState
   * @return conduitCommitteeState
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeState() {
    return conduitCommitteeState;
  }

  public void setConduitCommitteeState(String conduitCommitteeState) {
    this.conduitCommitteeState = conduitCommitteeState;
  }


  public ScheduleE conduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
    return this;
  }

  /**
   * Get conduitCommitteeStreet1
   * @return conduitCommitteeStreet1
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet1() {
    return conduitCommitteeStreet1;
  }

  public void setConduitCommitteeStreet1(String conduitCommitteeStreet1) {
    this.conduitCommitteeStreet1 = conduitCommitteeStreet1;
  }


  public ScheduleE conduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
    return this;
  }

  /**
   * Get conduitCommitteeStreet2
   * @return conduitCommitteeStreet2
   */
  @javax.annotation.Nullable
  public String getConduitCommitteeStreet2() {
    return conduitCommitteeStreet2;
  }

  public void setConduitCommitteeStreet2(String conduitCommitteeStreet2) {
    this.conduitCommitteeStreet2 = conduitCommitteeStreet2;
  }


  public ScheduleE conduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
    return this;
  }

  /**
   * Get conduitCommitteeZip
   * @return conduitCommitteeZip
   */
  @javax.annotation.Nullable
  public Integer getConduitCommitteeZip() {
    return conduitCommitteeZip;
  }

  public void setConduitCommitteeZip(Integer conduitCommitteeZip) {
    this.conduitCommitteeZip = conduitCommitteeZip;
  }


  public ScheduleE disseminationDate(LocalDate disseminationDate) {
    this.disseminationDate = disseminationDate;
    return this;
  }

  /**
   * Get disseminationDate
   * @return disseminationDate
   */
  @javax.annotation.Nullable
  public LocalDate getDisseminationDate() {
    return disseminationDate;
  }

  public void setDisseminationDate(LocalDate disseminationDate) {
    this.disseminationDate = disseminationDate;
  }


  public ScheduleE electionType(String electionType) {
    this.electionType = electionType;
    return this;
  }

  /**
   * Election type  Convention, Primary, General, Special, Runoff etc. 
   * @return electionType
   */
  @javax.annotation.Nullable
  public String getElectionType() {
    return electionType;
  }

  public void setElectionType(String electionType) {
    this.electionType = electionType;
  }


  public ScheduleE electionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
    return this;
  }

  /**
   * Election type  Convention, Primary, General, Special, Runoff etc. 
   * @return electionTypeFull
   */
  @javax.annotation.Nullable
  public String getElectionTypeFull() {
    return electionTypeFull;
  }

  public void setElectionTypeFull(String electionTypeFull) {
    this.electionTypeFull = electionTypeFull;
  }


  public ScheduleE expenditureAmount(BigDecimal expenditureAmount) {
    this.expenditureAmount = expenditureAmount;
    return this;
  }

  /**
   * Get expenditureAmount
   * @return expenditureAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getExpenditureAmount() {
    return expenditureAmount;
  }

  public void setExpenditureAmount(BigDecimal expenditureAmount) {
    this.expenditureAmount = expenditureAmount;
  }


  public ScheduleE expenditureDate(LocalDate expenditureDate) {
    this.expenditureDate = expenditureDate;
    return this;
  }

  /**
   * Get expenditureDate
   * @return expenditureDate
   */
  @javax.annotation.Nullable
  public LocalDate getExpenditureDate() {
    return expenditureDate;
  }

  public void setExpenditureDate(LocalDate expenditureDate) {
    this.expenditureDate = expenditureDate;
  }


  public ScheduleE expenditureDescription(String expenditureDescription) {
    this.expenditureDescription = expenditureDescription;
    return this;
  }

  /**
   * Get expenditureDescription
   * @return expenditureDescription
   */
  @javax.annotation.Nullable
  public String getExpenditureDescription() {
    return expenditureDescription;
  }

  public void setExpenditureDescription(String expenditureDescription) {
    this.expenditureDescription = expenditureDescription;
  }


  public ScheduleE fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nullable
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleE filerFirstName(String filerFirstName) {
    this.filerFirstName = filerFirstName;
    return this;
  }

  /**
   * Get filerFirstName
   * @return filerFirstName
   */
  @javax.annotation.Nullable
  public String getFilerFirstName() {
    return filerFirstName;
  }

  public void setFilerFirstName(String filerFirstName) {
    this.filerFirstName = filerFirstName;
  }


  public ScheduleE filerLastName(String filerLastName) {
    this.filerLastName = filerLastName;
    return this;
  }

  /**
   * Get filerLastName
   * @return filerLastName
   */
  @javax.annotation.Nullable
  public String getFilerLastName() {
    return filerLastName;
  }

  public void setFilerLastName(String filerLastName) {
    this.filerLastName = filerLastName;
  }


  public ScheduleE filerMiddleName(String filerMiddleName) {
    this.filerMiddleName = filerMiddleName;
    return this;
  }

  /**
   * Get filerMiddleName
   * @return filerMiddleName
   */
  @javax.annotation.Nullable
  public String getFilerMiddleName() {
    return filerMiddleName;
  }

  public void setFilerMiddleName(String filerMiddleName) {
    this.filerMiddleName = filerMiddleName;
  }


  public ScheduleE filerPrefix(String filerPrefix) {
    this.filerPrefix = filerPrefix;
    return this;
  }

  /**
   * Get filerPrefix
   * @return filerPrefix
   */
  @javax.annotation.Nullable
  public String getFilerPrefix() {
    return filerPrefix;
  }

  public void setFilerPrefix(String filerPrefix) {
    this.filerPrefix = filerPrefix;
  }


  public ScheduleE filerSuffix(String filerSuffix) {
    this.filerSuffix = filerSuffix;
    return this;
  }

  /**
   * Get filerSuffix
   * @return filerSuffix
   */
  @javax.annotation.Nullable
  public String getFilerSuffix() {
    return filerSuffix;
  }

  public void setFilerSuffix(String filerSuffix) {
    this.filerSuffix = filerSuffix;
  }


  public ScheduleE filingDate(LocalDate filingDate) {
    this.filingDate = filingDate;
    return this;
  }

  /**
   * Get filingDate
   * @return filingDate
   */
  @javax.annotation.Nullable
  public LocalDate getFilingDate() {
    return filingDate;
  }

  public void setFilingDate(LocalDate filingDate) {
    this.filingDate = filingDate;
  }


  public ScheduleE filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public ScheduleE imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   * Get imageNumber
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleE independentSignDate(LocalDate independentSignDate) {
    this.independentSignDate = independentSignDate;
    return this;
  }

  /**
   * Get independentSignDate
   * @return independentSignDate
   */
  @javax.annotation.Nullable
  public LocalDate getIndependentSignDate() {
    return independentSignDate;
  }

  public void setIndependentSignDate(LocalDate independentSignDate) {
    this.independentSignDate = independentSignDate;
  }


  public ScheduleE independentSignName(String independentSignName) {
    this.independentSignName = independentSignName;
    return this;
  }

  /**
   * Get independentSignName
   * @return independentSignName
   */
  @javax.annotation.Nullable
  public String getIndependentSignName() {
    return independentSignName;
  }

  public void setIndependentSignName(String independentSignName) {
    this.independentSignName = independentSignName;
  }


  public ScheduleE isNotice(Boolean isNotice) {
    this.isNotice = isNotice;
    return this;
  }

  /**
   * Get isNotice
   * @return isNotice
   */
  @javax.annotation.Nullable
  public Boolean getIsNotice() {
    return isNotice;
  }

  public void setIsNotice(Boolean isNotice) {
    this.isNotice = isNotice;
  }


  public ScheduleE lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleE linkId(Integer linkId) {
    this.linkId = linkId;
    return this;
  }

  /**
   * Get linkId
   * @return linkId
   */
  @javax.annotation.Nullable
  public Integer getLinkId() {
    return linkId;
  }

  public void setLinkId(Integer linkId) {
    this.linkId = linkId;
  }


  public ScheduleE memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleE memoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
    return this;
  }

  /**
   * Get memoCodeFull
   * @return memoCodeFull
   */
  @javax.annotation.Nullable
  public String getMemoCodeFull() {
    return memoCodeFull;
  }

  public void setMemoCodeFull(String memoCodeFull) {
    this.memoCodeFull = memoCodeFull;
  }


  public ScheduleE memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleE memoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
    return this;
  }

  /**
   * Get memoedSubtotal
   * @return memoedSubtotal
   */
  @javax.annotation.Nullable
  public Boolean getMemoedSubtotal() {
    return memoedSubtotal;
  }

  public void setMemoedSubtotal(Boolean memoedSubtotal) {
    this.memoedSubtotal = memoedSubtotal;
  }


  public ScheduleE mostRecent(Boolean mostRecent) {
    this.mostRecent = mostRecent;
    return this;
  }

  /**
   *  Report is either new or is the most-recently filed amendment 
   * @return mostRecent
   */
  @javax.annotation.Nullable
  public Boolean getMostRecent() {
    return mostRecent;
  }

  public void setMostRecent(Boolean mostRecent) {
    this.mostRecent = mostRecent;
  }


  public ScheduleE notaryCommissionExpirationDate(LocalDate notaryCommissionExpirationDate) {
    this.notaryCommissionExpirationDate = notaryCommissionExpirationDate;
    return this;
  }

  /**
   * Get notaryCommissionExpirationDate
   * @return notaryCommissionExpirationDate
   */
  @javax.annotation.Nullable
  public LocalDate getNotaryCommissionExpirationDate() {
    return notaryCommissionExpirationDate;
  }

  public void setNotaryCommissionExpirationDate(LocalDate notaryCommissionExpirationDate) {
    this.notaryCommissionExpirationDate = notaryCommissionExpirationDate;
  }


  public ScheduleE notarySignDate(LocalDate notarySignDate) {
    this.notarySignDate = notarySignDate;
    return this;
  }

  /**
   * Get notarySignDate
   * @return notarySignDate
   */
  @javax.annotation.Nullable
  public LocalDate getNotarySignDate() {
    return notarySignDate;
  }

  public void setNotarySignDate(LocalDate notarySignDate) {
    this.notarySignDate = notarySignDate;
  }


  public ScheduleE notarySignName(String notarySignName) {
    this.notarySignName = notarySignName;
    return this;
  }

  /**
   * Get notarySignName
   * @return notarySignName
   */
  @javax.annotation.Nullable
  public String getNotarySignName() {
    return notarySignName;
  }

  public void setNotarySignName(String notarySignName) {
    this.notarySignName = notarySignName;
  }


  public ScheduleE officeTotalYtd(BigDecimal officeTotalYtd) {
    this.officeTotalYtd = officeTotalYtd;
    return this;
  }

  /**
   * Get officeTotalYtd
   * @return officeTotalYtd
   */
  @javax.annotation.Nullable
  public BigDecimal getOfficeTotalYtd() {
    return officeTotalYtd;
  }

  public void setOfficeTotalYtd(BigDecimal officeTotalYtd) {
    this.officeTotalYtd = officeTotalYtd;
  }


  public ScheduleE originalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
    return this;
  }

  /**
   * Get originalSubId
   * @return originalSubId
   */
  @javax.annotation.Nullable
  public String getOriginalSubId() {
    return originalSubId;
  }

  public void setOriginalSubId(String originalSubId) {
    this.originalSubId = originalSubId;
  }


  public ScheduleE payeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
    return this;
  }

  /**
   * Get payeeCity
   * @return payeeCity
   */
  @javax.annotation.Nullable
  public String getPayeeCity() {
    return payeeCity;
  }

  public void setPayeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
  }


  public ScheduleE payeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
    return this;
  }

  /**
   * Get payeeFirstName
   * @return payeeFirstName
   */
  @javax.annotation.Nullable
  public String getPayeeFirstName() {
    return payeeFirstName;
  }

  public void setPayeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
  }


  public ScheduleE payeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
    return this;
  }

  /**
   * Get payeeLastName
   * @return payeeLastName
   */
  @javax.annotation.Nullable
  public String getPayeeLastName() {
    return payeeLastName;
  }

  public void setPayeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
  }


  public ScheduleE payeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
    return this;
  }

  /**
   * Get payeeMiddleName
   * @return payeeMiddleName
   */
  @javax.annotation.Nullable
  public String getPayeeMiddleName() {
    return payeeMiddleName;
  }

  public void setPayeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
  }


  public ScheduleE payeeName(String payeeName) {
    this.payeeName = payeeName;
    return this;
  }

  /**
   * Get payeeName
   * @return payeeName
   */
  @javax.annotation.Nullable
  public String getPayeeName() {
    return payeeName;
  }

  public void setPayeeName(String payeeName) {
    this.payeeName = payeeName;
  }


  public ScheduleE payeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
    return this;
  }

  /**
   * Get payeePrefix
   * @return payeePrefix
   */
  @javax.annotation.Nullable
  public String getPayeePrefix() {
    return payeePrefix;
  }

  public void setPayeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
  }


  public ScheduleE payeeState(String payeeState) {
    this.payeeState = payeeState;
    return this;
  }

  /**
   * Get payeeState
   * @return payeeState
   */
  @javax.annotation.Nullable
  public String getPayeeState() {
    return payeeState;
  }

  public void setPayeeState(String payeeState) {
    this.payeeState = payeeState;
  }


  public ScheduleE payeeStreet1(String payeeStreet1) {
    this.payeeStreet1 = payeeStreet1;
    return this;
  }

  /**
   * Get payeeStreet1
   * @return payeeStreet1
   */
  @javax.annotation.Nullable
  public String getPayeeStreet1() {
    return payeeStreet1;
  }

  public void setPayeeStreet1(String payeeStreet1) {
    this.payeeStreet1 = payeeStreet1;
  }


  public ScheduleE payeeStreet2(String payeeStreet2) {
    this.payeeStreet2 = payeeStreet2;
    return this;
  }

  /**
   * Get payeeStreet2
   * @return payeeStreet2
   */
  @javax.annotation.Nullable
  public String getPayeeStreet2() {
    return payeeStreet2;
  }

  public void setPayeeStreet2(String payeeStreet2) {
    this.payeeStreet2 = payeeStreet2;
  }


  public ScheduleE payeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
    return this;
  }

  /**
   * Get payeeSuffix
   * @return payeeSuffix
   */
  @javax.annotation.Nullable
  public String getPayeeSuffix() {
    return payeeSuffix;
  }

  public void setPayeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
  }


  public ScheduleE payeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
    return this;
  }

  /**
   * Get payeeZip
   * @return payeeZip
   */
  @javax.annotation.Nullable
  public String getPayeeZip() {
    return payeeZip;
  }

  public void setPayeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
  }


  public ScheduleE pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleE previousFileNumber(Integer previousFileNumber) {
    this.previousFileNumber = previousFileNumber;
    return this;
  }

  /**
   * Get previousFileNumber
   * @return previousFileNumber
   */
  @javax.annotation.Nullable
  public Integer getPreviousFileNumber() {
    return previousFileNumber;
  }

  public void setPreviousFileNumber(Integer previousFileNumber) {
    this.previousFileNumber = previousFileNumber;
  }


  public ScheduleE reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleE reportYear(Integer reportYear) {
    this.reportYear = reportYear;
    return this;
  }

  /**
   *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
   * @return reportYear
   */
  @javax.annotation.Nullable
  public Integer getReportYear() {
    return reportYear;
  }

  public void setReportYear(Integer reportYear) {
    this.reportYear = reportYear;
  }


  public ScheduleE scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

  /**
   * Get scheduleType
   * @return scheduleType
   */
  @javax.annotation.Nullable
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }


  public ScheduleE scheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
    return this;
  }

  /**
   * Get scheduleTypeFull
   * @return scheduleTypeFull
   */
  @javax.annotation.Nullable
  public String getScheduleTypeFull() {
    return scheduleTypeFull;
  }

  public void setScheduleTypeFull(String scheduleTypeFull) {
    this.scheduleTypeFull = scheduleTypeFull;
  }


  public ScheduleE subId(String subId) {
    this.subId = subId;
    return this;
  }

  /**
   * Get subId
   * @return subId
   */
  @javax.annotation.Nullable
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }


  public ScheduleE supportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
    return this;
  }

  /**
   * Get supportOpposeIndicator
   * @return supportOpposeIndicator
   */
  @javax.annotation.Nullable
  public String getSupportOpposeIndicator() {
    return supportOpposeIndicator;
  }

  public void setSupportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
  }


  public ScheduleE transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleE scheduleE = (ScheduleE) o;
    return Objects.equals(this.actionCode, scheduleE.actionCode) &&
        Objects.equals(this.actionCodeFull, scheduleE.actionCodeFull) &&
        Objects.equals(this.amendmentIndicator, scheduleE.amendmentIndicator) &&
        Objects.equals(this.amendmentNumber, scheduleE.amendmentNumber) &&
        Objects.equals(this.backReferenceScheduleName, scheduleE.backReferenceScheduleName) &&
        Objects.equals(this.backReferenceTransactionId, scheduleE.backReferenceTransactionId) &&
        Objects.equals(this.candidate, scheduleE.candidate) &&
        Objects.equals(this.candidateFirstName, scheduleE.candidateFirstName) &&
        Objects.equals(this.candidateId, scheduleE.candidateId) &&
        Objects.equals(this.candidateLastName, scheduleE.candidateLastName) &&
        Objects.equals(this.candidateMiddleName, scheduleE.candidateMiddleName) &&
        Objects.equals(this.candidateName, scheduleE.candidateName) &&
        Objects.equals(this.candidateOffice, scheduleE.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleE.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeState, scheduleE.candidateOfficeState) &&
        Objects.equals(this.candidateParty, scheduleE.candidateParty) &&
        Objects.equals(this.candidatePrefix, scheduleE.candidatePrefix) &&
        Objects.equals(this.candidateSuffix, scheduleE.candidateSuffix) &&
        Objects.equals(this.categoryCode, scheduleE.categoryCode) &&
        Objects.equals(this.categoryCodeFull, scheduleE.categoryCodeFull) &&
        Objects.equals(this.committee, scheduleE.committee) &&
        Objects.equals(this.committeeId, scheduleE.committeeId) &&
        Objects.equals(this.conduitCommitteeCity, scheduleE.conduitCommitteeCity) &&
        Objects.equals(this.conduitCommitteeId, scheduleE.conduitCommitteeId) &&
        Objects.equals(this.conduitCommitteeName, scheduleE.conduitCommitteeName) &&
        Objects.equals(this.conduitCommitteeState, scheduleE.conduitCommitteeState) &&
        Objects.equals(this.conduitCommitteeStreet1, scheduleE.conduitCommitteeStreet1) &&
        Objects.equals(this.conduitCommitteeStreet2, scheduleE.conduitCommitteeStreet2) &&
        Objects.equals(this.conduitCommitteeZip, scheduleE.conduitCommitteeZip) &&
        Objects.equals(this.disseminationDate, scheduleE.disseminationDate) &&
        Objects.equals(this.electionType, scheduleE.electionType) &&
        Objects.equals(this.electionTypeFull, scheduleE.electionTypeFull) &&
        Objects.equals(this.expenditureAmount, scheduleE.expenditureAmount) &&
        Objects.equals(this.expenditureDate, scheduleE.expenditureDate) &&
        Objects.equals(this.expenditureDescription, scheduleE.expenditureDescription) &&
        Objects.equals(this.fileNumber, scheduleE.fileNumber) &&
        Objects.equals(this.filerFirstName, scheduleE.filerFirstName) &&
        Objects.equals(this.filerLastName, scheduleE.filerLastName) &&
        Objects.equals(this.filerMiddleName, scheduleE.filerMiddleName) &&
        Objects.equals(this.filerPrefix, scheduleE.filerPrefix) &&
        Objects.equals(this.filerSuffix, scheduleE.filerSuffix) &&
        Objects.equals(this.filingDate, scheduleE.filingDate) &&
        Objects.equals(this.filingForm, scheduleE.filingForm) &&
        Objects.equals(this.imageNumber, scheduleE.imageNumber) &&
        Objects.equals(this.independentSignDate, scheduleE.independentSignDate) &&
        Objects.equals(this.independentSignName, scheduleE.independentSignName) &&
        Objects.equals(this.isNotice, scheduleE.isNotice) &&
        Objects.equals(this.lineNumber, scheduleE.lineNumber) &&
        Objects.equals(this.linkId, scheduleE.linkId) &&
        Objects.equals(this.memoCode, scheduleE.memoCode) &&
        Objects.equals(this.memoCodeFull, scheduleE.memoCodeFull) &&
        Objects.equals(this.memoText, scheduleE.memoText) &&
        Objects.equals(this.memoedSubtotal, scheduleE.memoedSubtotal) &&
        Objects.equals(this.mostRecent, scheduleE.mostRecent) &&
        Objects.equals(this.notaryCommissionExpirationDate, scheduleE.notaryCommissionExpirationDate) &&
        Objects.equals(this.notarySignDate, scheduleE.notarySignDate) &&
        Objects.equals(this.notarySignName, scheduleE.notarySignName) &&
        Objects.equals(this.officeTotalYtd, scheduleE.officeTotalYtd) &&
        Objects.equals(this.originalSubId, scheduleE.originalSubId) &&
        Objects.equals(this.payeeCity, scheduleE.payeeCity) &&
        Objects.equals(this.payeeFirstName, scheduleE.payeeFirstName) &&
        Objects.equals(this.payeeLastName, scheduleE.payeeLastName) &&
        Objects.equals(this.payeeMiddleName, scheduleE.payeeMiddleName) &&
        Objects.equals(this.payeeName, scheduleE.payeeName) &&
        Objects.equals(this.payeePrefix, scheduleE.payeePrefix) &&
        Objects.equals(this.payeeState, scheduleE.payeeState) &&
        Objects.equals(this.payeeStreet1, scheduleE.payeeStreet1) &&
        Objects.equals(this.payeeStreet2, scheduleE.payeeStreet2) &&
        Objects.equals(this.payeeSuffix, scheduleE.payeeSuffix) &&
        Objects.equals(this.payeeZip, scheduleE.payeeZip) &&
        Objects.equals(this.pdfUrl, scheduleE.pdfUrl) &&
        Objects.equals(this.previousFileNumber, scheduleE.previousFileNumber) &&
        Objects.equals(this.reportType, scheduleE.reportType) &&
        Objects.equals(this.reportYear, scheduleE.reportYear) &&
        Objects.equals(this.scheduleType, scheduleE.scheduleType) &&
        Objects.equals(this.scheduleTypeFull, scheduleE.scheduleTypeFull) &&
        Objects.equals(this.subId, scheduleE.subId) &&
        Objects.equals(this.supportOpposeIndicator, scheduleE.supportOpposeIndicator) &&
        Objects.equals(this.transactionId, scheduleE.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionCode, actionCodeFull, amendmentIndicator, amendmentNumber, backReferenceScheduleName, backReferenceTransactionId, candidate, candidateFirstName, candidateId, candidateLastName, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeState, candidateParty, candidatePrefix, candidateSuffix, categoryCode, categoryCodeFull, committee, committeeId, conduitCommitteeCity, conduitCommitteeId, conduitCommitteeName, conduitCommitteeState, conduitCommitteeStreet1, conduitCommitteeStreet2, conduitCommitteeZip, disseminationDate, electionType, electionTypeFull, expenditureAmount, expenditureDate, expenditureDescription, fileNumber, filerFirstName, filerLastName, filerMiddleName, filerPrefix, filerSuffix, filingDate, filingForm, imageNumber, independentSignDate, independentSignName, isNotice, lineNumber, linkId, memoCode, memoCodeFull, memoText, memoedSubtotal, mostRecent, notaryCommissionExpirationDate, notarySignDate, notarySignName, officeTotalYtd, originalSubId, payeeCity, payeeFirstName, payeeLastName, payeeMiddleName, payeeName, payeePrefix, payeeState, payeeStreet1, payeeStreet2, payeeSuffix, payeeZip, pdfUrl, previousFileNumber, reportType, reportYear, scheduleType, scheduleTypeFull, subId, supportOpposeIndicator, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleE {\n");
    sb.append("    actionCode: ").append(toIndentedString(actionCode)).append("\n");
    sb.append("    actionCodeFull: ").append(toIndentedString(actionCodeFull)).append("\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    amendmentNumber: ").append(toIndentedString(amendmentNumber)).append("\n");
    sb.append("    backReferenceScheduleName: ").append(toIndentedString(backReferenceScheduleName)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    candidate: ").append(toIndentedString(candidate)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateLastName: ").append(toIndentedString(candidateLastName)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateParty: ").append(toIndentedString(candidateParty)).append("\n");
    sb.append("    candidatePrefix: ").append(toIndentedString(candidatePrefix)).append("\n");
    sb.append("    candidateSuffix: ").append(toIndentedString(candidateSuffix)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    categoryCodeFull: ").append(toIndentedString(categoryCodeFull)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    conduitCommitteeCity: ").append(toIndentedString(conduitCommitteeCity)).append("\n");
    sb.append("    conduitCommitteeId: ").append(toIndentedString(conduitCommitteeId)).append("\n");
    sb.append("    conduitCommitteeName: ").append(toIndentedString(conduitCommitteeName)).append("\n");
    sb.append("    conduitCommitteeState: ").append(toIndentedString(conduitCommitteeState)).append("\n");
    sb.append("    conduitCommitteeStreet1: ").append(toIndentedString(conduitCommitteeStreet1)).append("\n");
    sb.append("    conduitCommitteeStreet2: ").append(toIndentedString(conduitCommitteeStreet2)).append("\n");
    sb.append("    conduitCommitteeZip: ").append(toIndentedString(conduitCommitteeZip)).append("\n");
    sb.append("    disseminationDate: ").append(toIndentedString(disseminationDate)).append("\n");
    sb.append("    electionType: ").append(toIndentedString(electionType)).append("\n");
    sb.append("    electionTypeFull: ").append(toIndentedString(electionTypeFull)).append("\n");
    sb.append("    expenditureAmount: ").append(toIndentedString(expenditureAmount)).append("\n");
    sb.append("    expenditureDate: ").append(toIndentedString(expenditureDate)).append("\n");
    sb.append("    expenditureDescription: ").append(toIndentedString(expenditureDescription)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filerFirstName: ").append(toIndentedString(filerFirstName)).append("\n");
    sb.append("    filerLastName: ").append(toIndentedString(filerLastName)).append("\n");
    sb.append("    filerMiddleName: ").append(toIndentedString(filerMiddleName)).append("\n");
    sb.append("    filerPrefix: ").append(toIndentedString(filerPrefix)).append("\n");
    sb.append("    filerSuffix: ").append(toIndentedString(filerSuffix)).append("\n");
    sb.append("    filingDate: ").append(toIndentedString(filingDate)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    independentSignDate: ").append(toIndentedString(independentSignDate)).append("\n");
    sb.append("    independentSignName: ").append(toIndentedString(independentSignName)).append("\n");
    sb.append("    isNotice: ").append(toIndentedString(isNotice)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoCodeFull: ").append(toIndentedString(memoCodeFull)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    memoedSubtotal: ").append(toIndentedString(memoedSubtotal)).append("\n");
    sb.append("    mostRecent: ").append(toIndentedString(mostRecent)).append("\n");
    sb.append("    notaryCommissionExpirationDate: ").append(toIndentedString(notaryCommissionExpirationDate)).append("\n");
    sb.append("    notarySignDate: ").append(toIndentedString(notarySignDate)).append("\n");
    sb.append("    notarySignName: ").append(toIndentedString(notarySignName)).append("\n");
    sb.append("    officeTotalYtd: ").append(toIndentedString(officeTotalYtd)).append("\n");
    sb.append("    originalSubId: ").append(toIndentedString(originalSubId)).append("\n");
    sb.append("    payeeCity: ").append(toIndentedString(payeeCity)).append("\n");
    sb.append("    payeeFirstName: ").append(toIndentedString(payeeFirstName)).append("\n");
    sb.append("    payeeLastName: ").append(toIndentedString(payeeLastName)).append("\n");
    sb.append("    payeeMiddleName: ").append(toIndentedString(payeeMiddleName)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    payeePrefix: ").append(toIndentedString(payeePrefix)).append("\n");
    sb.append("    payeeState: ").append(toIndentedString(payeeState)).append("\n");
    sb.append("    payeeStreet1: ").append(toIndentedString(payeeStreet1)).append("\n");
    sb.append("    payeeStreet2: ").append(toIndentedString(payeeStreet2)).append("\n");
    sb.append("    payeeSuffix: ").append(toIndentedString(payeeSuffix)).append("\n");
    sb.append("    payeeZip: ").append(toIndentedString(payeeZip)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    previousFileNumber: ").append(toIndentedString(previousFileNumber)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportYear: ").append(toIndentedString(reportYear)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTypeFull: ").append(toIndentedString(scheduleTypeFull)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    supportOpposeIndicator: ").append(toIndentedString(supportOpposeIndicator)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action_code");
    openapiFields.add("action_code_full");
    openapiFields.add("amendment_indicator");
    openapiFields.add("amendment_number");
    openapiFields.add("back_reference_schedule_name");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("candidate");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_last_name");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_party");
    openapiFields.add("candidate_prefix");
    openapiFields.add("candidate_suffix");
    openapiFields.add("category_code");
    openapiFields.add("category_code_full");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("conduit_committee_city");
    openapiFields.add("conduit_committee_id");
    openapiFields.add("conduit_committee_name");
    openapiFields.add("conduit_committee_state");
    openapiFields.add("conduit_committee_street1");
    openapiFields.add("conduit_committee_street2");
    openapiFields.add("conduit_committee_zip");
    openapiFields.add("dissemination_date");
    openapiFields.add("election_type");
    openapiFields.add("election_type_full");
    openapiFields.add("expenditure_amount");
    openapiFields.add("expenditure_date");
    openapiFields.add("expenditure_description");
    openapiFields.add("file_number");
    openapiFields.add("filer_first_name");
    openapiFields.add("filer_last_name");
    openapiFields.add("filer_middle_name");
    openapiFields.add("filer_prefix");
    openapiFields.add("filer_suffix");
    openapiFields.add("filing_date");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("independent_sign_date");
    openapiFields.add("independent_sign_name");
    openapiFields.add("is_notice");
    openapiFields.add("line_number");
    openapiFields.add("link_id");
    openapiFields.add("memo_code");
    openapiFields.add("memo_code_full");
    openapiFields.add("memo_text");
    openapiFields.add("memoed_subtotal");
    openapiFields.add("most_recent");
    openapiFields.add("notary_commission_expiration_date");
    openapiFields.add("notary_sign_date");
    openapiFields.add("notary_sign_name");
    openapiFields.add("office_total_ytd");
    openapiFields.add("original_sub_id");
    openapiFields.add("payee_city");
    openapiFields.add("payee_first_name");
    openapiFields.add("payee_last_name");
    openapiFields.add("payee_middle_name");
    openapiFields.add("payee_name");
    openapiFields.add("payee_prefix");
    openapiFields.add("payee_state");
    openapiFields.add("payee_street_1");
    openapiFields.add("payee_street_2");
    openapiFields.add("payee_suffix");
    openapiFields.add("payee_zip");
    openapiFields.add("pdf_url");
    openapiFields.add("previous_file_number");
    openapiFields.add("report_type");
    openapiFields.add("report_year");
    openapiFields.add("schedule_type");
    openapiFields.add("schedule_type_full");
    openapiFields.add("sub_id");
    openapiFields.add("support_oppose_indicator");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleE
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleE.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleE is not found in the empty JSON string", ScheduleE.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleE.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleE` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action_code") != null && !jsonObj.get("action_code").isJsonNull()) && !jsonObj.get("action_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code").toString()));
      }
      if ((jsonObj.get("action_code_full") != null && !jsonObj.get("action_code_full").isJsonNull()) && !jsonObj.get("action_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code_full").toString()));
      }
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_name") != null && !jsonObj.get("back_reference_schedule_name").isJsonNull()) && !jsonObj.get("back_reference_schedule_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_name").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("candidate") != null && !jsonObj.get("candidate").isJsonNull()) && !jsonObj.get("candidate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_last_name") != null && !jsonObj.get("candidate_last_name").isJsonNull()) && !jsonObj.get("candidate_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_last_name").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_party") != null && !jsonObj.get("candidate_party").isJsonNull()) && !jsonObj.get("candidate_party").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_party` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_party").toString()));
      }
      if ((jsonObj.get("candidate_prefix") != null && !jsonObj.get("candidate_prefix").isJsonNull()) && !jsonObj.get("candidate_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_prefix").toString()));
      }
      if ((jsonObj.get("candidate_suffix") != null && !jsonObj.get("candidate_suffix").isJsonNull()) && !jsonObj.get("candidate_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_suffix").toString()));
      }
      if ((jsonObj.get("category_code") != null && !jsonObj.get("category_code").isJsonNull()) && !jsonObj.get("category_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code").toString()));
      }
      if ((jsonObj.get("category_code_full") != null && !jsonObj.get("category_code_full").isJsonNull()) && !jsonObj.get("category_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code_full").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_city") != null && !jsonObj.get("conduit_committee_city").isJsonNull()) && !jsonObj.get("conduit_committee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_city").toString()));
      }
      if ((jsonObj.get("conduit_committee_id") != null && !jsonObj.get("conduit_committee_id").isJsonNull()) && !jsonObj.get("conduit_committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_id").toString()));
      }
      if ((jsonObj.get("conduit_committee_name") != null && !jsonObj.get("conduit_committee_name").isJsonNull()) && !jsonObj.get("conduit_committee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_name").toString()));
      }
      if ((jsonObj.get("conduit_committee_state") != null && !jsonObj.get("conduit_committee_state").isJsonNull()) && !jsonObj.get("conduit_committee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_state").toString()));
      }
      if ((jsonObj.get("conduit_committee_street1") != null && !jsonObj.get("conduit_committee_street1").isJsonNull()) && !jsonObj.get("conduit_committee_street1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street1").toString()));
      }
      if ((jsonObj.get("conduit_committee_street2") != null && !jsonObj.get("conduit_committee_street2").isJsonNull()) && !jsonObj.get("conduit_committee_street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conduit_committee_street2").toString()));
      }
      if ((jsonObj.get("election_type") != null && !jsonObj.get("election_type").isJsonNull()) && !jsonObj.get("election_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type").toString()));
      }
      if ((jsonObj.get("election_type_full") != null && !jsonObj.get("election_type_full").isJsonNull()) && !jsonObj.get("election_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `election_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("election_type_full").toString()));
      }
      if ((jsonObj.get("expenditure_description") != null && !jsonObj.get("expenditure_description").isJsonNull()) && !jsonObj.get("expenditure_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expenditure_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expenditure_description").toString()));
      }
      if ((jsonObj.get("filer_first_name") != null && !jsonObj.get("filer_first_name").isJsonNull()) && !jsonObj.get("filer_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_first_name").toString()));
      }
      if ((jsonObj.get("filer_last_name") != null && !jsonObj.get("filer_last_name").isJsonNull()) && !jsonObj.get("filer_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_last_name").toString()));
      }
      if ((jsonObj.get("filer_middle_name") != null && !jsonObj.get("filer_middle_name").isJsonNull()) && !jsonObj.get("filer_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_middle_name").toString()));
      }
      if ((jsonObj.get("filer_prefix") != null && !jsonObj.get("filer_prefix").isJsonNull()) && !jsonObj.get("filer_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_prefix").toString()));
      }
      if ((jsonObj.get("filer_suffix") != null && !jsonObj.get("filer_suffix").isJsonNull()) && !jsonObj.get("filer_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_suffix").toString()));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("independent_sign_name") != null && !jsonObj.get("independent_sign_name").isJsonNull()) && !jsonObj.get("independent_sign_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `independent_sign_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("independent_sign_name").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_code_full") != null && !jsonObj.get("memo_code_full").isJsonNull()) && !jsonObj.get("memo_code_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code_full").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("notary_sign_name") != null && !jsonObj.get("notary_sign_name").isJsonNull()) && !jsonObj.get("notary_sign_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notary_sign_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notary_sign_name").toString()));
      }
      if ((jsonObj.get("original_sub_id") != null && !jsonObj.get("original_sub_id").isJsonNull()) && !jsonObj.get("original_sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_sub_id").toString()));
      }
      if ((jsonObj.get("payee_city") != null && !jsonObj.get("payee_city").isJsonNull()) && !jsonObj.get("payee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_city").toString()));
      }
      if ((jsonObj.get("payee_first_name") != null && !jsonObj.get("payee_first_name").isJsonNull()) && !jsonObj.get("payee_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_first_name").toString()));
      }
      if ((jsonObj.get("payee_last_name") != null && !jsonObj.get("payee_last_name").isJsonNull()) && !jsonObj.get("payee_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_last_name").toString()));
      }
      if ((jsonObj.get("payee_middle_name") != null && !jsonObj.get("payee_middle_name").isJsonNull()) && !jsonObj.get("payee_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_middle_name").toString()));
      }
      if ((jsonObj.get("payee_name") != null && !jsonObj.get("payee_name").isJsonNull()) && !jsonObj.get("payee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_name").toString()));
      }
      if ((jsonObj.get("payee_prefix") != null && !jsonObj.get("payee_prefix").isJsonNull()) && !jsonObj.get("payee_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_prefix").toString()));
      }
      if ((jsonObj.get("payee_state") != null && !jsonObj.get("payee_state").isJsonNull()) && !jsonObj.get("payee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_state").toString()));
      }
      if ((jsonObj.get("payee_street_1") != null && !jsonObj.get("payee_street_1").isJsonNull()) && !jsonObj.get("payee_street_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_street_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_street_1").toString()));
      }
      if ((jsonObj.get("payee_street_2") != null && !jsonObj.get("payee_street_2").isJsonNull()) && !jsonObj.get("payee_street_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_street_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_street_2").toString()));
      }
      if ((jsonObj.get("payee_suffix") != null && !jsonObj.get("payee_suffix").isJsonNull()) && !jsonObj.get("payee_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_suffix").toString()));
      }
      if ((jsonObj.get("payee_zip") != null && !jsonObj.get("payee_zip").isJsonNull()) && !jsonObj.get("payee_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_zip").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()) && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if ((jsonObj.get("schedule_type_full") != null && !jsonObj.get("schedule_type_full").isJsonNull()) && !jsonObj.get("schedule_type_full").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type_full").toString()));
      }
      if ((jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonNull()) && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if ((jsonObj.get("support_oppose_indicator") != null && !jsonObj.get("support_oppose_indicator").isJsonNull()) && !jsonObj.get("support_oppose_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_oppose_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_oppose_indicator").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleE.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleE' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleE> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleE.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleE>() {
           @Override
           public void write(JsonWriter out, ScheduleE value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleE read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleE given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleE
   * @throws IOException if the JSON string is invalid with respect to ScheduleE
   */
  public static ScheduleE fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleE.class);
  }

  /**
   * Convert an instance of ScheduleE to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

