/*
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CommitteeHistory;
import org.openapitools.client.model.EFilings;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ScheduleEEfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:12.812386-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleEEfile {
  public static final String SERIALIZED_NAME_AMENDMENT_INDICATOR = "amendment_indicator";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_INDICATOR)
  private String amendmentIndicator;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME = "back_reference_schedule_name";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_SCHEDULE_NAME)
  private String backReferenceScheduleName;

  public static final String SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID = "back_reference_transaction_id";
  @SerializedName(SERIALIZED_NAME_BACK_REFERENCE_TRANSACTION_ID)
  private String backReferenceTransactionId;

  public static final String SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER = "beginning_image_number";
  @SerializedName(SERIALIZED_NAME_BEGINNING_IMAGE_NUMBER)
  private String beginningImageNumber;

  public static final String SERIALIZED_NAME_CANDIDATE_FIRST_NAME = "candidate_first_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_FIRST_NAME)
  private String candidateFirstName;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidate_id";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private String candidateId;

  public static final String SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME = "candidate_middle_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MIDDLE_NAME)
  private String candidateMiddleName;

  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "candidate_name";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE = "candidate_office";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE)
  private String candidateOffice;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT = "candidate_office_district";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_DISTRICT)
  private String candidateOfficeDistrict;

  public static final String SERIALIZED_NAME_CANDIDATE_OFFICE_STATE = "candidate_office_state";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_OFFICE_STATE)
  private String candidateOfficeState;

  public static final String SERIALIZED_NAME_CANDIDATE_PARTY = "candidate_party";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PARTY)
  private String candidateParty;

  public static final String SERIALIZED_NAME_CANDIDATE_PREFIX = "candidate_prefix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PREFIX)
  private String candidatePrefix;

  public static final String SERIALIZED_NAME_CANDIDATE_SUFFIX = "candidate_suffix";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_SUFFIX)
  private String candidateSuffix;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "category_code";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_COMMITTEE = "committee";
  @SerializedName(SERIALIZED_NAME_COMMITTEE)
  private CommitteeHistory committee;

  public static final String SERIALIZED_NAME_COMMITTEE_ID = "committee_id";
  @SerializedName(SERIALIZED_NAME_COMMITTEE_ID)
  private String committeeId;

  public static final String SERIALIZED_NAME_CSV_URL = "csv_url";
  @SerializedName(SERIALIZED_NAME_CSV_URL)
  private String csvUrl;

  public static final String SERIALIZED_NAME_DISSEMINATION_DATE = "dissemination_date";
  @SerializedName(SERIALIZED_NAME_DISSEMINATION_DATE)
  private LocalDate disseminationDate;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_EXPENDITURE_AMOUNT = "expenditure_amount";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_AMOUNT)
  private Integer expenditureAmount;

  public static final String SERIALIZED_NAME_EXPENDITURE_DATE = "expenditure_date";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_DATE)
  private LocalDate expenditureDate;

  public static final String SERIALIZED_NAME_EXPENDITURE_DESCRIPTION = "expenditure_description";
  @SerializedName(SERIALIZED_NAME_EXPENDITURE_DESCRIPTION)
  private String expenditureDescription;

  public static final String SERIALIZED_NAME_FEC_URL = "fec_url";
  @SerializedName(SERIALIZED_NAME_FEC_URL)
  private String fecUrl;

  public static final String SERIALIZED_NAME_FILE_NUMBER = "file_number";
  @SerializedName(SERIALIZED_NAME_FILE_NUMBER)
  private Integer fileNumber;

  public static final String SERIALIZED_NAME_FILER_FIRST_NAME = "filer_first_name";
  @SerializedName(SERIALIZED_NAME_FILER_FIRST_NAME)
  private String filerFirstName;

  public static final String SERIALIZED_NAME_FILER_LAST_NAME = "filer_last_name";
  @SerializedName(SERIALIZED_NAME_FILER_LAST_NAME)
  private String filerLastName;

  public static final String SERIALIZED_NAME_FILER_MIDDLE_NAME = "filer_middle_name";
  @SerializedName(SERIALIZED_NAME_FILER_MIDDLE_NAME)
  private String filerMiddleName;

  public static final String SERIALIZED_NAME_FILER_PREFIX = "filer_prefix";
  @SerializedName(SERIALIZED_NAME_FILER_PREFIX)
  private String filerPrefix;

  public static final String SERIALIZED_NAME_FILER_SUFFIX = "filer_suffix";
  @SerializedName(SERIALIZED_NAME_FILER_SUFFIX)
  private String filerSuffix;

  public static final String SERIALIZED_NAME_FILING = "filing";
  @SerializedName(SERIALIZED_NAME_FILING)
  private EFilings filing;

  public static final String SERIALIZED_NAME_FILING_FORM = "filing_form";
  @SerializedName(SERIALIZED_NAME_FILING_FORM)
  private String filingForm;

  public static final String SERIALIZED_NAME_IMAGE_NUMBER = "image_number";
  @SerializedName(SERIALIZED_NAME_IMAGE_NUMBER)
  private String imageNumber;

  public static final String SERIALIZED_NAME_IS_NOTICE = "is_notice";
  @SerializedName(SERIALIZED_NAME_IS_NOTICE)
  private Boolean isNotice;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "line_number";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_LOAD_TIMESTAMP = "load_timestamp";
  @SerializedName(SERIALIZED_NAME_LOAD_TIMESTAMP)
  private OffsetDateTime loadTimestamp;

  public static final String SERIALIZED_NAME_MEMO_CODE = "memo_code";
  @SerializedName(SERIALIZED_NAME_MEMO_CODE)
  private String memoCode;

  public static final String SERIALIZED_NAME_MEMO_TEXT = "memo_text";
  @SerializedName(SERIALIZED_NAME_MEMO_TEXT)
  private String memoText;

  public static final String SERIALIZED_NAME_MOST_RECENT = "most_recent";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT)
  private Boolean mostRecent;

  public static final String SERIALIZED_NAME_NOTARY_SIGN_DATE = "notary_sign_date";
  @SerializedName(SERIALIZED_NAME_NOTARY_SIGN_DATE)
  private LocalDate notarySignDate;

  public static final String SERIALIZED_NAME_OFFICE_TOTAL_YTD = "office_total_ytd";
  @SerializedName(SERIALIZED_NAME_OFFICE_TOTAL_YTD)
  private Float officeTotalYtd;

  public static final String SERIALIZED_NAME_PAYEE_CITY = "payee_city";
  @SerializedName(SERIALIZED_NAME_PAYEE_CITY)
  private String payeeCity;

  public static final String SERIALIZED_NAME_PAYEE_FIRST_NAME = "payee_first_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_FIRST_NAME)
  private String payeeFirstName;

  public static final String SERIALIZED_NAME_PAYEE_LAST_NAME = "payee_last_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_LAST_NAME)
  private String payeeLastName;

  public static final String SERIALIZED_NAME_PAYEE_MIDDLE_NAME = "payee_middle_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_MIDDLE_NAME)
  private String payeeMiddleName;

  public static final String SERIALIZED_NAME_PAYEE_NAME = "payee_name";
  @SerializedName(SERIALIZED_NAME_PAYEE_NAME)
  private String payeeName;

  public static final String SERIALIZED_NAME_PAYEE_PREFIX = "payee_prefix";
  @SerializedName(SERIALIZED_NAME_PAYEE_PREFIX)
  private String payeePrefix;

  public static final String SERIALIZED_NAME_PAYEE_STATE = "payee_state";
  @SerializedName(SERIALIZED_NAME_PAYEE_STATE)
  private String payeeState;

  public static final String SERIALIZED_NAME_PAYEE_STREET1 = "payee_street_1";
  @SerializedName(SERIALIZED_NAME_PAYEE_STREET1)
  private String payeeStreet1;

  public static final String SERIALIZED_NAME_PAYEE_STREET2 = "payee_street_2";
  @SerializedName(SERIALIZED_NAME_PAYEE_STREET2)
  private String payeeStreet2;

  public static final String SERIALIZED_NAME_PAYEE_SUFFIX = "payee_suffix";
  @SerializedName(SERIALIZED_NAME_PAYEE_SUFFIX)
  private String payeeSuffix;

  public static final String SERIALIZED_NAME_PAYEE_ZIP = "payee_zip";
  @SerializedName(SERIALIZED_NAME_PAYEE_ZIP)
  private String payeeZip;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  private String pdfUrl;

  public static final String SERIALIZED_NAME_RELATED_LINE_NUMBER = "related_line_number";
  @SerializedName(SERIALIZED_NAME_RELATED_LINE_NUMBER)
  private Integer relatedLineNumber;

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private String reportType;

  public static final String SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR = "support_oppose_indicator";
  @SerializedName(SERIALIZED_NAME_SUPPORT_OPPOSE_INDICATOR)
  private String supportOpposeIndicator;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public ScheduleEEfile() {
  }

  public ScheduleEEfile amendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
    return this;
  }

  /**
   * Get amendmentIndicator
   * @return amendmentIndicator
   */
  @javax.annotation.Nullable
  public String getAmendmentIndicator() {
    return amendmentIndicator;
  }

  public void setAmendmentIndicator(String amendmentIndicator) {
    this.amendmentIndicator = amendmentIndicator;
  }


  public ScheduleEEfile backReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
    return this;
  }

  /**
   * Get backReferenceScheduleName
   * @return backReferenceScheduleName
   */
  @javax.annotation.Nullable
  public String getBackReferenceScheduleName() {
    return backReferenceScheduleName;
  }

  public void setBackReferenceScheduleName(String backReferenceScheduleName) {
    this.backReferenceScheduleName = backReferenceScheduleName;
  }


  public ScheduleEEfile backReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
    return this;
  }

  /**
   * Get backReferenceTransactionId
   * @return backReferenceTransactionId
   */
  @javax.annotation.Nullable
  public String getBackReferenceTransactionId() {
    return backReferenceTransactionId;
  }

  public void setBackReferenceTransactionId(String backReferenceTransactionId) {
    this.backReferenceTransactionId = backReferenceTransactionId;
  }


  public ScheduleEEfile beginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
    return this;
  }

  /**
   * Get beginningImageNumber
   * @return beginningImageNumber
   */
  @javax.annotation.Nullable
  public String getBeginningImageNumber() {
    return beginningImageNumber;
  }

  public void setBeginningImageNumber(String beginningImageNumber) {
    this.beginningImageNumber = beginningImageNumber;
  }


  public ScheduleEEfile candidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
    return this;
  }

  /**
   * Get candidateFirstName
   * @return candidateFirstName
   */
  @javax.annotation.Nullable
  public String getCandidateFirstName() {
    return candidateFirstName;
  }

  public void setCandidateFirstName(String candidateFirstName) {
    this.candidateFirstName = candidateFirstName;
  }


  public ScheduleEEfile candidateId(String candidateId) {
    this.candidateId = candidateId;
    return this;
  }

  /**
   * Get candidateId
   * @return candidateId
   */
  @javax.annotation.Nullable
  public String getCandidateId() {
    return candidateId;
  }

  public void setCandidateId(String candidateId) {
    this.candidateId = candidateId;
  }


  public ScheduleEEfile candidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
    return this;
  }

  /**
   * Get candidateMiddleName
   * @return candidateMiddleName
   */
  @javax.annotation.Nullable
  public String getCandidateMiddleName() {
    return candidateMiddleName;
  }

  public void setCandidateMiddleName(String candidateMiddleName) {
    this.candidateMiddleName = candidateMiddleName;
  }


  public ScheduleEEfile candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Name of candidate running for office
   * @return candidateName
   */
  @javax.annotation.Nullable
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public ScheduleEEfile candidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
    return this;
  }

  /**
   * Federal office candidate runs for: H, S or P
   * @return candidateOffice
   */
  @javax.annotation.Nullable
  public String getCandidateOffice() {
    return candidateOffice;
  }

  public void setCandidateOffice(String candidateOffice) {
    this.candidateOffice = candidateOffice;
  }


  public ScheduleEEfile candidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
    return this;
  }

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   * @return candidateOfficeDistrict
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeDistrict() {
    return candidateOfficeDistrict;
  }

  public void setCandidateOfficeDistrict(String candidateOfficeDistrict) {
    this.candidateOfficeDistrict = candidateOfficeDistrict;
  }


  public ScheduleEEfile candidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
    return this;
  }

  /**
   * US state or territory
   * @return candidateOfficeState
   */
  @javax.annotation.Nullable
  public String getCandidateOfficeState() {
    return candidateOfficeState;
  }

  public void setCandidateOfficeState(String candidateOfficeState) {
    this.candidateOfficeState = candidateOfficeState;
  }


  public ScheduleEEfile candidateParty(String candidateParty) {
    this.candidateParty = candidateParty;
    return this;
  }

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   * @return candidateParty
   */
  @javax.annotation.Nullable
  public String getCandidateParty() {
    return candidateParty;
  }

  public void setCandidateParty(String candidateParty) {
    this.candidateParty = candidateParty;
  }


  public ScheduleEEfile candidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
    return this;
  }

  /**
   * Get candidatePrefix
   * @return candidatePrefix
   */
  @javax.annotation.Nullable
  public String getCandidatePrefix() {
    return candidatePrefix;
  }

  public void setCandidatePrefix(String candidatePrefix) {
    this.candidatePrefix = candidatePrefix;
  }


  public ScheduleEEfile candidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
    return this;
  }

  /**
   * Get candidateSuffix
   * @return candidateSuffix
   */
  @javax.annotation.Nullable
  public String getCandidateSuffix() {
    return candidateSuffix;
  }

  public void setCandidateSuffix(String candidateSuffix) {
    this.candidateSuffix = candidateSuffix;
  }


  public ScheduleEEfile categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public ScheduleEEfile committee(CommitteeHistory committee) {
    this.committee = committee;
    return this;
  }

  /**
   * Get committee
   * @return committee
   */
  @javax.annotation.Nullable
  public CommitteeHistory getCommittee() {
    return committee;
  }

  public void setCommittee(CommitteeHistory committee) {
    this.committee = committee;
  }


  public ScheduleEEfile committeeId(String committeeId) {
    this.committeeId = committeeId;
    return this;
  }

  /**
   *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id&#39;s begin with the letter C which is followed by eight digits. 
   * @return committeeId
   */
  @javax.annotation.Nullable
  public String getCommitteeId() {
    return committeeId;
  }

  public void setCommitteeId(String committeeId) {
    this.committeeId = committeeId;
  }


  public ScheduleEEfile csvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
    return this;
  }

  /**
   * Get csvUrl
   * @return csvUrl
   */
  @javax.annotation.Nullable
  public String getCsvUrl() {
    return csvUrl;
  }

  public void setCsvUrl(String csvUrl) {
    this.csvUrl = csvUrl;
  }


  public ScheduleEEfile disseminationDate(LocalDate disseminationDate) {
    this.disseminationDate = disseminationDate;
    return this;
  }

  /**
   *  Date when a PAC distrubutes or disseminates an independent expenditure and pays for it in the same reporting period 
   * @return disseminationDate
   */
  @javax.annotation.Nullable
  public LocalDate getDisseminationDate() {
    return disseminationDate;
  }

  public void setDisseminationDate(LocalDate disseminationDate) {
    this.disseminationDate = disseminationDate;
  }


  public ScheduleEEfile entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public ScheduleEEfile expenditureAmount(Integer expenditureAmount) {
    this.expenditureAmount = expenditureAmount;
    return this;
  }

  /**
   * Get expenditureAmount
   * @return expenditureAmount
   */
  @javax.annotation.Nullable
  public Integer getExpenditureAmount() {
    return expenditureAmount;
  }

  public void setExpenditureAmount(Integer expenditureAmount) {
    this.expenditureAmount = expenditureAmount;
  }


  public ScheduleEEfile expenditureDate(LocalDate expenditureDate) {
    this.expenditureDate = expenditureDate;
    return this;
  }

  /**
   * Get expenditureDate
   * @return expenditureDate
   */
  @javax.annotation.Nullable
  public LocalDate getExpenditureDate() {
    return expenditureDate;
  }

  public void setExpenditureDate(LocalDate expenditureDate) {
    this.expenditureDate = expenditureDate;
  }


  public ScheduleEEfile expenditureDescription(String expenditureDescription) {
    this.expenditureDescription = expenditureDescription;
    return this;
  }

  /**
   * Get expenditureDescription
   * @return expenditureDescription
   */
  @javax.annotation.Nullable
  public String getExpenditureDescription() {
    return expenditureDescription;
  }

  public void setExpenditureDescription(String expenditureDescription) {
    this.expenditureDescription = expenditureDescription;
  }


  public ScheduleEEfile fecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
    return this;
  }

  /**
   * Get fecUrl
   * @return fecUrl
   */
  @javax.annotation.Nullable
  public String getFecUrl() {
    return fecUrl;
  }

  public void setFecUrl(String fecUrl) {
    this.fecUrl = fecUrl;
  }


  public ScheduleEEfile fileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

  /**
   * Get fileNumber
   * @return fileNumber
   */
  @javax.annotation.Nonnull
  public Integer getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(Integer fileNumber) {
    this.fileNumber = fileNumber;
  }


  public ScheduleEEfile filerFirstName(String filerFirstName) {
    this.filerFirstName = filerFirstName;
    return this;
  }

  /**
   * Get filerFirstName
   * @return filerFirstName
   */
  @javax.annotation.Nullable
  public String getFilerFirstName() {
    return filerFirstName;
  }

  public void setFilerFirstName(String filerFirstName) {
    this.filerFirstName = filerFirstName;
  }


  public ScheduleEEfile filerLastName(String filerLastName) {
    this.filerLastName = filerLastName;
    return this;
  }

  /**
   * Get filerLastName
   * @return filerLastName
   */
  @javax.annotation.Nullable
  public String getFilerLastName() {
    return filerLastName;
  }

  public void setFilerLastName(String filerLastName) {
    this.filerLastName = filerLastName;
  }


  public ScheduleEEfile filerMiddleName(String filerMiddleName) {
    this.filerMiddleName = filerMiddleName;
    return this;
  }

  /**
   * Get filerMiddleName
   * @return filerMiddleName
   */
  @javax.annotation.Nullable
  public String getFilerMiddleName() {
    return filerMiddleName;
  }

  public void setFilerMiddleName(String filerMiddleName) {
    this.filerMiddleName = filerMiddleName;
  }


  public ScheduleEEfile filerPrefix(String filerPrefix) {
    this.filerPrefix = filerPrefix;
    return this;
  }

  /**
   * Get filerPrefix
   * @return filerPrefix
   */
  @javax.annotation.Nullable
  public String getFilerPrefix() {
    return filerPrefix;
  }

  public void setFilerPrefix(String filerPrefix) {
    this.filerPrefix = filerPrefix;
  }


  public ScheduleEEfile filerSuffix(String filerSuffix) {
    this.filerSuffix = filerSuffix;
    return this;
  }

  /**
   * Get filerSuffix
   * @return filerSuffix
   */
  @javax.annotation.Nullable
  public String getFilerSuffix() {
    return filerSuffix;
  }

  public void setFilerSuffix(String filerSuffix) {
    this.filerSuffix = filerSuffix;
  }


  public ScheduleEEfile filing(EFilings filing) {
    this.filing = filing;
    return this;
  }

  /**
   * Get filing
   * @return filing
   */
  @javax.annotation.Nullable
  public EFilings getFiling() {
    return filing;
  }

  public void setFiling(EFilings filing) {
    this.filing = filing;
  }


  public ScheduleEEfile filingForm(String filingForm) {
    this.filingForm = filingForm;
    return this;
  }

  /**
   * Get filingForm
   * @return filingForm
   */
  @javax.annotation.Nullable
  public String getFilingForm() {
    return filingForm;
  }

  public void setFilingForm(String filingForm) {
    this.filingForm = filingForm;
  }


  public ScheduleEEfile imageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
    return this;
  }

  /**
   *  An unique identifier for each page where the electronic or paper filing is reported. 
   * @return imageNumber
   */
  @javax.annotation.Nullable
  public String getImageNumber() {
    return imageNumber;
  }

  public void setImageNumber(String imageNumber) {
    this.imageNumber = imageNumber;
  }


  public ScheduleEEfile isNotice(Boolean isNotice) {
    this.isNotice = isNotice;
    return this;
  }

  /**
   * Get isNotice
   * @return isNotice
   */
  @javax.annotation.Nullable
  public Boolean getIsNotice() {
    return isNotice;
  }

  public void setIsNotice(Boolean isNotice) {
    this.isNotice = isNotice;
  }


  public ScheduleEEfile lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public ScheduleEEfile loadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
    return this;
  }

  /**
   * Get loadTimestamp
   * @return loadTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLoadTimestamp() {
    return loadTimestamp;
  }

  public void setLoadTimestamp(OffsetDateTime loadTimestamp) {
    this.loadTimestamp = loadTimestamp;
  }


  public ScheduleEEfile memoCode(String memoCode) {
    this.memoCode = memoCode;
    return this;
  }

  /**
   * Get memoCode
   * @return memoCode
   */
  @javax.annotation.Nullable
  public String getMemoCode() {
    return memoCode;
  }

  public void setMemoCode(String memoCode) {
    this.memoCode = memoCode;
  }


  public ScheduleEEfile memoText(String memoText) {
    this.memoText = memoText;
    return this;
  }

  /**
   * Get memoText
   * @return memoText
   */
  @javax.annotation.Nullable
  public String getMemoText() {
    return memoText;
  }

  public void setMemoText(String memoText) {
    this.memoText = memoText;
  }


  public ScheduleEEfile mostRecent(Boolean mostRecent) {
    this.mostRecent = mostRecent;
    return this;
  }

  /**
   *  Report is either new or is the most-recently filed amendment 
   * @return mostRecent
   */
  @javax.annotation.Nullable
  public Boolean getMostRecent() {
    return mostRecent;
  }

  public void setMostRecent(Boolean mostRecent) {
    this.mostRecent = mostRecent;
  }


  public ScheduleEEfile notarySignDate(LocalDate notarySignDate) {
    this.notarySignDate = notarySignDate;
    return this;
  }

  /**
   * Get notarySignDate
   * @return notarySignDate
   */
  @javax.annotation.Nullable
  public LocalDate getNotarySignDate() {
    return notarySignDate;
  }

  public void setNotarySignDate(LocalDate notarySignDate) {
    this.notarySignDate = notarySignDate;
  }


  public ScheduleEEfile officeTotalYtd(Float officeTotalYtd) {
    this.officeTotalYtd = officeTotalYtd;
    return this;
  }

  /**
   * Get officeTotalYtd
   * @return officeTotalYtd
   */
  @javax.annotation.Nullable
  public Float getOfficeTotalYtd() {
    return officeTotalYtd;
  }

  public void setOfficeTotalYtd(Float officeTotalYtd) {
    this.officeTotalYtd = officeTotalYtd;
  }


  public ScheduleEEfile payeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
    return this;
  }

  /**
   * Get payeeCity
   * @return payeeCity
   */
  @javax.annotation.Nullable
  public String getPayeeCity() {
    return payeeCity;
  }

  public void setPayeeCity(String payeeCity) {
    this.payeeCity = payeeCity;
  }


  public ScheduleEEfile payeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
    return this;
  }

  /**
   * Get payeeFirstName
   * @return payeeFirstName
   */
  @javax.annotation.Nullable
  public String getPayeeFirstName() {
    return payeeFirstName;
  }

  public void setPayeeFirstName(String payeeFirstName) {
    this.payeeFirstName = payeeFirstName;
  }


  public ScheduleEEfile payeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
    return this;
  }

  /**
   * Get payeeLastName
   * @return payeeLastName
   */
  @javax.annotation.Nullable
  public String getPayeeLastName() {
    return payeeLastName;
  }

  public void setPayeeLastName(String payeeLastName) {
    this.payeeLastName = payeeLastName;
  }


  public ScheduleEEfile payeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
    return this;
  }

  /**
   * Get payeeMiddleName
   * @return payeeMiddleName
   */
  @javax.annotation.Nullable
  public String getPayeeMiddleName() {
    return payeeMiddleName;
  }

  public void setPayeeMiddleName(String payeeMiddleName) {
    this.payeeMiddleName = payeeMiddleName;
  }


  public ScheduleEEfile payeeName(String payeeName) {
    this.payeeName = payeeName;
    return this;
  }

  /**
   * Get payeeName
   * @return payeeName
   */
  @javax.annotation.Nullable
  public String getPayeeName() {
    return payeeName;
  }

  public void setPayeeName(String payeeName) {
    this.payeeName = payeeName;
  }


  public ScheduleEEfile payeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
    return this;
  }

  /**
   * Get payeePrefix
   * @return payeePrefix
   */
  @javax.annotation.Nullable
  public String getPayeePrefix() {
    return payeePrefix;
  }

  public void setPayeePrefix(String payeePrefix) {
    this.payeePrefix = payeePrefix;
  }


  public ScheduleEEfile payeeState(String payeeState) {
    this.payeeState = payeeState;
    return this;
  }

  /**
   * Get payeeState
   * @return payeeState
   */
  @javax.annotation.Nullable
  public String getPayeeState() {
    return payeeState;
  }

  public void setPayeeState(String payeeState) {
    this.payeeState = payeeState;
  }


  public ScheduleEEfile payeeStreet1(String payeeStreet1) {
    this.payeeStreet1 = payeeStreet1;
    return this;
  }

  /**
   * Get payeeStreet1
   * @return payeeStreet1
   */
  @javax.annotation.Nullable
  public String getPayeeStreet1() {
    return payeeStreet1;
  }

  public void setPayeeStreet1(String payeeStreet1) {
    this.payeeStreet1 = payeeStreet1;
  }


  public ScheduleEEfile payeeStreet2(String payeeStreet2) {
    this.payeeStreet2 = payeeStreet2;
    return this;
  }

  /**
   * Get payeeStreet2
   * @return payeeStreet2
   */
  @javax.annotation.Nullable
  public String getPayeeStreet2() {
    return payeeStreet2;
  }

  public void setPayeeStreet2(String payeeStreet2) {
    this.payeeStreet2 = payeeStreet2;
  }


  public ScheduleEEfile payeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
    return this;
  }

  /**
   * Get payeeSuffix
   * @return payeeSuffix
   */
  @javax.annotation.Nullable
  public String getPayeeSuffix() {
    return payeeSuffix;
  }

  public void setPayeeSuffix(String payeeSuffix) {
    this.payeeSuffix = payeeSuffix;
  }


  public ScheduleEEfile payeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
    return this;
  }

  /**
   * Get payeeZip
   * @return payeeZip
   */
  @javax.annotation.Nullable
  public String getPayeeZip() {
    return payeeZip;
  }

  public void setPayeeZip(String payeeZip) {
    this.payeeZip = payeeZip;
  }


  public ScheduleEEfile pdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public ScheduleEEfile relatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
    return this;
  }

  /**
   * Get relatedLineNumber
   * @return relatedLineNumber
   */
  @javax.annotation.Nonnull
  public Integer getRelatedLineNumber() {
    return relatedLineNumber;
  }

  public void setRelatedLineNumber(Integer relatedLineNumber) {
    this.relatedLineNumber = relatedLineNumber;
  }


  public ScheduleEEfile reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * Get reportType
   * @return reportType
   */
  @javax.annotation.Nullable
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }


  public ScheduleEEfile supportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
    return this;
  }

  /**
   * Explains if the money was spent in order to support or oppose a candidate or candidates. (Coded S or O for support or oppose.) This indicator applies to independent expenditures and communication costs.
   * @return supportOpposeIndicator
   */
  @javax.annotation.Nullable
  public String getSupportOpposeIndicator() {
    return supportOpposeIndicator;
  }

  public void setSupportOpposeIndicator(String supportOpposeIndicator) {
    this.supportOpposeIndicator = supportOpposeIndicator;
  }


  public ScheduleEEfile transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleEEfile scheduleEEfile = (ScheduleEEfile) o;
    return Objects.equals(this.amendmentIndicator, scheduleEEfile.amendmentIndicator) &&
        Objects.equals(this.backReferenceScheduleName, scheduleEEfile.backReferenceScheduleName) &&
        Objects.equals(this.backReferenceTransactionId, scheduleEEfile.backReferenceTransactionId) &&
        Objects.equals(this.beginningImageNumber, scheduleEEfile.beginningImageNumber) &&
        Objects.equals(this.candidateFirstName, scheduleEEfile.candidateFirstName) &&
        Objects.equals(this.candidateId, scheduleEEfile.candidateId) &&
        Objects.equals(this.candidateMiddleName, scheduleEEfile.candidateMiddleName) &&
        Objects.equals(this.candidateName, scheduleEEfile.candidateName) &&
        Objects.equals(this.candidateOffice, scheduleEEfile.candidateOffice) &&
        Objects.equals(this.candidateOfficeDistrict, scheduleEEfile.candidateOfficeDistrict) &&
        Objects.equals(this.candidateOfficeState, scheduleEEfile.candidateOfficeState) &&
        Objects.equals(this.candidateParty, scheduleEEfile.candidateParty) &&
        Objects.equals(this.candidatePrefix, scheduleEEfile.candidatePrefix) &&
        Objects.equals(this.candidateSuffix, scheduleEEfile.candidateSuffix) &&
        Objects.equals(this.categoryCode, scheduleEEfile.categoryCode) &&
        Objects.equals(this.committee, scheduleEEfile.committee) &&
        Objects.equals(this.committeeId, scheduleEEfile.committeeId) &&
        Objects.equals(this.csvUrl, scheduleEEfile.csvUrl) &&
        Objects.equals(this.disseminationDate, scheduleEEfile.disseminationDate) &&
        Objects.equals(this.entityType, scheduleEEfile.entityType) &&
        Objects.equals(this.expenditureAmount, scheduleEEfile.expenditureAmount) &&
        Objects.equals(this.expenditureDate, scheduleEEfile.expenditureDate) &&
        Objects.equals(this.expenditureDescription, scheduleEEfile.expenditureDescription) &&
        Objects.equals(this.fecUrl, scheduleEEfile.fecUrl) &&
        Objects.equals(this.fileNumber, scheduleEEfile.fileNumber) &&
        Objects.equals(this.filerFirstName, scheduleEEfile.filerFirstName) &&
        Objects.equals(this.filerLastName, scheduleEEfile.filerLastName) &&
        Objects.equals(this.filerMiddleName, scheduleEEfile.filerMiddleName) &&
        Objects.equals(this.filerPrefix, scheduleEEfile.filerPrefix) &&
        Objects.equals(this.filerSuffix, scheduleEEfile.filerSuffix) &&
        Objects.equals(this.filing, scheduleEEfile.filing) &&
        Objects.equals(this.filingForm, scheduleEEfile.filingForm) &&
        Objects.equals(this.imageNumber, scheduleEEfile.imageNumber) &&
        Objects.equals(this.isNotice, scheduleEEfile.isNotice) &&
        Objects.equals(this.lineNumber, scheduleEEfile.lineNumber) &&
        Objects.equals(this.loadTimestamp, scheduleEEfile.loadTimestamp) &&
        Objects.equals(this.memoCode, scheduleEEfile.memoCode) &&
        Objects.equals(this.memoText, scheduleEEfile.memoText) &&
        Objects.equals(this.mostRecent, scheduleEEfile.mostRecent) &&
        Objects.equals(this.notarySignDate, scheduleEEfile.notarySignDate) &&
        Objects.equals(this.officeTotalYtd, scheduleEEfile.officeTotalYtd) &&
        Objects.equals(this.payeeCity, scheduleEEfile.payeeCity) &&
        Objects.equals(this.payeeFirstName, scheduleEEfile.payeeFirstName) &&
        Objects.equals(this.payeeLastName, scheduleEEfile.payeeLastName) &&
        Objects.equals(this.payeeMiddleName, scheduleEEfile.payeeMiddleName) &&
        Objects.equals(this.payeeName, scheduleEEfile.payeeName) &&
        Objects.equals(this.payeePrefix, scheduleEEfile.payeePrefix) &&
        Objects.equals(this.payeeState, scheduleEEfile.payeeState) &&
        Objects.equals(this.payeeStreet1, scheduleEEfile.payeeStreet1) &&
        Objects.equals(this.payeeStreet2, scheduleEEfile.payeeStreet2) &&
        Objects.equals(this.payeeSuffix, scheduleEEfile.payeeSuffix) &&
        Objects.equals(this.payeeZip, scheduleEEfile.payeeZip) &&
        Objects.equals(this.pdfUrl, scheduleEEfile.pdfUrl) &&
        Objects.equals(this.relatedLineNumber, scheduleEEfile.relatedLineNumber) &&
        Objects.equals(this.reportType, scheduleEEfile.reportType) &&
        Objects.equals(this.supportOpposeIndicator, scheduleEEfile.supportOpposeIndicator) &&
        Objects.equals(this.transactionId, scheduleEEfile.transactionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentIndicator, backReferenceScheduleName, backReferenceTransactionId, beginningImageNumber, candidateFirstName, candidateId, candidateMiddleName, candidateName, candidateOffice, candidateOfficeDistrict, candidateOfficeState, candidateParty, candidatePrefix, candidateSuffix, categoryCode, committee, committeeId, csvUrl, disseminationDate, entityType, expenditureAmount, expenditureDate, expenditureDescription, fecUrl, fileNumber, filerFirstName, filerLastName, filerMiddleName, filerPrefix, filerSuffix, filing, filingForm, imageNumber, isNotice, lineNumber, loadTimestamp, memoCode, memoText, mostRecent, notarySignDate, officeTotalYtd, payeeCity, payeeFirstName, payeeLastName, payeeMiddleName, payeeName, payeePrefix, payeeState, payeeStreet1, payeeStreet2, payeeSuffix, payeeZip, pdfUrl, relatedLineNumber, reportType, supportOpposeIndicator, transactionId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleEEfile {\n");
    sb.append("    amendmentIndicator: ").append(toIndentedString(amendmentIndicator)).append("\n");
    sb.append("    backReferenceScheduleName: ").append(toIndentedString(backReferenceScheduleName)).append("\n");
    sb.append("    backReferenceTransactionId: ").append(toIndentedString(backReferenceTransactionId)).append("\n");
    sb.append("    beginningImageNumber: ").append(toIndentedString(beginningImageNumber)).append("\n");
    sb.append("    candidateFirstName: ").append(toIndentedString(candidateFirstName)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    candidateMiddleName: ").append(toIndentedString(candidateMiddleName)).append("\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    candidateOffice: ").append(toIndentedString(candidateOffice)).append("\n");
    sb.append("    candidateOfficeDistrict: ").append(toIndentedString(candidateOfficeDistrict)).append("\n");
    sb.append("    candidateOfficeState: ").append(toIndentedString(candidateOfficeState)).append("\n");
    sb.append("    candidateParty: ").append(toIndentedString(candidateParty)).append("\n");
    sb.append("    candidatePrefix: ").append(toIndentedString(candidatePrefix)).append("\n");
    sb.append("    candidateSuffix: ").append(toIndentedString(candidateSuffix)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    committee: ").append(toIndentedString(committee)).append("\n");
    sb.append("    committeeId: ").append(toIndentedString(committeeId)).append("\n");
    sb.append("    csvUrl: ").append(toIndentedString(csvUrl)).append("\n");
    sb.append("    disseminationDate: ").append(toIndentedString(disseminationDate)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    expenditureAmount: ").append(toIndentedString(expenditureAmount)).append("\n");
    sb.append("    expenditureDate: ").append(toIndentedString(expenditureDate)).append("\n");
    sb.append("    expenditureDescription: ").append(toIndentedString(expenditureDescription)).append("\n");
    sb.append("    fecUrl: ").append(toIndentedString(fecUrl)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    filerFirstName: ").append(toIndentedString(filerFirstName)).append("\n");
    sb.append("    filerLastName: ").append(toIndentedString(filerLastName)).append("\n");
    sb.append("    filerMiddleName: ").append(toIndentedString(filerMiddleName)).append("\n");
    sb.append("    filerPrefix: ").append(toIndentedString(filerPrefix)).append("\n");
    sb.append("    filerSuffix: ").append(toIndentedString(filerSuffix)).append("\n");
    sb.append("    filing: ").append(toIndentedString(filing)).append("\n");
    sb.append("    filingForm: ").append(toIndentedString(filingForm)).append("\n");
    sb.append("    imageNumber: ").append(toIndentedString(imageNumber)).append("\n");
    sb.append("    isNotice: ").append(toIndentedString(isNotice)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    loadTimestamp: ").append(toIndentedString(loadTimestamp)).append("\n");
    sb.append("    memoCode: ").append(toIndentedString(memoCode)).append("\n");
    sb.append("    memoText: ").append(toIndentedString(memoText)).append("\n");
    sb.append("    mostRecent: ").append(toIndentedString(mostRecent)).append("\n");
    sb.append("    notarySignDate: ").append(toIndentedString(notarySignDate)).append("\n");
    sb.append("    officeTotalYtd: ").append(toIndentedString(officeTotalYtd)).append("\n");
    sb.append("    payeeCity: ").append(toIndentedString(payeeCity)).append("\n");
    sb.append("    payeeFirstName: ").append(toIndentedString(payeeFirstName)).append("\n");
    sb.append("    payeeLastName: ").append(toIndentedString(payeeLastName)).append("\n");
    sb.append("    payeeMiddleName: ").append(toIndentedString(payeeMiddleName)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    payeePrefix: ").append(toIndentedString(payeePrefix)).append("\n");
    sb.append("    payeeState: ").append(toIndentedString(payeeState)).append("\n");
    sb.append("    payeeStreet1: ").append(toIndentedString(payeeStreet1)).append("\n");
    sb.append("    payeeStreet2: ").append(toIndentedString(payeeStreet2)).append("\n");
    sb.append("    payeeSuffix: ").append(toIndentedString(payeeSuffix)).append("\n");
    sb.append("    payeeZip: ").append(toIndentedString(payeeZip)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    relatedLineNumber: ").append(toIndentedString(relatedLineNumber)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    supportOpposeIndicator: ").append(toIndentedString(supportOpposeIndicator)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendment_indicator");
    openapiFields.add("back_reference_schedule_name");
    openapiFields.add("back_reference_transaction_id");
    openapiFields.add("beginning_image_number");
    openapiFields.add("candidate_first_name");
    openapiFields.add("candidate_id");
    openapiFields.add("candidate_middle_name");
    openapiFields.add("candidate_name");
    openapiFields.add("candidate_office");
    openapiFields.add("candidate_office_district");
    openapiFields.add("candidate_office_state");
    openapiFields.add("candidate_party");
    openapiFields.add("candidate_prefix");
    openapiFields.add("candidate_suffix");
    openapiFields.add("category_code");
    openapiFields.add("committee");
    openapiFields.add("committee_id");
    openapiFields.add("csv_url");
    openapiFields.add("dissemination_date");
    openapiFields.add("entity_type");
    openapiFields.add("expenditure_amount");
    openapiFields.add("expenditure_date");
    openapiFields.add("expenditure_description");
    openapiFields.add("fec_url");
    openapiFields.add("file_number");
    openapiFields.add("filer_first_name");
    openapiFields.add("filer_last_name");
    openapiFields.add("filer_middle_name");
    openapiFields.add("filer_prefix");
    openapiFields.add("filer_suffix");
    openapiFields.add("filing");
    openapiFields.add("filing_form");
    openapiFields.add("image_number");
    openapiFields.add("is_notice");
    openapiFields.add("line_number");
    openapiFields.add("load_timestamp");
    openapiFields.add("memo_code");
    openapiFields.add("memo_text");
    openapiFields.add("most_recent");
    openapiFields.add("notary_sign_date");
    openapiFields.add("office_total_ytd");
    openapiFields.add("payee_city");
    openapiFields.add("payee_first_name");
    openapiFields.add("payee_last_name");
    openapiFields.add("payee_middle_name");
    openapiFields.add("payee_name");
    openapiFields.add("payee_prefix");
    openapiFields.add("payee_state");
    openapiFields.add("payee_street_1");
    openapiFields.add("payee_street_2");
    openapiFields.add("payee_suffix");
    openapiFields.add("payee_zip");
    openapiFields.add("pdf_url");
    openapiFields.add("related_line_number");
    openapiFields.add("report_type");
    openapiFields.add("support_oppose_indicator");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("file_number");
    openapiRequiredFields.add("related_line_number");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleEEfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleEEfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleEEfile is not found in the empty JSON string", ScheduleEEfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleEEfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleEEfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScheduleEEfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendment_indicator") != null && !jsonObj.get("amendment_indicator").isJsonNull()) && !jsonObj.get("amendment_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendment_indicator").toString()));
      }
      if ((jsonObj.get("back_reference_schedule_name") != null && !jsonObj.get("back_reference_schedule_name").isJsonNull()) && !jsonObj.get("back_reference_schedule_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_schedule_name").toString()));
      }
      if ((jsonObj.get("back_reference_transaction_id") != null && !jsonObj.get("back_reference_transaction_id").isJsonNull()) && !jsonObj.get("back_reference_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("back_reference_transaction_id").toString()));
      }
      if ((jsonObj.get("beginning_image_number") != null && !jsonObj.get("beginning_image_number").isJsonNull()) && !jsonObj.get("beginning_image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginning_image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginning_image_number").toString()));
      }
      if ((jsonObj.get("candidate_first_name") != null && !jsonObj.get("candidate_first_name").isJsonNull()) && !jsonObj.get("candidate_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_first_name").toString()));
      }
      if ((jsonObj.get("candidate_id") != null && !jsonObj.get("candidate_id").isJsonNull()) && !jsonObj.get("candidate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_id").toString()));
      }
      if ((jsonObj.get("candidate_middle_name") != null && !jsonObj.get("candidate_middle_name").isJsonNull()) && !jsonObj.get("candidate_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_middle_name").toString()));
      }
      if ((jsonObj.get("candidate_name") != null && !jsonObj.get("candidate_name").isJsonNull()) && !jsonObj.get("candidate_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_name").toString()));
      }
      if ((jsonObj.get("candidate_office") != null && !jsonObj.get("candidate_office").isJsonNull()) && !jsonObj.get("candidate_office").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office").toString()));
      }
      if ((jsonObj.get("candidate_office_district") != null && !jsonObj.get("candidate_office_district").isJsonNull()) && !jsonObj.get("candidate_office_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_district").toString()));
      }
      if ((jsonObj.get("candidate_office_state") != null && !jsonObj.get("candidate_office_state").isJsonNull()) && !jsonObj.get("candidate_office_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_office_state").toString()));
      }
      if ((jsonObj.get("candidate_party") != null && !jsonObj.get("candidate_party").isJsonNull()) && !jsonObj.get("candidate_party").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_party` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_party").toString()));
      }
      if ((jsonObj.get("candidate_prefix") != null && !jsonObj.get("candidate_prefix").isJsonNull()) && !jsonObj.get("candidate_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_prefix").toString()));
      }
      if ((jsonObj.get("candidate_suffix") != null && !jsonObj.get("candidate_suffix").isJsonNull()) && !jsonObj.get("candidate_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidate_suffix").toString()));
      }
      if ((jsonObj.get("category_code") != null && !jsonObj.get("category_code").isJsonNull()) && !jsonObj.get("category_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_code").toString()));
      }
      // validate the optional field `committee`
      if (jsonObj.get("committee") != null && !jsonObj.get("committee").isJsonNull()) {
        CommitteeHistory.validateJsonElement(jsonObj.get("committee"));
      }
      if ((jsonObj.get("committee_id") != null && !jsonObj.get("committee_id").isJsonNull()) && !jsonObj.get("committee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `committee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("committee_id").toString()));
      }
      if ((jsonObj.get("csv_url") != null && !jsonObj.get("csv_url").isJsonNull()) && !jsonObj.get("csv_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csv_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csv_url").toString()));
      }
      if ((jsonObj.get("entity_type") != null && !jsonObj.get("entity_type").isJsonNull()) && !jsonObj.get("entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_type").toString()));
      }
      if ((jsonObj.get("expenditure_description") != null && !jsonObj.get("expenditure_description").isJsonNull()) && !jsonObj.get("expenditure_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expenditure_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expenditure_description").toString()));
      }
      if ((jsonObj.get("fec_url") != null && !jsonObj.get("fec_url").isJsonNull()) && !jsonObj.get("fec_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fec_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fec_url").toString()));
      }
      if ((jsonObj.get("filer_first_name") != null && !jsonObj.get("filer_first_name").isJsonNull()) && !jsonObj.get("filer_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_first_name").toString()));
      }
      if ((jsonObj.get("filer_last_name") != null && !jsonObj.get("filer_last_name").isJsonNull()) && !jsonObj.get("filer_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_last_name").toString()));
      }
      if ((jsonObj.get("filer_middle_name") != null && !jsonObj.get("filer_middle_name").isJsonNull()) && !jsonObj.get("filer_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_middle_name").toString()));
      }
      if ((jsonObj.get("filer_prefix") != null && !jsonObj.get("filer_prefix").isJsonNull()) && !jsonObj.get("filer_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_prefix").toString()));
      }
      if ((jsonObj.get("filer_suffix") != null && !jsonObj.get("filer_suffix").isJsonNull()) && !jsonObj.get("filer_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filer_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filer_suffix").toString()));
      }
      // validate the optional field `filing`
      if (jsonObj.get("filing") != null && !jsonObj.get("filing").isJsonNull()) {
        EFilings.validateJsonElement(jsonObj.get("filing"));
      }
      if ((jsonObj.get("filing_form") != null && !jsonObj.get("filing_form").isJsonNull()) && !jsonObj.get("filing_form").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_form` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_form").toString()));
      }
      if ((jsonObj.get("image_number") != null && !jsonObj.get("image_number").isJsonNull()) && !jsonObj.get("image_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_number").toString()));
      }
      if ((jsonObj.get("line_number") != null && !jsonObj.get("line_number").isJsonNull()) && !jsonObj.get("line_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("line_number").toString()));
      }
      if ((jsonObj.get("memo_code") != null && !jsonObj.get("memo_code").isJsonNull()) && !jsonObj.get("memo_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_code").toString()));
      }
      if ((jsonObj.get("memo_text") != null && !jsonObj.get("memo_text").isJsonNull()) && !jsonObj.get("memo_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo_text").toString()));
      }
      if ((jsonObj.get("payee_city") != null && !jsonObj.get("payee_city").isJsonNull()) && !jsonObj.get("payee_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_city").toString()));
      }
      if ((jsonObj.get("payee_first_name") != null && !jsonObj.get("payee_first_name").isJsonNull()) && !jsonObj.get("payee_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_first_name").toString()));
      }
      if ((jsonObj.get("payee_last_name") != null && !jsonObj.get("payee_last_name").isJsonNull()) && !jsonObj.get("payee_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_last_name").toString()));
      }
      if ((jsonObj.get("payee_middle_name") != null && !jsonObj.get("payee_middle_name").isJsonNull()) && !jsonObj.get("payee_middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_middle_name").toString()));
      }
      if ((jsonObj.get("payee_name") != null && !jsonObj.get("payee_name").isJsonNull()) && !jsonObj.get("payee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_name").toString()));
      }
      if ((jsonObj.get("payee_prefix") != null && !jsonObj.get("payee_prefix").isJsonNull()) && !jsonObj.get("payee_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_prefix").toString()));
      }
      if ((jsonObj.get("payee_state") != null && !jsonObj.get("payee_state").isJsonNull()) && !jsonObj.get("payee_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_state").toString()));
      }
      if ((jsonObj.get("payee_street_1") != null && !jsonObj.get("payee_street_1").isJsonNull()) && !jsonObj.get("payee_street_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_street_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_street_1").toString()));
      }
      if ((jsonObj.get("payee_street_2") != null && !jsonObj.get("payee_street_2").isJsonNull()) && !jsonObj.get("payee_street_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_street_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_street_2").toString()));
      }
      if ((jsonObj.get("payee_suffix") != null && !jsonObj.get("payee_suffix").isJsonNull()) && !jsonObj.get("payee_suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_suffix").toString()));
      }
      if ((jsonObj.get("payee_zip") != null && !jsonObj.get("payee_zip").isJsonNull()) && !jsonObj.get("payee_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payee_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payee_zip").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("report_type") != null && !jsonObj.get("report_type").isJsonNull()) && !jsonObj.get("report_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_type").toString()));
      }
      if ((jsonObj.get("support_oppose_indicator") != null && !jsonObj.get("support_oppose_indicator").isJsonNull()) && !jsonObj.get("support_oppose_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_oppose_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_oppose_indicator").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleEEfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleEEfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleEEfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleEEfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleEEfile>() {
           @Override
           public void write(JsonWriter out, ScheduleEEfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleEEfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleEEfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleEEfile
   * @throws IOException if the JSON string is invalid with respect to ScheduleEEfile
   */
  public static ScheduleEEfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleEEfile.class);
  }

  /**
   * Convert an instance of ScheduleEEfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

