/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.CommitteeHistory();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommitteeHistory', function() {
    it('should create an instance of CommitteeHistory', function() {
      // uncomment below and update the code to test CommitteeHistory
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be.a(OpenFec.CommitteeHistory);
    });

    it('should have the property affiliatedCommitteeName (base name: "affiliated_committee_name")', function() {
      // uncomment below and update the code to test the property affiliatedCommitteeName
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property candidateIds (base name: "candidate_ids")', function() {
      // uncomment below and update the code to test the property candidateIds
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property committeeType (base name: "committee_type")', function() {
      // uncomment below and update the code to test the property committeeType
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property committeeTypeFull (base name: "committee_type_full")', function() {
      // uncomment below and update the code to test the property committeeTypeFull
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property cycle (base name: "cycle")', function() {
      // uncomment below and update the code to test the property cycle
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property cycles (base name: "cycles")', function() {
      // uncomment below and update the code to test the property cycles
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property cyclesHasActivity (base name: "cycles_has_activity")', function() {
      // uncomment below and update the code to test the property cyclesHasActivity
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property cyclesHasFinancial (base name: "cycles_has_financial")', function() {
      // uncomment below and update the code to test the property cyclesHasFinancial
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property designation (base name: "designation")', function() {
      // uncomment below and update the code to test the property designation
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property designationFull (base name: "designation_full")', function() {
      // uncomment below and update the code to test the property designationFull
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property filingFrequency (base name: "filing_frequency")', function() {
      // uncomment below and update the code to test the property filingFrequency
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property firstF1Date (base name: "first_f1_date")', function() {
      // uncomment below and update the code to test the property firstF1Date
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property firstFileDate (base name: "first_file_date")', function() {
      // uncomment below and update the code to test the property firstFileDate
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property jfcCommittee (base name: "jfc_committee")', function() {
      // uncomment below and update the code to test the property jfcCommittee
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property lastCycleHasActivity (base name: "last_cycle_has_activity")', function() {
      // uncomment below and update the code to test the property lastCycleHasActivity
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property lastCycleHasFinancial (base name: "last_cycle_has_financial")', function() {
      // uncomment below and update the code to test the property lastCycleHasFinancial
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property lastF1Date (base name: "last_f1_date")', function() {
      // uncomment below and update the code to test the property lastF1Date
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property lastFileDate (base name: "last_file_date")', function() {
      // uncomment below and update the code to test the property lastFileDate
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property organizationType (base name: "organization_type")', function() {
      // uncomment below and update the code to test the property organizationType
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property organizationTypeFull (base name: "organization_type_full")', function() {
      // uncomment below and update the code to test the property organizationTypeFull
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property party (base name: "party")', function() {
      // uncomment below and update the code to test the property party
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property partyFull (base name: "party_full")', function() {
      // uncomment below and update the code to test the property partyFull
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property stateFull (base name: "state_full")', function() {
      // uncomment below and update the code to test the property stateFull
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property street1 (base name: "street_1")', function() {
      // uncomment below and update the code to test the property street1
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property street2 (base name: "street_2")', function() {
      // uncomment below and update the code to test the property street2
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property treasurerName (base name: "treasurer_name")', function() {
      // uncomment below and update the code to test the property treasurerName
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new OpenFec.CommitteeHistory();
      //expect(instance).to.be();
    });

  });

}));
