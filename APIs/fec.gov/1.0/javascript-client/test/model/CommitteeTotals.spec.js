/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.CommitteeTotals();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommitteeTotals', function() {
    it('should create an instance of CommitteeTotals', function() {
      // uncomment below and update the code to test CommitteeTotals
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be.a(OpenFec.CommitteeTotals);
    });

    it('should have the property allLoansReceived (base name: "all_loans_received")', function() {
      // uncomment below and update the code to test the property allLoansReceived
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property allOtherLoans (base name: "all_other_loans")', function() {
      // uncomment below and update the code to test the property allOtherLoans
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property allocatedFederalElectionLevinShare (base name: "allocated_federal_election_levin_share")', function() {
      // uncomment below and update the code to test the property allocatedFederalElectionLevinShare
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property candidateContribution (base name: "candidate_contribution")', function() {
      // uncomment below and update the code to test the property candidateContribution
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property cashOnHandBeginningPeriod (base name: "cash_on_hand_beginning_period")', function() {
      // uncomment below and update the code to test the property cashOnHandBeginningPeriod
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeDesignation (base name: "committee_designation")', function() {
      // uncomment below and update the code to test the property committeeDesignation
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeDesignationFull (base name: "committee_designation_full")', function() {
      // uncomment below and update the code to test the property committeeDesignationFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeName (base name: "committee_name")', function() {
      // uncomment below and update the code to test the property committeeName
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeState (base name: "committee_state")', function() {
      // uncomment below and update the code to test the property committeeState
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeType (base name: "committee_type")', function() {
      // uncomment below and update the code to test the property committeeType
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property committeeTypeFull (base name: "committee_type_full")', function() {
      // uncomment below and update the code to test the property committeeTypeFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property contributionRefunds (base name: "contribution_refunds")', function() {
      // uncomment below and update the code to test the property contributionRefunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property contributions (base name: "contributions")', function() {
      // uncomment below and update the code to test the property contributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property contributionsIeAndPartyExpendituresMadePercent (base name: "contributions_ie_and_party_expenditures_made_percent")', function() {
      // uncomment below and update the code to test the property contributionsIeAndPartyExpendituresMadePercent
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property conventionExp (base name: "convention_exp")', function() {
      // uncomment below and update the code to test the property conventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property coordinatedExpendituresByPartyCommittee (base name: "coordinated_expenditures_by_party_committee")', function() {
      // uncomment below and update the code to test the property coordinatedExpendituresByPartyCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property coverageEndDate (base name: "coverage_end_date")', function() {
      // uncomment below and update the code to test the property coverageEndDate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property coverageStartDate (base name: "coverage_start_date")', function() {
      // uncomment below and update the code to test the property coverageStartDate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property cycle (base name: "cycle")', function() {
      // uncomment below and update the code to test the property cycle
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property disbursements (base name: "disbursements")', function() {
      // uncomment below and update the code to test the property disbursements
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property exemptLegalAccountingDisbursement (base name: "exempt_legal_accounting_disbursement")', function() {
      // uncomment below and update the code to test the property exemptLegalAccountingDisbursement
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property expPriorYearsSubjectLimits (base name: "exp_prior_years_subject_limits")', function() {
      // uncomment below and update the code to test the property expPriorYearsSubjectLimits
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property expSubjectLimits (base name: "exp_subject_limits")', function() {
      // uncomment below and update the code to test the property expSubjectLimits
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedCandidateCommitteeContributions (base name: "fed_candidate_committee_contributions")', function() {
      // uncomment below and update the code to test the property fedCandidateCommitteeContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedCandidateContributionRefunds (base name: "fed_candidate_contribution_refunds")', function() {
      // uncomment below and update the code to test the property fedCandidateContributionRefunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedDisbursements (base name: "fed_disbursements")', function() {
      // uncomment below and update the code to test the property fedDisbursements
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedElectionActivity (base name: "fed_election_activity")', function() {
      // uncomment below and update the code to test the property fedElectionActivity
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedOperatingExpenditures (base name: "fed_operating_expenditures")', function() {
      // uncomment below and update the code to test the property fedOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fedReceipts (base name: "fed_receipts")', function() {
      // uncomment below and update the code to test the property fedReceipts
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property federalFunds (base name: "federal_funds")', function() {
      // uncomment below and update the code to test the property federalFunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property filingFrequency (base name: "filing_frequency")', function() {
      // uncomment below and update the code to test the property filingFrequency
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property filingFrequencyFull (base name: "filing_frequency_full")', function() {
      // uncomment below and update the code to test the property filingFrequencyFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property firstF1Date (base name: "first_f1_date")', function() {
      // uncomment below and update the code to test the property firstF1Date
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property firstFileDate (base name: "first_file_date")', function() {
      // uncomment below and update the code to test the property firstFileDate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property fundraisingDisbursements (base name: "fundraising_disbursements")', function() {
      // uncomment below and update the code to test the property fundraisingDisbursements
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property independentExpenditures (base name: "independent_expenditures")', function() {
      // uncomment below and update the code to test the property independentExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property individualContributions (base name: "individual_contributions")', function() {
      // uncomment below and update the code to test the property individualContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property individualContributionsPercent (base name: "individual_contributions_percent")', function() {
      // uncomment below and update the code to test the property individualContributionsPercent
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property individualItemizedContributions (base name: "individual_itemized_contributions")', function() {
      // uncomment below and update the code to test the property individualItemizedContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property individualUnitemizedContributions (base name: "individual_unitemized_contributions")', function() {
      // uncomment below and update the code to test the property individualUnitemizedContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property itemizedConventionExp (base name: "itemized_convention_exp")', function() {
      // uncomment below and update the code to test the property itemizedConventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property itemizedOtherDisb (base name: "itemized_other_disb")', function() {
      // uncomment below and update the code to test the property itemizedOtherDisb
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property itemizedOtherIncome (base name: "itemized_other_income")', function() {
      // uncomment below and update the code to test the property itemizedOtherIncome
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property itemizedOtherRefunds (base name: "itemized_other_refunds")', function() {
      // uncomment below and update the code to test the property itemizedOtherRefunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property itemizedRefundsRelatingConventionExp (base name: "itemized_refunds_relating_convention_exp")', function() {
      // uncomment below and update the code to test the property itemizedRefundsRelatingConventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastBeginningImageNumber (base name: "last_beginning_image_number")', function() {
      // uncomment below and update the code to test the property lastBeginningImageNumber
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastCashOnHandEndPeriod (base name: "last_cash_on_hand_end_period")', function() {
      // uncomment below and update the code to test the property lastCashOnHandEndPeriod
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastDebtsOwedByCommittee (base name: "last_debts_owed_by_committee")', function() {
      // uncomment below and update the code to test the property lastDebtsOwedByCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastDebtsOwedToCommittee (base name: "last_debts_owed_to_committee")', function() {
      // uncomment below and update the code to test the property lastDebtsOwedToCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastReportTypeFull (base name: "last_report_type_full")', function() {
      // uncomment below and update the code to test the property lastReportTypeFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property lastReportYear (base name: "last_report_year")', function() {
      // uncomment below and update the code to test the property lastReportYear
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loanRepayments (base name: "loan_repayments")', function() {
      // uncomment below and update the code to test the property loanRepayments
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsCandidateLoans (base name: "loan_repayments_candidate_loans")', function() {
      // uncomment below and update the code to test the property loanRepaymentsCandidateLoans
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsMade (base name: "loan_repayments_made")', function() {
      // uncomment below and update the code to test the property loanRepaymentsMade
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsOtherLoans (base name: "loan_repayments_other_loans")', function() {
      // uncomment below and update the code to test the property loanRepaymentsOtherLoans
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsReceived (base name: "loan_repayments_received")', function() {
      // uncomment below and update the code to test the property loanRepaymentsReceived
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loans (base name: "loans")', function() {
      // uncomment below and update the code to test the property loans
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansAndLoanRepaymentsMade (base name: "loans_and_loan_repayments_made")', function() {
      // uncomment below and update the code to test the property loansAndLoanRepaymentsMade
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansAndLoanRepaymentsReceived (base name: "loans_and_loan_repayments_received")', function() {
      // uncomment below and update the code to test the property loansAndLoanRepaymentsReceived
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansMade (base name: "loans_made")', function() {
      // uncomment below and update the code to test the property loansMade
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansMadeByCandidate (base name: "loans_made_by_candidate")', function() {
      // uncomment below and update the code to test the property loansMadeByCandidate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansReceived (base name: "loans_received")', function() {
      // uncomment below and update the code to test the property loansReceived
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property loansReceivedFromCandidate (base name: "loans_received_from_candidate")', function() {
      // uncomment below and update the code to test the property loansReceivedFromCandidate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property netContributions (base name: "net_contributions")', function() {
      // uncomment below and update the code to test the property netContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property netOperatingExpenditures (base name: "net_operating_expenditures")', function() {
      // uncomment below and update the code to test the property netOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property nonAllocatedFedElectionActivity (base name: "non_allocated_fed_election_activity")', function() {
      // uncomment below and update the code to test the property nonAllocatedFedElectionActivity
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToFundraisingExpenditures (base name: "offsets_to_fundraising_expenditures")', function() {
      // uncomment below and update the code to test the property offsetsToFundraisingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToLegalAccounting (base name: "offsets_to_legal_accounting")', function() {
      // uncomment below and update the code to test the property offsetsToLegalAccounting
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToOperatingExpenditures (base name: "offsets_to_operating_expenditures")', function() {
      // uncomment below and update the code to test the property offsetsToOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property operatingExpenditures (base name: "operating_expenditures")', function() {
      // uncomment below and update the code to test the property operatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property operatingExpendituresPercent (base name: "operating_expenditures_percent")', function() {
      // uncomment below and update the code to test the property operatingExpendituresPercent
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property organizationType (base name: "organization_type")', function() {
      // uncomment below and update the code to test the property organizationType
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property organizationTypeFull (base name: "organization_type_full")', function() {
      // uncomment below and update the code to test the property organizationTypeFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherDisbursements (base name: "other_disbursements")', function() {
      // uncomment below and update the code to test the property otherDisbursements
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherFedOperatingExpenditures (base name: "other_fed_operating_expenditures")', function() {
      // uncomment below and update the code to test the property otherFedOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherFedReceipts (base name: "other_fed_receipts")', function() {
      // uncomment below and update the code to test the property otherFedReceipts
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherLoansReceived (base name: "other_loans_received")', function() {
      // uncomment below and update the code to test the property otherLoansReceived
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherPoliticalCommitteeContributions (base name: "other_political_committee_contributions")', function() {
      // uncomment below and update the code to test the property otherPoliticalCommitteeContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherReceipts (base name: "other_receipts")', function() {
      // uncomment below and update the code to test the property otherReceipts
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property otherRefunds (base name: "other_refunds")', function() {
      // uncomment below and update the code to test the property otherRefunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property partyAndOtherCommitteeContributionsPercent (base name: "party_and_other_committee_contributions_percent")', function() {
      // uncomment below and update the code to test the property partyAndOtherCommitteeContributionsPercent
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property partyFull (base name: "party_full")', function() {
      // uncomment below and update the code to test the property partyFull
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property pdfUrl (base name: "pdf_url")', function() {
      // uncomment below and update the code to test the property pdfUrl
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property politicalPartyCommitteeContributions (base name: "political_party_committee_contributions")', function() {
      // uncomment below and update the code to test the property politicalPartyCommitteeContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property receipts (base name: "receipts")', function() {
      // uncomment below and update the code to test the property receipts
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property refundedIndividualContributions (base name: "refunded_individual_contributions")', function() {
      // uncomment below and update the code to test the property refundedIndividualContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property refundedOtherPoliticalCommitteeContributions (base name: "refunded_other_political_committee_contributions")', function() {
      // uncomment below and update the code to test the property refundedOtherPoliticalCommitteeContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property refundedPoliticalPartyCommitteeContributions (base name: "refunded_political_party_committee_contributions")', function() {
      // uncomment below and update the code to test the property refundedPoliticalPartyCommitteeContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property refundsRelatingConventionExp (base name: "refunds_relating_convention_exp")', function() {
      // uncomment below and update the code to test the property refundsRelatingConventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property repaymentsLoansMadeByCandidate (base name: "repayments_loans_made_by_candidate")', function() {
      // uncomment below and update the code to test the property repaymentsLoansMadeByCandidate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property repaymentsOtherLoans (base name: "repayments_other_loans")', function() {
      // uncomment below and update the code to test the property repaymentsOtherLoans
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property reportForm (base name: "report_form")', function() {
      // uncomment below and update the code to test the property reportForm
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property sharedFedActivity (base name: "shared_fed_activity")', function() {
      // uncomment below and update the code to test the property sharedFedActivity
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property sharedFedActivityNonfed (base name: "shared_fed_activity_nonfed")', function() {
      // uncomment below and update the code to test the property sharedFedActivityNonfed
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property sharedFedOperatingExpenditures (base name: "shared_fed_operating_expenditures")', function() {
      // uncomment below and update the code to test the property sharedFedOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property sharedNonfedOperatingExpenditures (base name: "shared_nonfed_operating_expenditures")', function() {
      // uncomment below and update the code to test the property sharedNonfedOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property totalExpSubjectLimits (base name: "total_exp_subject_limits")', function() {
      // uncomment below and update the code to test the property totalExpSubjectLimits
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property totalIndependentContributions (base name: "total_independent_contributions")', function() {
      // uncomment below and update the code to test the property totalIndependentContributions
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property totalIndependentExpenditures (base name: "total_independent_expenditures")', function() {
      // uncomment below and update the code to test the property totalIndependentExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property totalOffsetsToOperatingExpenditures (base name: "total_offsets_to_operating_expenditures")', function() {
      // uncomment below and update the code to test the property totalOffsetsToOperatingExpenditures
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property totalTransfers (base name: "total_transfers")', function() {
      // uncomment below and update the code to test the property totalTransfers
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transactionCoverageDate (base name: "transaction_coverage_date")', function() {
      // uncomment below and update the code to test the property transactionCoverageDate
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromAffiliatedCommittee (base name: "transfers_from_affiliated_committee")', function() {
      // uncomment below and update the code to test the property transfersFromAffiliatedCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromAffiliatedParty (base name: "transfers_from_affiliated_party")', function() {
      // uncomment below and update the code to test the property transfersFromAffiliatedParty
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromNonfedAccount (base name: "transfers_from_nonfed_account")', function() {
      // uncomment below and update the code to test the property transfersFromNonfedAccount
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromNonfedLevin (base name: "transfers_from_nonfed_levin")', function() {
      // uncomment below and update the code to test the property transfersFromNonfedLevin
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromOtherAuthorizedCommittee (base name: "transfers_from_other_authorized_committee")', function() {
      // uncomment below and update the code to test the property transfersFromOtherAuthorizedCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersToAffiliatedCommittee (base name: "transfers_to_affiliated_committee")', function() {
      // uncomment below and update the code to test the property transfersToAffiliatedCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property transfersToOtherAuthorizedCommittee (base name: "transfers_to_other_authorized_committee")', function() {
      // uncomment below and update the code to test the property transfersToOtherAuthorizedCommittee
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property treasurerName (base name: "treasurer_name")', function() {
      // uncomment below and update the code to test the property treasurerName
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property unitemizedConventionExp (base name: "unitemized_convention_exp")', function() {
      // uncomment below and update the code to test the property unitemizedConventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property unitemizedOtherDisb (base name: "unitemized_other_disb")', function() {
      // uncomment below and update the code to test the property unitemizedOtherDisb
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property unitemizedOtherIncome (base name: "unitemized_other_income")', function() {
      // uncomment below and update the code to test the property unitemizedOtherIncome
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property unitemizedOtherRefunds (base name: "unitemized_other_refunds")', function() {
      // uncomment below and update the code to test the property unitemizedOtherRefunds
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

    it('should have the property unitemizedRefundsRelatingConventionExp (base name: "unitemized_refunds_relating_convention_exp")', function() {
      // uncomment below and update the code to test the property unitemizedRefundsRelatingConventionExp
      //var instance = new OpenFec.CommitteeTotals();
      //expect(instance).to.be();
    });

  });

}));
