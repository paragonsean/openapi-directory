/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.Filings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Filings', function() {
    it('should create an instance of Filings', function() {
      // uncomment below and update the code to test Filings
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be.a(OpenFec.Filings);
    });

    it('should have the property additionalBankNames (base name: "additional_bank_names")', function() {
      // uncomment below and update the code to test the property additionalBankNames
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property amendmentChain (base name: "amendment_chain")', function() {
      // uncomment below and update the code to test the property amendmentChain
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property amendmentIndicator (base name: "amendment_indicator")', function() {
      // uncomment below and update the code to test the property amendmentIndicator
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property amendmentVersion (base name: "amendment_version")', function() {
      // uncomment below and update the code to test the property amendmentVersion
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryCity (base name: "bank_depository_city")', function() {
      // uncomment below and update the code to test the property bankDepositoryCity
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryName (base name: "bank_depository_name")', function() {
      // uncomment below and update the code to test the property bankDepositoryName
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryState (base name: "bank_depository_state")', function() {
      // uncomment below and update the code to test the property bankDepositoryState
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryStreet1 (base name: "bank_depository_street_1")', function() {
      // uncomment below and update the code to test the property bankDepositoryStreet1
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryStreet2 (base name: "bank_depository_street_2")', function() {
      // uncomment below and update the code to test the property bankDepositoryStreet2
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property bankDepositoryZip (base name: "bank_depository_zip")', function() {
      // uncomment below and update the code to test the property bankDepositoryZip
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property beginningImageNumber (base name: "beginning_image_number")', function() {
      // uncomment below and update the code to test the property beginningImageNumber
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property candidateId (base name: "candidate_id")', function() {
      // uncomment below and update the code to test the property candidateId
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property candidateName (base name: "candidate_name")', function() {
      // uncomment below and update the code to test the property candidateName
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property cashOnHandBeginningPeriod (base name: "cash_on_hand_beginning_period")', function() {
      // uncomment below and update the code to test the property cashOnHandBeginningPeriod
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property cashOnHandEndPeriod (base name: "cash_on_hand_end_period")', function() {
      // uncomment below and update the code to test the property cashOnHandEndPeriod
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property committeeName (base name: "committee_name")', function() {
      // uncomment below and update the code to test the property committeeName
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property committeeType (base name: "committee_type")', function() {
      // uncomment below and update the code to test the property committeeType
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property coverageEndDate (base name: "coverage_end_date")', function() {
      // uncomment below and update the code to test the property coverageEndDate
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property coverageStartDate (base name: "coverage_start_date")', function() {
      // uncomment below and update the code to test the property coverageStartDate
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property csvUrl (base name: "csv_url")', function() {
      // uncomment below and update the code to test the property csvUrl
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property cycle (base name: "cycle")', function() {
      // uncomment below and update the code to test the property cycle
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property debtsOwedByCommittee (base name: "debts_owed_by_committee")', function() {
      // uncomment below and update the code to test the property debtsOwedByCommittee
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property debtsOwedToCommittee (base name: "debts_owed_to_committee")', function() {
      // uncomment below and update the code to test the property debtsOwedToCommittee
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property documentDescription (base name: "document_description")', function() {
      // uncomment below and update the code to test the property documentDescription
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property documentType (base name: "document_type")', function() {
      // uncomment below and update the code to test the property documentType
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property documentTypeFull (base name: "document_type_full")', function() {
      // uncomment below and update the code to test the property documentTypeFull
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property electionYear (base name: "election_year")', function() {
      // uncomment below and update the code to test the property electionYear
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property endingImageNumber (base name: "ending_image_number")', function() {
      // uncomment below and update the code to test the property endingImageNumber
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property fecFileId (base name: "fec_file_id")', function() {
      // uncomment below and update the code to test the property fecFileId
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property fecUrl (base name: "fec_url")', function() {
      // uncomment below and update the code to test the property fecUrl
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property fileNumber (base name: "file_number")', function() {
      // uncomment below and update the code to test the property fileNumber
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property formCategory (base name: "form_category")', function() {
      // uncomment below and update the code to test the property formCategory
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property formType (base name: "form_type")', function() {
      // uncomment below and update the code to test the property formType
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property housePersonalFunds (base name: "house_personal_funds")', function() {
      // uncomment below and update the code to test the property housePersonalFunds
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property htmlUrl (base name: "html_url")', function() {
      // uncomment below and update the code to test the property htmlUrl
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property isAmended (base name: "is_amended")', function() {
      // uncomment below and update the code to test the property isAmended
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property meansFiled (base name: "means_filed")', function() {
      // uncomment below and update the code to test the property meansFiled
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property mostRecent (base name: "most_recent")', function() {
      // uncomment below and update the code to test the property mostRecent
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property mostRecentFileNumber (base name: "most_recent_file_number")', function() {
      // uncomment below and update the code to test the property mostRecentFileNumber
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property netDonations (base name: "net_donations")', function() {
      // uncomment below and update the code to test the property netDonations
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property office (base name: "office")', function() {
      // uncomment below and update the code to test the property office
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property oppositionPersonalFunds (base name: "opposition_personal_funds")', function() {
      // uncomment below and update the code to test the property oppositionPersonalFunds
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property pages (base name: "pages")', function() {
      // uncomment below and update the code to test the property pages
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property party (base name: "party")', function() {
      // uncomment below and update the code to test the property party
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property pdfUrl (base name: "pdf_url")', function() {
      // uncomment below and update the code to test the property pdfUrl
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property previousFileNumber (base name: "previous_file_number")', function() {
      // uncomment below and update the code to test the property previousFileNumber
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property primaryGeneralIndicator (base name: "primary_general_indicator")', function() {
      // uncomment below and update the code to test the property primaryGeneralIndicator
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property receiptDate (base name: "receipt_date")', function() {
      // uncomment below and update the code to test the property receiptDate
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "report_type")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property reportTypeFull (base name: "report_type_full")', function() {
      // uncomment below and update the code to test the property reportTypeFull
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property reportYear (base name: "report_year")', function() {
      // uncomment below and update the code to test the property reportYear
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property requestType (base name: "request_type")', function() {
      // uncomment below and update the code to test the property requestType
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property senatePersonalFunds (base name: "senate_personal_funds")', function() {
      // uncomment below and update the code to test the property senatePersonalFunds
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property subId (base name: "sub_id")', function() {
      // uncomment below and update the code to test the property subId
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property totalCommunicationCost (base name: "total_communication_cost")', function() {
      // uncomment below and update the code to test the property totalCommunicationCost
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property totalDisbursements (base name: "total_disbursements")', function() {
      // uncomment below and update the code to test the property totalDisbursements
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property totalIndependentExpenditures (base name: "total_independent_expenditures")', function() {
      // uncomment below and update the code to test the property totalIndependentExpenditures
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property totalIndividualContributions (base name: "total_individual_contributions")', function() {
      // uncomment below and update the code to test the property totalIndividualContributions
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property totalReceipts (base name: "total_receipts")', function() {
      // uncomment below and update the code to test the property totalReceipts
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property treasurerName (base name: "treasurer_name")', function() {
      // uncomment below and update the code to test the property treasurerName
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

    it('should have the property updateDate (base name: "update_date")', function() {
      // uncomment below and update the code to test the property updateDate
      //var instance = new OpenFec.Filings();
      //expect(instance).to.be();
    });

  });

}));
