/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.ScheduleBEfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ScheduleBEfile', function() {
    it('should create an instance of ScheduleBEfile', function() {
      // uncomment below and update the code to test ScheduleBEfile
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be.a(OpenFec.ScheduleBEfile);
    });

    it('should have the property amendmentIndicator (base name: "amendment_indicator")', function() {
      // uncomment below and update the code to test the property amendmentIndicator
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property backReferenceScheduleName (base name: "back_reference_schedule_name")', function() {
      // uncomment below and update the code to test the property backReferenceScheduleName
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property backReferenceTransactionId (base name: "back_reference_transaction_id")', function() {
      // uncomment below and update the code to test the property backReferenceTransactionId
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property beginningImageNumber (base name: "beginning_image_number")', function() {
      // uncomment below and update the code to test the property beginningImageNumber
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property beneficiaryCommitteeName (base name: "beneficiary_committee_name")', function() {
      // uncomment below and update the code to test the property beneficiaryCommitteeName
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property candidateOffice (base name: "candidate_office")', function() {
      // uncomment below and update the code to test the property candidateOffice
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property candidateOfficeDistrict (base name: "candidate_office_district")', function() {
      // uncomment below and update the code to test the property candidateOfficeDistrict
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property committee (base name: "committee")', function() {
      // uncomment below and update the code to test the property committee
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property csvUrl (base name: "csv_url")', function() {
      // uncomment below and update the code to test the property csvUrl
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property disbursementAmount (base name: "disbursement_amount")', function() {
      // uncomment below and update the code to test the property disbursementAmount
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property disbursementDate (base name: "disbursement_date")', function() {
      // uncomment below and update the code to test the property disbursementDate
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property disbursementDescription (base name: "disbursement_description")', function() {
      // uncomment below and update the code to test the property disbursementDescription
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property disbursementType (base name: "disbursement_type")', function() {
      // uncomment below and update the code to test the property disbursementType
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entity_type")', function() {
      // uncomment below and update the code to test the property entityType
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property fecUrl (base name: "fec_url")', function() {
      // uncomment below and update the code to test the property fecUrl
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property fileNumber (base name: "file_number")', function() {
      // uncomment below and update the code to test the property fileNumber
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property filing (base name: "filing")', function() {
      // uncomment below and update the code to test the property filing
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property imageNumber (base name: "image_number")', function() {
      // uncomment below and update the code to test the property imageNumber
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property isNotice (base name: "is_notice")', function() {
      // uncomment below and update the code to test the property isNotice
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property lineNumber (base name: "line_number")', function() {
      // uncomment below and update the code to test the property lineNumber
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property loadTimestamp (base name: "load_timestamp")', function() {
      // uncomment below and update the code to test the property loadTimestamp
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property memoCode (base name: "memo_code")', function() {
      // uncomment below and update the code to test the property memoCode
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property memoText (base name: "memo_text")', function() {
      // uncomment below and update the code to test the property memoText
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property payeeName (base name: "payee_name")', function() {
      // uncomment below and update the code to test the property payeeName
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property pdfUrl (base name: "pdf_url")', function() {
      // uncomment below and update the code to test the property pdfUrl
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientCity (base name: "recipient_city")', function() {
      // uncomment below and update the code to test the property recipientCity
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientName (base name: "recipient_name")', function() {
      // uncomment below and update the code to test the property recipientName
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientPrefix (base name: "recipient_prefix")', function() {
      // uncomment below and update the code to test the property recipientPrefix
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientState (base name: "recipient_state")', function() {
      // uncomment below and update the code to test the property recipientState
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientSuffix (base name: "recipient_suffix")', function() {
      // uncomment below and update the code to test the property recipientSuffix
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property recipientZip (base name: "recipient_zip")', function() {
      // uncomment below and update the code to test the property recipientZip
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property relatedLineNumber (base name: "related_line_number")', function() {
      // uncomment below and update the code to test the property relatedLineNumber
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "report_type")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property semiAnnualBundledRefund (base name: "semi_annual_bundled_refund")', function() {
      // uncomment below and update the code to test the property semiAnnualBundledRefund
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transaction_id")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new OpenFec.ScheduleBEfile();
      //expect(instance).to.be();
    });

  });

}));
