/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.BaseF3PFiling();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BaseF3PFiling', function() {
    it('should create an instance of BaseF3PFiling', function() {
      // uncomment below and update the code to test BaseF3PFiling
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be.a(OpenFec.BaseF3PFiling);
    });

    it('should have the property amendedBy (base name: "amended_by")', function() {
      // uncomment below and update the code to test the property amendedBy
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property amendment (base name: "amendment")', function() {
      // uncomment below and update the code to test the property amendment
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property amendmentChain (base name: "amendment_chain")', function() {
      // uncomment below and update the code to test the property amendmentChain
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property beginningImageNumber (base name: "beginning_image_number")', function() {
      // uncomment below and update the code to test the property beginningImageNumber
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property cashOnHandBeginningPeriod (base name: "cash_on_hand_beginning_period")', function() {
      // uncomment below and update the code to test the property cashOnHandBeginningPeriod
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property cashOnHandEndPeriod (base name: "cash_on_hand_end_period")', function() {
      // uncomment below and update the code to test the property cashOnHandEndPeriod
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property committeeName (base name: "committee_name")', function() {
      // uncomment below and update the code to test the property committeeName
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property coverageEndDate (base name: "coverage_end_date")', function() {
      // uncomment below and update the code to test the property coverageEndDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property coverageStartDate (base name: "coverage_start_date")', function() {
      // uncomment below and update the code to test the property coverageStartDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property csvUrl (base name: "csv_url")', function() {
      // uncomment below and update the code to test the property csvUrl
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property debtsOwedByCommittee (base name: "debts_owed_by_committee")', function() {
      // uncomment below and update the code to test the property debtsOwedByCommittee
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property debtsOwedToCommittee (base name: "debts_owed_to_committee")', function() {
      // uncomment below and update the code to test the property debtsOwedToCommittee
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property documentDescription (base name: "document_description")', function() {
      // uncomment below and update the code to test the property documentDescription
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property electionDate (base name: "election_date")', function() {
      // uncomment below and update the code to test the property electionDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property electionState (base name: "election_state")', function() {
      // uncomment below and update the code to test the property electionState
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property expenditureSubjectToLimits (base name: "expenditure_subject_to_limits")', function() {
      // uncomment below and update the code to test the property expenditureSubjectToLimits
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property fecFileId (base name: "fec_file_id")', function() {
      // uncomment below and update the code to test the property fecFileId
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property fecUrl (base name: "fec_url")', function() {
      // uncomment below and update the code to test the property fecUrl
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property fileNumber (base name: "file_number")', function() {
      // uncomment below and update the code to test the property fileNumber
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property generalElection (base name: "general_election")', function() {
      // uncomment below and update the code to test the property generalElection
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property isAmended (base name: "is_amended")', function() {
      // uncomment below and update the code to test the property isAmended
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property mostRecent (base name: "most_recent")', function() {
      // uncomment below and update the code to test the property mostRecent
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property mostRecentFiling (base name: "most_recent_filing")', function() {
      // uncomment below and update the code to test the property mostRecentFiling
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property netContributionsCycleToDate (base name: "net_contributions_cycle_to_date")', function() {
      // uncomment below and update the code to test the property netContributionsCycleToDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property netOperatingExpendituresCycleToDate (base name: "net_operating_expenditures_cycle_to_date")', function() {
      // uncomment below and update the code to test the property netOperatingExpendituresCycleToDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property pdfUrl (base name: "pdf_url")', function() {
      // uncomment below and update the code to test the property pdfUrl
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property prefix (base name: "prefix")', function() {
      // uncomment below and update the code to test the property prefix
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property primaryElection (base name: "primary_election")', function() {
      // uncomment below and update the code to test the property primaryElection
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property receiptDate (base name: "receipt_date")', function() {
      // uncomment below and update the code to test the property receiptDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property report (base name: "report")', function() {
      // uncomment below and update the code to test the property report
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "report_type")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property reportYear (base name: "report_year")', function() {
      // uncomment below and update the code to test the property reportYear
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property rptPgi (base name: "rpt_pgi")', function() {
      // uncomment below and update the code to test the property rptPgi
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property signDate (base name: "sign_date")', function() {
      // uncomment below and update the code to test the property signDate
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property street1 (base name: "street_1")', function() {
      // uncomment below and update the code to test the property street1
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property street2 (base name: "street_2")', function() {
      // uncomment below and update the code to test the property street2
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property subtotalSummaryPeriod (base name: "subtotal_summary_period")', function() {
      // uncomment below and update the code to test the property subtotalSummaryPeriod
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property summaryLines (base name: "summary_lines")', function() {
      // uncomment below and update the code to test the property summaryLines
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property treasurerFirstName (base name: "treasurer_first_name")', function() {
      // uncomment below and update the code to test the property treasurerFirstName
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property treasurerLastName (base name: "treasurer_last_name")', function() {
      // uncomment below and update the code to test the property treasurerLastName
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property treasurerMiddleName (base name: "treasurer_middle_name")', function() {
      // uncomment below and update the code to test the property treasurerMiddleName
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property treasurerName (base name: "treasurer_name")', function() {
      // uncomment below and update the code to test the property treasurerName
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new OpenFec.BaseF3PFiling();
      //expect(instance).to.be();
    });

  });

}));
