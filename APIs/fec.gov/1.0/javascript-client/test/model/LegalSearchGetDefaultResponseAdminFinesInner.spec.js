/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LegalSearchGetDefaultResponseAdminFinesInner', function() {
    it('should create an instance of LegalSearchGetDefaultResponseAdminFinesInner', function() {
      // uncomment below and update the code to test LegalSearchGetDefaultResponseAdminFinesInner
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be.a(OpenFec.LegalSearchGetDefaultResponseAdminFinesInner);
    });

    it('should have the property challengeOutcome (base name: "challenge_outcome")', function() {
      // uncomment below and update the code to test the property challengeOutcome
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property challengeReceiptDate (base name: "challenge_receipt_date")', function() {
      // uncomment below and update the code to test the property challengeReceiptDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property checkAmount (base name: "check_amount")', function() {
      // uncomment below and update the code to test the property checkAmount
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property commissionVotes (base name: "commission_votes")', function() {
      // uncomment below and update the code to test the property commissionVotes
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property committeeId (base name: "committee_id")', function() {
      // uncomment below and update the code to test the property committeeId
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property docId (base name: "doc_id")', function() {
      // uncomment below and update the code to test the property docId
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property documentHighlights (base name: "document_highlights")', function() {
      // uncomment below and update the code to test the property documentHighlights
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property finalDeterminationAmount (base name: "final_determination_amount")', function() {
      // uncomment below and update the code to test the property finalDeterminationAmount
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property finalDeterminationDate (base name: "final_determination_date")', function() {
      // uncomment below and update the code to test the property finalDeterminationDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property highlights (base name: "highlights")', function() {
      // uncomment below and update the code to test the property highlights
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property _false (base name: "false")', function() {
      // uncomment below and update the code to test the property _false
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property petitionCourtDecisionDate (base name: "petition_court_decision_date")', function() {
      // uncomment below and update the code to test the property petitionCourtDecisionDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property petitionCourtFilingDate (base name: "petition_court_filing_date")', function() {
      // uncomment below and update the code to test the property petitionCourtFilingDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property reasonToBelieveActionDate (base name: "reason_to_believe_action_date")', function() {
      // uncomment below and update the code to test the property reasonToBelieveActionDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property reasonToBelieveFineAmount (base name: "reason_to_believe_fine_amount")', function() {
      // uncomment below and update the code to test the property reasonToBelieveFineAmount
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "report_type")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property reportYear (base name: "report_year")', function() {
      // uncomment below and update the code to test the property reportYear
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property treasuryReferralAmount (base name: "treasury_referral_amount")', function() {
      // uncomment below and update the code to test the property treasuryReferralAmount
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property treasuryReferralDate (base name: "treasury_referral_date")', function() {
      // uncomment below and update the code to test the property treasuryReferralDate
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new OpenFec.LegalSearchGetDefaultResponseAdminFinesInner();
      //expect(instance).to.be();
    });

  });

}));
