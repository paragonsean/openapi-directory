/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFec);
  }
}(this, function(expect, OpenFec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CandidateCommitteeTotalsHouseSenate', function() {
    it('should create an instance of CandidateCommitteeTotalsHouseSenate', function() {
      // uncomment below and update the code to test CandidateCommitteeTotalsHouseSenate
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be.a(OpenFec.CandidateCommitteeTotalsHouseSenate);
    });

    it('should have the property allOtherLoans (base name: "all_other_loans")', function() {
      // uncomment below and update the code to test the property allOtherLoans
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property candidateContribution (base name: "candidate_contribution")', function() {
      // uncomment below and update the code to test the property candidateContribution
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property candidateElectionYear (base name: "candidate_election_year")', function() {
      // uncomment below and update the code to test the property candidateElectionYear
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property candidateId (base name: "candidate_id")', function() {
      // uncomment below and update the code to test the property candidateId
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property contributionRefunds (base name: "contribution_refunds")', function() {
      // uncomment below and update the code to test the property contributionRefunds
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property contributions (base name: "contributions")', function() {
      // uncomment below and update the code to test the property contributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property coverageEndDate (base name: "coverage_end_date")', function() {
      // uncomment below and update the code to test the property coverageEndDate
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property coverageStartDate (base name: "coverage_start_date")', function() {
      // uncomment below and update the code to test the property coverageStartDate
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property cycle (base name: "cycle")', function() {
      // uncomment below and update the code to test the property cycle
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property disbursements (base name: "disbursements")', function() {
      // uncomment below and update the code to test the property disbursements
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property electionFull (base name: "election_full")', function() {
      // uncomment below and update the code to test the property electionFull
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property exemptLegalAccountingDisbursement (base name: "exempt_legal_accounting_disbursement")', function() {
      // uncomment below and update the code to test the property exemptLegalAccountingDisbursement
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property federalFunds (base name: "federal_funds")', function() {
      // uncomment below and update the code to test the property federalFunds
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property fundraisingDisbursements (base name: "fundraising_disbursements")', function() {
      // uncomment below and update the code to test the property fundraisingDisbursements
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property individualContributions (base name: "individual_contributions")', function() {
      // uncomment below and update the code to test the property individualContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property individualItemizedContributions (base name: "individual_itemized_contributions")', function() {
      // uncomment below and update the code to test the property individualItemizedContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property individualUnitemizedContributions (base name: "individual_unitemized_contributions")', function() {
      // uncomment below and update the code to test the property individualUnitemizedContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastBeginningImageNumber (base name: "last_beginning_image_number")', function() {
      // uncomment below and update the code to test the property lastBeginningImageNumber
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastCashOnHandEndPeriod (base name: "last_cash_on_hand_end_period")', function() {
      // uncomment below and update the code to test the property lastCashOnHandEndPeriod
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastDebtsOwedByCommittee (base name: "last_debts_owed_by_committee")', function() {
      // uncomment below and update the code to test the property lastDebtsOwedByCommittee
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastDebtsOwedToCommittee (base name: "last_debts_owed_to_committee")', function() {
      // uncomment below and update the code to test the property lastDebtsOwedToCommittee
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastNetContributions (base name: "last_net_contributions")', function() {
      // uncomment below and update the code to test the property lastNetContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastNetOperatingExpenditures (base name: "last_net_operating_expenditures")', function() {
      // uncomment below and update the code to test the property lastNetOperatingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastReportTypeFull (base name: "last_report_type_full")', function() {
      // uncomment below and update the code to test the property lastReportTypeFull
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property lastReportYear (base name: "last_report_year")', function() {
      // uncomment below and update the code to test the property lastReportYear
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property loanRepayments (base name: "loan_repayments")', function() {
      // uncomment below and update the code to test the property loanRepayments
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsCandidateLoans (base name: "loan_repayments_candidate_loans")', function() {
      // uncomment below and update the code to test the property loanRepaymentsCandidateLoans
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property loanRepaymentsOtherLoans (base name: "loan_repayments_other_loans")', function() {
      // uncomment below and update the code to test the property loanRepaymentsOtherLoans
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property loans (base name: "loans")', function() {
      // uncomment below and update the code to test the property loans
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property loansMadeByCandidate (base name: "loans_made_by_candidate")', function() {
      // uncomment below and update the code to test the property loansMadeByCandidate
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property netContributions (base name: "net_contributions")', function() {
      // uncomment below and update the code to test the property netContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property netOperatingExpenditures (base name: "net_operating_expenditures")', function() {
      // uncomment below and update the code to test the property netOperatingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToFundraisingExpenditures (base name: "offsets_to_fundraising_expenditures")', function() {
      // uncomment below and update the code to test the property offsetsToFundraisingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToLegalAccounting (base name: "offsets_to_legal_accounting")', function() {
      // uncomment below and update the code to test the property offsetsToLegalAccounting
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property offsetsToOperatingExpenditures (base name: "offsets_to_operating_expenditures")', function() {
      // uncomment below and update the code to test the property offsetsToOperatingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property operatingExpenditures (base name: "operating_expenditures")', function() {
      // uncomment below and update the code to test the property operatingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property otherDisbursements (base name: "other_disbursements")', function() {
      // uncomment below and update the code to test the property otherDisbursements
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property otherPoliticalCommitteeContributions (base name: "other_political_committee_contributions")', function() {
      // uncomment below and update the code to test the property otherPoliticalCommitteeContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property otherReceipts (base name: "other_receipts")', function() {
      // uncomment below and update the code to test the property otherReceipts
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property politicalPartyCommitteeContributions (base name: "political_party_committee_contributions")', function() {
      // uncomment below and update the code to test the property politicalPartyCommitteeContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property receipts (base name: "receipts")', function() {
      // uncomment below and update the code to test the property receipts
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property refundedIndividualContributions (base name: "refunded_individual_contributions")', function() {
      // uncomment below and update the code to test the property refundedIndividualContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property refundedOtherPoliticalCommitteeContributions (base name: "refunded_other_political_committee_contributions")', function() {
      // uncomment below and update the code to test the property refundedOtherPoliticalCommitteeContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property refundedPoliticalPartyCommitteeContributions (base name: "refunded_political_party_committee_contributions")', function() {
      // uncomment below and update the code to test the property refundedPoliticalPartyCommitteeContributions
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property totalOffsetsToOperatingExpenditures (base name: "total_offsets_to_operating_expenditures")', function() {
      // uncomment below and update the code to test the property totalOffsetsToOperatingExpenditures
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property transactionCoverageDate (base name: "transaction_coverage_date")', function() {
      // uncomment below and update the code to test the property transactionCoverageDate
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property transfersFromOtherAuthorizedCommittee (base name: "transfers_from_other_authorized_committee")', function() {
      // uncomment below and update the code to test the property transfersFromOtherAuthorizedCommittee
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

    it('should have the property transfersToOtherAuthorizedCommittee (base name: "transfers_to_other_authorized_committee")', function() {
      // uncomment below and update the code to test the property transfersToOtherAuthorizedCommittee
      //var instance = new OpenFec.CandidateCommitteeTotalsHouseSenate();
      //expect(instance).to.be();
    });

  });

}));
