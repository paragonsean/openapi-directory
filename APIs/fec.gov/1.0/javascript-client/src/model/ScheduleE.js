/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommitteeHistory from './CommitteeHistory';

/**
 * The ScheduleE model module.
 * @module model/ScheduleE
 * @version 1.0
 */
class ScheduleE {
    /**
     * Constructs a new <code>ScheduleE</code>.
     * @alias module:model/ScheduleE
     */
    constructor() { 
        
        ScheduleE.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduleE</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleE} obj Optional instance to populate.
     * @return {module:model/ScheduleE} The populated <code>ScheduleE</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleE();

            if (data.hasOwnProperty('action_code')) {
                obj['action_code'] = ApiClient.convertToType(data['action_code'], 'String');
            }
            if (data.hasOwnProperty('action_code_full')) {
                obj['action_code_full'] = ApiClient.convertToType(data['action_code_full'], 'String');
            }
            if (data.hasOwnProperty('amendment_indicator')) {
                obj['amendment_indicator'] = ApiClient.convertToType(data['amendment_indicator'], 'String');
            }
            if (data.hasOwnProperty('amendment_number')) {
                obj['amendment_number'] = ApiClient.convertToType(data['amendment_number'], 'Number');
            }
            if (data.hasOwnProperty('back_reference_schedule_name')) {
                obj['back_reference_schedule_name'] = ApiClient.convertToType(data['back_reference_schedule_name'], 'String');
            }
            if (data.hasOwnProperty('back_reference_transaction_id')) {
                obj['back_reference_transaction_id'] = ApiClient.convertToType(data['back_reference_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('candidate')) {
                obj['candidate'] = ApiClient.convertToType(data['candidate'], 'String');
            }
            if (data.hasOwnProperty('candidate_first_name')) {
                obj['candidate_first_name'] = ApiClient.convertToType(data['candidate_first_name'], 'String');
            }
            if (data.hasOwnProperty('candidate_id')) {
                obj['candidate_id'] = ApiClient.convertToType(data['candidate_id'], 'String');
            }
            if (data.hasOwnProperty('candidate_last_name')) {
                obj['candidate_last_name'] = ApiClient.convertToType(data['candidate_last_name'], 'String');
            }
            if (data.hasOwnProperty('candidate_middle_name')) {
                obj['candidate_middle_name'] = ApiClient.convertToType(data['candidate_middle_name'], 'String');
            }
            if (data.hasOwnProperty('candidate_name')) {
                obj['candidate_name'] = ApiClient.convertToType(data['candidate_name'], 'String');
            }
            if (data.hasOwnProperty('candidate_office')) {
                obj['candidate_office'] = ApiClient.convertToType(data['candidate_office'], 'String');
            }
            if (data.hasOwnProperty('candidate_office_district')) {
                obj['candidate_office_district'] = ApiClient.convertToType(data['candidate_office_district'], 'String');
            }
            if (data.hasOwnProperty('candidate_office_state')) {
                obj['candidate_office_state'] = ApiClient.convertToType(data['candidate_office_state'], 'String');
            }
            if (data.hasOwnProperty('candidate_party')) {
                obj['candidate_party'] = ApiClient.convertToType(data['candidate_party'], 'String');
            }
            if (data.hasOwnProperty('candidate_prefix')) {
                obj['candidate_prefix'] = ApiClient.convertToType(data['candidate_prefix'], 'String');
            }
            if (data.hasOwnProperty('candidate_suffix')) {
                obj['candidate_suffix'] = ApiClient.convertToType(data['candidate_suffix'], 'String');
            }
            if (data.hasOwnProperty('category_code')) {
                obj['category_code'] = ApiClient.convertToType(data['category_code'], 'String');
            }
            if (data.hasOwnProperty('category_code_full')) {
                obj['category_code_full'] = ApiClient.convertToType(data['category_code_full'], 'String');
            }
            if (data.hasOwnProperty('committee')) {
                obj['committee'] = CommitteeHistory.constructFromObject(data['committee']);
            }
            if (data.hasOwnProperty('committee_id')) {
                obj['committee_id'] = ApiClient.convertToType(data['committee_id'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_city')) {
                obj['conduit_committee_city'] = ApiClient.convertToType(data['conduit_committee_city'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_id')) {
                obj['conduit_committee_id'] = ApiClient.convertToType(data['conduit_committee_id'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_name')) {
                obj['conduit_committee_name'] = ApiClient.convertToType(data['conduit_committee_name'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_state')) {
                obj['conduit_committee_state'] = ApiClient.convertToType(data['conduit_committee_state'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_street1')) {
                obj['conduit_committee_street1'] = ApiClient.convertToType(data['conduit_committee_street1'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_street2')) {
                obj['conduit_committee_street2'] = ApiClient.convertToType(data['conduit_committee_street2'], 'String');
            }
            if (data.hasOwnProperty('conduit_committee_zip')) {
                obj['conduit_committee_zip'] = ApiClient.convertToType(data['conduit_committee_zip'], 'Number');
            }
            if (data.hasOwnProperty('dissemination_date')) {
                obj['dissemination_date'] = ApiClient.convertToType(data['dissemination_date'], 'Date');
            }
            if (data.hasOwnProperty('election_type')) {
                obj['election_type'] = ApiClient.convertToType(data['election_type'], 'String');
            }
            if (data.hasOwnProperty('election_type_full')) {
                obj['election_type_full'] = ApiClient.convertToType(data['election_type_full'], 'String');
            }
            if (data.hasOwnProperty('expenditure_amount')) {
                obj['expenditure_amount'] = ApiClient.convertToType(data['expenditure_amount'], 'Number');
            }
            if (data.hasOwnProperty('expenditure_date')) {
                obj['expenditure_date'] = ApiClient.convertToType(data['expenditure_date'], 'Date');
            }
            if (data.hasOwnProperty('expenditure_description')) {
                obj['expenditure_description'] = ApiClient.convertToType(data['expenditure_description'], 'String');
            }
            if (data.hasOwnProperty('file_number')) {
                obj['file_number'] = ApiClient.convertToType(data['file_number'], 'Number');
            }
            if (data.hasOwnProperty('filer_first_name')) {
                obj['filer_first_name'] = ApiClient.convertToType(data['filer_first_name'], 'String');
            }
            if (data.hasOwnProperty('filer_last_name')) {
                obj['filer_last_name'] = ApiClient.convertToType(data['filer_last_name'], 'String');
            }
            if (data.hasOwnProperty('filer_middle_name')) {
                obj['filer_middle_name'] = ApiClient.convertToType(data['filer_middle_name'], 'String');
            }
            if (data.hasOwnProperty('filer_prefix')) {
                obj['filer_prefix'] = ApiClient.convertToType(data['filer_prefix'], 'String');
            }
            if (data.hasOwnProperty('filer_suffix')) {
                obj['filer_suffix'] = ApiClient.convertToType(data['filer_suffix'], 'String');
            }
            if (data.hasOwnProperty('filing_date')) {
                obj['filing_date'] = ApiClient.convertToType(data['filing_date'], 'Date');
            }
            if (data.hasOwnProperty('filing_form')) {
                obj['filing_form'] = ApiClient.convertToType(data['filing_form'], 'String');
            }
            if (data.hasOwnProperty('image_number')) {
                obj['image_number'] = ApiClient.convertToType(data['image_number'], 'String');
            }
            if (data.hasOwnProperty('independent_sign_date')) {
                obj['independent_sign_date'] = ApiClient.convertToType(data['independent_sign_date'], 'Date');
            }
            if (data.hasOwnProperty('independent_sign_name')) {
                obj['independent_sign_name'] = ApiClient.convertToType(data['independent_sign_name'], 'String');
            }
            if (data.hasOwnProperty('is_notice')) {
                obj['is_notice'] = ApiClient.convertToType(data['is_notice'], 'Boolean');
            }
            if (data.hasOwnProperty('line_number')) {
                obj['line_number'] = ApiClient.convertToType(data['line_number'], 'String');
            }
            if (data.hasOwnProperty('link_id')) {
                obj['link_id'] = ApiClient.convertToType(data['link_id'], 'Number');
            }
            if (data.hasOwnProperty('memo_code')) {
                obj['memo_code'] = ApiClient.convertToType(data['memo_code'], 'String');
            }
            if (data.hasOwnProperty('memo_code_full')) {
                obj['memo_code_full'] = ApiClient.convertToType(data['memo_code_full'], 'String');
            }
            if (data.hasOwnProperty('memo_text')) {
                obj['memo_text'] = ApiClient.convertToType(data['memo_text'], 'String');
            }
            if (data.hasOwnProperty('memoed_subtotal')) {
                obj['memoed_subtotal'] = ApiClient.convertToType(data['memoed_subtotal'], 'Boolean');
            }
            if (data.hasOwnProperty('most_recent')) {
                obj['most_recent'] = ApiClient.convertToType(data['most_recent'], 'Boolean');
            }
            if (data.hasOwnProperty('notary_commission_expiration_date')) {
                obj['notary_commission_expiration_date'] = ApiClient.convertToType(data['notary_commission_expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('notary_sign_date')) {
                obj['notary_sign_date'] = ApiClient.convertToType(data['notary_sign_date'], 'Date');
            }
            if (data.hasOwnProperty('notary_sign_name')) {
                obj['notary_sign_name'] = ApiClient.convertToType(data['notary_sign_name'], 'String');
            }
            if (data.hasOwnProperty('office_total_ytd')) {
                obj['office_total_ytd'] = ApiClient.convertToType(data['office_total_ytd'], 'Number');
            }
            if (data.hasOwnProperty('original_sub_id')) {
                obj['original_sub_id'] = ApiClient.convertToType(data['original_sub_id'], 'String');
            }
            if (data.hasOwnProperty('payee_city')) {
                obj['payee_city'] = ApiClient.convertToType(data['payee_city'], 'String');
            }
            if (data.hasOwnProperty('payee_first_name')) {
                obj['payee_first_name'] = ApiClient.convertToType(data['payee_first_name'], 'String');
            }
            if (data.hasOwnProperty('payee_last_name')) {
                obj['payee_last_name'] = ApiClient.convertToType(data['payee_last_name'], 'String');
            }
            if (data.hasOwnProperty('payee_middle_name')) {
                obj['payee_middle_name'] = ApiClient.convertToType(data['payee_middle_name'], 'String');
            }
            if (data.hasOwnProperty('payee_name')) {
                obj['payee_name'] = ApiClient.convertToType(data['payee_name'], 'String');
            }
            if (data.hasOwnProperty('payee_prefix')) {
                obj['payee_prefix'] = ApiClient.convertToType(data['payee_prefix'], 'String');
            }
            if (data.hasOwnProperty('payee_state')) {
                obj['payee_state'] = ApiClient.convertToType(data['payee_state'], 'String');
            }
            if (data.hasOwnProperty('payee_street_1')) {
                obj['payee_street_1'] = ApiClient.convertToType(data['payee_street_1'], 'String');
            }
            if (data.hasOwnProperty('payee_street_2')) {
                obj['payee_street_2'] = ApiClient.convertToType(data['payee_street_2'], 'String');
            }
            if (data.hasOwnProperty('payee_suffix')) {
                obj['payee_suffix'] = ApiClient.convertToType(data['payee_suffix'], 'String');
            }
            if (data.hasOwnProperty('payee_zip')) {
                obj['payee_zip'] = ApiClient.convertToType(data['payee_zip'], 'String');
            }
            if (data.hasOwnProperty('pdf_url')) {
                obj['pdf_url'] = ApiClient.convertToType(data['pdf_url'], 'String');
            }
            if (data.hasOwnProperty('previous_file_number')) {
                obj['previous_file_number'] = ApiClient.convertToType(data['previous_file_number'], 'Number');
            }
            if (data.hasOwnProperty('report_type')) {
                obj['report_type'] = ApiClient.convertToType(data['report_type'], 'String');
            }
            if (data.hasOwnProperty('report_year')) {
                obj['report_year'] = ApiClient.convertToType(data['report_year'], 'Number');
            }
            if (data.hasOwnProperty('schedule_type')) {
                obj['schedule_type'] = ApiClient.convertToType(data['schedule_type'], 'String');
            }
            if (data.hasOwnProperty('schedule_type_full')) {
                obj['schedule_type_full'] = ApiClient.convertToType(data['schedule_type_full'], 'String');
            }
            if (data.hasOwnProperty('sub_id')) {
                obj['sub_id'] = ApiClient.convertToType(data['sub_id'], 'String');
            }
            if (data.hasOwnProperty('support_oppose_indicator')) {
                obj['support_oppose_indicator'] = ApiClient.convertToType(data['support_oppose_indicator'], 'String');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleE</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleE</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action_code'] && !(typeof data['action_code'] === 'string' || data['action_code'] instanceof String)) {
            throw new Error("Expected the field `action_code` to be a primitive type in the JSON string but got " + data['action_code']);
        }
        // ensure the json data is a string
        if (data['action_code_full'] && !(typeof data['action_code_full'] === 'string' || data['action_code_full'] instanceof String)) {
            throw new Error("Expected the field `action_code_full` to be a primitive type in the JSON string but got " + data['action_code_full']);
        }
        // ensure the json data is a string
        if (data['amendment_indicator'] && !(typeof data['amendment_indicator'] === 'string' || data['amendment_indicator'] instanceof String)) {
            throw new Error("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got " + data['amendment_indicator']);
        }
        // ensure the json data is a string
        if (data['back_reference_schedule_name'] && !(typeof data['back_reference_schedule_name'] === 'string' || data['back_reference_schedule_name'] instanceof String)) {
            throw new Error("Expected the field `back_reference_schedule_name` to be a primitive type in the JSON string but got " + data['back_reference_schedule_name']);
        }
        // ensure the json data is a string
        if (data['back_reference_transaction_id'] && !(typeof data['back_reference_transaction_id'] === 'string' || data['back_reference_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `back_reference_transaction_id` to be a primitive type in the JSON string but got " + data['back_reference_transaction_id']);
        }
        // ensure the json data is a string
        if (data['candidate'] && !(typeof data['candidate'] === 'string' || data['candidate'] instanceof String)) {
            throw new Error("Expected the field `candidate` to be a primitive type in the JSON string but got " + data['candidate']);
        }
        // ensure the json data is a string
        if (data['candidate_first_name'] && !(typeof data['candidate_first_name'] === 'string' || data['candidate_first_name'] instanceof String)) {
            throw new Error("Expected the field `candidate_first_name` to be a primitive type in the JSON string but got " + data['candidate_first_name']);
        }
        // ensure the json data is a string
        if (data['candidate_id'] && !(typeof data['candidate_id'] === 'string' || data['candidate_id'] instanceof String)) {
            throw new Error("Expected the field `candidate_id` to be a primitive type in the JSON string but got " + data['candidate_id']);
        }
        // ensure the json data is a string
        if (data['candidate_last_name'] && !(typeof data['candidate_last_name'] === 'string' || data['candidate_last_name'] instanceof String)) {
            throw new Error("Expected the field `candidate_last_name` to be a primitive type in the JSON string but got " + data['candidate_last_name']);
        }
        // ensure the json data is a string
        if (data['candidate_middle_name'] && !(typeof data['candidate_middle_name'] === 'string' || data['candidate_middle_name'] instanceof String)) {
            throw new Error("Expected the field `candidate_middle_name` to be a primitive type in the JSON string but got " + data['candidate_middle_name']);
        }
        // ensure the json data is a string
        if (data['candidate_name'] && !(typeof data['candidate_name'] === 'string' || data['candidate_name'] instanceof String)) {
            throw new Error("Expected the field `candidate_name` to be a primitive type in the JSON string but got " + data['candidate_name']);
        }
        // ensure the json data is a string
        if (data['candidate_office'] && !(typeof data['candidate_office'] === 'string' || data['candidate_office'] instanceof String)) {
            throw new Error("Expected the field `candidate_office` to be a primitive type in the JSON string but got " + data['candidate_office']);
        }
        // ensure the json data is a string
        if (data['candidate_office_district'] && !(typeof data['candidate_office_district'] === 'string' || data['candidate_office_district'] instanceof String)) {
            throw new Error("Expected the field `candidate_office_district` to be a primitive type in the JSON string but got " + data['candidate_office_district']);
        }
        // ensure the json data is a string
        if (data['candidate_office_state'] && !(typeof data['candidate_office_state'] === 'string' || data['candidate_office_state'] instanceof String)) {
            throw new Error("Expected the field `candidate_office_state` to be a primitive type in the JSON string but got " + data['candidate_office_state']);
        }
        // ensure the json data is a string
        if (data['candidate_party'] && !(typeof data['candidate_party'] === 'string' || data['candidate_party'] instanceof String)) {
            throw new Error("Expected the field `candidate_party` to be a primitive type in the JSON string but got " + data['candidate_party']);
        }
        // ensure the json data is a string
        if (data['candidate_prefix'] && !(typeof data['candidate_prefix'] === 'string' || data['candidate_prefix'] instanceof String)) {
            throw new Error("Expected the field `candidate_prefix` to be a primitive type in the JSON string but got " + data['candidate_prefix']);
        }
        // ensure the json data is a string
        if (data['candidate_suffix'] && !(typeof data['candidate_suffix'] === 'string' || data['candidate_suffix'] instanceof String)) {
            throw new Error("Expected the field `candidate_suffix` to be a primitive type in the JSON string but got " + data['candidate_suffix']);
        }
        // ensure the json data is a string
        if (data['category_code'] && !(typeof data['category_code'] === 'string' || data['category_code'] instanceof String)) {
            throw new Error("Expected the field `category_code` to be a primitive type in the JSON string but got " + data['category_code']);
        }
        // ensure the json data is a string
        if (data['category_code_full'] && !(typeof data['category_code_full'] === 'string' || data['category_code_full'] instanceof String)) {
            throw new Error("Expected the field `category_code_full` to be a primitive type in the JSON string but got " + data['category_code_full']);
        }
        // validate the optional field `committee`
        if (data['committee']) { // data not null
          CommitteeHistory.validateJSON(data['committee']);
        }
        // ensure the json data is a string
        if (data['committee_id'] && !(typeof data['committee_id'] === 'string' || data['committee_id'] instanceof String)) {
            throw new Error("Expected the field `committee_id` to be a primitive type in the JSON string but got " + data['committee_id']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_city'] && !(typeof data['conduit_committee_city'] === 'string' || data['conduit_committee_city'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_city` to be a primitive type in the JSON string but got " + data['conduit_committee_city']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_id'] && !(typeof data['conduit_committee_id'] === 'string' || data['conduit_committee_id'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_id` to be a primitive type in the JSON string but got " + data['conduit_committee_id']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_name'] && !(typeof data['conduit_committee_name'] === 'string' || data['conduit_committee_name'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_name` to be a primitive type in the JSON string but got " + data['conduit_committee_name']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_state'] && !(typeof data['conduit_committee_state'] === 'string' || data['conduit_committee_state'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_state` to be a primitive type in the JSON string but got " + data['conduit_committee_state']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_street1'] && !(typeof data['conduit_committee_street1'] === 'string' || data['conduit_committee_street1'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_street1` to be a primitive type in the JSON string but got " + data['conduit_committee_street1']);
        }
        // ensure the json data is a string
        if (data['conduit_committee_street2'] && !(typeof data['conduit_committee_street2'] === 'string' || data['conduit_committee_street2'] instanceof String)) {
            throw new Error("Expected the field `conduit_committee_street2` to be a primitive type in the JSON string but got " + data['conduit_committee_street2']);
        }
        // ensure the json data is a string
        if (data['election_type'] && !(typeof data['election_type'] === 'string' || data['election_type'] instanceof String)) {
            throw new Error("Expected the field `election_type` to be a primitive type in the JSON string but got " + data['election_type']);
        }
        // ensure the json data is a string
        if (data['election_type_full'] && !(typeof data['election_type_full'] === 'string' || data['election_type_full'] instanceof String)) {
            throw new Error("Expected the field `election_type_full` to be a primitive type in the JSON string but got " + data['election_type_full']);
        }
        // ensure the json data is a string
        if (data['expenditure_description'] && !(typeof data['expenditure_description'] === 'string' || data['expenditure_description'] instanceof String)) {
            throw new Error("Expected the field `expenditure_description` to be a primitive type in the JSON string but got " + data['expenditure_description']);
        }
        // ensure the json data is a string
        if (data['filer_first_name'] && !(typeof data['filer_first_name'] === 'string' || data['filer_first_name'] instanceof String)) {
            throw new Error("Expected the field `filer_first_name` to be a primitive type in the JSON string but got " + data['filer_first_name']);
        }
        // ensure the json data is a string
        if (data['filer_last_name'] && !(typeof data['filer_last_name'] === 'string' || data['filer_last_name'] instanceof String)) {
            throw new Error("Expected the field `filer_last_name` to be a primitive type in the JSON string but got " + data['filer_last_name']);
        }
        // ensure the json data is a string
        if (data['filer_middle_name'] && !(typeof data['filer_middle_name'] === 'string' || data['filer_middle_name'] instanceof String)) {
            throw new Error("Expected the field `filer_middle_name` to be a primitive type in the JSON string but got " + data['filer_middle_name']);
        }
        // ensure the json data is a string
        if (data['filer_prefix'] && !(typeof data['filer_prefix'] === 'string' || data['filer_prefix'] instanceof String)) {
            throw new Error("Expected the field `filer_prefix` to be a primitive type in the JSON string but got " + data['filer_prefix']);
        }
        // ensure the json data is a string
        if (data['filer_suffix'] && !(typeof data['filer_suffix'] === 'string' || data['filer_suffix'] instanceof String)) {
            throw new Error("Expected the field `filer_suffix` to be a primitive type in the JSON string but got " + data['filer_suffix']);
        }
        // ensure the json data is a string
        if (data['filing_form'] && !(typeof data['filing_form'] === 'string' || data['filing_form'] instanceof String)) {
            throw new Error("Expected the field `filing_form` to be a primitive type in the JSON string but got " + data['filing_form']);
        }
        // ensure the json data is a string
        if (data['image_number'] && !(typeof data['image_number'] === 'string' || data['image_number'] instanceof String)) {
            throw new Error("Expected the field `image_number` to be a primitive type in the JSON string but got " + data['image_number']);
        }
        // ensure the json data is a string
        if (data['independent_sign_name'] && !(typeof data['independent_sign_name'] === 'string' || data['independent_sign_name'] instanceof String)) {
            throw new Error("Expected the field `independent_sign_name` to be a primitive type in the JSON string but got " + data['independent_sign_name']);
        }
        // ensure the json data is a string
        if (data['line_number'] && !(typeof data['line_number'] === 'string' || data['line_number'] instanceof String)) {
            throw new Error("Expected the field `line_number` to be a primitive type in the JSON string but got " + data['line_number']);
        }
        // ensure the json data is a string
        if (data['memo_code'] && !(typeof data['memo_code'] === 'string' || data['memo_code'] instanceof String)) {
            throw new Error("Expected the field `memo_code` to be a primitive type in the JSON string but got " + data['memo_code']);
        }
        // ensure the json data is a string
        if (data['memo_code_full'] && !(typeof data['memo_code_full'] === 'string' || data['memo_code_full'] instanceof String)) {
            throw new Error("Expected the field `memo_code_full` to be a primitive type in the JSON string but got " + data['memo_code_full']);
        }
        // ensure the json data is a string
        if (data['memo_text'] && !(typeof data['memo_text'] === 'string' || data['memo_text'] instanceof String)) {
            throw new Error("Expected the field `memo_text` to be a primitive type in the JSON string but got " + data['memo_text']);
        }
        // ensure the json data is a string
        if (data['notary_sign_name'] && !(typeof data['notary_sign_name'] === 'string' || data['notary_sign_name'] instanceof String)) {
            throw new Error("Expected the field `notary_sign_name` to be a primitive type in the JSON string but got " + data['notary_sign_name']);
        }
        // ensure the json data is a string
        if (data['original_sub_id'] && !(typeof data['original_sub_id'] === 'string' || data['original_sub_id'] instanceof String)) {
            throw new Error("Expected the field `original_sub_id` to be a primitive type in the JSON string but got " + data['original_sub_id']);
        }
        // ensure the json data is a string
        if (data['payee_city'] && !(typeof data['payee_city'] === 'string' || data['payee_city'] instanceof String)) {
            throw new Error("Expected the field `payee_city` to be a primitive type in the JSON string but got " + data['payee_city']);
        }
        // ensure the json data is a string
        if (data['payee_first_name'] && !(typeof data['payee_first_name'] === 'string' || data['payee_first_name'] instanceof String)) {
            throw new Error("Expected the field `payee_first_name` to be a primitive type in the JSON string but got " + data['payee_first_name']);
        }
        // ensure the json data is a string
        if (data['payee_last_name'] && !(typeof data['payee_last_name'] === 'string' || data['payee_last_name'] instanceof String)) {
            throw new Error("Expected the field `payee_last_name` to be a primitive type in the JSON string but got " + data['payee_last_name']);
        }
        // ensure the json data is a string
        if (data['payee_middle_name'] && !(typeof data['payee_middle_name'] === 'string' || data['payee_middle_name'] instanceof String)) {
            throw new Error("Expected the field `payee_middle_name` to be a primitive type in the JSON string but got " + data['payee_middle_name']);
        }
        // ensure the json data is a string
        if (data['payee_name'] && !(typeof data['payee_name'] === 'string' || data['payee_name'] instanceof String)) {
            throw new Error("Expected the field `payee_name` to be a primitive type in the JSON string but got " + data['payee_name']);
        }
        // ensure the json data is a string
        if (data['payee_prefix'] && !(typeof data['payee_prefix'] === 'string' || data['payee_prefix'] instanceof String)) {
            throw new Error("Expected the field `payee_prefix` to be a primitive type in the JSON string but got " + data['payee_prefix']);
        }
        // ensure the json data is a string
        if (data['payee_state'] && !(typeof data['payee_state'] === 'string' || data['payee_state'] instanceof String)) {
            throw new Error("Expected the field `payee_state` to be a primitive type in the JSON string but got " + data['payee_state']);
        }
        // ensure the json data is a string
        if (data['payee_street_1'] && !(typeof data['payee_street_1'] === 'string' || data['payee_street_1'] instanceof String)) {
            throw new Error("Expected the field `payee_street_1` to be a primitive type in the JSON string but got " + data['payee_street_1']);
        }
        // ensure the json data is a string
        if (data['payee_street_2'] && !(typeof data['payee_street_2'] === 'string' || data['payee_street_2'] instanceof String)) {
            throw new Error("Expected the field `payee_street_2` to be a primitive type in the JSON string but got " + data['payee_street_2']);
        }
        // ensure the json data is a string
        if (data['payee_suffix'] && !(typeof data['payee_suffix'] === 'string' || data['payee_suffix'] instanceof String)) {
            throw new Error("Expected the field `payee_suffix` to be a primitive type in the JSON string but got " + data['payee_suffix']);
        }
        // ensure the json data is a string
        if (data['payee_zip'] && !(typeof data['payee_zip'] === 'string' || data['payee_zip'] instanceof String)) {
            throw new Error("Expected the field `payee_zip` to be a primitive type in the JSON string but got " + data['payee_zip']);
        }
        // ensure the json data is a string
        if (data['pdf_url'] && !(typeof data['pdf_url'] === 'string' || data['pdf_url'] instanceof String)) {
            throw new Error("Expected the field `pdf_url` to be a primitive type in the JSON string but got " + data['pdf_url']);
        }
        // ensure the json data is a string
        if (data['report_type'] && !(typeof data['report_type'] === 'string' || data['report_type'] instanceof String)) {
            throw new Error("Expected the field `report_type` to be a primitive type in the JSON string but got " + data['report_type']);
        }
        // ensure the json data is a string
        if (data['schedule_type'] && !(typeof data['schedule_type'] === 'string' || data['schedule_type'] instanceof String)) {
            throw new Error("Expected the field `schedule_type` to be a primitive type in the JSON string but got " + data['schedule_type']);
        }
        // ensure the json data is a string
        if (data['schedule_type_full'] && !(typeof data['schedule_type_full'] === 'string' || data['schedule_type_full'] instanceof String)) {
            throw new Error("Expected the field `schedule_type_full` to be a primitive type in the JSON string but got " + data['schedule_type_full']);
        }
        // ensure the json data is a string
        if (data['sub_id'] && !(typeof data['sub_id'] === 'string' || data['sub_id'] instanceof String)) {
            throw new Error("Expected the field `sub_id` to be a primitive type in the JSON string but got " + data['sub_id']);
        }
        // ensure the json data is a string
        if (data['support_oppose_indicator'] && !(typeof data['support_oppose_indicator'] === 'string' || data['support_oppose_indicator'] instanceof String)) {
            throw new Error("Expected the field `support_oppose_indicator` to be a primitive type in the JSON string but got " + data['support_oppose_indicator']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }

        return true;
    }


}



/**
 * @member {String} action_code
 */
ScheduleE.prototype['action_code'] = undefined;

/**
 * @member {String} action_code_full
 */
ScheduleE.prototype['action_code_full'] = undefined;

/**
 * Amendent types:     -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary  NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
 * @member {String} amendment_indicator
 */
ScheduleE.prototype['amendment_indicator'] = undefined;

/**
 *  Number of times the report has been amended. 
 * @member {Number} amendment_number
 */
ScheduleE.prototype['amendment_number'] = undefined;

/**
 * @member {String} back_reference_schedule_name
 */
ScheduleE.prototype['back_reference_schedule_name'] = undefined;

/**
 * @member {String} back_reference_transaction_id
 */
ScheduleE.prototype['back_reference_transaction_id'] = undefined;

/**
 * @member {String} candidate
 */
ScheduleE.prototype['candidate'] = undefined;

/**
 * @member {String} candidate_first_name
 */
ScheduleE.prototype['candidate_first_name'] = undefined;

/**
 * @member {String} candidate_id
 */
ScheduleE.prototype['candidate_id'] = undefined;

/**
 * @member {String} candidate_last_name
 */
ScheduleE.prototype['candidate_last_name'] = undefined;

/**
 * @member {String} candidate_middle_name
 */
ScheduleE.prototype['candidate_middle_name'] = undefined;

/**
 * Name of candidate running for office
 * @member {String} candidate_name
 */
ScheduleE.prototype['candidate_name'] = undefined;

/**
 * Federal office candidate runs for: H, S or P
 * @member {String} candidate_office
 */
ScheduleE.prototype['candidate_office'] = undefined;

/**
 * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
 * @member {String} candidate_office_district
 */
ScheduleE.prototype['candidate_office_district'] = undefined;

/**
 * US state or territory
 * @member {String} candidate_office_state
 */
ScheduleE.prototype['candidate_office_state'] = undefined;

/**
 * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
 * @member {String} candidate_party
 */
ScheduleE.prototype['candidate_party'] = undefined;

/**
 * @member {String} candidate_prefix
 */
ScheduleE.prototype['candidate_prefix'] = undefined;

/**
 * @member {String} candidate_suffix
 */
ScheduleE.prototype['candidate_suffix'] = undefined;

/**
 * @member {String} category_code
 */
ScheduleE.prototype['category_code'] = undefined;

/**
 * @member {String} category_code_full
 */
ScheduleE.prototype['category_code_full'] = undefined;

/**
 * @member {module:model/CommitteeHistory} committee
 */
ScheduleE.prototype['committee'] = undefined;

/**
 *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
 * @member {String} committee_id
 */
ScheduleE.prototype['committee_id'] = undefined;

/**
 * @member {String} conduit_committee_city
 */
ScheduleE.prototype['conduit_committee_city'] = undefined;

/**
 * @member {String} conduit_committee_id
 */
ScheduleE.prototype['conduit_committee_id'] = undefined;

/**
 * @member {String} conduit_committee_name
 */
ScheduleE.prototype['conduit_committee_name'] = undefined;

/**
 * @member {String} conduit_committee_state
 */
ScheduleE.prototype['conduit_committee_state'] = undefined;

/**
 * @member {String} conduit_committee_street1
 */
ScheduleE.prototype['conduit_committee_street1'] = undefined;

/**
 * @member {String} conduit_committee_street2
 */
ScheduleE.prototype['conduit_committee_street2'] = undefined;

/**
 * @member {Number} conduit_committee_zip
 */
ScheduleE.prototype['conduit_committee_zip'] = undefined;

/**
 * @member {Date} dissemination_date
 */
ScheduleE.prototype['dissemination_date'] = undefined;

/**
 * Election type  Convention, Primary, General, Special, Runoff etc. 
 * @member {String} election_type
 */
ScheduleE.prototype['election_type'] = undefined;

/**
 * Election type  Convention, Primary, General, Special, Runoff etc. 
 * @member {String} election_type_full
 */
ScheduleE.prototype['election_type_full'] = undefined;

/**
 * @member {Number} expenditure_amount
 */
ScheduleE.prototype['expenditure_amount'] = undefined;

/**
 * @member {Date} expenditure_date
 */
ScheduleE.prototype['expenditure_date'] = undefined;

/**
 * @member {String} expenditure_description
 */
ScheduleE.prototype['expenditure_description'] = undefined;

/**
 * @member {Number} file_number
 */
ScheduleE.prototype['file_number'] = undefined;

/**
 * @member {String} filer_first_name
 */
ScheduleE.prototype['filer_first_name'] = undefined;

/**
 * @member {String} filer_last_name
 */
ScheduleE.prototype['filer_last_name'] = undefined;

/**
 * @member {String} filer_middle_name
 */
ScheduleE.prototype['filer_middle_name'] = undefined;

/**
 * @member {String} filer_prefix
 */
ScheduleE.prototype['filer_prefix'] = undefined;

/**
 * @member {String} filer_suffix
 */
ScheduleE.prototype['filer_suffix'] = undefined;

/**
 * @member {Date} filing_date
 */
ScheduleE.prototype['filing_date'] = undefined;

/**
 * @member {String} filing_form
 */
ScheduleE.prototype['filing_form'] = undefined;

/**
 * @member {String} image_number
 */
ScheduleE.prototype['image_number'] = undefined;

/**
 * @member {Date} independent_sign_date
 */
ScheduleE.prototype['independent_sign_date'] = undefined;

/**
 * @member {String} independent_sign_name
 */
ScheduleE.prototype['independent_sign_name'] = undefined;

/**
 * @member {Boolean} is_notice
 */
ScheduleE.prototype['is_notice'] = undefined;

/**
 * @member {String} line_number
 */
ScheduleE.prototype['line_number'] = undefined;

/**
 * @member {Number} link_id
 */
ScheduleE.prototype['link_id'] = undefined;

/**
 * @member {String} memo_code
 */
ScheduleE.prototype['memo_code'] = undefined;

/**
 * @member {String} memo_code_full
 */
ScheduleE.prototype['memo_code_full'] = undefined;

/**
 * @member {String} memo_text
 */
ScheduleE.prototype['memo_text'] = undefined;

/**
 * @member {Boolean} memoed_subtotal
 */
ScheduleE.prototype['memoed_subtotal'] = undefined;

/**
 *  Report is either new or is the most-recently filed amendment 
 * @member {Boolean} most_recent
 */
ScheduleE.prototype['most_recent'] = undefined;

/**
 * @member {Date} notary_commission_expiration_date
 */
ScheduleE.prototype['notary_commission_expiration_date'] = undefined;

/**
 * @member {Date} notary_sign_date
 */
ScheduleE.prototype['notary_sign_date'] = undefined;

/**
 * @member {String} notary_sign_name
 */
ScheduleE.prototype['notary_sign_name'] = undefined;

/**
 * @member {Number} office_total_ytd
 */
ScheduleE.prototype['office_total_ytd'] = undefined;

/**
 * @member {String} original_sub_id
 */
ScheduleE.prototype['original_sub_id'] = undefined;

/**
 * @member {String} payee_city
 */
ScheduleE.prototype['payee_city'] = undefined;

/**
 * @member {String} payee_first_name
 */
ScheduleE.prototype['payee_first_name'] = undefined;

/**
 * @member {String} payee_last_name
 */
ScheduleE.prototype['payee_last_name'] = undefined;

/**
 * @member {String} payee_middle_name
 */
ScheduleE.prototype['payee_middle_name'] = undefined;

/**
 * @member {String} payee_name
 */
ScheduleE.prototype['payee_name'] = undefined;

/**
 * @member {String} payee_prefix
 */
ScheduleE.prototype['payee_prefix'] = undefined;

/**
 * @member {String} payee_state
 */
ScheduleE.prototype['payee_state'] = undefined;

/**
 * @member {String} payee_street_1
 */
ScheduleE.prototype['payee_street_1'] = undefined;

/**
 * @member {String} payee_street_2
 */
ScheduleE.prototype['payee_street_2'] = undefined;

/**
 * @member {String} payee_suffix
 */
ScheduleE.prototype['payee_suffix'] = undefined;

/**
 * @member {String} payee_zip
 */
ScheduleE.prototype['payee_zip'] = undefined;

/**
 * @member {String} pdf_url
 */
ScheduleE.prototype['pdf_url'] = undefined;

/**
 * @member {Number} previous_file_number
 */
ScheduleE.prototype['previous_file_number'] = undefined;

/**
 * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
 * @member {String} report_type
 */
ScheduleE.prototype['report_type'] = undefined;

/**
 *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
 * @member {Number} report_year
 */
ScheduleE.prototype['report_year'] = undefined;

/**
 * @member {String} schedule_type
 */
ScheduleE.prototype['schedule_type'] = undefined;

/**
 * @member {String} schedule_type_full
 */
ScheduleE.prototype['schedule_type_full'] = undefined;

/**
 * @member {String} sub_id
 */
ScheduleE.prototype['sub_id'] = undefined;

/**
 * @member {String} support_oppose_indicator
 */
ScheduleE.prototype['support_oppose_indicator'] = undefined;

/**
 * @member {String} transaction_id
 */
ScheduleE.prototype['transaction_id'] = undefined;






export default ScheduleE;

