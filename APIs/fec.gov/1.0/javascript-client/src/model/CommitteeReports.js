/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommitteeReports model module.
 * @module model/CommitteeReports
 * @version 1.0
 */
class CommitteeReports {
    /**
     * Constructs a new <code>CommitteeReports</code>.
     * @alias module:model/CommitteeReports
     */
    constructor() { 
        
        CommitteeReports.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommitteeReports</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommitteeReports} obj Optional instance to populate.
     * @return {module:model/CommitteeReports} The populated <code>CommitteeReports</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommitteeReports();

            if (data.hasOwnProperty('aggregate_amount_personal_contributions_general')) {
                obj['aggregate_amount_personal_contributions_general'] = ApiClient.convertToType(data['aggregate_amount_personal_contributions_general'], 'Number');
            }
            if (data.hasOwnProperty('aggregate_contributions_personal_funds_primary')) {
                obj['aggregate_contributions_personal_funds_primary'] = ApiClient.convertToType(data['aggregate_contributions_personal_funds_primary'], 'Number');
            }
            if (data.hasOwnProperty('all_loans_received_period')) {
                obj['all_loans_received_period'] = ApiClient.convertToType(data['all_loans_received_period'], 'Number');
            }
            if (data.hasOwnProperty('all_loans_received_ytd')) {
                obj['all_loans_received_ytd'] = ApiClient.convertToType(data['all_loans_received_ytd'], 'Number');
            }
            if (data.hasOwnProperty('all_other_loans_period')) {
                obj['all_other_loans_period'] = ApiClient.convertToType(data['all_other_loans_period'], 'Number');
            }
            if (data.hasOwnProperty('all_other_loans_ytd')) {
                obj['all_other_loans_ytd'] = ApiClient.convertToType(data['all_other_loans_ytd'], 'Number');
            }
            if (data.hasOwnProperty('allocated_federal_election_levin_share_period')) {
                obj['allocated_federal_election_levin_share_period'] = ApiClient.convertToType(data['allocated_federal_election_levin_share_period'], 'Number');
            }
            if (data.hasOwnProperty('amendment_chain')) {
                obj['amendment_chain'] = ApiClient.convertToType(data['amendment_chain'], ['Number']);
            }
            if (data.hasOwnProperty('amendment_indicator')) {
                obj['amendment_indicator'] = ApiClient.convertToType(data['amendment_indicator'], 'String');
            }
            if (data.hasOwnProperty('amendment_indicator_full')) {
                obj['amendment_indicator_full'] = ApiClient.convertToType(data['amendment_indicator_full'], 'String');
            }
            if (data.hasOwnProperty('beginning_image_number')) {
                obj['beginning_image_number'] = ApiClient.convertToType(data['beginning_image_number'], 'String');
            }
            if (data.hasOwnProperty('calendar_ytd')) {
                obj['calendar_ytd'] = ApiClient.convertToType(data['calendar_ytd'], 'Number');
            }
            if (data.hasOwnProperty('candidate_contribution_period')) {
                obj['candidate_contribution_period'] = ApiClient.convertToType(data['candidate_contribution_period'], 'Number');
            }
            if (data.hasOwnProperty('candidate_contribution_ytd')) {
                obj['candidate_contribution_ytd'] = ApiClient.convertToType(data['candidate_contribution_ytd'], 'Number');
            }
            if (data.hasOwnProperty('cash_on_hand_beginning_calendar_ytd')) {
                obj['cash_on_hand_beginning_calendar_ytd'] = ApiClient.convertToType(data['cash_on_hand_beginning_calendar_ytd'], 'Number');
            }
            if (data.hasOwnProperty('cash_on_hand_beginning_period')) {
                obj['cash_on_hand_beginning_period'] = ApiClient.convertToType(data['cash_on_hand_beginning_period'], 'Number');
            }
            if (data.hasOwnProperty('cash_on_hand_close_ytd')) {
                obj['cash_on_hand_close_ytd'] = ApiClient.convertToType(data['cash_on_hand_close_ytd'], 'Number');
            }
            if (data.hasOwnProperty('cash_on_hand_end_period')) {
                obj['cash_on_hand_end_period'] = ApiClient.convertToType(data['cash_on_hand_end_period'], 'Number');
            }
            if (data.hasOwnProperty('committee_id')) {
                obj['committee_id'] = ApiClient.convertToType(data['committee_id'], 'String');
            }
            if (data.hasOwnProperty('committee_name')) {
                obj['committee_name'] = ApiClient.convertToType(data['committee_name'], 'String');
            }
            if (data.hasOwnProperty('committee_type')) {
                obj['committee_type'] = ApiClient.convertToType(data['committee_type'], 'String');
            }
            if (data.hasOwnProperty('coordinated_expenditures_by_party_committee_period')) {
                obj['coordinated_expenditures_by_party_committee_period'] = ApiClient.convertToType(data['coordinated_expenditures_by_party_committee_period'], 'Number');
            }
            if (data.hasOwnProperty('coordinated_expenditures_by_party_committee_ytd')) {
                obj['coordinated_expenditures_by_party_committee_ytd'] = ApiClient.convertToType(data['coordinated_expenditures_by_party_committee_ytd'], 'Number');
            }
            if (data.hasOwnProperty('coverage_end_date')) {
                obj['coverage_end_date'] = ApiClient.convertToType(data['coverage_end_date'], 'Date');
            }
            if (data.hasOwnProperty('coverage_start_date')) {
                obj['coverage_start_date'] = ApiClient.convertToType(data['coverage_start_date'], 'Date');
            }
            if (data.hasOwnProperty('csv_url')) {
                obj['csv_url'] = ApiClient.convertToType(data['csv_url'], 'String');
            }
            if (data.hasOwnProperty('cycle')) {
                obj['cycle'] = ApiClient.convertToType(data['cycle'], 'Number');
            }
            if (data.hasOwnProperty('debts_owed_by_committee')) {
                obj['debts_owed_by_committee'] = ApiClient.convertToType(data['debts_owed_by_committee'], 'Number');
            }
            if (data.hasOwnProperty('debts_owed_to_committee')) {
                obj['debts_owed_to_committee'] = ApiClient.convertToType(data['debts_owed_to_committee'], 'Number');
            }
            if (data.hasOwnProperty('document_description')) {
                obj['document_description'] = ApiClient.convertToType(data['document_description'], 'String');
            }
            if (data.hasOwnProperty('end_image_number')) {
                obj['end_image_number'] = ApiClient.convertToType(data['end_image_number'], 'String');
            }
            if (data.hasOwnProperty('exempt_legal_accounting_disbursement_period')) {
                obj['exempt_legal_accounting_disbursement_period'] = ApiClient.convertToType(data['exempt_legal_accounting_disbursement_period'], 'Number');
            }
            if (data.hasOwnProperty('exempt_legal_accounting_disbursement_ytd')) {
                obj['exempt_legal_accounting_disbursement_ytd'] = ApiClient.convertToType(data['exempt_legal_accounting_disbursement_ytd'], 'Number');
            }
            if (data.hasOwnProperty('expenditure_subject_to_limits')) {
                obj['expenditure_subject_to_limits'] = ApiClient.convertToType(data['expenditure_subject_to_limits'], 'Number');
            }
            if (data.hasOwnProperty('fec_file_id')) {
                obj['fec_file_id'] = ApiClient.convertToType(data['fec_file_id'], 'String');
            }
            if (data.hasOwnProperty('fec_url')) {
                obj['fec_url'] = ApiClient.convertToType(data['fec_url'], 'String');
            }
            if (data.hasOwnProperty('fed_candidate_committee_contribution_refunds_ytd')) {
                obj['fed_candidate_committee_contribution_refunds_ytd'] = ApiClient.convertToType(data['fed_candidate_committee_contribution_refunds_ytd'], 'Number');
            }
            if (data.hasOwnProperty('fed_candidate_committee_contributions_period')) {
                obj['fed_candidate_committee_contributions_period'] = ApiClient.convertToType(data['fed_candidate_committee_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('fed_candidate_committee_contributions_ytd')) {
                obj['fed_candidate_committee_contributions_ytd'] = ApiClient.convertToType(data['fed_candidate_committee_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('fed_candidate_contribution_refunds_period')) {
                obj['fed_candidate_contribution_refunds_period'] = ApiClient.convertToType(data['fed_candidate_contribution_refunds_period'], 'Number');
            }
            if (data.hasOwnProperty('federal_funds_period')) {
                obj['federal_funds_period'] = ApiClient.convertToType(data['federal_funds_period'], 'Number');
            }
            if (data.hasOwnProperty('federal_funds_ytd')) {
                obj['federal_funds_ytd'] = ApiClient.convertToType(data['federal_funds_ytd'], 'Number');
            }
            if (data.hasOwnProperty('file_number')) {
                obj['file_number'] = ApiClient.convertToType(data['file_number'], 'Number');
            }
            if (data.hasOwnProperty('fundraising_disbursements_period')) {
                obj['fundraising_disbursements_period'] = ApiClient.convertToType(data['fundraising_disbursements_period'], 'Number');
            }
            if (data.hasOwnProperty('fundraising_disbursements_ytd')) {
                obj['fundraising_disbursements_ytd'] = ApiClient.convertToType(data['fundraising_disbursements_ytd'], 'Number');
            }
            if (data.hasOwnProperty('gross_receipt_authorized_committee_general')) {
                obj['gross_receipt_authorized_committee_general'] = ApiClient.convertToType(data['gross_receipt_authorized_committee_general'], 'Number');
            }
            if (data.hasOwnProperty('gross_receipt_authorized_committee_primary')) {
                obj['gross_receipt_authorized_committee_primary'] = ApiClient.convertToType(data['gross_receipt_authorized_committee_primary'], 'Number');
            }
            if (data.hasOwnProperty('gross_receipt_minus_personal_contribution_general')) {
                obj['gross_receipt_minus_personal_contribution_general'] = ApiClient.convertToType(data['gross_receipt_minus_personal_contribution_general'], 'Number');
            }
            if (data.hasOwnProperty('gross_receipt_minus_personal_contributions_primary')) {
                obj['gross_receipt_minus_personal_contributions_primary'] = ApiClient.convertToType(data['gross_receipt_minus_personal_contributions_primary'], 'Number');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('independent_contributions_period')) {
                obj['independent_contributions_period'] = ApiClient.convertToType(data['independent_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('independent_expenditures_period')) {
                obj['independent_expenditures_period'] = ApiClient.convertToType(data['independent_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('independent_expenditures_ytd')) {
                obj['independent_expenditures_ytd'] = ApiClient.convertToType(data['independent_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('individual_itemized_contributions_period')) {
                obj['individual_itemized_contributions_period'] = ApiClient.convertToType(data['individual_itemized_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('individual_itemized_contributions_ytd')) {
                obj['individual_itemized_contributions_ytd'] = ApiClient.convertToType(data['individual_itemized_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('individual_unitemized_contributions_period')) {
                obj['individual_unitemized_contributions_period'] = ApiClient.convertToType(data['individual_unitemized_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('individual_unitemized_contributions_ytd')) {
                obj['individual_unitemized_contributions_ytd'] = ApiClient.convertToType(data['individual_unitemized_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('is_amended')) {
                obj['is_amended'] = ApiClient.convertToType(data['is_amended'], 'Boolean');
            }
            if (data.hasOwnProperty('items_on_hand_liquidated')) {
                obj['items_on_hand_liquidated'] = ApiClient.convertToType(data['items_on_hand_liquidated'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_candidate_loans_period')) {
                obj['loan_repayments_candidate_loans_period'] = ApiClient.convertToType(data['loan_repayments_candidate_loans_period'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_candidate_loans_ytd')) {
                obj['loan_repayments_candidate_loans_ytd'] = ApiClient.convertToType(data['loan_repayments_candidate_loans_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_made_period')) {
                obj['loan_repayments_made_period'] = ApiClient.convertToType(data['loan_repayments_made_period'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_made_ytd')) {
                obj['loan_repayments_made_ytd'] = ApiClient.convertToType(data['loan_repayments_made_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_other_loans_period')) {
                obj['loan_repayments_other_loans_period'] = ApiClient.convertToType(data['loan_repayments_other_loans_period'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_other_loans_ytd')) {
                obj['loan_repayments_other_loans_ytd'] = ApiClient.convertToType(data['loan_repayments_other_loans_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_received_period')) {
                obj['loan_repayments_received_period'] = ApiClient.convertToType(data['loan_repayments_received_period'], 'Number');
            }
            if (data.hasOwnProperty('loan_repayments_received_ytd')) {
                obj['loan_repayments_received_ytd'] = ApiClient.convertToType(data['loan_repayments_received_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loans_made_by_candidate_period')) {
                obj['loans_made_by_candidate_period'] = ApiClient.convertToType(data['loans_made_by_candidate_period'], 'Number');
            }
            if (data.hasOwnProperty('loans_made_by_candidate_ytd')) {
                obj['loans_made_by_candidate_ytd'] = ApiClient.convertToType(data['loans_made_by_candidate_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loans_made_period')) {
                obj['loans_made_period'] = ApiClient.convertToType(data['loans_made_period'], 'Number');
            }
            if (data.hasOwnProperty('loans_made_ytd')) {
                obj['loans_made_ytd'] = ApiClient.convertToType(data['loans_made_ytd'], 'Number');
            }
            if (data.hasOwnProperty('loans_received_from_candidate_period')) {
                obj['loans_received_from_candidate_period'] = ApiClient.convertToType(data['loans_received_from_candidate_period'], 'Number');
            }
            if (data.hasOwnProperty('loans_received_from_candidate_ytd')) {
                obj['loans_received_from_candidate_ytd'] = ApiClient.convertToType(data['loans_received_from_candidate_ytd'], 'Number');
            }
            if (data.hasOwnProperty('means_filed')) {
                obj['means_filed'] = ApiClient.convertToType(data['means_filed'], 'String');
            }
            if (data.hasOwnProperty('most_recent')) {
                obj['most_recent'] = ApiClient.convertToType(data['most_recent'], 'Boolean');
            }
            if (data.hasOwnProperty('most_recent_file_number')) {
                obj['most_recent_file_number'] = ApiClient.convertToType(data['most_recent_file_number'], 'Number');
            }
            if (data.hasOwnProperty('net_contributions_cycle_to_date')) {
                obj['net_contributions_cycle_to_date'] = ApiClient.convertToType(data['net_contributions_cycle_to_date'], 'Number');
            }
            if (data.hasOwnProperty('net_contributions_period')) {
                obj['net_contributions_period'] = ApiClient.convertToType(data['net_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('net_contributions_ytd')) {
                obj['net_contributions_ytd'] = ApiClient.convertToType(data['net_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('net_operating_expenditures_cycle_to_date')) {
                obj['net_operating_expenditures_cycle_to_date'] = ApiClient.convertToType(data['net_operating_expenditures_cycle_to_date'], 'Number');
            }
            if (data.hasOwnProperty('net_operating_expenditures_period')) {
                obj['net_operating_expenditures_period'] = ApiClient.convertToType(data['net_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('net_operating_expenditures_ytd')) {
                obj['net_operating_expenditures_ytd'] = ApiClient.convertToType(data['net_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('non_allocated_fed_election_activity_period')) {
                obj['non_allocated_fed_election_activity_period'] = ApiClient.convertToType(data['non_allocated_fed_election_activity_period'], 'Number');
            }
            if (data.hasOwnProperty('non_allocated_fed_election_activity_ytd')) {
                obj['non_allocated_fed_election_activity_ytd'] = ApiClient.convertToType(data['non_allocated_fed_election_activity_ytd'], 'Number');
            }
            if (data.hasOwnProperty('nonfed_share_allocated_disbursements_period')) {
                obj['nonfed_share_allocated_disbursements_period'] = ApiClient.convertToType(data['nonfed_share_allocated_disbursements_period'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_fundraising_expenditures_period')) {
                obj['offsets_to_fundraising_expenditures_period'] = ApiClient.convertToType(data['offsets_to_fundraising_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_fundraising_expenditures_ytd')) {
                obj['offsets_to_fundraising_expenditures_ytd'] = ApiClient.convertToType(data['offsets_to_fundraising_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_legal_accounting_period')) {
                obj['offsets_to_legal_accounting_period'] = ApiClient.convertToType(data['offsets_to_legal_accounting_period'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_legal_accounting_ytd')) {
                obj['offsets_to_legal_accounting_ytd'] = ApiClient.convertToType(data['offsets_to_legal_accounting_ytd'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_operating_expenditures_period')) {
                obj['offsets_to_operating_expenditures_period'] = ApiClient.convertToType(data['offsets_to_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('offsets_to_operating_expenditures_ytd')) {
                obj['offsets_to_operating_expenditures_ytd'] = ApiClient.convertToType(data['offsets_to_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('operating_expenditures_period')) {
                obj['operating_expenditures_period'] = ApiClient.convertToType(data['operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('operating_expenditures_ytd')) {
                obj['operating_expenditures_ytd'] = ApiClient.convertToType(data['operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_disbursements_period')) {
                obj['other_disbursements_period'] = ApiClient.convertToType(data['other_disbursements_period'], 'Number');
            }
            if (data.hasOwnProperty('other_disbursements_ytd')) {
                obj['other_disbursements_ytd'] = ApiClient.convertToType(data['other_disbursements_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_fed_operating_expenditures_period')) {
                obj['other_fed_operating_expenditures_period'] = ApiClient.convertToType(data['other_fed_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('other_fed_operating_expenditures_ytd')) {
                obj['other_fed_operating_expenditures_ytd'] = ApiClient.convertToType(data['other_fed_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_fed_receipts_period')) {
                obj['other_fed_receipts_period'] = ApiClient.convertToType(data['other_fed_receipts_period'], 'Number');
            }
            if (data.hasOwnProperty('other_fed_receipts_ytd')) {
                obj['other_fed_receipts_ytd'] = ApiClient.convertToType(data['other_fed_receipts_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_loans_received_period')) {
                obj['other_loans_received_period'] = ApiClient.convertToType(data['other_loans_received_period'], 'Number');
            }
            if (data.hasOwnProperty('other_loans_received_ytd')) {
                obj['other_loans_received_ytd'] = ApiClient.convertToType(data['other_loans_received_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_political_committee_contributions_period')) {
                obj['other_political_committee_contributions_period'] = ApiClient.convertToType(data['other_political_committee_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('other_political_committee_contributions_ytd')) {
                obj['other_political_committee_contributions_ytd'] = ApiClient.convertToType(data['other_political_committee_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('other_receipts_period')) {
                obj['other_receipts_period'] = ApiClient.convertToType(data['other_receipts_period'], 'Number');
            }
            if (data.hasOwnProperty('other_receipts_ytd')) {
                obj['other_receipts_ytd'] = ApiClient.convertToType(data['other_receipts_ytd'], 'Number');
            }
            if (data.hasOwnProperty('pdf_url')) {
                obj['pdf_url'] = ApiClient.convertToType(data['pdf_url'], 'String');
            }
            if (data.hasOwnProperty('political_party_committee_contributions_period')) {
                obj['political_party_committee_contributions_period'] = ApiClient.convertToType(data['political_party_committee_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('political_party_committee_contributions_ytd')) {
                obj['political_party_committee_contributions_ytd'] = ApiClient.convertToType(data['political_party_committee_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('previous_file_number')) {
                obj['previous_file_number'] = ApiClient.convertToType(data['previous_file_number'], 'Number');
            }
            if (data.hasOwnProperty('receipt_date')) {
                obj['receipt_date'] = ApiClient.convertToType(data['receipt_date'], 'Date');
            }
            if (data.hasOwnProperty('refunded_individual_contributions_period')) {
                obj['refunded_individual_contributions_period'] = ApiClient.convertToType(data['refunded_individual_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('refunded_individual_contributions_ytd')) {
                obj['refunded_individual_contributions_ytd'] = ApiClient.convertToType(data['refunded_individual_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('refunded_other_political_committee_contributions_period')) {
                obj['refunded_other_political_committee_contributions_period'] = ApiClient.convertToType(data['refunded_other_political_committee_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('refunded_other_political_committee_contributions_ytd')) {
                obj['refunded_other_political_committee_contributions_ytd'] = ApiClient.convertToType(data['refunded_other_political_committee_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('refunded_political_party_committee_contributions_period')) {
                obj['refunded_political_party_committee_contributions_period'] = ApiClient.convertToType(data['refunded_political_party_committee_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('refunded_political_party_committee_contributions_ytd')) {
                obj['refunded_political_party_committee_contributions_ytd'] = ApiClient.convertToType(data['refunded_political_party_committee_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('refunds_total_contributions_col_total_ytd')) {
                obj['refunds_total_contributions_col_total_ytd'] = ApiClient.convertToType(data['refunds_total_contributions_col_total_ytd'], 'Number');
            }
            if (data.hasOwnProperty('repayments_loans_made_by_candidate_period')) {
                obj['repayments_loans_made_by_candidate_period'] = ApiClient.convertToType(data['repayments_loans_made_by_candidate_period'], 'Number');
            }
            if (data.hasOwnProperty('repayments_loans_made_candidate_ytd')) {
                obj['repayments_loans_made_candidate_ytd'] = ApiClient.convertToType(data['repayments_loans_made_candidate_ytd'], 'Number');
            }
            if (data.hasOwnProperty('repayments_other_loans_period')) {
                obj['repayments_other_loans_period'] = ApiClient.convertToType(data['repayments_other_loans_period'], 'Number');
            }
            if (data.hasOwnProperty('repayments_other_loans_ytd')) {
                obj['repayments_other_loans_ytd'] = ApiClient.convertToType(data['repayments_other_loans_ytd'], 'Number');
            }
            if (data.hasOwnProperty('report_form')) {
                obj['report_form'] = ApiClient.convertToType(data['report_form'], 'String');
            }
            if (data.hasOwnProperty('report_type')) {
                obj['report_type'] = ApiClient.convertToType(data['report_type'], 'String');
            }
            if (data.hasOwnProperty('report_type_full')) {
                obj['report_type_full'] = ApiClient.convertToType(data['report_type_full'], 'String');
            }
            if (data.hasOwnProperty('report_year')) {
                obj['report_year'] = ApiClient.convertToType(data['report_year'], 'Number');
            }
            if (data.hasOwnProperty('shared_fed_activity_nonfed_ytd')) {
                obj['shared_fed_activity_nonfed_ytd'] = ApiClient.convertToType(data['shared_fed_activity_nonfed_ytd'], 'Number');
            }
            if (data.hasOwnProperty('shared_fed_activity_period')) {
                obj['shared_fed_activity_period'] = ApiClient.convertToType(data['shared_fed_activity_period'], 'Number');
            }
            if (data.hasOwnProperty('shared_fed_activity_ytd')) {
                obj['shared_fed_activity_ytd'] = ApiClient.convertToType(data['shared_fed_activity_ytd'], 'Number');
            }
            if (data.hasOwnProperty('shared_fed_operating_expenditures_period')) {
                obj['shared_fed_operating_expenditures_period'] = ApiClient.convertToType(data['shared_fed_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('shared_fed_operating_expenditures_ytd')) {
                obj['shared_fed_operating_expenditures_ytd'] = ApiClient.convertToType(data['shared_fed_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('shared_nonfed_operating_expenditures_period')) {
                obj['shared_nonfed_operating_expenditures_period'] = ApiClient.convertToType(data['shared_nonfed_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('shared_nonfed_operating_expenditures_ytd')) {
                obj['shared_nonfed_operating_expenditures_ytd'] = ApiClient.convertToType(data['shared_nonfed_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_period')) {
                obj['subtotal_period'] = ApiClient.convertToType(data['subtotal_period'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_summary_page_period')) {
                obj['subtotal_summary_page_period'] = ApiClient.convertToType(data['subtotal_summary_page_period'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_summary_period')) {
                obj['subtotal_summary_period'] = ApiClient.convertToType(data['subtotal_summary_period'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_summary_ytd')) {
                obj['subtotal_summary_ytd'] = ApiClient.convertToType(data['subtotal_summary_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_contribution_refunds_col_total_period')) {
                obj['total_contribution_refunds_col_total_period'] = ApiClient.convertToType(data['total_contribution_refunds_col_total_period'], 'Number');
            }
            if (data.hasOwnProperty('total_contribution_refunds_period')) {
                obj['total_contribution_refunds_period'] = ApiClient.convertToType(data['total_contribution_refunds_period'], 'Number');
            }
            if (data.hasOwnProperty('total_contribution_refunds_ytd')) {
                obj['total_contribution_refunds_ytd'] = ApiClient.convertToType(data['total_contribution_refunds_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_contributions_column_total_period')) {
                obj['total_contributions_column_total_period'] = ApiClient.convertToType(data['total_contributions_column_total_period'], 'Number');
            }
            if (data.hasOwnProperty('total_contributions_period')) {
                obj['total_contributions_period'] = ApiClient.convertToType(data['total_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('total_contributions_ytd')) {
                obj['total_contributions_ytd'] = ApiClient.convertToType(data['total_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_disbursements_period')) {
                obj['total_disbursements_period'] = ApiClient.convertToType(data['total_disbursements_period'], 'Number');
            }
            if (data.hasOwnProperty('total_disbursements_ytd')) {
                obj['total_disbursements_ytd'] = ApiClient.convertToType(data['total_disbursements_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_disbursements_period')) {
                obj['total_fed_disbursements_period'] = ApiClient.convertToType(data['total_fed_disbursements_period'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_disbursements_ytd')) {
                obj['total_fed_disbursements_ytd'] = ApiClient.convertToType(data['total_fed_disbursements_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_election_activity_period')) {
                obj['total_fed_election_activity_period'] = ApiClient.convertToType(data['total_fed_election_activity_period'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_election_activity_ytd')) {
                obj['total_fed_election_activity_ytd'] = ApiClient.convertToType(data['total_fed_election_activity_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_operating_expenditures_period')) {
                obj['total_fed_operating_expenditures_period'] = ApiClient.convertToType(data['total_fed_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_operating_expenditures_ytd')) {
                obj['total_fed_operating_expenditures_ytd'] = ApiClient.convertToType(data['total_fed_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_receipts_period')) {
                obj['total_fed_receipts_period'] = ApiClient.convertToType(data['total_fed_receipts_period'], 'Number');
            }
            if (data.hasOwnProperty('total_fed_receipts_ytd')) {
                obj['total_fed_receipts_ytd'] = ApiClient.convertToType(data['total_fed_receipts_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_individual_contributions_period')) {
                obj['total_individual_contributions_period'] = ApiClient.convertToType(data['total_individual_contributions_period'], 'Number');
            }
            if (data.hasOwnProperty('total_individual_contributions_ytd')) {
                obj['total_individual_contributions_ytd'] = ApiClient.convertToType(data['total_individual_contributions_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_loan_repayments_made_period')) {
                obj['total_loan_repayments_made_period'] = ApiClient.convertToType(data['total_loan_repayments_made_period'], 'Number');
            }
            if (data.hasOwnProperty('total_loan_repayments_made_ytd')) {
                obj['total_loan_repayments_made_ytd'] = ApiClient.convertToType(data['total_loan_repayments_made_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_loans_received_period')) {
                obj['total_loans_received_period'] = ApiClient.convertToType(data['total_loans_received_period'], 'Number');
            }
            if (data.hasOwnProperty('total_loans_received_ytd')) {
                obj['total_loans_received_ytd'] = ApiClient.convertToType(data['total_loans_received_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_nonfed_transfers_period')) {
                obj['total_nonfed_transfers_period'] = ApiClient.convertToType(data['total_nonfed_transfers_period'], 'Number');
            }
            if (data.hasOwnProperty('total_nonfed_transfers_ytd')) {
                obj['total_nonfed_transfers_ytd'] = ApiClient.convertToType(data['total_nonfed_transfers_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_offsets_to_operating_expenditures_period')) {
                obj['total_offsets_to_operating_expenditures_period'] = ApiClient.convertToType(data['total_offsets_to_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('total_offsets_to_operating_expenditures_ytd')) {
                obj['total_offsets_to_operating_expenditures_ytd'] = ApiClient.convertToType(data['total_offsets_to_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_operating_expenditures_period')) {
                obj['total_operating_expenditures_period'] = ApiClient.convertToType(data['total_operating_expenditures_period'], 'Number');
            }
            if (data.hasOwnProperty('total_operating_expenditures_ytd')) {
                obj['total_operating_expenditures_ytd'] = ApiClient.convertToType(data['total_operating_expenditures_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_period')) {
                obj['total_period'] = ApiClient.convertToType(data['total_period'], 'Number');
            }
            if (data.hasOwnProperty('total_receipts_period')) {
                obj['total_receipts_period'] = ApiClient.convertToType(data['total_receipts_period'], 'Number');
            }
            if (data.hasOwnProperty('total_receipts_ytd')) {
                obj['total_receipts_ytd'] = ApiClient.convertToType(data['total_receipts_ytd'], 'Number');
            }
            if (data.hasOwnProperty('total_ytd')) {
                obj['total_ytd'] = ApiClient.convertToType(data['total_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_affiliated_committee_period')) {
                obj['transfers_from_affiliated_committee_period'] = ApiClient.convertToType(data['transfers_from_affiliated_committee_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_affiliated_committee_ytd')) {
                obj['transfers_from_affiliated_committee_ytd'] = ApiClient.convertToType(data['transfers_from_affiliated_committee_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_affiliated_party_period')) {
                obj['transfers_from_affiliated_party_period'] = ApiClient.convertToType(data['transfers_from_affiliated_party_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_affiliated_party_ytd')) {
                obj['transfers_from_affiliated_party_ytd'] = ApiClient.convertToType(data['transfers_from_affiliated_party_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_nonfed_account_period')) {
                obj['transfers_from_nonfed_account_period'] = ApiClient.convertToType(data['transfers_from_nonfed_account_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_nonfed_account_ytd')) {
                obj['transfers_from_nonfed_account_ytd'] = ApiClient.convertToType(data['transfers_from_nonfed_account_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_nonfed_levin_period')) {
                obj['transfers_from_nonfed_levin_period'] = ApiClient.convertToType(data['transfers_from_nonfed_levin_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_nonfed_levin_ytd')) {
                obj['transfers_from_nonfed_levin_ytd'] = ApiClient.convertToType(data['transfers_from_nonfed_levin_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_other_authorized_committee_period')) {
                obj['transfers_from_other_authorized_committee_period'] = ApiClient.convertToType(data['transfers_from_other_authorized_committee_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_from_other_authorized_committee_ytd')) {
                obj['transfers_from_other_authorized_committee_ytd'] = ApiClient.convertToType(data['transfers_from_other_authorized_committee_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_to_affiliated_committee_period')) {
                obj['transfers_to_affiliated_committee_period'] = ApiClient.convertToType(data['transfers_to_affiliated_committee_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_to_affilitated_committees_ytd')) {
                obj['transfers_to_affilitated_committees_ytd'] = ApiClient.convertToType(data['transfers_to_affilitated_committees_ytd'], 'Number');
            }
            if (data.hasOwnProperty('transfers_to_other_authorized_committee_period')) {
                obj['transfers_to_other_authorized_committee_period'] = ApiClient.convertToType(data['transfers_to_other_authorized_committee_period'], 'Number');
            }
            if (data.hasOwnProperty('transfers_to_other_authorized_committee_ytd')) {
                obj['transfers_to_other_authorized_committee_ytd'] = ApiClient.convertToType(data['transfers_to_other_authorized_committee_ytd'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommitteeReports</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommitteeReports</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['amendment_chain'])) {
            throw new Error("Expected the field `amendment_chain` to be an array in the JSON data but got " + data['amendment_chain']);
        }
        // ensure the json data is a string
        if (data['amendment_indicator'] && !(typeof data['amendment_indicator'] === 'string' || data['amendment_indicator'] instanceof String)) {
            throw new Error("Expected the field `amendment_indicator` to be a primitive type in the JSON string but got " + data['amendment_indicator']);
        }
        // ensure the json data is a string
        if (data['amendment_indicator_full'] && !(typeof data['amendment_indicator_full'] === 'string' || data['amendment_indicator_full'] instanceof String)) {
            throw new Error("Expected the field `amendment_indicator_full` to be a primitive type in the JSON string but got " + data['amendment_indicator_full']);
        }
        // ensure the json data is a string
        if (data['beginning_image_number'] && !(typeof data['beginning_image_number'] === 'string' || data['beginning_image_number'] instanceof String)) {
            throw new Error("Expected the field `beginning_image_number` to be a primitive type in the JSON string but got " + data['beginning_image_number']);
        }
        // ensure the json data is a string
        if (data['committee_id'] && !(typeof data['committee_id'] === 'string' || data['committee_id'] instanceof String)) {
            throw new Error("Expected the field `committee_id` to be a primitive type in the JSON string but got " + data['committee_id']);
        }
        // ensure the json data is a string
        if (data['committee_name'] && !(typeof data['committee_name'] === 'string' || data['committee_name'] instanceof String)) {
            throw new Error("Expected the field `committee_name` to be a primitive type in the JSON string but got " + data['committee_name']);
        }
        // ensure the json data is a string
        if (data['committee_type'] && !(typeof data['committee_type'] === 'string' || data['committee_type'] instanceof String)) {
            throw new Error("Expected the field `committee_type` to be a primitive type in the JSON string but got " + data['committee_type']);
        }
        // ensure the json data is a string
        if (data['csv_url'] && !(typeof data['csv_url'] === 'string' || data['csv_url'] instanceof String)) {
            throw new Error("Expected the field `csv_url` to be a primitive type in the JSON string but got " + data['csv_url']);
        }
        // ensure the json data is a string
        if (data['document_description'] && !(typeof data['document_description'] === 'string' || data['document_description'] instanceof String)) {
            throw new Error("Expected the field `document_description` to be a primitive type in the JSON string but got " + data['document_description']);
        }
        // ensure the json data is a string
        if (data['end_image_number'] && !(typeof data['end_image_number'] === 'string' || data['end_image_number'] instanceof String)) {
            throw new Error("Expected the field `end_image_number` to be a primitive type in the JSON string but got " + data['end_image_number']);
        }
        // ensure the json data is a string
        if (data['fec_file_id'] && !(typeof data['fec_file_id'] === 'string' || data['fec_file_id'] instanceof String)) {
            throw new Error("Expected the field `fec_file_id` to be a primitive type in the JSON string but got " + data['fec_file_id']);
        }
        // ensure the json data is a string
        if (data['fec_url'] && !(typeof data['fec_url'] === 'string' || data['fec_url'] instanceof String)) {
            throw new Error("Expected the field `fec_url` to be a primitive type in the JSON string but got " + data['fec_url']);
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // ensure the json data is a string
        if (data['means_filed'] && !(typeof data['means_filed'] === 'string' || data['means_filed'] instanceof String)) {
            throw new Error("Expected the field `means_filed` to be a primitive type in the JSON string but got " + data['means_filed']);
        }
        // ensure the json data is a string
        if (data['pdf_url'] && !(typeof data['pdf_url'] === 'string' || data['pdf_url'] instanceof String)) {
            throw new Error("Expected the field `pdf_url` to be a primitive type in the JSON string but got " + data['pdf_url']);
        }
        // ensure the json data is a string
        if (data['report_form'] && !(typeof data['report_form'] === 'string' || data['report_form'] instanceof String)) {
            throw new Error("Expected the field `report_form` to be a primitive type in the JSON string but got " + data['report_form']);
        }
        // ensure the json data is a string
        if (data['report_type'] && !(typeof data['report_type'] === 'string' || data['report_type'] instanceof String)) {
            throw new Error("Expected the field `report_type` to be a primitive type in the JSON string but got " + data['report_type']);
        }
        // ensure the json data is a string
        if (data['report_type_full'] && !(typeof data['report_type_full'] === 'string' || data['report_type_full'] instanceof String)) {
            throw new Error("Expected the field `report_type_full` to be a primitive type in the JSON string but got " + data['report_type_full']);
        }

        return true;
    }


}



/**
 * @member {Number} aggregate_amount_personal_contributions_general
 */
CommitteeReports.prototype['aggregate_amount_personal_contributions_general'] = undefined;

/**
 * @member {Number} aggregate_contributions_personal_funds_primary
 */
CommitteeReports.prototype['aggregate_contributions_personal_funds_primary'] = undefined;

/**
 * @member {Number} all_loans_received_period
 */
CommitteeReports.prototype['all_loans_received_period'] = undefined;

/**
 * @member {Number} all_loans_received_ytd
 */
CommitteeReports.prototype['all_loans_received_ytd'] = undefined;

/**
 * @member {Number} all_other_loans_period
 */
CommitteeReports.prototype['all_other_loans_period'] = undefined;

/**
 * @member {Number} all_other_loans_ytd
 */
CommitteeReports.prototype['all_other_loans_ytd'] = undefined;

/**
 * @member {Number} allocated_federal_election_levin_share_period
 */
CommitteeReports.prototype['allocated_federal_election_levin_share_period'] = undefined;

/**
 *  The first value in the chain is the original filing.  The ordering in the chain reflects the order the amendments were filed up to the amendment being inspected. 
 * @member {Array.<Number>} amendment_chain
 */
CommitteeReports.prototype['amendment_chain'] = undefined;

/**
 * @member {String} amendment_indicator
 */
CommitteeReports.prototype['amendment_indicator'] = undefined;

/**
 * @member {String} amendment_indicator_full
 */
CommitteeReports.prototype['amendment_indicator_full'] = undefined;

/**
 * @member {String} beginning_image_number
 */
CommitteeReports.prototype['beginning_image_number'] = undefined;

/**
 * @member {Number} calendar_ytd
 */
CommitteeReports.prototype['calendar_ytd'] = undefined;

/**
 * @member {Number} candidate_contribution_period
 */
CommitteeReports.prototype['candidate_contribution_period'] = undefined;

/**
 * @member {Number} candidate_contribution_ytd
 */
CommitteeReports.prototype['candidate_contribution_ytd'] = undefined;

/**
 * @member {Number} cash_on_hand_beginning_calendar_ytd
 */
CommitteeReports.prototype['cash_on_hand_beginning_calendar_ytd'] = undefined;

/**
 * Balance for the committee at the start of the two-year period
 * @member {Number} cash_on_hand_beginning_period
 */
CommitteeReports.prototype['cash_on_hand_beginning_period'] = undefined;

/**
 * @member {Number} cash_on_hand_close_ytd
 */
CommitteeReports.prototype['cash_on_hand_close_ytd'] = undefined;

/**
 * Ending cash balance on the most recent filing
 * @member {Number} cash_on_hand_end_period
 */
CommitteeReports.prototype['cash_on_hand_end_period'] = undefined;

/**
 *  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
 * @member {String} committee_id
 */
CommitteeReports.prototype['committee_id'] = undefined;

/**
 * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
 * @member {String} committee_name
 */
CommitteeReports.prototype['committee_name'] = undefined;

/**
 * @member {String} committee_type
 */
CommitteeReports.prototype['committee_type'] = undefined;

/**
 * @member {Number} coordinated_expenditures_by_party_committee_period
 */
CommitteeReports.prototype['coordinated_expenditures_by_party_committee_period'] = undefined;

/**
 * @member {Number} coordinated_expenditures_by_party_committee_ytd
 */
CommitteeReports.prototype['coordinated_expenditures_by_party_committee_ytd'] = undefined;

/**
 * Ending date of the reporting period
 * @member {Date} coverage_end_date
 */
CommitteeReports.prototype['coverage_end_date'] = undefined;

/**
 * Beginning date of the reporting period
 * @member {Date} coverage_start_date
 */
CommitteeReports.prototype['coverage_start_date'] = undefined;

/**
 * @member {String} csv_url
 */
CommitteeReports.prototype['csv_url'] = undefined;

/**
 *  Filter records to only those that are applicable to a given two-year period. This cycle follows the traditional House election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. The cycle begins with an odd year and is named for its ending, even year. 
 * @member {Number} cycle
 */
CommitteeReports.prototype['cycle'] = undefined;

/**
 * Debts owed by the committee
 * @member {Number} debts_owed_by_committee
 */
CommitteeReports.prototype['debts_owed_by_committee'] = undefined;

/**
 * Debts owed to the committee
 * @member {Number} debts_owed_to_committee
 */
CommitteeReports.prototype['debts_owed_to_committee'] = undefined;

/**
 * @member {String} document_description
 */
CommitteeReports.prototype['document_description'] = undefined;

/**
 * @member {String} end_image_number
 */
CommitteeReports.prototype['end_image_number'] = undefined;

/**
 * @member {Number} exempt_legal_accounting_disbursement_period
 */
CommitteeReports.prototype['exempt_legal_accounting_disbursement_period'] = undefined;

/**
 * @member {Number} exempt_legal_accounting_disbursement_ytd
 */
CommitteeReports.prototype['exempt_legal_accounting_disbursement_ytd'] = undefined;

/**
 * @member {Number} expenditure_subject_to_limits
 */
CommitteeReports.prototype['expenditure_subject_to_limits'] = undefined;

/**
 * @member {String} fec_file_id
 */
CommitteeReports.prototype['fec_file_id'] = undefined;

/**
 * @member {String} fec_url
 */
CommitteeReports.prototype['fec_url'] = undefined;

/**
 * @member {Number} fed_candidate_committee_contribution_refunds_ytd
 */
CommitteeReports.prototype['fed_candidate_committee_contribution_refunds_ytd'] = undefined;

/**
 * @member {Number} fed_candidate_committee_contributions_period
 */
CommitteeReports.prototype['fed_candidate_committee_contributions_period'] = undefined;

/**
 * @member {Number} fed_candidate_committee_contributions_ytd
 */
CommitteeReports.prototype['fed_candidate_committee_contributions_ytd'] = undefined;

/**
 * @member {Number} fed_candidate_contribution_refunds_period
 */
CommitteeReports.prototype['fed_candidate_contribution_refunds_period'] = undefined;

/**
 * @member {Number} federal_funds_period
 */
CommitteeReports.prototype['federal_funds_period'] = undefined;

/**
 * @member {Number} federal_funds_ytd
 */
CommitteeReports.prototype['federal_funds_ytd'] = undefined;

/**
 * @member {Number} file_number
 */
CommitteeReports.prototype['file_number'] = undefined;

/**
 * @member {Number} fundraising_disbursements_period
 */
CommitteeReports.prototype['fundraising_disbursements_period'] = undefined;

/**
 * @member {Number} fundraising_disbursements_ytd
 */
CommitteeReports.prototype['fundraising_disbursements_ytd'] = undefined;

/**
 * @member {Number} gross_receipt_authorized_committee_general
 */
CommitteeReports.prototype['gross_receipt_authorized_committee_general'] = undefined;

/**
 * @member {Number} gross_receipt_authorized_committee_primary
 */
CommitteeReports.prototype['gross_receipt_authorized_committee_primary'] = undefined;

/**
 * @member {Number} gross_receipt_minus_personal_contribution_general
 */
CommitteeReports.prototype['gross_receipt_minus_personal_contribution_general'] = undefined;

/**
 * @member {Number} gross_receipt_minus_personal_contributions_primary
 */
CommitteeReports.prototype['gross_receipt_minus_personal_contributions_primary'] = undefined;

/**
 *  HTML link to the filing. 
 * @member {String} html_url
 */
CommitteeReports.prototype['html_url'] = undefined;

/**
 * @member {Number} independent_contributions_period
 */
CommitteeReports.prototype['independent_contributions_period'] = undefined;

/**
 * @member {Number} independent_expenditures_period
 */
CommitteeReports.prototype['independent_expenditures_period'] = undefined;

/**
 * @member {Number} independent_expenditures_ytd
 */
CommitteeReports.prototype['independent_expenditures_ytd'] = undefined;

/**
 * Individual itemized contributions are from individuals whose aggregate contributions total over $200 per individual per year. Be aware, some filers choose to itemize donations $200 or less. total for the reporting period
 * @member {Number} individual_itemized_contributions_period
 */
CommitteeReports.prototype['individual_itemized_contributions_period'] = undefined;

/**
 * Individual itemized contributions are from individuals whose aggregate contributions total over $200 per individual per year. Be aware, some filers choose to itemize donations $200 or less. total for the year to date
 * @member {Number} individual_itemized_contributions_ytd
 */
CommitteeReports.prototype['individual_itemized_contributions_ytd'] = undefined;

/**
 * Unitemized contributions are made individuals whose aggregate contributions total $200 or less per individual per year. Be aware, some filers choose to itemize donations $200 or less and in that case those donations will appear in the itemized total. total for the reporting period
 * @member {Number} individual_unitemized_contributions_period
 */
CommitteeReports.prototype['individual_unitemized_contributions_period'] = undefined;

/**
 * Unitemized contributions are made individuals whose aggregate contributions total $200 or less per individual per year. Be aware, some filers choose to itemize donations $200 or less and in that case those donations will appear in the itemized total. total for the year to date
 * @member {Number} individual_unitemized_contributions_ytd
 */
CommitteeReports.prototype['individual_unitemized_contributions_ytd'] = undefined;

/**
 *  False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment. 
 * @member {Boolean} is_amended
 */
CommitteeReports.prototype['is_amended'] = undefined;

/**
 * @member {Number} items_on_hand_liquidated
 */
CommitteeReports.prototype['items_on_hand_liquidated'] = undefined;

/**
 * @member {Number} loan_repayments_candidate_loans_period
 */
CommitteeReports.prototype['loan_repayments_candidate_loans_period'] = undefined;

/**
 * @member {Number} loan_repayments_candidate_loans_ytd
 */
CommitteeReports.prototype['loan_repayments_candidate_loans_ytd'] = undefined;

/**
 * @member {Number} loan_repayments_made_period
 */
CommitteeReports.prototype['loan_repayments_made_period'] = undefined;

/**
 * @member {Number} loan_repayments_made_ytd
 */
CommitteeReports.prototype['loan_repayments_made_ytd'] = undefined;

/**
 * @member {Number} loan_repayments_other_loans_period
 */
CommitteeReports.prototype['loan_repayments_other_loans_period'] = undefined;

/**
 * @member {Number} loan_repayments_other_loans_ytd
 */
CommitteeReports.prototype['loan_repayments_other_loans_ytd'] = undefined;

/**
 * @member {Number} loan_repayments_received_period
 */
CommitteeReports.prototype['loan_repayments_received_period'] = undefined;

/**
 * @member {Number} loan_repayments_received_ytd
 */
CommitteeReports.prototype['loan_repayments_received_ytd'] = undefined;

/**
 * @member {Number} loans_made_by_candidate_period
 */
CommitteeReports.prototype['loans_made_by_candidate_period'] = undefined;

/**
 * @member {Number} loans_made_by_candidate_ytd
 */
CommitteeReports.prototype['loans_made_by_candidate_ytd'] = undefined;

/**
 * @member {Number} loans_made_period
 */
CommitteeReports.prototype['loans_made_period'] = undefined;

/**
 * @member {Number} loans_made_ytd
 */
CommitteeReports.prototype['loans_made_ytd'] = undefined;

/**
 * @member {Number} loans_received_from_candidate_period
 */
CommitteeReports.prototype['loans_received_from_candidate_period'] = undefined;

/**
 * @member {Number} loans_received_from_candidate_ytd
 */
CommitteeReports.prototype['loans_received_from_candidate_ytd'] = undefined;

/**
 * The method used to file with the FEC, either electronic or on paper.
 * @member {String} means_filed
 */
CommitteeReports.prototype['means_filed'] = undefined;

/**
 *  Report is either new or is the most-recently filed amendment 
 * @member {Boolean} most_recent
 */
CommitteeReports.prototype['most_recent'] = undefined;

/**
 * @member {Number} most_recent_file_number
 */
CommitteeReports.prototype['most_recent_file_number'] = undefined;

/**
 * @member {Number} net_contributions_cycle_to_date
 */
CommitteeReports.prototype['net_contributions_cycle_to_date'] = undefined;

/**
 * @member {Number} net_contributions_period
 */
CommitteeReports.prototype['net_contributions_period'] = undefined;

/**
 * @member {Number} net_contributions_ytd
 */
CommitteeReports.prototype['net_contributions_ytd'] = undefined;

/**
 * @member {Number} net_operating_expenditures_cycle_to_date
 */
CommitteeReports.prototype['net_operating_expenditures_cycle_to_date'] = undefined;

/**
 * @member {Number} net_operating_expenditures_period
 */
CommitteeReports.prototype['net_operating_expenditures_period'] = undefined;

/**
 * @member {Number} net_operating_expenditures_ytd
 */
CommitteeReports.prototype['net_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} non_allocated_fed_election_activity_period
 */
CommitteeReports.prototype['non_allocated_fed_election_activity_period'] = undefined;

/**
 * @member {Number} non_allocated_fed_election_activity_ytd
 */
CommitteeReports.prototype['non_allocated_fed_election_activity_ytd'] = undefined;

/**
 * @member {Number} nonfed_share_allocated_disbursements_period
 */
CommitteeReports.prototype['nonfed_share_allocated_disbursements_period'] = undefined;

/**
 * @member {Number} offsets_to_fundraising_expenditures_period
 */
CommitteeReports.prototype['offsets_to_fundraising_expenditures_period'] = undefined;

/**
 * @member {Number} offsets_to_fundraising_expenditures_ytd
 */
CommitteeReports.prototype['offsets_to_fundraising_expenditures_ytd'] = undefined;

/**
 * @member {Number} offsets_to_legal_accounting_period
 */
CommitteeReports.prototype['offsets_to_legal_accounting_period'] = undefined;

/**
 * @member {Number} offsets_to_legal_accounting_ytd
 */
CommitteeReports.prototype['offsets_to_legal_accounting_ytd'] = undefined;

/**
 * Offsets to operating expenditures total for the reporting period
 * @member {Number} offsets_to_operating_expenditures_period
 */
CommitteeReports.prototype['offsets_to_operating_expenditures_period'] = undefined;

/**
 * Offsets to operating expenditures total for the year to date
 * @member {Number} offsets_to_operating_expenditures_ytd
 */
CommitteeReports.prototype['offsets_to_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} operating_expenditures_period
 */
CommitteeReports.prototype['operating_expenditures_period'] = undefined;

/**
 * @member {Number} operating_expenditures_ytd
 */
CommitteeReports.prototype['operating_expenditures_ytd'] = undefined;

/**
 * Other disbursements total for the reporting period
 * @member {Number} other_disbursements_period
 */
CommitteeReports.prototype['other_disbursements_period'] = undefined;

/**
 * Other disbursements total for the year to date
 * @member {Number} other_disbursements_ytd
 */
CommitteeReports.prototype['other_disbursements_ytd'] = undefined;

/**
 * @member {Number} other_fed_operating_expenditures_period
 */
CommitteeReports.prototype['other_fed_operating_expenditures_period'] = undefined;

/**
 * @member {Number} other_fed_operating_expenditures_ytd
 */
CommitteeReports.prototype['other_fed_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} other_fed_receipts_period
 */
CommitteeReports.prototype['other_fed_receipts_period'] = undefined;

/**
 * @member {Number} other_fed_receipts_ytd
 */
CommitteeReports.prototype['other_fed_receipts_ytd'] = undefined;

/**
 * @member {Number} other_loans_received_period
 */
CommitteeReports.prototype['other_loans_received_period'] = undefined;

/**
 * @member {Number} other_loans_received_ytd
 */
CommitteeReports.prototype['other_loans_received_ytd'] = undefined;

/**
 * Other committees contributions total for the reporting period
 * @member {Number} other_political_committee_contributions_period
 */
CommitteeReports.prototype['other_political_committee_contributions_period'] = undefined;

/**
 * Other committees contributions total for the year to date
 * @member {Number} other_political_committee_contributions_ytd
 */
CommitteeReports.prototype['other_political_committee_contributions_ytd'] = undefined;

/**
 * @member {Number} other_receipts_period
 */
CommitteeReports.prototype['other_receipts_period'] = undefined;

/**
 * @member {Number} other_receipts_ytd
 */
CommitteeReports.prototype['other_receipts_ytd'] = undefined;

/**
 * @member {String} pdf_url
 */
CommitteeReports.prototype['pdf_url'] = undefined;

/**
 * Party committees contributions total for the reporting period
 * @member {Number} political_party_committee_contributions_period
 */
CommitteeReports.prototype['political_party_committee_contributions_period'] = undefined;

/**
 * Party committees contributions total for the year to date
 * @member {Number} political_party_committee_contributions_ytd
 */
CommitteeReports.prototype['political_party_committee_contributions_ytd'] = undefined;

/**
 * @member {Number} previous_file_number
 */
CommitteeReports.prototype['previous_file_number'] = undefined;

/**
 * Date the FEC received the electronic or paper record
 * @member {Date} receipt_date
 */
CommitteeReports.prototype['receipt_date'] = undefined;

/**
 * Individual refunds total for the reporting period
 * @member {Number} refunded_individual_contributions_period
 */
CommitteeReports.prototype['refunded_individual_contributions_period'] = undefined;

/**
 * Individual refunds total for the year to date
 * @member {Number} refunded_individual_contributions_ytd
 */
CommitteeReports.prototype['refunded_individual_contributions_ytd'] = undefined;

/**
 * Other committee refunds total for the reporting period
 * @member {Number} refunded_other_political_committee_contributions_period
 */
CommitteeReports.prototype['refunded_other_political_committee_contributions_period'] = undefined;

/**
 * Other committee refunds total for the year to date
 * @member {Number} refunded_other_political_committee_contributions_ytd
 */
CommitteeReports.prototype['refunded_other_political_committee_contributions_ytd'] = undefined;

/**
 * Political party refunds total for the reporting period
 * @member {Number} refunded_political_party_committee_contributions_period
 */
CommitteeReports.prototype['refunded_political_party_committee_contributions_period'] = undefined;

/**
 * Political party refunds total for the year to date
 * @member {Number} refunded_political_party_committee_contributions_ytd
 */
CommitteeReports.prototype['refunded_political_party_committee_contributions_ytd'] = undefined;

/**
 * @member {Number} refunds_total_contributions_col_total_ytd
 */
CommitteeReports.prototype['refunds_total_contributions_col_total_ytd'] = undefined;

/**
 * @member {Number} repayments_loans_made_by_candidate_period
 */
CommitteeReports.prototype['repayments_loans_made_by_candidate_period'] = undefined;

/**
 * @member {Number} repayments_loans_made_candidate_ytd
 */
CommitteeReports.prototype['repayments_loans_made_candidate_ytd'] = undefined;

/**
 * @member {Number} repayments_other_loans_period
 */
CommitteeReports.prototype['repayments_other_loans_period'] = undefined;

/**
 * @member {Number} repayments_other_loans_ytd
 */
CommitteeReports.prototype['repayments_other_loans_ytd'] = undefined;

/**
 * @member {String} report_form
 */
CommitteeReports.prototype['report_form'] = undefined;

/**
 * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
 * @member {String} report_type
 */
CommitteeReports.prototype['report_type'] = undefined;

/**
 * Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - ADJ COMP ADJUST AMEND     - CA  COMPREHENSIVE AMEND     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
 * @member {String} report_type_full
 */
CommitteeReports.prototype['report_type_full'] = undefined;

/**
 *  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
 * @member {Number} report_year
 */
CommitteeReports.prototype['report_year'] = undefined;

/**
 * @member {Number} shared_fed_activity_nonfed_ytd
 */
CommitteeReports.prototype['shared_fed_activity_nonfed_ytd'] = undefined;

/**
 * @member {Number} shared_fed_activity_period
 */
CommitteeReports.prototype['shared_fed_activity_period'] = undefined;

/**
 * @member {Number} shared_fed_activity_ytd
 */
CommitteeReports.prototype['shared_fed_activity_ytd'] = undefined;

/**
 * @member {Number} shared_fed_operating_expenditures_period
 */
CommitteeReports.prototype['shared_fed_operating_expenditures_period'] = undefined;

/**
 * @member {Number} shared_fed_operating_expenditures_ytd
 */
CommitteeReports.prototype['shared_fed_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} shared_nonfed_operating_expenditures_period
 */
CommitteeReports.prototype['shared_nonfed_operating_expenditures_period'] = undefined;

/**
 * @member {Number} shared_nonfed_operating_expenditures_ytd
 */
CommitteeReports.prototype['shared_nonfed_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} subtotal_period
 */
CommitteeReports.prototype['subtotal_period'] = undefined;

/**
 * @member {Number} subtotal_summary_page_period
 */
CommitteeReports.prototype['subtotal_summary_page_period'] = undefined;

/**
 * @member {Number} subtotal_summary_period
 */
CommitteeReports.prototype['subtotal_summary_period'] = undefined;

/**
 * @member {Number} subtotal_summary_ytd
 */
CommitteeReports.prototype['subtotal_summary_ytd'] = undefined;

/**
 * @member {Number} total_contribution_refunds_col_total_period
 */
CommitteeReports.prototype['total_contribution_refunds_col_total_period'] = undefined;

/**
 * Total contribution refunds total for the reporting period
 * @member {Number} total_contribution_refunds_period
 */
CommitteeReports.prototype['total_contribution_refunds_period'] = undefined;

/**
 * Total contribution refunds total for the year to date
 * @member {Number} total_contribution_refunds_ytd
 */
CommitteeReports.prototype['total_contribution_refunds_ytd'] = undefined;

/**
 * @member {Number} total_contributions_column_total_period
 */
CommitteeReports.prototype['total_contributions_column_total_period'] = undefined;

/**
 * Contribution total for the reporting period
 * @member {Number} total_contributions_period
 */
CommitteeReports.prototype['total_contributions_period'] = undefined;

/**
 * Contribution total for the year to date
 * @member {Number} total_contributions_ytd
 */
CommitteeReports.prototype['total_contributions_ytd'] = undefined;

/**
 * Disbursements total for the reporting period
 * @member {Number} total_disbursements_period
 */
CommitteeReports.prototype['total_disbursements_period'] = undefined;

/**
 * Disbursements total for the year to date
 * @member {Number} total_disbursements_ytd
 */
CommitteeReports.prototype['total_disbursements_ytd'] = undefined;

/**
 * @member {Number} total_fed_disbursements_period
 */
CommitteeReports.prototype['total_fed_disbursements_period'] = undefined;

/**
 * @member {Number} total_fed_disbursements_ytd
 */
CommitteeReports.prototype['total_fed_disbursements_ytd'] = undefined;

/**
 * @member {Number} total_fed_election_activity_period
 */
CommitteeReports.prototype['total_fed_election_activity_period'] = undefined;

/**
 * @member {Number} total_fed_election_activity_ytd
 */
CommitteeReports.prototype['total_fed_election_activity_ytd'] = undefined;

/**
 * @member {Number} total_fed_operating_expenditures_period
 */
CommitteeReports.prototype['total_fed_operating_expenditures_period'] = undefined;

/**
 * @member {Number} total_fed_operating_expenditures_ytd
 */
CommitteeReports.prototype['total_fed_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} total_fed_receipts_period
 */
CommitteeReports.prototype['total_fed_receipts_period'] = undefined;

/**
 * @member {Number} total_fed_receipts_ytd
 */
CommitteeReports.prototype['total_fed_receipts_ytd'] = undefined;

/**
 * Individual contributions total for the reporting period
 * @member {Number} total_individual_contributions_period
 */
CommitteeReports.prototype['total_individual_contributions_period'] = undefined;

/**
 * Individual contributions total for the year to date
 * @member {Number} total_individual_contributions_ytd
 */
CommitteeReports.prototype['total_individual_contributions_ytd'] = undefined;

/**
 * @member {Number} total_loan_repayments_made_period
 */
CommitteeReports.prototype['total_loan_repayments_made_period'] = undefined;

/**
 * @member {Number} total_loan_repayments_made_ytd
 */
CommitteeReports.prototype['total_loan_repayments_made_ytd'] = undefined;

/**
 * @member {Number} total_loans_received_period
 */
CommitteeReports.prototype['total_loans_received_period'] = undefined;

/**
 * @member {Number} total_loans_received_ytd
 */
CommitteeReports.prototype['total_loans_received_ytd'] = undefined;

/**
 * @member {Number} total_nonfed_transfers_period
 */
CommitteeReports.prototype['total_nonfed_transfers_period'] = undefined;

/**
 * @member {Number} total_nonfed_transfers_ytd
 */
CommitteeReports.prototype['total_nonfed_transfers_ytd'] = undefined;

/**
 * @member {Number} total_offsets_to_operating_expenditures_period
 */
CommitteeReports.prototype['total_offsets_to_operating_expenditures_period'] = undefined;

/**
 * @member {Number} total_offsets_to_operating_expenditures_ytd
 */
CommitteeReports.prototype['total_offsets_to_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} total_operating_expenditures_period
 */
CommitteeReports.prototype['total_operating_expenditures_period'] = undefined;

/**
 * @member {Number} total_operating_expenditures_ytd
 */
CommitteeReports.prototype['total_operating_expenditures_ytd'] = undefined;

/**
 * @member {Number} total_period
 */
CommitteeReports.prototype['total_period'] = undefined;

/**
 * Anything of value (money, goods, services or property) received by a political committee total for the reporting period
 * @member {Number} total_receipts_period
 */
CommitteeReports.prototype['total_receipts_period'] = undefined;

/**
 * Anything of value (money, goods, services or property) received by a political committee total for the year to date
 * @member {Number} total_receipts_ytd
 */
CommitteeReports.prototype['total_receipts_ytd'] = undefined;

/**
 * @member {Number} total_ytd
 */
CommitteeReports.prototype['total_ytd'] = undefined;

/**
 * @member {Number} transfers_from_affiliated_committee_period
 */
CommitteeReports.prototype['transfers_from_affiliated_committee_period'] = undefined;

/**
 * @member {Number} transfers_from_affiliated_committee_ytd
 */
CommitteeReports.prototype['transfers_from_affiliated_committee_ytd'] = undefined;

/**
 * @member {Number} transfers_from_affiliated_party_period
 */
CommitteeReports.prototype['transfers_from_affiliated_party_period'] = undefined;

/**
 * @member {Number} transfers_from_affiliated_party_ytd
 */
CommitteeReports.prototype['transfers_from_affiliated_party_ytd'] = undefined;

/**
 * @member {Number} transfers_from_nonfed_account_period
 */
CommitteeReports.prototype['transfers_from_nonfed_account_period'] = undefined;

/**
 * @member {Number} transfers_from_nonfed_account_ytd
 */
CommitteeReports.prototype['transfers_from_nonfed_account_ytd'] = undefined;

/**
 * @member {Number} transfers_from_nonfed_levin_period
 */
CommitteeReports.prototype['transfers_from_nonfed_levin_period'] = undefined;

/**
 * @member {Number} transfers_from_nonfed_levin_ytd
 */
CommitteeReports.prototype['transfers_from_nonfed_levin_ytd'] = undefined;

/**
 * @member {Number} transfers_from_other_authorized_committee_period
 */
CommitteeReports.prototype['transfers_from_other_authorized_committee_period'] = undefined;

/**
 * @member {Number} transfers_from_other_authorized_committee_ytd
 */
CommitteeReports.prototype['transfers_from_other_authorized_committee_ytd'] = undefined;

/**
 * @member {Number} transfers_to_affiliated_committee_period
 */
CommitteeReports.prototype['transfers_to_affiliated_committee_period'] = undefined;

/**
 * @member {Number} transfers_to_affilitated_committees_ytd
 */
CommitteeReports.prototype['transfers_to_affilitated_committees_ytd'] = undefined;

/**
 * @member {Number} transfers_to_other_authorized_committee_period
 */
CommitteeReports.prototype['transfers_to_other_authorized_committee_period'] = undefined;

/**
 * @member {Number} transfers_to_other_authorized_committee_ytd
 */
CommitteeReports.prototype['transfers_to_other_authorized_committee_ytd'] = undefined;






export default CommitteeReports;

