# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CandidateTotalAggregate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, district: str=None, district_number: int=None, election_year: int=None, office: str=None, party: str=None, state: str=None, state_full: str=None, total_cash_on_hand_end_period: float=None, total_debts_owed_by_committee: float=None, total_disbursements: float=None, total_individual_itemized_contributions: float=None, total_other_political_committee_contributions: float=None, total_receipts: float=None, total_transfers_from_other_authorized_committee: float=None):
        """CandidateTotalAggregate - a model defined in OpenAPI

        :param district: The district of this CandidateTotalAggregate.
        :param district_number: The district_number of this CandidateTotalAggregate.
        :param election_year: The election_year of this CandidateTotalAggregate.
        :param office: The office of this CandidateTotalAggregate.
        :param party: The party of this CandidateTotalAggregate.
        :param state: The state of this CandidateTotalAggregate.
        :param state_full: The state_full of this CandidateTotalAggregate.
        :param total_cash_on_hand_end_period: The total_cash_on_hand_end_period of this CandidateTotalAggregate.
        :param total_debts_owed_by_committee: The total_debts_owed_by_committee of this CandidateTotalAggregate.
        :param total_disbursements: The total_disbursements of this CandidateTotalAggregate.
        :param total_individual_itemized_contributions: The total_individual_itemized_contributions of this CandidateTotalAggregate.
        :param total_other_political_committee_contributions: The total_other_political_committee_contributions of this CandidateTotalAggregate.
        :param total_receipts: The total_receipts of this CandidateTotalAggregate.
        :param total_transfers_from_other_authorized_committee: The total_transfers_from_other_authorized_committee of this CandidateTotalAggregate.
        """
        self.openapi_types = {
            'district': str,
            'district_number': int,
            'election_year': int,
            'office': str,
            'party': str,
            'state': str,
            'state_full': str,
            'total_cash_on_hand_end_period': float,
            'total_debts_owed_by_committee': float,
            'total_disbursements': float,
            'total_individual_itemized_contributions': float,
            'total_other_political_committee_contributions': float,
            'total_receipts': float,
            'total_transfers_from_other_authorized_committee': float
        }

        self.attribute_map = {
            'district': 'district',
            'district_number': 'district_number',
            'election_year': 'election_year',
            'office': 'office',
            'party': 'party',
            'state': 'state',
            'state_full': 'state_full',
            'total_cash_on_hand_end_period': 'total_cash_on_hand_end_period',
            'total_debts_owed_by_committee': 'total_debts_owed_by_committee',
            'total_disbursements': 'total_disbursements',
            'total_individual_itemized_contributions': 'total_individual_itemized_contributions',
            'total_other_political_committee_contributions': 'total_other_political_committee_contributions',
            'total_receipts': 'total_receipts',
            'total_transfers_from_other_authorized_committee': 'total_transfers_from_other_authorized_committee'
        }

        self._district = district
        self._district_number = district_number
        self._election_year = election_year
        self._office = office
        self._party = party
        self._state = state
        self._state_full = state_full
        self._total_cash_on_hand_end_period = total_cash_on_hand_end_period
        self._total_debts_owed_by_committee = total_debts_owed_by_committee
        self._total_disbursements = total_disbursements
        self._total_individual_itemized_contributions = total_individual_itemized_contributions
        self._total_other_political_committee_contributions = total_other_political_committee_contributions
        self._total_receipts = total_receipts
        self._total_transfers_from_other_authorized_committee = total_transfers_from_other_authorized_committee

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CandidateTotalAggregate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CandidateTotalAggregate of this CandidateTotalAggregate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def district(self):
        """Gets the district of this CandidateTotalAggregate.


        :return: The district of this CandidateTotalAggregate.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this CandidateTotalAggregate.


        :param district: The district of this CandidateTotalAggregate.
        :type district: str
        """

        self._district = district

    @property
    def district_number(self):
        """Gets the district_number of this CandidateTotalAggregate.


        :return: The district_number of this CandidateTotalAggregate.
        :rtype: int
        """
        return self._district_number

    @district_number.setter
    def district_number(self, district_number):
        """Sets the district_number of this CandidateTotalAggregate.


        :param district_number: The district_number of this CandidateTotalAggregate.
        :type district_number: int
        """

        self._district_number = district_number

    @property
    def election_year(self):
        """Gets the election_year of this CandidateTotalAggregate.


        :return: The election_year of this CandidateTotalAggregate.
        :rtype: int
        """
        return self._election_year

    @election_year.setter
    def election_year(self, election_year):
        """Sets the election_year of this CandidateTotalAggregate.


        :param election_year: The election_year of this CandidateTotalAggregate.
        :type election_year: int
        """

        self._election_year = election_year

    @property
    def office(self):
        """Gets the office of this CandidateTotalAggregate.


        :return: The office of this CandidateTotalAggregate.
        :rtype: str
        """
        return self._office

    @office.setter
    def office(self, office):
        """Sets the office of this CandidateTotalAggregate.


        :param office: The office of this CandidateTotalAggregate.
        :type office: str
        """

        self._office = office

    @property
    def party(self):
        """Gets the party of this CandidateTotalAggregate.


        :return: The party of this CandidateTotalAggregate.
        :rtype: str
        """
        return self._party

    @party.setter
    def party(self, party):
        """Sets the party of this CandidateTotalAggregate.


        :param party: The party of this CandidateTotalAggregate.
        :type party: str
        """

        self._party = party

    @property
    def state(self):
        """Gets the state of this CandidateTotalAggregate.


        :return: The state of this CandidateTotalAggregate.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CandidateTotalAggregate.


        :param state: The state of this CandidateTotalAggregate.
        :type state: str
        """

        self._state = state

    @property
    def state_full(self):
        """Gets the state_full of this CandidateTotalAggregate.


        :return: The state_full of this CandidateTotalAggregate.
        :rtype: str
        """
        return self._state_full

    @state_full.setter
    def state_full(self, state_full):
        """Sets the state_full of this CandidateTotalAggregate.


        :param state_full: The state_full of this CandidateTotalAggregate.
        :type state_full: str
        """

        self._state_full = state_full

    @property
    def total_cash_on_hand_end_period(self):
        """Gets the total_cash_on_hand_end_period of this CandidateTotalAggregate.


        :return: The total_cash_on_hand_end_period of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_cash_on_hand_end_period

    @total_cash_on_hand_end_period.setter
    def total_cash_on_hand_end_period(self, total_cash_on_hand_end_period):
        """Sets the total_cash_on_hand_end_period of this CandidateTotalAggregate.


        :param total_cash_on_hand_end_period: The total_cash_on_hand_end_period of this CandidateTotalAggregate.
        :type total_cash_on_hand_end_period: float
        """

        self._total_cash_on_hand_end_period = total_cash_on_hand_end_period

    @property
    def total_debts_owed_by_committee(self):
        """Gets the total_debts_owed_by_committee of this CandidateTotalAggregate.


        :return: The total_debts_owed_by_committee of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_debts_owed_by_committee

    @total_debts_owed_by_committee.setter
    def total_debts_owed_by_committee(self, total_debts_owed_by_committee):
        """Sets the total_debts_owed_by_committee of this CandidateTotalAggregate.


        :param total_debts_owed_by_committee: The total_debts_owed_by_committee of this CandidateTotalAggregate.
        :type total_debts_owed_by_committee: float
        """

        self._total_debts_owed_by_committee = total_debts_owed_by_committee

    @property
    def total_disbursements(self):
        """Gets the total_disbursements of this CandidateTotalAggregate.


        :return: The total_disbursements of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_disbursements

    @total_disbursements.setter
    def total_disbursements(self, total_disbursements):
        """Sets the total_disbursements of this CandidateTotalAggregate.


        :param total_disbursements: The total_disbursements of this CandidateTotalAggregate.
        :type total_disbursements: float
        """

        self._total_disbursements = total_disbursements

    @property
    def total_individual_itemized_contributions(self):
        """Gets the total_individual_itemized_contributions of this CandidateTotalAggregate.


        :return: The total_individual_itemized_contributions of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_individual_itemized_contributions

    @total_individual_itemized_contributions.setter
    def total_individual_itemized_contributions(self, total_individual_itemized_contributions):
        """Sets the total_individual_itemized_contributions of this CandidateTotalAggregate.


        :param total_individual_itemized_contributions: The total_individual_itemized_contributions of this CandidateTotalAggregate.
        :type total_individual_itemized_contributions: float
        """

        self._total_individual_itemized_contributions = total_individual_itemized_contributions

    @property
    def total_other_political_committee_contributions(self):
        """Gets the total_other_political_committee_contributions of this CandidateTotalAggregate.


        :return: The total_other_political_committee_contributions of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_other_political_committee_contributions

    @total_other_political_committee_contributions.setter
    def total_other_political_committee_contributions(self, total_other_political_committee_contributions):
        """Sets the total_other_political_committee_contributions of this CandidateTotalAggregate.


        :param total_other_political_committee_contributions: The total_other_political_committee_contributions of this CandidateTotalAggregate.
        :type total_other_political_committee_contributions: float
        """

        self._total_other_political_committee_contributions = total_other_political_committee_contributions

    @property
    def total_receipts(self):
        """Gets the total_receipts of this CandidateTotalAggregate.


        :return: The total_receipts of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_receipts

    @total_receipts.setter
    def total_receipts(self, total_receipts):
        """Sets the total_receipts of this CandidateTotalAggregate.


        :param total_receipts: The total_receipts of this CandidateTotalAggregate.
        :type total_receipts: float
        """

        self._total_receipts = total_receipts

    @property
    def total_transfers_from_other_authorized_committee(self):
        """Gets the total_transfers_from_other_authorized_committee of this CandidateTotalAggregate.


        :return: The total_transfers_from_other_authorized_committee of this CandidateTotalAggregate.
        :rtype: float
        """
        return self._total_transfers_from_other_authorized_committee

    @total_transfers_from_other_authorized_committee.setter
    def total_transfers_from_other_authorized_committee(self, total_transfers_from_other_authorized_committee):
        """Sets the total_transfers_from_other_authorized_committee of this CandidateTotalAggregate.


        :param total_transfers_from_other_authorized_committee: The total_transfers_from_other_authorized_committee of this CandidateTotalAggregate.
        :type total_transfers_from_other_authorized_committee: float
        """

        self._total_transfers_from_other_authorized_committee = total_transfers_from_other_authorized_committee
