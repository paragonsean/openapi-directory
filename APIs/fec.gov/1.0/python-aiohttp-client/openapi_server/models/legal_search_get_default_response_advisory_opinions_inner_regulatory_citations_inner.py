# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, part: int=None, section: int=None, title: int=None):
        """LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner - a model defined in OpenAPI

        :param part: The part of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :param section: The section of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :param title: The title of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        """
        self.openapi_types = {
            'part': int,
            'section': int,
            'title': int
        }

        self.attribute_map = {
            'part': 'part',
            'section': 'section',
            'title': 'title'
        }

        self._part = part
        self._section = section
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _legal_search__get_default_response_advisory_opinions_inner_regulatory_citations_inner of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def part(self):
        """Gets the part of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :return: The part of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :rtype: int
        """
        return self._part

    @part.setter
    def part(self, part):
        """Sets the part of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :param part: The part of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :type part: int
        """

        self._part = part

    @property
    def section(self):
        """Gets the section of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :return: The section of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :rtype: int
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :param section: The section of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :type section: int
        """

        self._section = section

    @property
    def title(self):
        """Gets the title of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :return: The title of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :rtype: int
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.


        :param title: The title of this LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner.
        :type title: int
        """

        self._title = title
