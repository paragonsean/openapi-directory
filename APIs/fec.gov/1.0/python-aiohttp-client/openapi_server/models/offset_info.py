# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OffsetInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, page: int=None, pages: int=None, per_page: int=None):
        """OffsetInfo - a model defined in OpenAPI

        :param count: The count of this OffsetInfo.
        :param page: The page of this OffsetInfo.
        :param pages: The pages of this OffsetInfo.
        :param per_page: The per_page of this OffsetInfo.
        """
        self.openapi_types = {
            'count': int,
            'page': int,
            'pages': int,
            'per_page': int
        }

        self.attribute_map = {
            'count': 'count',
            'page': 'page',
            'pages': 'pages',
            'per_page': 'per_page'
        }

        self._count = count
        self._page = page
        self._pages = pages
        self._per_page = per_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OffsetInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OffsetInfo of this OffsetInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this OffsetInfo.


        :return: The count of this OffsetInfo.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this OffsetInfo.


        :param count: The count of this OffsetInfo.
        :type count: int
        """

        self._count = count

    @property
    def page(self):
        """Gets the page of this OffsetInfo.


        :return: The page of this OffsetInfo.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this OffsetInfo.


        :param page: The page of this OffsetInfo.
        :type page: int
        """

        self._page = page

    @property
    def pages(self):
        """Gets the pages of this OffsetInfo.


        :return: The pages of this OffsetInfo.
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this OffsetInfo.


        :param pages: The pages of this OffsetInfo.
        :type pages: int
        """

        self._pages = pages

    @property
    def per_page(self):
        """Gets the per_page of this OffsetInfo.


        :return: The per_page of this OffsetInfo.
        :rtype: int
        """
        return self._per_page

    @per_page.setter
    def per_page(self, per_page):
        """Sets the per_page of this OffsetInfo.


        :param per_page: The per_page of this OffsetInfo.
        :type per_page: int
        """

        self._per_page = per_page
