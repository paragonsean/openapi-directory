# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legal_search_get_default_response_admin_fines_inner import LegalSearchGetDefaultResponseAdminFinesInner
from openapi_server.models.legal_search_get_default_response_adrs_inner import LegalSearchGetDefaultResponseAdrsInner
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInner
from openapi_server.models.legal_search_get_default_response_murs_inner import LegalSearchGetDefaultResponseMursInner
from openapi_server.models.legal_search_get_default_response_regulations_inner import LegalSearchGetDefaultResponseRegulationsInner
from openapi_server.models.legal_search_get_default_response_statutes_inner import LegalSearchGetDefaultResponseStatutesInner
from openapi_server import util


class LegalSearchGetDefaultResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_fines: List[LegalSearchGetDefaultResponseAdminFinesInner]=None, adrs: List[LegalSearchGetDefaultResponseAdrsInner]=None, advisory_opinions: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInner]=None, murs: List[LegalSearchGetDefaultResponseMursInner]=None, regulations: List[LegalSearchGetDefaultResponseRegulationsInner]=None, statutes: List[LegalSearchGetDefaultResponseStatutesInner]=None, total_admin_fines: int=None, total_adrs: int=None, total_advisory_opinions: int=None, total_all: int=None, total_murs: int=None, total_regulations: int=None, total_statutes: int=None):
        """LegalSearchGetDefaultResponse - a model defined in OpenAPI

        :param admin_fines: The admin_fines of this LegalSearchGetDefaultResponse.
        :param adrs: The adrs of this LegalSearchGetDefaultResponse.
        :param advisory_opinions: The advisory_opinions of this LegalSearchGetDefaultResponse.
        :param murs: The murs of this LegalSearchGetDefaultResponse.
        :param regulations: The regulations of this LegalSearchGetDefaultResponse.
        :param statutes: The statutes of this LegalSearchGetDefaultResponse.
        :param total_admin_fines: The total_admin_fines of this LegalSearchGetDefaultResponse.
        :param total_adrs: The total_adrs of this LegalSearchGetDefaultResponse.
        :param total_advisory_opinions: The total_advisory_opinions of this LegalSearchGetDefaultResponse.
        :param total_all: The total_all of this LegalSearchGetDefaultResponse.
        :param total_murs: The total_murs of this LegalSearchGetDefaultResponse.
        :param total_regulations: The total_regulations of this LegalSearchGetDefaultResponse.
        :param total_statutes: The total_statutes of this LegalSearchGetDefaultResponse.
        """
        self.openapi_types = {
            'admin_fines': List[LegalSearchGetDefaultResponseAdminFinesInner],
            'adrs': List[LegalSearchGetDefaultResponseAdrsInner],
            'advisory_opinions': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInner],
            'murs': List[LegalSearchGetDefaultResponseMursInner],
            'regulations': List[LegalSearchGetDefaultResponseRegulationsInner],
            'statutes': List[LegalSearchGetDefaultResponseStatutesInner],
            'total_admin_fines': int,
            'total_adrs': int,
            'total_advisory_opinions': int,
            'total_all': int,
            'total_murs': int,
            'total_regulations': int,
            'total_statutes': int
        }

        self.attribute_map = {
            'admin_fines': 'admin_fines',
            'adrs': 'adrs',
            'advisory_opinions': 'advisory_opinions',
            'murs': 'murs',
            'regulations': 'regulations',
            'statutes': 'statutes',
            'total_admin_fines': 'total_admin_fines',
            'total_adrs': 'total_adrs',
            'total_advisory_opinions': 'total_advisory_opinions',
            'total_all': 'total_all',
            'total_murs': 'total_murs',
            'total_regulations': 'total_regulations',
            'total_statutes': 'total_statutes'
        }

        self._admin_fines = admin_fines
        self._adrs = adrs
        self._advisory_opinions = advisory_opinions
        self._murs = murs
        self._regulations = regulations
        self._statutes = statutes
        self._total_admin_fines = total_admin_fines
        self._total_adrs = total_adrs
        self._total_advisory_opinions = total_advisory_opinions
        self._total_all = total_all
        self._total_murs = total_murs
        self._total_regulations = total_regulations
        self._total_statutes = total_statutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalSearchGetDefaultResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _legal_search__get_default_response of this LegalSearchGetDefaultResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_fines(self):
        """Gets the admin_fines of this LegalSearchGetDefaultResponse.


        :return: The admin_fines of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseAdminFinesInner]
        """
        return self._admin_fines

    @admin_fines.setter
    def admin_fines(self, admin_fines):
        """Sets the admin_fines of this LegalSearchGetDefaultResponse.


        :param admin_fines: The admin_fines of this LegalSearchGetDefaultResponse.
        :type admin_fines: List[LegalSearchGetDefaultResponseAdminFinesInner]
        """

        self._admin_fines = admin_fines

    @property
    def adrs(self):
        """Gets the adrs of this LegalSearchGetDefaultResponse.


        :return: The adrs of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseAdrsInner]
        """
        return self._adrs

    @adrs.setter
    def adrs(self, adrs):
        """Sets the adrs of this LegalSearchGetDefaultResponse.


        :param adrs: The adrs of this LegalSearchGetDefaultResponse.
        :type adrs: List[LegalSearchGetDefaultResponseAdrsInner]
        """

        self._adrs = adrs

    @property
    def advisory_opinions(self):
        """Gets the advisory_opinions of this LegalSearchGetDefaultResponse.


        :return: The advisory_opinions of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInner]
        """
        return self._advisory_opinions

    @advisory_opinions.setter
    def advisory_opinions(self, advisory_opinions):
        """Sets the advisory_opinions of this LegalSearchGetDefaultResponse.


        :param advisory_opinions: The advisory_opinions of this LegalSearchGetDefaultResponse.
        :type advisory_opinions: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInner]
        """

        self._advisory_opinions = advisory_opinions

    @property
    def murs(self):
        """Gets the murs of this LegalSearchGetDefaultResponse.


        :return: The murs of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseMursInner]
        """
        return self._murs

    @murs.setter
    def murs(self, murs):
        """Sets the murs of this LegalSearchGetDefaultResponse.


        :param murs: The murs of this LegalSearchGetDefaultResponse.
        :type murs: List[LegalSearchGetDefaultResponseMursInner]
        """

        self._murs = murs

    @property
    def regulations(self):
        """Gets the regulations of this LegalSearchGetDefaultResponse.


        :return: The regulations of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseRegulationsInner]
        """
        return self._regulations

    @regulations.setter
    def regulations(self, regulations):
        """Sets the regulations of this LegalSearchGetDefaultResponse.


        :param regulations: The regulations of this LegalSearchGetDefaultResponse.
        :type regulations: List[LegalSearchGetDefaultResponseRegulationsInner]
        """

        self._regulations = regulations

    @property
    def statutes(self):
        """Gets the statutes of this LegalSearchGetDefaultResponse.


        :return: The statutes of this LegalSearchGetDefaultResponse.
        :rtype: List[LegalSearchGetDefaultResponseStatutesInner]
        """
        return self._statutes

    @statutes.setter
    def statutes(self, statutes):
        """Sets the statutes of this LegalSearchGetDefaultResponse.


        :param statutes: The statutes of this LegalSearchGetDefaultResponse.
        :type statutes: List[LegalSearchGetDefaultResponseStatutesInner]
        """

        self._statutes = statutes

    @property
    def total_admin_fines(self):
        """Gets the total_admin_fines of this LegalSearchGetDefaultResponse.

        Total number of Admin Fines matching the search criteria

        :return: The total_admin_fines of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_admin_fines

    @total_admin_fines.setter
    def total_admin_fines(self, total_admin_fines):
        """Sets the total_admin_fines of this LegalSearchGetDefaultResponse.

        Total number of Admin Fines matching the search criteria

        :param total_admin_fines: The total_admin_fines of this LegalSearchGetDefaultResponse.
        :type total_admin_fines: int
        """

        self._total_admin_fines = total_admin_fines

    @property
    def total_adrs(self):
        """Gets the total_adrs of this LegalSearchGetDefaultResponse.

        Total number of ADRs matching the search criteria

        :return: The total_adrs of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_adrs

    @total_adrs.setter
    def total_adrs(self, total_adrs):
        """Sets the total_adrs of this LegalSearchGetDefaultResponse.

        Total number of ADRs matching the search criteria

        :param total_adrs: The total_adrs of this LegalSearchGetDefaultResponse.
        :type total_adrs: int
        """

        self._total_adrs = total_adrs

    @property
    def total_advisory_opinions(self):
        """Gets the total_advisory_opinions of this LegalSearchGetDefaultResponse.

        Total number of Advisory Opinions matching the search criteria

        :return: The total_advisory_opinions of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_advisory_opinions

    @total_advisory_opinions.setter
    def total_advisory_opinions(self, total_advisory_opinions):
        """Sets the total_advisory_opinions of this LegalSearchGetDefaultResponse.

        Total number of Advisory Opinions matching the search criteria

        :param total_advisory_opinions: The total_advisory_opinions of this LegalSearchGetDefaultResponse.
        :type total_advisory_opinions: int
        """

        self._total_advisory_opinions = total_advisory_opinions

    @property
    def total_all(self):
        """Gets the total_all of this LegalSearchGetDefaultResponse.

        Total number of legal documents matching the search criteria

        :return: The total_all of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_all

    @total_all.setter
    def total_all(self, total_all):
        """Sets the total_all of this LegalSearchGetDefaultResponse.

        Total number of legal documents matching the search criteria

        :param total_all: The total_all of this LegalSearchGetDefaultResponse.
        :type total_all: int
        """

        self._total_all = total_all

    @property
    def total_murs(self):
        """Gets the total_murs of this LegalSearchGetDefaultResponse.

        Total number of MURs matching the search criteria

        :return: The total_murs of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_murs

    @total_murs.setter
    def total_murs(self, total_murs):
        """Sets the total_murs of this LegalSearchGetDefaultResponse.

        Total number of MURs matching the search criteria

        :param total_murs: The total_murs of this LegalSearchGetDefaultResponse.
        :type total_murs: int
        """

        self._total_murs = total_murs

    @property
    def total_regulations(self):
        """Gets the total_regulations of this LegalSearchGetDefaultResponse.

        Total number of Regulations matching the search criteria

        :return: The total_regulations of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_regulations

    @total_regulations.setter
    def total_regulations(self, total_regulations):
        """Sets the total_regulations of this LegalSearchGetDefaultResponse.

        Total number of Regulations matching the search criteria

        :param total_regulations: The total_regulations of this LegalSearchGetDefaultResponse.
        :type total_regulations: int
        """

        self._total_regulations = total_regulations

    @property
    def total_statutes(self):
        """Gets the total_statutes of this LegalSearchGetDefaultResponse.

        Total number of Statutes matching the search criteria

        :return: The total_statutes of this LegalSearchGetDefaultResponse.
        :rtype: int
        """
        return self._total_statutes

    @total_statutes.setter
    def total_statutes(self, total_statutes):
        """Sets the total_statutes of this LegalSearchGetDefaultResponse.

        Total number of Statutes matching the search criteria

        :param total_statutes: The total_statutes of this LegalSearchGetDefaultResponse.
        :type total_statutes: int
        """

        self._total_statutes = total_statutes
