# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Electioneering(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amendment_indicator: str=None, beginning_image_number: str=None, calculated_candidate_share: float=None, candidate_district: str=None, candidate_id: str=None, candidate_name: str=None, candidate_office: str=None, candidate_state: str=None, committee_id: str=None, committee_name: str=None, communication_date: date=None, disbursement_amount: float=None, disbursement_date: date=None, election_type: str=None, file_number: int=None, link_id: int=None, number_of_candidates: float=None, payee_name: str=None, payee_state: str=None, pdf_url: str=None, public_distribution_date: date=None, purpose_description: str=None, receipt_date: date=None, report_year: int=None, sb_image_num: str=None, sb_link_id: str=None, sub_id: int=None):
        """Electioneering - a model defined in OpenAPI

        :param amendment_indicator: The amendment_indicator of this Electioneering.
        :param beginning_image_number: The beginning_image_number of this Electioneering.
        :param calculated_candidate_share: The calculated_candidate_share of this Electioneering.
        :param candidate_district: The candidate_district of this Electioneering.
        :param candidate_id: The candidate_id of this Electioneering.
        :param candidate_name: The candidate_name of this Electioneering.
        :param candidate_office: The candidate_office of this Electioneering.
        :param candidate_state: The candidate_state of this Electioneering.
        :param committee_id: The committee_id of this Electioneering.
        :param committee_name: The committee_name of this Electioneering.
        :param communication_date: The communication_date of this Electioneering.
        :param disbursement_amount: The disbursement_amount of this Electioneering.
        :param disbursement_date: The disbursement_date of this Electioneering.
        :param election_type: The election_type of this Electioneering.
        :param file_number: The file_number of this Electioneering.
        :param link_id: The link_id of this Electioneering.
        :param number_of_candidates: The number_of_candidates of this Electioneering.
        :param payee_name: The payee_name of this Electioneering.
        :param payee_state: The payee_state of this Electioneering.
        :param pdf_url: The pdf_url of this Electioneering.
        :param public_distribution_date: The public_distribution_date of this Electioneering.
        :param purpose_description: The purpose_description of this Electioneering.
        :param receipt_date: The receipt_date of this Electioneering.
        :param report_year: The report_year of this Electioneering.
        :param sb_image_num: The sb_image_num of this Electioneering.
        :param sb_link_id: The sb_link_id of this Electioneering.
        :param sub_id: The sub_id of this Electioneering.
        """
        self.openapi_types = {
            'amendment_indicator': str,
            'beginning_image_number': str,
            'calculated_candidate_share': float,
            'candidate_district': str,
            'candidate_id': str,
            'candidate_name': str,
            'candidate_office': str,
            'candidate_state': str,
            'committee_id': str,
            'committee_name': str,
            'communication_date': date,
            'disbursement_amount': float,
            'disbursement_date': date,
            'election_type': str,
            'file_number': int,
            'link_id': int,
            'number_of_candidates': float,
            'payee_name': str,
            'payee_state': str,
            'pdf_url': str,
            'public_distribution_date': date,
            'purpose_description': str,
            'receipt_date': date,
            'report_year': int,
            'sb_image_num': str,
            'sb_link_id': str,
            'sub_id': int
        }

        self.attribute_map = {
            'amendment_indicator': 'amendment_indicator',
            'beginning_image_number': 'beginning_image_number',
            'calculated_candidate_share': 'calculated_candidate_share',
            'candidate_district': 'candidate_district',
            'candidate_id': 'candidate_id',
            'candidate_name': 'candidate_name',
            'candidate_office': 'candidate_office',
            'candidate_state': 'candidate_state',
            'committee_id': 'committee_id',
            'committee_name': 'committee_name',
            'communication_date': 'communication_date',
            'disbursement_amount': 'disbursement_amount',
            'disbursement_date': 'disbursement_date',
            'election_type': 'election_type',
            'file_number': 'file_number',
            'link_id': 'link_id',
            'number_of_candidates': 'number_of_candidates',
            'payee_name': 'payee_name',
            'payee_state': 'payee_state',
            'pdf_url': 'pdf_url',
            'public_distribution_date': 'public_distribution_date',
            'purpose_description': 'purpose_description',
            'receipt_date': 'receipt_date',
            'report_year': 'report_year',
            'sb_image_num': 'sb_image_num',
            'sb_link_id': 'sb_link_id',
            'sub_id': 'sub_id'
        }

        self._amendment_indicator = amendment_indicator
        self._beginning_image_number = beginning_image_number
        self._calculated_candidate_share = calculated_candidate_share
        self._candidate_district = candidate_district
        self._candidate_id = candidate_id
        self._candidate_name = candidate_name
        self._candidate_office = candidate_office
        self._candidate_state = candidate_state
        self._committee_id = committee_id
        self._committee_name = committee_name
        self._communication_date = communication_date
        self._disbursement_amount = disbursement_amount
        self._disbursement_date = disbursement_date
        self._election_type = election_type
        self._file_number = file_number
        self._link_id = link_id
        self._number_of_candidates = number_of_candidates
        self._payee_name = payee_name
        self._payee_state = payee_state
        self._pdf_url = pdf_url
        self._public_distribution_date = public_distribution_date
        self._purpose_description = purpose_description
        self._receipt_date = receipt_date
        self._report_year = report_year
        self._sb_image_num = sb_image_num
        self._sb_link_id = sb_link_id
        self._sub_id = sub_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Electioneering':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Electioneering of this Electioneering.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amendment_indicator(self):
        """Gets the amendment_indicator of this Electioneering.


        :return: The amendment_indicator of this Electioneering.
        :rtype: str
        """
        return self._amendment_indicator

    @amendment_indicator.setter
    def amendment_indicator(self, amendment_indicator):
        """Sets the amendment_indicator of this Electioneering.


        :param amendment_indicator: The amendment_indicator of this Electioneering.
        :type amendment_indicator: str
        """

        self._amendment_indicator = amendment_indicator

    @property
    def beginning_image_number(self):
        """Gets the beginning_image_number of this Electioneering.


        :return: The beginning_image_number of this Electioneering.
        :rtype: str
        """
        return self._beginning_image_number

    @beginning_image_number.setter
    def beginning_image_number(self, beginning_image_number):
        """Sets the beginning_image_number of this Electioneering.


        :param beginning_image_number: The beginning_image_number of this Electioneering.
        :type beginning_image_number: str
        """

        self._beginning_image_number = beginning_image_number

    @property
    def calculated_candidate_share(self):
        """Gets the calculated_candidate_share of this Electioneering.

         \"If an electioneering cost targets several candidates, the total cost is divided by the number of candidates. If it only mentions one candidate the full cost of the communication is listed.\" 

        :return: The calculated_candidate_share of this Electioneering.
        :rtype: float
        """
        return self._calculated_candidate_share

    @calculated_candidate_share.setter
    def calculated_candidate_share(self, calculated_candidate_share):
        """Sets the calculated_candidate_share of this Electioneering.

         \"If an electioneering cost targets several candidates, the total cost is divided by the number of candidates. If it only mentions one candidate the full cost of the communication is listed.\" 

        :param calculated_candidate_share: The calculated_candidate_share of this Electioneering.
        :type calculated_candidate_share: float
        """

        self._calculated_candidate_share = calculated_candidate_share

    @property
    def candidate_district(self):
        """Gets the candidate_district of this Electioneering.


        :return: The candidate_district of this Electioneering.
        :rtype: str
        """
        return self._candidate_district

    @candidate_district.setter
    def candidate_district(self, candidate_district):
        """Sets the candidate_district of this Electioneering.


        :param candidate_district: The candidate_district of this Electioneering.
        :type candidate_district: str
        """

        self._candidate_district = candidate_district

    @property
    def candidate_id(self):
        """Gets the candidate_id of this Electioneering.


        :return: The candidate_id of this Electioneering.
        :rtype: str
        """
        return self._candidate_id

    @candidate_id.setter
    def candidate_id(self, candidate_id):
        """Sets the candidate_id of this Electioneering.


        :param candidate_id: The candidate_id of this Electioneering.
        :type candidate_id: str
        """

        self._candidate_id = candidate_id

    @property
    def candidate_name(self):
        """Gets the candidate_name of this Electioneering.


        :return: The candidate_name of this Electioneering.
        :rtype: str
        """
        return self._candidate_name

    @candidate_name.setter
    def candidate_name(self, candidate_name):
        """Sets the candidate_name of this Electioneering.


        :param candidate_name: The candidate_name of this Electioneering.
        :type candidate_name: str
        """

        self._candidate_name = candidate_name

    @property
    def candidate_office(self):
        """Gets the candidate_office of this Electioneering.


        :return: The candidate_office of this Electioneering.
        :rtype: str
        """
        return self._candidate_office

    @candidate_office.setter
    def candidate_office(self, candidate_office):
        """Sets the candidate_office of this Electioneering.


        :param candidate_office: The candidate_office of this Electioneering.
        :type candidate_office: str
        """

        self._candidate_office = candidate_office

    @property
    def candidate_state(self):
        """Gets the candidate_state of this Electioneering.


        :return: The candidate_state of this Electioneering.
        :rtype: str
        """
        return self._candidate_state

    @candidate_state.setter
    def candidate_state(self, candidate_state):
        """Sets the candidate_state of this Electioneering.


        :param candidate_state: The candidate_state of this Electioneering.
        :type candidate_state: str
        """

        self._candidate_state = candidate_state

    @property
    def committee_id(self):
        """Gets the committee_id of this Electioneering.


        :return: The committee_id of this Electioneering.
        :rtype: str
        """
        return self._committee_id

    @committee_id.setter
    def committee_id(self, committee_id):
        """Sets the committee_id of this Electioneering.


        :param committee_id: The committee_id of this Electioneering.
        :type committee_id: str
        """

        self._committee_id = committee_id

    @property
    def committee_name(self):
        """Gets the committee_name of this Electioneering.


        :return: The committee_name of this Electioneering.
        :rtype: str
        """
        return self._committee_name

    @committee_name.setter
    def committee_name(self, committee_name):
        """Sets the committee_name of this Electioneering.


        :param committee_name: The committee_name of this Electioneering.
        :type committee_name: str
        """

        self._committee_name = committee_name

    @property
    def communication_date(self):
        """Gets the communication_date of this Electioneering.

         It is the airing, broadcast, cablecast or other dissemination of the communication. 

        :return: The communication_date of this Electioneering.
        :rtype: date
        """
        return self._communication_date

    @communication_date.setter
    def communication_date(self, communication_date):
        """Sets the communication_date of this Electioneering.

         It is the airing, broadcast, cablecast or other dissemination of the communication. 

        :param communication_date: The communication_date of this Electioneering.
        :type communication_date: date
        """

        self._communication_date = communication_date

    @property
    def disbursement_amount(self):
        """Gets the disbursement_amount of this Electioneering.


        :return: The disbursement_amount of this Electioneering.
        :rtype: float
        """
        return self._disbursement_amount

    @disbursement_amount.setter
    def disbursement_amount(self, disbursement_amount):
        """Sets the disbursement_amount of this Electioneering.


        :param disbursement_amount: The disbursement_amount of this Electioneering.
        :type disbursement_amount: float
        """

        self._disbursement_amount = disbursement_amount

    @property
    def disbursement_date(self):
        """Gets the disbursement_date of this Electioneering.

         Disbursement date includes actual disbursements and execution of contracts creating an obligation to make disbursements (SB date of disbursement). 

        :return: The disbursement_date of this Electioneering.
        :rtype: date
        """
        return self._disbursement_date

    @disbursement_date.setter
    def disbursement_date(self, disbursement_date):
        """Sets the disbursement_date of this Electioneering.

         Disbursement date includes actual disbursements and execution of contracts creating an obligation to make disbursements (SB date of disbursement). 

        :param disbursement_date: The disbursement_date of this Electioneering.
        :type disbursement_date: date
        """

        self._disbursement_date = disbursement_date

    @property
    def election_type(self):
        """Gets the election_type of this Electioneering.


        :return: The election_type of this Electioneering.
        :rtype: str
        """
        return self._election_type

    @election_type.setter
    def election_type(self, election_type):
        """Sets the election_type of this Electioneering.


        :param election_type: The election_type of this Electioneering.
        :type election_type: str
        """

        self._election_type = election_type

    @property
    def file_number(self):
        """Gets the file_number of this Electioneering.


        :return: The file_number of this Electioneering.
        :rtype: int
        """
        return self._file_number

    @file_number.setter
    def file_number(self, file_number):
        """Sets the file_number of this Electioneering.


        :param file_number: The file_number of this Electioneering.
        :type file_number: int
        """

        self._file_number = file_number

    @property
    def link_id(self):
        """Gets the link_id of this Electioneering.


        :return: The link_id of this Electioneering.
        :rtype: int
        """
        return self._link_id

    @link_id.setter
    def link_id(self, link_id):
        """Sets the link_id of this Electioneering.


        :param link_id: The link_id of this Electioneering.
        :type link_id: int
        """

        self._link_id = link_id

    @property
    def number_of_candidates(self):
        """Gets the number_of_candidates of this Electioneering.


        :return: The number_of_candidates of this Electioneering.
        :rtype: float
        """
        return self._number_of_candidates

    @number_of_candidates.setter
    def number_of_candidates(self, number_of_candidates):
        """Sets the number_of_candidates of this Electioneering.


        :param number_of_candidates: The number_of_candidates of this Electioneering.
        :type number_of_candidates: float
        """

        self._number_of_candidates = number_of_candidates

    @property
    def payee_name(self):
        """Gets the payee_name of this Electioneering.

         Name of the entity that received the payment. 

        :return: The payee_name of this Electioneering.
        :rtype: str
        """
        return self._payee_name

    @payee_name.setter
    def payee_name(self, payee_name):
        """Sets the payee_name of this Electioneering.

         Name of the entity that received the payment. 

        :param payee_name: The payee_name of this Electioneering.
        :type payee_name: str
        """

        self._payee_name = payee_name

    @property
    def payee_state(self):
        """Gets the payee_state of this Electioneering.


        :return: The payee_state of this Electioneering.
        :rtype: str
        """
        return self._payee_state

    @payee_state.setter
    def payee_state(self, payee_state):
        """Sets the payee_state of this Electioneering.


        :param payee_state: The payee_state of this Electioneering.
        :type payee_state: str
        """

        self._payee_state = payee_state

    @property
    def pdf_url(self):
        """Gets the pdf_url of this Electioneering.


        :return: The pdf_url of this Electioneering.
        :rtype: str
        """
        return self._pdf_url

    @pdf_url.setter
    def pdf_url(self, pdf_url):
        """Sets the pdf_url of this Electioneering.


        :param pdf_url: The pdf_url of this Electioneering.
        :type pdf_url: str
        """

        self._pdf_url = pdf_url

    @property
    def public_distribution_date(self):
        """Gets the public_distribution_date of this Electioneering.

         The pubic distribution date is the date that triggers disclosure of the electioneering communication (date reported on page 1 of Form 9). 

        :return: The public_distribution_date of this Electioneering.
        :rtype: date
        """
        return self._public_distribution_date

    @public_distribution_date.setter
    def public_distribution_date(self, public_distribution_date):
        """Sets the public_distribution_date of this Electioneering.

         The pubic distribution date is the date that triggers disclosure of the electioneering communication (date reported on page 1 of Form 9). 

        :param public_distribution_date: The public_distribution_date of this Electioneering.
        :type public_distribution_date: date
        """

        self._public_distribution_date = public_distribution_date

    @property
    def purpose_description(self):
        """Gets the purpose_description of this Electioneering.


        :return: The purpose_description of this Electioneering.
        :rtype: str
        """
        return self._purpose_description

    @purpose_description.setter
    def purpose_description(self, purpose_description):
        """Sets the purpose_description of this Electioneering.


        :param purpose_description: The purpose_description of this Electioneering.
        :type purpose_description: str
        """

        self._purpose_description = purpose_description

    @property
    def receipt_date(self):
        """Gets the receipt_date of this Electioneering.


        :return: The receipt_date of this Electioneering.
        :rtype: date
        """
        return self._receipt_date

    @receipt_date.setter
    def receipt_date(self, receipt_date):
        """Sets the receipt_date of this Electioneering.


        :param receipt_date: The receipt_date of this Electioneering.
        :type receipt_date: date
        """

        self._receipt_date = receipt_date

    @property
    def report_year(self):
        """Gets the report_year of this Electioneering.


        :return: The report_year of this Electioneering.
        :rtype: int
        """
        return self._report_year

    @report_year.setter
    def report_year(self, report_year):
        """Sets the report_year of this Electioneering.


        :param report_year: The report_year of this Electioneering.
        :type report_year: int
        """

        self._report_year = report_year

    @property
    def sb_image_num(self):
        """Gets the sb_image_num of this Electioneering.


        :return: The sb_image_num of this Electioneering.
        :rtype: str
        """
        return self._sb_image_num

    @sb_image_num.setter
    def sb_image_num(self, sb_image_num):
        """Sets the sb_image_num of this Electioneering.


        :param sb_image_num: The sb_image_num of this Electioneering.
        :type sb_image_num: str
        """

        self._sb_image_num = sb_image_num

    @property
    def sb_link_id(self):
        """Gets the sb_link_id of this Electioneering.


        :return: The sb_link_id of this Electioneering.
        :rtype: str
        """
        return self._sb_link_id

    @sb_link_id.setter
    def sb_link_id(self, sb_link_id):
        """Sets the sb_link_id of this Electioneering.


        :param sb_link_id: The sb_link_id of this Electioneering.
        :type sb_link_id: str
        """

        self._sb_link_id = sb_link_id

    @property
    def sub_id(self):
        """Gets the sub_id of this Electioneering.

         The identifier for each electioneering record. 

        :return: The sub_id of this Electioneering.
        :rtype: int
        """
        return self._sub_id

    @sub_id.setter
    def sub_id(self, sub_id):
        """Sets the sub_id of this Electioneering.

         The identifier for each electioneering record. 

        :param sub_id: The sub_id of this Electioneering.
        :type sub_id: int
        """

        self._sub_id = sub_id
