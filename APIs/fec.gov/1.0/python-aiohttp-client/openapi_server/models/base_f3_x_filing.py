# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseF3XFiling(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amend_address: str=None, amended_by: int=None, amendment: str=None, amendment_chain: List[int]=None, beginning_image_number: str=None, city: str=None, committee_id: str=None, committee_name: str=None, coverage_end_date: date=None, coverage_start_date: date=None, csv_url: str=None, document_description: str=None, election_date: date=None, election_state: str=None, fec_file_id: str=None, fec_url: str=None, file_number: int=None, is_amended: bool=None, most_recent: bool=None, most_recent_filing: int=None, pdf_url: str=None, qualified_multicandidate_committee: str=None, receipt_date: date=None, report: str=None, report_type: str=None, report_year: int=None, rpt_pgi: str=None, sign_date: date=None, state: str=None, street_1: str=None, street_2: str=None, summary_lines: str=None, zip: str=None):
        """BaseF3XFiling - a model defined in OpenAPI

        :param amend_address: The amend_address of this BaseF3XFiling.
        :param amended_by: The amended_by of this BaseF3XFiling.
        :param amendment: The amendment of this BaseF3XFiling.
        :param amendment_chain: The amendment_chain of this BaseF3XFiling.
        :param beginning_image_number: The beginning_image_number of this BaseF3XFiling.
        :param city: The city of this BaseF3XFiling.
        :param committee_id: The committee_id of this BaseF3XFiling.
        :param committee_name: The committee_name of this BaseF3XFiling.
        :param coverage_end_date: The coverage_end_date of this BaseF3XFiling.
        :param coverage_start_date: The coverage_start_date of this BaseF3XFiling.
        :param csv_url: The csv_url of this BaseF3XFiling.
        :param document_description: The document_description of this BaseF3XFiling.
        :param election_date: The election_date of this BaseF3XFiling.
        :param election_state: The election_state of this BaseF3XFiling.
        :param fec_file_id: The fec_file_id of this BaseF3XFiling.
        :param fec_url: The fec_url of this BaseF3XFiling.
        :param file_number: The file_number of this BaseF3XFiling.
        :param is_amended: The is_amended of this BaseF3XFiling.
        :param most_recent: The most_recent of this BaseF3XFiling.
        :param most_recent_filing: The most_recent_filing of this BaseF3XFiling.
        :param pdf_url: The pdf_url of this BaseF3XFiling.
        :param qualified_multicandidate_committee: The qualified_multicandidate_committee of this BaseF3XFiling.
        :param receipt_date: The receipt_date of this BaseF3XFiling.
        :param report: The report of this BaseF3XFiling.
        :param report_type: The report_type of this BaseF3XFiling.
        :param report_year: The report_year of this BaseF3XFiling.
        :param rpt_pgi: The rpt_pgi of this BaseF3XFiling.
        :param sign_date: The sign_date of this BaseF3XFiling.
        :param state: The state of this BaseF3XFiling.
        :param street_1: The street_1 of this BaseF3XFiling.
        :param street_2: The street_2 of this BaseF3XFiling.
        :param summary_lines: The summary_lines of this BaseF3XFiling.
        :param zip: The zip of this BaseF3XFiling.
        """
        self.openapi_types = {
            'amend_address': str,
            'amended_by': int,
            'amendment': str,
            'amendment_chain': List[int],
            'beginning_image_number': str,
            'city': str,
            'committee_id': str,
            'committee_name': str,
            'coverage_end_date': date,
            'coverage_start_date': date,
            'csv_url': str,
            'document_description': str,
            'election_date': date,
            'election_state': str,
            'fec_file_id': str,
            'fec_url': str,
            'file_number': int,
            'is_amended': bool,
            'most_recent': bool,
            'most_recent_filing': int,
            'pdf_url': str,
            'qualified_multicandidate_committee': str,
            'receipt_date': date,
            'report': str,
            'report_type': str,
            'report_year': int,
            'rpt_pgi': str,
            'sign_date': date,
            'state': str,
            'street_1': str,
            'street_2': str,
            'summary_lines': str,
            'zip': str
        }

        self.attribute_map = {
            'amend_address': 'amend_address',
            'amended_by': 'amended_by',
            'amendment': 'amendment',
            'amendment_chain': 'amendment_chain',
            'beginning_image_number': 'beginning_image_number',
            'city': 'city',
            'committee_id': 'committee_id',
            'committee_name': 'committee_name',
            'coverage_end_date': 'coverage_end_date',
            'coverage_start_date': 'coverage_start_date',
            'csv_url': 'csv_url',
            'document_description': 'document_description',
            'election_date': 'election_date',
            'election_state': 'election_state',
            'fec_file_id': 'fec_file_id',
            'fec_url': 'fec_url',
            'file_number': 'file_number',
            'is_amended': 'is_amended',
            'most_recent': 'most_recent',
            'most_recent_filing': 'most_recent_filing',
            'pdf_url': 'pdf_url',
            'qualified_multicandidate_committee': 'qualified_multicandidate_committee',
            'receipt_date': 'receipt_date',
            'report': 'report',
            'report_type': 'report_type',
            'report_year': 'report_year',
            'rpt_pgi': 'rpt_pgi',
            'sign_date': 'sign_date',
            'state': 'state',
            'street_1': 'street_1',
            'street_2': 'street_2',
            'summary_lines': 'summary_lines',
            'zip': 'zip'
        }

        self._amend_address = amend_address
        self._amended_by = amended_by
        self._amendment = amendment
        self._amendment_chain = amendment_chain
        self._beginning_image_number = beginning_image_number
        self._city = city
        self._committee_id = committee_id
        self._committee_name = committee_name
        self._coverage_end_date = coverage_end_date
        self._coverage_start_date = coverage_start_date
        self._csv_url = csv_url
        self._document_description = document_description
        self._election_date = election_date
        self._election_state = election_state
        self._fec_file_id = fec_file_id
        self._fec_url = fec_url
        self._file_number = file_number
        self._is_amended = is_amended
        self._most_recent = most_recent
        self._most_recent_filing = most_recent_filing
        self._pdf_url = pdf_url
        self._qualified_multicandidate_committee = qualified_multicandidate_committee
        self._receipt_date = receipt_date
        self._report = report
        self._report_type = report_type
        self._report_year = report_year
        self._rpt_pgi = rpt_pgi
        self._sign_date = sign_date
        self._state = state
        self._street_1 = street_1
        self._street_2 = street_2
        self._summary_lines = summary_lines
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseF3XFiling':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseF3XFiling of this BaseF3XFiling.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amend_address(self):
        """Gets the amend_address of this BaseF3XFiling.


        :return: The amend_address of this BaseF3XFiling.
        :rtype: str
        """
        return self._amend_address

    @amend_address.setter
    def amend_address(self, amend_address):
        """Sets the amend_address of this BaseF3XFiling.


        :param amend_address: The amend_address of this BaseF3XFiling.
        :type amend_address: str
        """

        self._amend_address = amend_address

    @property
    def amended_by(self):
        """Gets the amended_by of this BaseF3XFiling.


        :return: The amended_by of this BaseF3XFiling.
        :rtype: int
        """
        return self._amended_by

    @amended_by.setter
    def amended_by(self, amended_by):
        """Sets the amended_by of this BaseF3XFiling.


        :param amended_by: The amended_by of this BaseF3XFiling.
        :type amended_by: int
        """

        self._amended_by = amended_by

    @property
    def amendment(self):
        """Gets the amendment of this BaseF3XFiling.


        :return: The amendment of this BaseF3XFiling.
        :rtype: str
        """
        return self._amendment

    @amendment.setter
    def amendment(self, amendment):
        """Sets the amendment of this BaseF3XFiling.


        :param amendment: The amendment of this BaseF3XFiling.
        :type amendment: str
        """

        self._amendment = amendment

    @property
    def amendment_chain(self):
        """Gets the amendment_chain of this BaseF3XFiling.


        :return: The amendment_chain of this BaseF3XFiling.
        :rtype: List[int]
        """
        return self._amendment_chain

    @amendment_chain.setter
    def amendment_chain(self, amendment_chain):
        """Sets the amendment_chain of this BaseF3XFiling.


        :param amendment_chain: The amendment_chain of this BaseF3XFiling.
        :type amendment_chain: List[int]
        """

        self._amendment_chain = amendment_chain

    @property
    def beginning_image_number(self):
        """Gets the beginning_image_number of this BaseF3XFiling.


        :return: The beginning_image_number of this BaseF3XFiling.
        :rtype: str
        """
        return self._beginning_image_number

    @beginning_image_number.setter
    def beginning_image_number(self, beginning_image_number):
        """Sets the beginning_image_number of this BaseF3XFiling.


        :param beginning_image_number: The beginning_image_number of this BaseF3XFiling.
        :type beginning_image_number: str
        """

        self._beginning_image_number = beginning_image_number

    @property
    def city(self):
        """Gets the city of this BaseF3XFiling.


        :return: The city of this BaseF3XFiling.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this BaseF3XFiling.


        :param city: The city of this BaseF3XFiling.
        :type city: str
        """

        self._city = city

    @property
    def committee_id(self):
        """Gets the committee_id of this BaseF3XFiling.

         A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 

        :return: The committee_id of this BaseF3XFiling.
        :rtype: str
        """
        return self._committee_id

    @committee_id.setter
    def committee_id(self, committee_id):
        """Sets the committee_id of this BaseF3XFiling.

         A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 

        :param committee_id: The committee_id of this BaseF3XFiling.
        :type committee_id: str
        """

        self._committee_id = committee_id

    @property
    def committee_name(self):
        """Gets the committee_name of this BaseF3XFiling.

        The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.

        :return: The committee_name of this BaseF3XFiling.
        :rtype: str
        """
        return self._committee_name

    @committee_name.setter
    def committee_name(self, committee_name):
        """Sets the committee_name of this BaseF3XFiling.

        The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.

        :param committee_name: The committee_name of this BaseF3XFiling.
        :type committee_name: str
        """

        self._committee_name = committee_name

    @property
    def coverage_end_date(self):
        """Gets the coverage_end_date of this BaseF3XFiling.


        :return: The coverage_end_date of this BaseF3XFiling.
        :rtype: date
        """
        return self._coverage_end_date

    @coverage_end_date.setter
    def coverage_end_date(self, coverage_end_date):
        """Sets the coverage_end_date of this BaseF3XFiling.


        :param coverage_end_date: The coverage_end_date of this BaseF3XFiling.
        :type coverage_end_date: date
        """

        self._coverage_end_date = coverage_end_date

    @property
    def coverage_start_date(self):
        """Gets the coverage_start_date of this BaseF3XFiling.


        :return: The coverage_start_date of this BaseF3XFiling.
        :rtype: date
        """
        return self._coverage_start_date

    @coverage_start_date.setter
    def coverage_start_date(self, coverage_start_date):
        """Sets the coverage_start_date of this BaseF3XFiling.


        :param coverage_start_date: The coverage_start_date of this BaseF3XFiling.
        :type coverage_start_date: date
        """

        self._coverage_start_date = coverage_start_date

    @property
    def csv_url(self):
        """Gets the csv_url of this BaseF3XFiling.


        :return: The csv_url of this BaseF3XFiling.
        :rtype: str
        """
        return self._csv_url

    @csv_url.setter
    def csv_url(self, csv_url):
        """Sets the csv_url of this BaseF3XFiling.


        :param csv_url: The csv_url of this BaseF3XFiling.
        :type csv_url: str
        """

        self._csv_url = csv_url

    @property
    def document_description(self):
        """Gets the document_description of this BaseF3XFiling.


        :return: The document_description of this BaseF3XFiling.
        :rtype: str
        """
        return self._document_description

    @document_description.setter
    def document_description(self, document_description):
        """Sets the document_description of this BaseF3XFiling.


        :param document_description: The document_description of this BaseF3XFiling.
        :type document_description: str
        """

        self._document_description = document_description

    @property
    def election_date(self):
        """Gets the election_date of this BaseF3XFiling.


        :return: The election_date of this BaseF3XFiling.
        :rtype: date
        """
        return self._election_date

    @election_date.setter
    def election_date(self, election_date):
        """Sets the election_date of this BaseF3XFiling.


        :param election_date: The election_date of this BaseF3XFiling.
        :type election_date: date
        """

        self._election_date = election_date

    @property
    def election_state(self):
        """Gets the election_state of this BaseF3XFiling.


        :return: The election_state of this BaseF3XFiling.
        :rtype: str
        """
        return self._election_state

    @election_state.setter
    def election_state(self, election_state):
        """Sets the election_state of this BaseF3XFiling.


        :param election_state: The election_state of this BaseF3XFiling.
        :type election_state: str
        """

        self._election_state = election_state

    @property
    def fec_file_id(self):
        """Gets the fec_file_id of this BaseF3XFiling.


        :return: The fec_file_id of this BaseF3XFiling.
        :rtype: str
        """
        return self._fec_file_id

    @fec_file_id.setter
    def fec_file_id(self, fec_file_id):
        """Sets the fec_file_id of this BaseF3XFiling.


        :param fec_file_id: The fec_file_id of this BaseF3XFiling.
        :type fec_file_id: str
        """

        self._fec_file_id = fec_file_id

    @property
    def fec_url(self):
        """Gets the fec_url of this BaseF3XFiling.


        :return: The fec_url of this BaseF3XFiling.
        :rtype: str
        """
        return self._fec_url

    @fec_url.setter
    def fec_url(self, fec_url):
        """Sets the fec_url of this BaseF3XFiling.


        :param fec_url: The fec_url of this BaseF3XFiling.
        :type fec_url: str
        """

        self._fec_url = fec_url

    @property
    def file_number(self):
        """Gets the file_number of this BaseF3XFiling.


        :return: The file_number of this BaseF3XFiling.
        :rtype: int
        """
        return self._file_number

    @file_number.setter
    def file_number(self, file_number):
        """Sets the file_number of this BaseF3XFiling.


        :param file_number: The file_number of this BaseF3XFiling.
        :type file_number: int
        """

        self._file_number = file_number

    @property
    def is_amended(self):
        """Gets the is_amended of this BaseF3XFiling.


        :return: The is_amended of this BaseF3XFiling.
        :rtype: bool
        """
        return self._is_amended

    @is_amended.setter
    def is_amended(self, is_amended):
        """Sets the is_amended of this BaseF3XFiling.


        :param is_amended: The is_amended of this BaseF3XFiling.
        :type is_amended: bool
        """

        self._is_amended = is_amended

    @property
    def most_recent(self):
        """Gets the most_recent of this BaseF3XFiling.


        :return: The most_recent of this BaseF3XFiling.
        :rtype: bool
        """
        return self._most_recent

    @most_recent.setter
    def most_recent(self, most_recent):
        """Sets the most_recent of this BaseF3XFiling.


        :param most_recent: The most_recent of this BaseF3XFiling.
        :type most_recent: bool
        """

        self._most_recent = most_recent

    @property
    def most_recent_filing(self):
        """Gets the most_recent_filing of this BaseF3XFiling.


        :return: The most_recent_filing of this BaseF3XFiling.
        :rtype: int
        """
        return self._most_recent_filing

    @most_recent_filing.setter
    def most_recent_filing(self, most_recent_filing):
        """Sets the most_recent_filing of this BaseF3XFiling.


        :param most_recent_filing: The most_recent_filing of this BaseF3XFiling.
        :type most_recent_filing: int
        """

        self._most_recent_filing = most_recent_filing

    @property
    def pdf_url(self):
        """Gets the pdf_url of this BaseF3XFiling.


        :return: The pdf_url of this BaseF3XFiling.
        :rtype: str
        """
        return self._pdf_url

    @pdf_url.setter
    def pdf_url(self, pdf_url):
        """Sets the pdf_url of this BaseF3XFiling.


        :param pdf_url: The pdf_url of this BaseF3XFiling.
        :type pdf_url: str
        """

        self._pdf_url = pdf_url

    @property
    def qualified_multicandidate_committee(self):
        """Gets the qualified_multicandidate_committee of this BaseF3XFiling.


        :return: The qualified_multicandidate_committee of this BaseF3XFiling.
        :rtype: str
        """
        return self._qualified_multicandidate_committee

    @qualified_multicandidate_committee.setter
    def qualified_multicandidate_committee(self, qualified_multicandidate_committee):
        """Sets the qualified_multicandidate_committee of this BaseF3XFiling.


        :param qualified_multicandidate_committee: The qualified_multicandidate_committee of this BaseF3XFiling.
        :type qualified_multicandidate_committee: str
        """

        self._qualified_multicandidate_committee = qualified_multicandidate_committee

    @property
    def receipt_date(self):
        """Gets the receipt_date of this BaseF3XFiling.


        :return: The receipt_date of this BaseF3XFiling.
        :rtype: date
        """
        return self._receipt_date

    @receipt_date.setter
    def receipt_date(self, receipt_date):
        """Sets the receipt_date of this BaseF3XFiling.


        :param receipt_date: The receipt_date of this BaseF3XFiling.
        :type receipt_date: date
        """

        self._receipt_date = receipt_date

    @property
    def report(self):
        """Gets the report of this BaseF3XFiling.


        :return: The report of this BaseF3XFiling.
        :rtype: str
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this BaseF3XFiling.


        :param report: The report of this BaseF3XFiling.
        :type report: str
        """

        self._report = report

    @property
    def report_type(self):
        """Gets the report_type of this BaseF3XFiling.


        :return: The report_type of this BaseF3XFiling.
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this BaseF3XFiling.


        :param report_type: The report_type of this BaseF3XFiling.
        :type report_type: str
        """

        self._report_type = report_type

    @property
    def report_year(self):
        """Gets the report_year of this BaseF3XFiling.


        :return: The report_year of this BaseF3XFiling.
        :rtype: int
        """
        return self._report_year

    @report_year.setter
    def report_year(self, report_year):
        """Sets the report_year of this BaseF3XFiling.


        :param report_year: The report_year of this BaseF3XFiling.
        :type report_year: int
        """

        self._report_year = report_year

    @property
    def rpt_pgi(self):
        """Gets the rpt_pgi of this BaseF3XFiling.

        Election type  Convention, Primary, General, Special, Runoff etc. 

        :return: The rpt_pgi of this BaseF3XFiling.
        :rtype: str
        """
        return self._rpt_pgi

    @rpt_pgi.setter
    def rpt_pgi(self, rpt_pgi):
        """Sets the rpt_pgi of this BaseF3XFiling.

        Election type  Convention, Primary, General, Special, Runoff etc. 

        :param rpt_pgi: The rpt_pgi of this BaseF3XFiling.
        :type rpt_pgi: str
        """

        self._rpt_pgi = rpt_pgi

    @property
    def sign_date(self):
        """Gets the sign_date of this BaseF3XFiling.


        :return: The sign_date of this BaseF3XFiling.
        :rtype: date
        """
        return self._sign_date

    @sign_date.setter
    def sign_date(self, sign_date):
        """Sets the sign_date of this BaseF3XFiling.


        :param sign_date: The sign_date of this BaseF3XFiling.
        :type sign_date: date
        """

        self._sign_date = sign_date

    @property
    def state(self):
        """Gets the state of this BaseF3XFiling.


        :return: The state of this BaseF3XFiling.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BaseF3XFiling.


        :param state: The state of this BaseF3XFiling.
        :type state: str
        """

        self._state = state

    @property
    def street_1(self):
        """Gets the street_1 of this BaseF3XFiling.


        :return: The street_1 of this BaseF3XFiling.
        :rtype: str
        """
        return self._street_1

    @street_1.setter
    def street_1(self, street_1):
        """Sets the street_1 of this BaseF3XFiling.


        :param street_1: The street_1 of this BaseF3XFiling.
        :type street_1: str
        """

        self._street_1 = street_1

    @property
    def street_2(self):
        """Gets the street_2 of this BaseF3XFiling.


        :return: The street_2 of this BaseF3XFiling.
        :rtype: str
        """
        return self._street_2

    @street_2.setter
    def street_2(self, street_2):
        """Sets the street_2 of this BaseF3XFiling.


        :param street_2: The street_2 of this BaseF3XFiling.
        :type street_2: str
        """

        self._street_2 = street_2

    @property
    def summary_lines(self):
        """Gets the summary_lines of this BaseF3XFiling.


        :return: The summary_lines of this BaseF3XFiling.
        :rtype: str
        """
        return self._summary_lines

    @summary_lines.setter
    def summary_lines(self, summary_lines):
        """Sets the summary_lines of this BaseF3XFiling.


        :param summary_lines: The summary_lines of this BaseF3XFiling.
        :type summary_lines: str
        """

        self._summary_lines = summary_lines

    @property
    def zip(self):
        """Gets the zip of this BaseF3XFiling.


        :return: The zip of this BaseF3XFiling.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this BaseF3XFiling.


        :param zip: The zip of this BaseF3XFiling.
        :type zip: str
        """

        self._zip = zip
