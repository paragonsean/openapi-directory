# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SeekInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, last_indexes: str=None, pages: int=None, per_page: int=None):
        """SeekInfo - a model defined in OpenAPI

        :param count: The count of this SeekInfo.
        :param last_indexes: The last_indexes of this SeekInfo.
        :param pages: The pages of this SeekInfo.
        :param per_page: The per_page of this SeekInfo.
        """
        self.openapi_types = {
            'count': int,
            'last_indexes': str,
            'pages': int,
            'per_page': int
        }

        self.attribute_map = {
            'count': 'count',
            'last_indexes': 'last_indexes',
            'pages': 'pages',
            'per_page': 'per_page'
        }

        self._count = count
        self._last_indexes = last_indexes
        self._pages = pages
        self._per_page = per_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeekInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeekInfo of this SeekInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this SeekInfo.


        :return: The count of this SeekInfo.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SeekInfo.


        :param count: The count of this SeekInfo.
        :type count: int
        """

        self._count = count

    @property
    def last_indexes(self):
        """Gets the last_indexes of this SeekInfo.


        :return: The last_indexes of this SeekInfo.
        :rtype: str
        """
        return self._last_indexes

    @last_indexes.setter
    def last_indexes(self, last_indexes):
        """Sets the last_indexes of this SeekInfo.


        :param last_indexes: The last_indexes of this SeekInfo.
        :type last_indexes: str
        """

        self._last_indexes = last_indexes

    @property
    def pages(self):
        """Gets the pages of this SeekInfo.


        :return: The pages of this SeekInfo.
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this SeekInfo.


        :param pages: The pages of this SeekInfo.
        :type pages: int
        """

        self._pages = pages

    @property
    def per_page(self):
        """Gets the per_page of this SeekInfo.


        :return: The per_page of this SeekInfo.
        :rtype: int
        """
        return self._per_page

    @per_page.setter
    def per_page(self, per_page):
        """Sets the per_page of this SeekInfo.


        :param per_page: The per_page of this SeekInfo.
        :type per_page: int
        """

        self._per_page = per_page
