# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EfilingsAmendments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amendment_chain: List[float]=None, depth: float=None, file_number: int=None, last: float=None, longest_chain: List[float]=None, most_recent_filing: float=None, previous_file_number: float=None):
        """EfilingsAmendments - a model defined in OpenAPI

        :param amendment_chain: The amendment_chain of this EfilingsAmendments.
        :param depth: The depth of this EfilingsAmendments.
        :param file_number: The file_number of this EfilingsAmendments.
        :param last: The last of this EfilingsAmendments.
        :param longest_chain: The longest_chain of this EfilingsAmendments.
        :param most_recent_filing: The most_recent_filing of this EfilingsAmendments.
        :param previous_file_number: The previous_file_number of this EfilingsAmendments.
        """
        self.openapi_types = {
            'amendment_chain': List[float],
            'depth': float,
            'file_number': int,
            'last': float,
            'longest_chain': List[float],
            'most_recent_filing': float,
            'previous_file_number': float
        }

        self.attribute_map = {
            'amendment_chain': 'amendment_chain',
            'depth': 'depth',
            'file_number': 'file_number',
            'last': 'last',
            'longest_chain': 'longest_chain',
            'most_recent_filing': 'most_recent_filing',
            'previous_file_number': 'previous_file_number'
        }

        self._amendment_chain = amendment_chain
        self._depth = depth
        self._file_number = file_number
        self._last = last
        self._longest_chain = longest_chain
        self._most_recent_filing = most_recent_filing
        self._previous_file_number = previous_file_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EfilingsAmendments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EfilingsAmendments of this EfilingsAmendments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amendment_chain(self):
        """Gets the amendment_chain of this EfilingsAmendments.

         The first value in the chain is the original filing.  The ordering in the chain reflects the order the amendments were filed up to the amendment being inspected. 

        :return: The amendment_chain of this EfilingsAmendments.
        :rtype: List[float]
        """
        return self._amendment_chain

    @amendment_chain.setter
    def amendment_chain(self, amendment_chain):
        """Sets the amendment_chain of this EfilingsAmendments.

         The first value in the chain is the original filing.  The ordering in the chain reflects the order the amendments were filed up to the amendment being inspected. 

        :param amendment_chain: The amendment_chain of this EfilingsAmendments.
        :type amendment_chain: List[float]
        """

        self._amendment_chain = amendment_chain

    @property
    def depth(self):
        """Gets the depth of this EfilingsAmendments.


        :return: The depth of this EfilingsAmendments.
        :rtype: float
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this EfilingsAmendments.


        :param depth: The depth of this EfilingsAmendments.
        :type depth: float
        """

        self._depth = depth

    @property
    def file_number(self):
        """Gets the file_number of this EfilingsAmendments.

        Filing ID number

        :return: The file_number of this EfilingsAmendments.
        :rtype: int
        """
        return self._file_number

    @file_number.setter
    def file_number(self, file_number):
        """Sets the file_number of this EfilingsAmendments.

        Filing ID number

        :param file_number: The file_number of this EfilingsAmendments.
        :type file_number: int
        """

        self._file_number = file_number

    @property
    def last(self):
        """Gets the last of this EfilingsAmendments.


        :return: The last of this EfilingsAmendments.
        :rtype: float
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this EfilingsAmendments.


        :param last: The last of this EfilingsAmendments.
        :type last: float
        """

        self._last = last

    @property
    def longest_chain(self):
        """Gets the longest_chain of this EfilingsAmendments.


        :return: The longest_chain of this EfilingsAmendments.
        :rtype: List[float]
        """
        return self._longest_chain

    @longest_chain.setter
    def longest_chain(self, longest_chain):
        """Sets the longest_chain of this EfilingsAmendments.


        :param longest_chain: The longest_chain of this EfilingsAmendments.
        :type longest_chain: List[float]
        """

        self._longest_chain = longest_chain

    @property
    def most_recent_filing(self):
        """Gets the most_recent_filing of this EfilingsAmendments.


        :return: The most_recent_filing of this EfilingsAmendments.
        :rtype: float
        """
        return self._most_recent_filing

    @most_recent_filing.setter
    def most_recent_filing(self, most_recent_filing):
        """Sets the most_recent_filing of this EfilingsAmendments.


        :param most_recent_filing: The most_recent_filing of this EfilingsAmendments.
        :type most_recent_filing: float
        """

        self._most_recent_filing = most_recent_filing

    @property
    def previous_file_number(self):
        """Gets the previous_file_number of this EfilingsAmendments.

         Previous filing ID number 

        :return: The previous_file_number of this EfilingsAmendments.
        :rtype: float
        """
        return self._previous_file_number

    @previous_file_number.setter
    def previous_file_number(self, previous_file_number):
        """Sets the previous_file_number of this EfilingsAmendments.

         Previous filing ID number 

        :param previous_file_number: The previous_file_number of this EfilingsAmendments.
        :type previous_file_number: float
        """

        self._previous_file_number = previous_file_number
