# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CandidateCommitteeTotalsHouseSenate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_other_loans: float=None, candidate_contribution: float=None, candidate_election_year: int=None, candidate_id: str=None, contribution_refunds: float=None, contributions: float=None, coverage_end_date: datetime=None, coverage_start_date: datetime=None, cycle: int=None, disbursements: float=None, election_full: bool=None, exempt_legal_accounting_disbursement: float=None, federal_funds: float=None, fundraising_disbursements: float=None, individual_contributions: float=None, individual_itemized_contributions: float=None, individual_unitemized_contributions: float=None, last_beginning_image_number: str=None, last_cash_on_hand_end_period: float=None, last_debts_owed_by_committee: float=None, last_debts_owed_to_committee: float=None, last_net_contributions: float=None, last_net_operating_expenditures: float=None, last_report_type_full: str=None, last_report_year: int=None, loan_repayments: float=None, loan_repayments_candidate_loans: float=None, loan_repayments_other_loans: float=None, loans: float=None, loans_made_by_candidate: float=None, net_contributions: float=None, net_operating_expenditures: float=None, offsets_to_fundraising_expenditures: float=None, offsets_to_legal_accounting: float=None, offsets_to_operating_expenditures: float=None, operating_expenditures: float=None, other_disbursements: float=None, other_political_committee_contributions: float=None, other_receipts: float=None, political_party_committee_contributions: float=None, receipts: float=None, refunded_individual_contributions: float=None, refunded_other_political_committee_contributions: float=None, refunded_political_party_committee_contributions: float=None, total_offsets_to_operating_expenditures: float=None, transaction_coverage_date: datetime=None, transfers_from_other_authorized_committee: float=None, transfers_to_other_authorized_committee: float=None):
        """CandidateCommitteeTotalsHouseSenate - a model defined in OpenAPI

        :param all_other_loans: The all_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :param candidate_contribution: The candidate_contribution of this CandidateCommitteeTotalsHouseSenate.
        :param candidate_election_year: The candidate_election_year of this CandidateCommitteeTotalsHouseSenate.
        :param candidate_id: The candidate_id of this CandidateCommitteeTotalsHouseSenate.
        :param contribution_refunds: The contribution_refunds of this CandidateCommitteeTotalsHouseSenate.
        :param contributions: The contributions of this CandidateCommitteeTotalsHouseSenate.
        :param coverage_end_date: The coverage_end_date of this CandidateCommitteeTotalsHouseSenate.
        :param coverage_start_date: The coverage_start_date of this CandidateCommitteeTotalsHouseSenate.
        :param cycle: The cycle of this CandidateCommitteeTotalsHouseSenate.
        :param disbursements: The disbursements of this CandidateCommitteeTotalsHouseSenate.
        :param election_full: The election_full of this CandidateCommitteeTotalsHouseSenate.
        :param exempt_legal_accounting_disbursement: The exempt_legal_accounting_disbursement of this CandidateCommitteeTotalsHouseSenate.
        :param federal_funds: The federal_funds of this CandidateCommitteeTotalsHouseSenate.
        :param fundraising_disbursements: The fundraising_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :param individual_contributions: The individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param individual_itemized_contributions: The individual_itemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param individual_unitemized_contributions: The individual_unitemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param last_beginning_image_number: The last_beginning_image_number of this CandidateCommitteeTotalsHouseSenate.
        :param last_cash_on_hand_end_period: The last_cash_on_hand_end_period of this CandidateCommitteeTotalsHouseSenate.
        :param last_debts_owed_by_committee: The last_debts_owed_by_committee of this CandidateCommitteeTotalsHouseSenate.
        :param last_debts_owed_to_committee: The last_debts_owed_to_committee of this CandidateCommitteeTotalsHouseSenate.
        :param last_net_contributions: The last_net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param last_net_operating_expenditures: The last_net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param last_report_type_full: The last_report_type_full of this CandidateCommitteeTotalsHouseSenate.
        :param last_report_year: The last_report_year of this CandidateCommitteeTotalsHouseSenate.
        :param loan_repayments: The loan_repayments of this CandidateCommitteeTotalsHouseSenate.
        :param loan_repayments_candidate_loans: The loan_repayments_candidate_loans of this CandidateCommitteeTotalsHouseSenate.
        :param loan_repayments_other_loans: The loan_repayments_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :param loans: The loans of this CandidateCommitteeTotalsHouseSenate.
        :param loans_made_by_candidate: The loans_made_by_candidate of this CandidateCommitteeTotalsHouseSenate.
        :param net_contributions: The net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param net_operating_expenditures: The net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param offsets_to_fundraising_expenditures: The offsets_to_fundraising_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param offsets_to_legal_accounting: The offsets_to_legal_accounting of this CandidateCommitteeTotalsHouseSenate.
        :param offsets_to_operating_expenditures: The offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param operating_expenditures: The operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param other_disbursements: The other_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :param other_political_committee_contributions: The other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param other_receipts: The other_receipts of this CandidateCommitteeTotalsHouseSenate.
        :param political_party_committee_contributions: The political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param receipts: The receipts of this CandidateCommitteeTotalsHouseSenate.
        :param refunded_individual_contributions: The refunded_individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param refunded_other_political_committee_contributions: The refunded_other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param refunded_political_party_committee_contributions: The refunded_political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :param total_offsets_to_operating_expenditures: The total_offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :param transaction_coverage_date: The transaction_coverage_date of this CandidateCommitteeTotalsHouseSenate.
        :param transfers_from_other_authorized_committee: The transfers_from_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        :param transfers_to_other_authorized_committee: The transfers_to_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        """
        self.openapi_types = {
            'all_other_loans': float,
            'candidate_contribution': float,
            'candidate_election_year': int,
            'candidate_id': str,
            'contribution_refunds': float,
            'contributions': float,
            'coverage_end_date': datetime,
            'coverage_start_date': datetime,
            'cycle': int,
            'disbursements': float,
            'election_full': bool,
            'exempt_legal_accounting_disbursement': float,
            'federal_funds': float,
            'fundraising_disbursements': float,
            'individual_contributions': float,
            'individual_itemized_contributions': float,
            'individual_unitemized_contributions': float,
            'last_beginning_image_number': str,
            'last_cash_on_hand_end_period': float,
            'last_debts_owed_by_committee': float,
            'last_debts_owed_to_committee': float,
            'last_net_contributions': float,
            'last_net_operating_expenditures': float,
            'last_report_type_full': str,
            'last_report_year': int,
            'loan_repayments': float,
            'loan_repayments_candidate_loans': float,
            'loan_repayments_other_loans': float,
            'loans': float,
            'loans_made_by_candidate': float,
            'net_contributions': float,
            'net_operating_expenditures': float,
            'offsets_to_fundraising_expenditures': float,
            'offsets_to_legal_accounting': float,
            'offsets_to_operating_expenditures': float,
            'operating_expenditures': float,
            'other_disbursements': float,
            'other_political_committee_contributions': float,
            'other_receipts': float,
            'political_party_committee_contributions': float,
            'receipts': float,
            'refunded_individual_contributions': float,
            'refunded_other_political_committee_contributions': float,
            'refunded_political_party_committee_contributions': float,
            'total_offsets_to_operating_expenditures': float,
            'transaction_coverage_date': datetime,
            'transfers_from_other_authorized_committee': float,
            'transfers_to_other_authorized_committee': float
        }

        self.attribute_map = {
            'all_other_loans': 'all_other_loans',
            'candidate_contribution': 'candidate_contribution',
            'candidate_election_year': 'candidate_election_year',
            'candidate_id': 'candidate_id',
            'contribution_refunds': 'contribution_refunds',
            'contributions': 'contributions',
            'coverage_end_date': 'coverage_end_date',
            'coverage_start_date': 'coverage_start_date',
            'cycle': 'cycle',
            'disbursements': 'disbursements',
            'election_full': 'election_full',
            'exempt_legal_accounting_disbursement': 'exempt_legal_accounting_disbursement',
            'federal_funds': 'federal_funds',
            'fundraising_disbursements': 'fundraising_disbursements',
            'individual_contributions': 'individual_contributions',
            'individual_itemized_contributions': 'individual_itemized_contributions',
            'individual_unitemized_contributions': 'individual_unitemized_contributions',
            'last_beginning_image_number': 'last_beginning_image_number',
            'last_cash_on_hand_end_period': 'last_cash_on_hand_end_period',
            'last_debts_owed_by_committee': 'last_debts_owed_by_committee',
            'last_debts_owed_to_committee': 'last_debts_owed_to_committee',
            'last_net_contributions': 'last_net_contributions',
            'last_net_operating_expenditures': 'last_net_operating_expenditures',
            'last_report_type_full': 'last_report_type_full',
            'last_report_year': 'last_report_year',
            'loan_repayments': 'loan_repayments',
            'loan_repayments_candidate_loans': 'loan_repayments_candidate_loans',
            'loan_repayments_other_loans': 'loan_repayments_other_loans',
            'loans': 'loans',
            'loans_made_by_candidate': 'loans_made_by_candidate',
            'net_contributions': 'net_contributions',
            'net_operating_expenditures': 'net_operating_expenditures',
            'offsets_to_fundraising_expenditures': 'offsets_to_fundraising_expenditures',
            'offsets_to_legal_accounting': 'offsets_to_legal_accounting',
            'offsets_to_operating_expenditures': 'offsets_to_operating_expenditures',
            'operating_expenditures': 'operating_expenditures',
            'other_disbursements': 'other_disbursements',
            'other_political_committee_contributions': 'other_political_committee_contributions',
            'other_receipts': 'other_receipts',
            'political_party_committee_contributions': 'political_party_committee_contributions',
            'receipts': 'receipts',
            'refunded_individual_contributions': 'refunded_individual_contributions',
            'refunded_other_political_committee_contributions': 'refunded_other_political_committee_contributions',
            'refunded_political_party_committee_contributions': 'refunded_political_party_committee_contributions',
            'total_offsets_to_operating_expenditures': 'total_offsets_to_operating_expenditures',
            'transaction_coverage_date': 'transaction_coverage_date',
            'transfers_from_other_authorized_committee': 'transfers_from_other_authorized_committee',
            'transfers_to_other_authorized_committee': 'transfers_to_other_authorized_committee'
        }

        self._all_other_loans = all_other_loans
        self._candidate_contribution = candidate_contribution
        self._candidate_election_year = candidate_election_year
        self._candidate_id = candidate_id
        self._contribution_refunds = contribution_refunds
        self._contributions = contributions
        self._coverage_end_date = coverage_end_date
        self._coverage_start_date = coverage_start_date
        self._cycle = cycle
        self._disbursements = disbursements
        self._election_full = election_full
        self._exempt_legal_accounting_disbursement = exempt_legal_accounting_disbursement
        self._federal_funds = federal_funds
        self._fundraising_disbursements = fundraising_disbursements
        self._individual_contributions = individual_contributions
        self._individual_itemized_contributions = individual_itemized_contributions
        self._individual_unitemized_contributions = individual_unitemized_contributions
        self._last_beginning_image_number = last_beginning_image_number
        self._last_cash_on_hand_end_period = last_cash_on_hand_end_period
        self._last_debts_owed_by_committee = last_debts_owed_by_committee
        self._last_debts_owed_to_committee = last_debts_owed_to_committee
        self._last_net_contributions = last_net_contributions
        self._last_net_operating_expenditures = last_net_operating_expenditures
        self._last_report_type_full = last_report_type_full
        self._last_report_year = last_report_year
        self._loan_repayments = loan_repayments
        self._loan_repayments_candidate_loans = loan_repayments_candidate_loans
        self._loan_repayments_other_loans = loan_repayments_other_loans
        self._loans = loans
        self._loans_made_by_candidate = loans_made_by_candidate
        self._net_contributions = net_contributions
        self._net_operating_expenditures = net_operating_expenditures
        self._offsets_to_fundraising_expenditures = offsets_to_fundraising_expenditures
        self._offsets_to_legal_accounting = offsets_to_legal_accounting
        self._offsets_to_operating_expenditures = offsets_to_operating_expenditures
        self._operating_expenditures = operating_expenditures
        self._other_disbursements = other_disbursements
        self._other_political_committee_contributions = other_political_committee_contributions
        self._other_receipts = other_receipts
        self._political_party_committee_contributions = political_party_committee_contributions
        self._receipts = receipts
        self._refunded_individual_contributions = refunded_individual_contributions
        self._refunded_other_political_committee_contributions = refunded_other_political_committee_contributions
        self._refunded_political_party_committee_contributions = refunded_political_party_committee_contributions
        self._total_offsets_to_operating_expenditures = total_offsets_to_operating_expenditures
        self._transaction_coverage_date = transaction_coverage_date
        self._transfers_from_other_authorized_committee = transfers_from_other_authorized_committee
        self._transfers_to_other_authorized_committee = transfers_to_other_authorized_committee

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CandidateCommitteeTotalsHouseSenate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CandidateCommitteeTotalsHouseSenate of this CandidateCommitteeTotalsHouseSenate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_other_loans(self):
        """Gets the all_other_loans of this CandidateCommitteeTotalsHouseSenate.


        :return: The all_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._all_other_loans

    @all_other_loans.setter
    def all_other_loans(self, all_other_loans):
        """Sets the all_other_loans of this CandidateCommitteeTotalsHouseSenate.


        :param all_other_loans: The all_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :type all_other_loans: float
        """

        self._all_other_loans = all_other_loans

    @property
    def candidate_contribution(self):
        """Gets the candidate_contribution of this CandidateCommitteeTotalsHouseSenate.


        :return: The candidate_contribution of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._candidate_contribution

    @candidate_contribution.setter
    def candidate_contribution(self, candidate_contribution):
        """Sets the candidate_contribution of this CandidateCommitteeTotalsHouseSenate.


        :param candidate_contribution: The candidate_contribution of this CandidateCommitteeTotalsHouseSenate.
        :type candidate_contribution: float
        """

        self._candidate_contribution = candidate_contribution

    @property
    def candidate_election_year(self):
        """Gets the candidate_election_year of this CandidateCommitteeTotalsHouseSenate.

         Filter records to only those that are applicable to a given two-year period. This cycle follows the traditional House election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. The cycle begins with an odd year and is named for its ending, even year. 

        :return: The candidate_election_year of this CandidateCommitteeTotalsHouseSenate.
        :rtype: int
        """
        return self._candidate_election_year

    @candidate_election_year.setter
    def candidate_election_year(self, candidate_election_year):
        """Sets the candidate_election_year of this CandidateCommitteeTotalsHouseSenate.

         Filter records to only those that are applicable to a given two-year period. This cycle follows the traditional House election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. The cycle begins with an odd year and is named for its ending, even year. 

        :param candidate_election_year: The candidate_election_year of this CandidateCommitteeTotalsHouseSenate.
        :type candidate_election_year: int
        """
        if candidate_election_year is None:
            raise ValueError("Invalid value for `candidate_election_year`, must not be `None`")

        self._candidate_election_year = candidate_election_year

    @property
    def candidate_id(self):
        """Gets the candidate_id of this CandidateCommitteeTotalsHouseSenate.

         A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don't have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member's district changes during re-districting. Presidential IDs don't have districts. The rest is sequence. 

        :return: The candidate_id of this CandidateCommitteeTotalsHouseSenate.
        :rtype: str
        """
        return self._candidate_id

    @candidate_id.setter
    def candidate_id(self, candidate_id):
        """Sets the candidate_id of this CandidateCommitteeTotalsHouseSenate.

         A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. First character indicates office - [P]residential, [H]ouse, [S]enate]. Second character is the last digit of the two-year period the ID was created. Third and fourth is the candidate state. Presidential IDs don't have state. Fifth and sixth is the district when the candidate first ran. This does not change if the candidate/member's district changes during re-districting. Presidential IDs don't have districts. The rest is sequence. 

        :param candidate_id: The candidate_id of this CandidateCommitteeTotalsHouseSenate.
        :type candidate_id: str
        """
        if candidate_id is None:
            raise ValueError("Invalid value for `candidate_id`, must not be `None`")

        self._candidate_id = candidate_id

    @property
    def contribution_refunds(self):
        """Gets the contribution_refunds of this CandidateCommitteeTotalsHouseSenate.


        :return: The contribution_refunds of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._contribution_refunds

    @contribution_refunds.setter
    def contribution_refunds(self, contribution_refunds):
        """Sets the contribution_refunds of this CandidateCommitteeTotalsHouseSenate.


        :param contribution_refunds: The contribution_refunds of this CandidateCommitteeTotalsHouseSenate.
        :type contribution_refunds: float
        """

        self._contribution_refunds = contribution_refunds

    @property
    def contributions(self):
        """Gets the contributions of this CandidateCommitteeTotalsHouseSenate.

        Contribution

        :return: The contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._contributions

    @contributions.setter
    def contributions(self, contributions):
        """Sets the contributions of this CandidateCommitteeTotalsHouseSenate.

        Contribution

        :param contributions: The contributions of this CandidateCommitteeTotalsHouseSenate.
        :type contributions: float
        """

        self._contributions = contributions

    @property
    def coverage_end_date(self):
        """Gets the coverage_end_date of this CandidateCommitteeTotalsHouseSenate.


        :return: The coverage_end_date of this CandidateCommitteeTotalsHouseSenate.
        :rtype: datetime
        """
        return self._coverage_end_date

    @coverage_end_date.setter
    def coverage_end_date(self, coverage_end_date):
        """Sets the coverage_end_date of this CandidateCommitteeTotalsHouseSenate.


        :param coverage_end_date: The coverage_end_date of this CandidateCommitteeTotalsHouseSenate.
        :type coverage_end_date: datetime
        """

        self._coverage_end_date = coverage_end_date

    @property
    def coverage_start_date(self):
        """Gets the coverage_start_date of this CandidateCommitteeTotalsHouseSenate.


        :return: The coverage_start_date of this CandidateCommitteeTotalsHouseSenate.
        :rtype: datetime
        """
        return self._coverage_start_date

    @coverage_start_date.setter
    def coverage_start_date(self, coverage_start_date):
        """Sets the coverage_start_date of this CandidateCommitteeTotalsHouseSenate.


        :param coverage_start_date: The coverage_start_date of this CandidateCommitteeTotalsHouseSenate.
        :type coverage_start_date: datetime
        """

        self._coverage_start_date = coverage_start_date

    @property
    def cycle(self):
        """Gets the cycle of this CandidateCommitteeTotalsHouseSenate.

         Filter records to only those that are applicable to a given two-year period. This cycle follows the traditional House election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. The cycle begins with an odd year and is named for its ending, even year. 

        :return: The cycle of this CandidateCommitteeTotalsHouseSenate.
        :rtype: int
        """
        return self._cycle

    @cycle.setter
    def cycle(self, cycle):
        """Sets the cycle of this CandidateCommitteeTotalsHouseSenate.

         Filter records to only those that are applicable to a given two-year period. This cycle follows the traditional House election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. The cycle begins with an odd year and is named for its ending, even year. 

        :param cycle: The cycle of this CandidateCommitteeTotalsHouseSenate.
        :type cycle: int
        """
        if cycle is None:
            raise ValueError("Invalid value for `cycle`, must not be `None`")

        self._cycle = cycle

    @property
    def disbursements(self):
        """Gets the disbursements of this CandidateCommitteeTotalsHouseSenate.

        Disbursements

        :return: The disbursements of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._disbursements

    @disbursements.setter
    def disbursements(self, disbursements):
        """Sets the disbursements of this CandidateCommitteeTotalsHouseSenate.

        Disbursements

        :param disbursements: The disbursements of this CandidateCommitteeTotalsHouseSenate.
        :type disbursements: float
        """

        self._disbursements = disbursements

    @property
    def election_full(self):
        """Gets the election_full of this CandidateCommitteeTotalsHouseSenate.


        :return: The election_full of this CandidateCommitteeTotalsHouseSenate.
        :rtype: bool
        """
        return self._election_full

    @election_full.setter
    def election_full(self, election_full):
        """Sets the election_full of this CandidateCommitteeTotalsHouseSenate.


        :param election_full: The election_full of this CandidateCommitteeTotalsHouseSenate.
        :type election_full: bool
        """
        if election_full is None:
            raise ValueError("Invalid value for `election_full`, must not be `None`")

        self._election_full = election_full

    @property
    def exempt_legal_accounting_disbursement(self):
        """Gets the exempt_legal_accounting_disbursement of this CandidateCommitteeTotalsHouseSenate.


        :return: The exempt_legal_accounting_disbursement of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._exempt_legal_accounting_disbursement

    @exempt_legal_accounting_disbursement.setter
    def exempt_legal_accounting_disbursement(self, exempt_legal_accounting_disbursement):
        """Sets the exempt_legal_accounting_disbursement of this CandidateCommitteeTotalsHouseSenate.


        :param exempt_legal_accounting_disbursement: The exempt_legal_accounting_disbursement of this CandidateCommitteeTotalsHouseSenate.
        :type exempt_legal_accounting_disbursement: float
        """

        self._exempt_legal_accounting_disbursement = exempt_legal_accounting_disbursement

    @property
    def federal_funds(self):
        """Gets the federal_funds of this CandidateCommitteeTotalsHouseSenate.


        :return: The federal_funds of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._federal_funds

    @federal_funds.setter
    def federal_funds(self, federal_funds):
        """Sets the federal_funds of this CandidateCommitteeTotalsHouseSenate.


        :param federal_funds: The federal_funds of this CandidateCommitteeTotalsHouseSenate.
        :type federal_funds: float
        """

        self._federal_funds = federal_funds

    @property
    def fundraising_disbursements(self):
        """Gets the fundraising_disbursements of this CandidateCommitteeTotalsHouseSenate.


        :return: The fundraising_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._fundraising_disbursements

    @fundraising_disbursements.setter
    def fundraising_disbursements(self, fundraising_disbursements):
        """Sets the fundraising_disbursements of this CandidateCommitteeTotalsHouseSenate.


        :param fundraising_disbursements: The fundraising_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :type fundraising_disbursements: float
        """

        self._fundraising_disbursements = fundraising_disbursements

    @property
    def individual_contributions(self):
        """Gets the individual_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._individual_contributions

    @individual_contributions.setter
    def individual_contributions(self, individual_contributions):
        """Sets the individual_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param individual_contributions: The individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type individual_contributions: float
        """

        self._individual_contributions = individual_contributions

    @property
    def individual_itemized_contributions(self):
        """Gets the individual_itemized_contributions of this CandidateCommitteeTotalsHouseSenate.

        Individual itemized contributions are from individuals whose aggregate contributions total over $200 per individual per year. Be aware, some filers choose to itemize donations $200 or less.

        :return: The individual_itemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._individual_itemized_contributions

    @individual_itemized_contributions.setter
    def individual_itemized_contributions(self, individual_itemized_contributions):
        """Sets the individual_itemized_contributions of this CandidateCommitteeTotalsHouseSenate.

        Individual itemized contributions are from individuals whose aggregate contributions total over $200 per individual per year. Be aware, some filers choose to itemize donations $200 or less.

        :param individual_itemized_contributions: The individual_itemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type individual_itemized_contributions: float
        """

        self._individual_itemized_contributions = individual_itemized_contributions

    @property
    def individual_unitemized_contributions(self):
        """Gets the individual_unitemized_contributions of this CandidateCommitteeTotalsHouseSenate.

        Unitemized contributions are made individuals whose aggregate contributions total $200 or less per individual per year. Be aware, some filers choose to itemize donations $200 or less and in that case those donations will appear in the itemized total.

        :return: The individual_unitemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._individual_unitemized_contributions

    @individual_unitemized_contributions.setter
    def individual_unitemized_contributions(self, individual_unitemized_contributions):
        """Sets the individual_unitemized_contributions of this CandidateCommitteeTotalsHouseSenate.

        Unitemized contributions are made individuals whose aggregate contributions total $200 or less per individual per year. Be aware, some filers choose to itemize donations $200 or less and in that case those donations will appear in the itemized total.

        :param individual_unitemized_contributions: The individual_unitemized_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type individual_unitemized_contributions: float
        """

        self._individual_unitemized_contributions = individual_unitemized_contributions

    @property
    def last_beginning_image_number(self):
        """Gets the last_beginning_image_number of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_beginning_image_number of this CandidateCommitteeTotalsHouseSenate.
        :rtype: str
        """
        return self._last_beginning_image_number

    @last_beginning_image_number.setter
    def last_beginning_image_number(self, last_beginning_image_number):
        """Sets the last_beginning_image_number of this CandidateCommitteeTotalsHouseSenate.


        :param last_beginning_image_number: The last_beginning_image_number of this CandidateCommitteeTotalsHouseSenate.
        :type last_beginning_image_number: str
        """

        self._last_beginning_image_number = last_beginning_image_number

    @property
    def last_cash_on_hand_end_period(self):
        """Gets the last_cash_on_hand_end_period of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_cash_on_hand_end_period of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._last_cash_on_hand_end_period

    @last_cash_on_hand_end_period.setter
    def last_cash_on_hand_end_period(self, last_cash_on_hand_end_period):
        """Sets the last_cash_on_hand_end_period of this CandidateCommitteeTotalsHouseSenate.


        :param last_cash_on_hand_end_period: The last_cash_on_hand_end_period of this CandidateCommitteeTotalsHouseSenate.
        :type last_cash_on_hand_end_period: float
        """

        self._last_cash_on_hand_end_period = last_cash_on_hand_end_period

    @property
    def last_debts_owed_by_committee(self):
        """Gets the last_debts_owed_by_committee of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_debts_owed_by_committee of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._last_debts_owed_by_committee

    @last_debts_owed_by_committee.setter
    def last_debts_owed_by_committee(self, last_debts_owed_by_committee):
        """Sets the last_debts_owed_by_committee of this CandidateCommitteeTotalsHouseSenate.


        :param last_debts_owed_by_committee: The last_debts_owed_by_committee of this CandidateCommitteeTotalsHouseSenate.
        :type last_debts_owed_by_committee: float
        """

        self._last_debts_owed_by_committee = last_debts_owed_by_committee

    @property
    def last_debts_owed_to_committee(self):
        """Gets the last_debts_owed_to_committee of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_debts_owed_to_committee of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._last_debts_owed_to_committee

    @last_debts_owed_to_committee.setter
    def last_debts_owed_to_committee(self, last_debts_owed_to_committee):
        """Sets the last_debts_owed_to_committee of this CandidateCommitteeTotalsHouseSenate.


        :param last_debts_owed_to_committee: The last_debts_owed_to_committee of this CandidateCommitteeTotalsHouseSenate.
        :type last_debts_owed_to_committee: float
        """

        self._last_debts_owed_to_committee = last_debts_owed_to_committee

    @property
    def last_net_contributions(self):
        """Gets the last_net_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._last_net_contributions

    @last_net_contributions.setter
    def last_net_contributions(self, last_net_contributions):
        """Sets the last_net_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param last_net_contributions: The last_net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type last_net_contributions: float
        """

        self._last_net_contributions = last_net_contributions

    @property
    def last_net_operating_expenditures(self):
        """Gets the last_net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._last_net_operating_expenditures

    @last_net_operating_expenditures.setter
    def last_net_operating_expenditures(self, last_net_operating_expenditures):
        """Sets the last_net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param last_net_operating_expenditures: The last_net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type last_net_operating_expenditures: float
        """

        self._last_net_operating_expenditures = last_net_operating_expenditures

    @property
    def last_report_type_full(self):
        """Gets the last_report_type_full of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_report_type_full of this CandidateCommitteeTotalsHouseSenate.
        :rtype: str
        """
        return self._last_report_type_full

    @last_report_type_full.setter
    def last_report_type_full(self, last_report_type_full):
        """Sets the last_report_type_full of this CandidateCommitteeTotalsHouseSenate.


        :param last_report_type_full: The last_report_type_full of this CandidateCommitteeTotalsHouseSenate.
        :type last_report_type_full: str
        """

        self._last_report_type_full = last_report_type_full

    @property
    def last_report_year(self):
        """Gets the last_report_year of this CandidateCommitteeTotalsHouseSenate.


        :return: The last_report_year of this CandidateCommitteeTotalsHouseSenate.
        :rtype: int
        """
        return self._last_report_year

    @last_report_year.setter
    def last_report_year(self, last_report_year):
        """Sets the last_report_year of this CandidateCommitteeTotalsHouseSenate.


        :param last_report_year: The last_report_year of this CandidateCommitteeTotalsHouseSenate.
        :type last_report_year: int
        """

        self._last_report_year = last_report_year

    @property
    def loan_repayments(self):
        """Gets the loan_repayments of this CandidateCommitteeTotalsHouseSenate.


        :return: The loan_repayments of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._loan_repayments

    @loan_repayments.setter
    def loan_repayments(self, loan_repayments):
        """Sets the loan_repayments of this CandidateCommitteeTotalsHouseSenate.


        :param loan_repayments: The loan_repayments of this CandidateCommitteeTotalsHouseSenate.
        :type loan_repayments: float
        """

        self._loan_repayments = loan_repayments

    @property
    def loan_repayments_candidate_loans(self):
        """Gets the loan_repayments_candidate_loans of this CandidateCommitteeTotalsHouseSenate.


        :return: The loan_repayments_candidate_loans of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._loan_repayments_candidate_loans

    @loan_repayments_candidate_loans.setter
    def loan_repayments_candidate_loans(self, loan_repayments_candidate_loans):
        """Sets the loan_repayments_candidate_loans of this CandidateCommitteeTotalsHouseSenate.


        :param loan_repayments_candidate_loans: The loan_repayments_candidate_loans of this CandidateCommitteeTotalsHouseSenate.
        :type loan_repayments_candidate_loans: float
        """

        self._loan_repayments_candidate_loans = loan_repayments_candidate_loans

    @property
    def loan_repayments_other_loans(self):
        """Gets the loan_repayments_other_loans of this CandidateCommitteeTotalsHouseSenate.


        :return: The loan_repayments_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._loan_repayments_other_loans

    @loan_repayments_other_loans.setter
    def loan_repayments_other_loans(self, loan_repayments_other_loans):
        """Sets the loan_repayments_other_loans of this CandidateCommitteeTotalsHouseSenate.


        :param loan_repayments_other_loans: The loan_repayments_other_loans of this CandidateCommitteeTotalsHouseSenate.
        :type loan_repayments_other_loans: float
        """

        self._loan_repayments_other_loans = loan_repayments_other_loans

    @property
    def loans(self):
        """Gets the loans of this CandidateCommitteeTotalsHouseSenate.


        :return: The loans of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._loans

    @loans.setter
    def loans(self, loans):
        """Sets the loans of this CandidateCommitteeTotalsHouseSenate.


        :param loans: The loans of this CandidateCommitteeTotalsHouseSenate.
        :type loans: float
        """

        self._loans = loans

    @property
    def loans_made_by_candidate(self):
        """Gets the loans_made_by_candidate of this CandidateCommitteeTotalsHouseSenate.


        :return: The loans_made_by_candidate of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._loans_made_by_candidate

    @loans_made_by_candidate.setter
    def loans_made_by_candidate(self, loans_made_by_candidate):
        """Sets the loans_made_by_candidate of this CandidateCommitteeTotalsHouseSenate.


        :param loans_made_by_candidate: The loans_made_by_candidate of this CandidateCommitteeTotalsHouseSenate.
        :type loans_made_by_candidate: float
        """

        self._loans_made_by_candidate = loans_made_by_candidate

    @property
    def net_contributions(self):
        """Gets the net_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._net_contributions

    @net_contributions.setter
    def net_contributions(self, net_contributions):
        """Sets the net_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param net_contributions: The net_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type net_contributions: float
        """

        self._net_contributions = net_contributions

    @property
    def net_operating_expenditures(self):
        """Gets the net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._net_operating_expenditures

    @net_operating_expenditures.setter
    def net_operating_expenditures(self, net_operating_expenditures):
        """Sets the net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param net_operating_expenditures: The net_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type net_operating_expenditures: float
        """

        self._net_operating_expenditures = net_operating_expenditures

    @property
    def offsets_to_fundraising_expenditures(self):
        """Gets the offsets_to_fundraising_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The offsets_to_fundraising_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._offsets_to_fundraising_expenditures

    @offsets_to_fundraising_expenditures.setter
    def offsets_to_fundraising_expenditures(self, offsets_to_fundraising_expenditures):
        """Sets the offsets_to_fundraising_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param offsets_to_fundraising_expenditures: The offsets_to_fundraising_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type offsets_to_fundraising_expenditures: float
        """

        self._offsets_to_fundraising_expenditures = offsets_to_fundraising_expenditures

    @property
    def offsets_to_legal_accounting(self):
        """Gets the offsets_to_legal_accounting of this CandidateCommitteeTotalsHouseSenate.


        :return: The offsets_to_legal_accounting of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._offsets_to_legal_accounting

    @offsets_to_legal_accounting.setter
    def offsets_to_legal_accounting(self, offsets_to_legal_accounting):
        """Sets the offsets_to_legal_accounting of this CandidateCommitteeTotalsHouseSenate.


        :param offsets_to_legal_accounting: The offsets_to_legal_accounting of this CandidateCommitteeTotalsHouseSenate.
        :type offsets_to_legal_accounting: float
        """

        self._offsets_to_legal_accounting = offsets_to_legal_accounting

    @property
    def offsets_to_operating_expenditures(self):
        """Gets the offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._offsets_to_operating_expenditures

    @offsets_to_operating_expenditures.setter
    def offsets_to_operating_expenditures(self, offsets_to_operating_expenditures):
        """Sets the offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param offsets_to_operating_expenditures: The offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type offsets_to_operating_expenditures: float
        """

        self._offsets_to_operating_expenditures = offsets_to_operating_expenditures

    @property
    def operating_expenditures(self):
        """Gets the operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._operating_expenditures

    @operating_expenditures.setter
    def operating_expenditures(self, operating_expenditures):
        """Sets the operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param operating_expenditures: The operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type operating_expenditures: float
        """

        self._operating_expenditures = operating_expenditures

    @property
    def other_disbursements(self):
        """Gets the other_disbursements of this CandidateCommitteeTotalsHouseSenate.


        :return: The other_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._other_disbursements

    @other_disbursements.setter
    def other_disbursements(self, other_disbursements):
        """Sets the other_disbursements of this CandidateCommitteeTotalsHouseSenate.


        :param other_disbursements: The other_disbursements of this CandidateCommitteeTotalsHouseSenate.
        :type other_disbursements: float
        """

        self._other_disbursements = other_disbursements

    @property
    def other_political_committee_contributions(self):
        """Gets the other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._other_political_committee_contributions

    @other_political_committee_contributions.setter
    def other_political_committee_contributions(self, other_political_committee_contributions):
        """Sets the other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param other_political_committee_contributions: The other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type other_political_committee_contributions: float
        """

        self._other_political_committee_contributions = other_political_committee_contributions

    @property
    def other_receipts(self):
        """Gets the other_receipts of this CandidateCommitteeTotalsHouseSenate.


        :return: The other_receipts of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._other_receipts

    @other_receipts.setter
    def other_receipts(self, other_receipts):
        """Sets the other_receipts of this CandidateCommitteeTotalsHouseSenate.


        :param other_receipts: The other_receipts of this CandidateCommitteeTotalsHouseSenate.
        :type other_receipts: float
        """

        self._other_receipts = other_receipts

    @property
    def political_party_committee_contributions(self):
        """Gets the political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._political_party_committee_contributions

    @political_party_committee_contributions.setter
    def political_party_committee_contributions(self, political_party_committee_contributions):
        """Sets the political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param political_party_committee_contributions: The political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type political_party_committee_contributions: float
        """

        self._political_party_committee_contributions = political_party_committee_contributions

    @property
    def receipts(self):
        """Gets the receipts of this CandidateCommitteeTotalsHouseSenate.


        :return: The receipts of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._receipts

    @receipts.setter
    def receipts(self, receipts):
        """Sets the receipts of this CandidateCommitteeTotalsHouseSenate.


        :param receipts: The receipts of this CandidateCommitteeTotalsHouseSenate.
        :type receipts: float
        """

        self._receipts = receipts

    @property
    def refunded_individual_contributions(self):
        """Gets the refunded_individual_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The refunded_individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._refunded_individual_contributions

    @refunded_individual_contributions.setter
    def refunded_individual_contributions(self, refunded_individual_contributions):
        """Sets the refunded_individual_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param refunded_individual_contributions: The refunded_individual_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type refunded_individual_contributions: float
        """

        self._refunded_individual_contributions = refunded_individual_contributions

    @property
    def refunded_other_political_committee_contributions(self):
        """Gets the refunded_other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The refunded_other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._refunded_other_political_committee_contributions

    @refunded_other_political_committee_contributions.setter
    def refunded_other_political_committee_contributions(self, refunded_other_political_committee_contributions):
        """Sets the refunded_other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param refunded_other_political_committee_contributions: The refunded_other_political_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type refunded_other_political_committee_contributions: float
        """

        self._refunded_other_political_committee_contributions = refunded_other_political_committee_contributions

    @property
    def refunded_political_party_committee_contributions(self):
        """Gets the refunded_political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :return: The refunded_political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._refunded_political_party_committee_contributions

    @refunded_political_party_committee_contributions.setter
    def refunded_political_party_committee_contributions(self, refunded_political_party_committee_contributions):
        """Sets the refunded_political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.


        :param refunded_political_party_committee_contributions: The refunded_political_party_committee_contributions of this CandidateCommitteeTotalsHouseSenate.
        :type refunded_political_party_committee_contributions: float
        """

        self._refunded_political_party_committee_contributions = refunded_political_party_committee_contributions

    @property
    def total_offsets_to_operating_expenditures(self):
        """Gets the total_offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :return: The total_offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._total_offsets_to_operating_expenditures

    @total_offsets_to_operating_expenditures.setter
    def total_offsets_to_operating_expenditures(self, total_offsets_to_operating_expenditures):
        """Sets the total_offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.


        :param total_offsets_to_operating_expenditures: The total_offsets_to_operating_expenditures of this CandidateCommitteeTotalsHouseSenate.
        :type total_offsets_to_operating_expenditures: float
        """

        self._total_offsets_to_operating_expenditures = total_offsets_to_operating_expenditures

    @property
    def transaction_coverage_date(self):
        """Gets the transaction_coverage_date of this CandidateCommitteeTotalsHouseSenate.


        :return: The transaction_coverage_date of this CandidateCommitteeTotalsHouseSenate.
        :rtype: datetime
        """
        return self._transaction_coverage_date

    @transaction_coverage_date.setter
    def transaction_coverage_date(self, transaction_coverage_date):
        """Sets the transaction_coverage_date of this CandidateCommitteeTotalsHouseSenate.


        :param transaction_coverage_date: The transaction_coverage_date of this CandidateCommitteeTotalsHouseSenate.
        :type transaction_coverage_date: datetime
        """

        self._transaction_coverage_date = transaction_coverage_date

    @property
    def transfers_from_other_authorized_committee(self):
        """Gets the transfers_from_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.


        :return: The transfers_from_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._transfers_from_other_authorized_committee

    @transfers_from_other_authorized_committee.setter
    def transfers_from_other_authorized_committee(self, transfers_from_other_authorized_committee):
        """Sets the transfers_from_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.


        :param transfers_from_other_authorized_committee: The transfers_from_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        :type transfers_from_other_authorized_committee: float
        """

        self._transfers_from_other_authorized_committee = transfers_from_other_authorized_committee

    @property
    def transfers_to_other_authorized_committee(self):
        """Gets the transfers_to_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.


        :return: The transfers_to_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        :rtype: float
        """
        return self._transfers_to_other_authorized_committee

    @transfers_to_other_authorized_committee.setter
    def transfers_to_other_authorized_committee(self, transfers_to_other_authorized_committee):
        """Sets the transfers_to_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.


        :param transfers_to_other_authorized_committee: The transfers_to_other_authorized_committee of this CandidateCommitteeTotalsHouseSenate.
        :type transfers_to_other_authorized_committee: float
        """

        self._transfers_to_other_authorized_committee = transfers_to_other_authorized_committee
