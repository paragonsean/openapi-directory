# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TotalByOffice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, election_year: int=None, office: str=None, total_disbursements: float=None, total_individual_itemized_contributions: float=None, total_other_political_committee_contributions: float=None, total_receipts: float=None, total_transfers_from_other_authorized_committee: float=None):
        """TotalByOffice - a model defined in OpenAPI

        :param election_year: The election_year of this TotalByOffice.
        :param office: The office of this TotalByOffice.
        :param total_disbursements: The total_disbursements of this TotalByOffice.
        :param total_individual_itemized_contributions: The total_individual_itemized_contributions of this TotalByOffice.
        :param total_other_political_committee_contributions: The total_other_political_committee_contributions of this TotalByOffice.
        :param total_receipts: The total_receipts of this TotalByOffice.
        :param total_transfers_from_other_authorized_committee: The total_transfers_from_other_authorized_committee of this TotalByOffice.
        """
        self.openapi_types = {
            'election_year': int,
            'office': str,
            'total_disbursements': float,
            'total_individual_itemized_contributions': float,
            'total_other_political_committee_contributions': float,
            'total_receipts': float,
            'total_transfers_from_other_authorized_committee': float
        }

        self.attribute_map = {
            'election_year': 'election_year',
            'office': 'office',
            'total_disbursements': 'total_disbursements',
            'total_individual_itemized_contributions': 'total_individual_itemized_contributions',
            'total_other_political_committee_contributions': 'total_other_political_committee_contributions',
            'total_receipts': 'total_receipts',
            'total_transfers_from_other_authorized_committee': 'total_transfers_from_other_authorized_committee'
        }

        self._election_year = election_year
        self._office = office
        self._total_disbursements = total_disbursements
        self._total_individual_itemized_contributions = total_individual_itemized_contributions
        self._total_other_political_committee_contributions = total_other_political_committee_contributions
        self._total_receipts = total_receipts
        self._total_transfers_from_other_authorized_committee = total_transfers_from_other_authorized_committee

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TotalByOffice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TotalByOffice of this TotalByOffice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def election_year(self):
        """Gets the election_year of this TotalByOffice.


        :return: The election_year of this TotalByOffice.
        :rtype: int
        """
        return self._election_year

    @election_year.setter
    def election_year(self, election_year):
        """Sets the election_year of this TotalByOffice.


        :param election_year: The election_year of this TotalByOffice.
        :type election_year: int
        """

        self._election_year = election_year

    @property
    def office(self):
        """Gets the office of this TotalByOffice.


        :return: The office of this TotalByOffice.
        :rtype: str
        """
        return self._office

    @office.setter
    def office(self, office):
        """Sets the office of this TotalByOffice.


        :param office: The office of this TotalByOffice.
        :type office: str
        """

        self._office = office

    @property
    def total_disbursements(self):
        """Gets the total_disbursements of this TotalByOffice.


        :return: The total_disbursements of this TotalByOffice.
        :rtype: float
        """
        return self._total_disbursements

    @total_disbursements.setter
    def total_disbursements(self, total_disbursements):
        """Sets the total_disbursements of this TotalByOffice.


        :param total_disbursements: The total_disbursements of this TotalByOffice.
        :type total_disbursements: float
        """

        self._total_disbursements = total_disbursements

    @property
    def total_individual_itemized_contributions(self):
        """Gets the total_individual_itemized_contributions of this TotalByOffice.


        :return: The total_individual_itemized_contributions of this TotalByOffice.
        :rtype: float
        """
        return self._total_individual_itemized_contributions

    @total_individual_itemized_contributions.setter
    def total_individual_itemized_contributions(self, total_individual_itemized_contributions):
        """Sets the total_individual_itemized_contributions of this TotalByOffice.


        :param total_individual_itemized_contributions: The total_individual_itemized_contributions of this TotalByOffice.
        :type total_individual_itemized_contributions: float
        """

        self._total_individual_itemized_contributions = total_individual_itemized_contributions

    @property
    def total_other_political_committee_contributions(self):
        """Gets the total_other_political_committee_contributions of this TotalByOffice.


        :return: The total_other_political_committee_contributions of this TotalByOffice.
        :rtype: float
        """
        return self._total_other_political_committee_contributions

    @total_other_political_committee_contributions.setter
    def total_other_political_committee_contributions(self, total_other_political_committee_contributions):
        """Sets the total_other_political_committee_contributions of this TotalByOffice.


        :param total_other_political_committee_contributions: The total_other_political_committee_contributions of this TotalByOffice.
        :type total_other_political_committee_contributions: float
        """

        self._total_other_political_committee_contributions = total_other_political_committee_contributions

    @property
    def total_receipts(self):
        """Gets the total_receipts of this TotalByOffice.


        :return: The total_receipts of this TotalByOffice.
        :rtype: float
        """
        return self._total_receipts

    @total_receipts.setter
    def total_receipts(self, total_receipts):
        """Sets the total_receipts of this TotalByOffice.


        :param total_receipts: The total_receipts of this TotalByOffice.
        :type total_receipts: float
        """

        self._total_receipts = total_receipts

    @property
    def total_transfers_from_other_authorized_committee(self):
        """Gets the total_transfers_from_other_authorized_committee of this TotalByOffice.


        :return: The total_transfers_from_other_authorized_committee of this TotalByOffice.
        :rtype: float
        """
        return self._total_transfers_from_other_authorized_committee

    @total_transfers_from_other_authorized_committee.setter
    def total_transfers_from_other_authorized_committee(self, total_transfers_from_other_authorized_committee):
        """Sets the total_transfers_from_other_authorized_committee of this TotalByOffice.


        :param total_transfers_from_other_authorized_committee: The total_transfers_from_other_authorized_committee of this TotalByOffice.
        :type total_transfers_from_other_authorized_committee: float
        """

        self._total_transfers_from_other_authorized_committee = total_transfers_from_other_authorized_committee
