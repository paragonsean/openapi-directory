# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommunicationCost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_code: str=None, action_code_full: str=None, candidate_first_name: str=None, candidate_id: str=None, candidate_last_name: str=None, candidate_middle_name: str=None, candidate_name: str=None, candidate_office: str=None, candidate_office_district: str=None, candidate_office_full: str=None, candidate_office_state: str=None, committee_id: str=None, committee_name: str=None, communication_class: str=None, communication_type: str=None, communication_type_full: str=None, cycle: int=None, file_number: int=None, form_type_code: str=None, image_number: str=None, original_sub_id: int=None, pdf_url: str=None, primary_general_indicator: str=None, primary_general_indicator_description: str=None, purpose: str=None, report_type: str=None, report_year: int=None, schedule_type: str=None, schedule_type_full: str=None, state_full: str=None, sub_id: int=None, support_oppose_indicator: str=None, tran_id: str=None, transaction_amount: float=None, transaction_date: date=None, transaction_type: str=None):
        """CommunicationCost - a model defined in OpenAPI

        :param action_code: The action_code of this CommunicationCost.
        :param action_code_full: The action_code_full of this CommunicationCost.
        :param candidate_first_name: The candidate_first_name of this CommunicationCost.
        :param candidate_id: The candidate_id of this CommunicationCost.
        :param candidate_last_name: The candidate_last_name of this CommunicationCost.
        :param candidate_middle_name: The candidate_middle_name of this CommunicationCost.
        :param candidate_name: The candidate_name of this CommunicationCost.
        :param candidate_office: The candidate_office of this CommunicationCost.
        :param candidate_office_district: The candidate_office_district of this CommunicationCost.
        :param candidate_office_full: The candidate_office_full of this CommunicationCost.
        :param candidate_office_state: The candidate_office_state of this CommunicationCost.
        :param committee_id: The committee_id of this CommunicationCost.
        :param committee_name: The committee_name of this CommunicationCost.
        :param communication_class: The communication_class of this CommunicationCost.
        :param communication_type: The communication_type of this CommunicationCost.
        :param communication_type_full: The communication_type_full of this CommunicationCost.
        :param cycle: The cycle of this CommunicationCost.
        :param file_number: The file_number of this CommunicationCost.
        :param form_type_code: The form_type_code of this CommunicationCost.
        :param image_number: The image_number of this CommunicationCost.
        :param original_sub_id: The original_sub_id of this CommunicationCost.
        :param pdf_url: The pdf_url of this CommunicationCost.
        :param primary_general_indicator: The primary_general_indicator of this CommunicationCost.
        :param primary_general_indicator_description: The primary_general_indicator_description of this CommunicationCost.
        :param purpose: The purpose of this CommunicationCost.
        :param report_type: The report_type of this CommunicationCost.
        :param report_year: The report_year of this CommunicationCost.
        :param schedule_type: The schedule_type of this CommunicationCost.
        :param schedule_type_full: The schedule_type_full of this CommunicationCost.
        :param state_full: The state_full of this CommunicationCost.
        :param sub_id: The sub_id of this CommunicationCost.
        :param support_oppose_indicator: The support_oppose_indicator of this CommunicationCost.
        :param tran_id: The tran_id of this CommunicationCost.
        :param transaction_amount: The transaction_amount of this CommunicationCost.
        :param transaction_date: The transaction_date of this CommunicationCost.
        :param transaction_type: The transaction_type of this CommunicationCost.
        """
        self.openapi_types = {
            'action_code': str,
            'action_code_full': str,
            'candidate_first_name': str,
            'candidate_id': str,
            'candidate_last_name': str,
            'candidate_middle_name': str,
            'candidate_name': str,
            'candidate_office': str,
            'candidate_office_district': str,
            'candidate_office_full': str,
            'candidate_office_state': str,
            'committee_id': str,
            'committee_name': str,
            'communication_class': str,
            'communication_type': str,
            'communication_type_full': str,
            'cycle': int,
            'file_number': int,
            'form_type_code': str,
            'image_number': str,
            'original_sub_id': int,
            'pdf_url': str,
            'primary_general_indicator': str,
            'primary_general_indicator_description': str,
            'purpose': str,
            'report_type': str,
            'report_year': int,
            'schedule_type': str,
            'schedule_type_full': str,
            'state_full': str,
            'sub_id': int,
            'support_oppose_indicator': str,
            'tran_id': str,
            'transaction_amount': float,
            'transaction_date': date,
            'transaction_type': str
        }

        self.attribute_map = {
            'action_code': 'action_code',
            'action_code_full': 'action_code_full',
            'candidate_first_name': 'candidate_first_name',
            'candidate_id': 'candidate_id',
            'candidate_last_name': 'candidate_last_name',
            'candidate_middle_name': 'candidate_middle_name',
            'candidate_name': 'candidate_name',
            'candidate_office': 'candidate_office',
            'candidate_office_district': 'candidate_office_district',
            'candidate_office_full': 'candidate_office_full',
            'candidate_office_state': 'candidate_office_state',
            'committee_id': 'committee_id',
            'committee_name': 'committee_name',
            'communication_class': 'communication_class',
            'communication_type': 'communication_type',
            'communication_type_full': 'communication_type_full',
            'cycle': 'cycle',
            'file_number': 'file_number',
            'form_type_code': 'form_type_code',
            'image_number': 'image_number',
            'original_sub_id': 'original_sub_id',
            'pdf_url': 'pdf_url',
            'primary_general_indicator': 'primary_general_indicator',
            'primary_general_indicator_description': 'primary_general_indicator_description',
            'purpose': 'purpose',
            'report_type': 'report_type',
            'report_year': 'report_year',
            'schedule_type': 'schedule_type',
            'schedule_type_full': 'schedule_type_full',
            'state_full': 'state_full',
            'sub_id': 'sub_id',
            'support_oppose_indicator': 'support_oppose_indicator',
            'tran_id': 'tran_id',
            'transaction_amount': 'transaction_amount',
            'transaction_date': 'transaction_date',
            'transaction_type': 'transaction_type'
        }

        self._action_code = action_code
        self._action_code_full = action_code_full
        self._candidate_first_name = candidate_first_name
        self._candidate_id = candidate_id
        self._candidate_last_name = candidate_last_name
        self._candidate_middle_name = candidate_middle_name
        self._candidate_name = candidate_name
        self._candidate_office = candidate_office
        self._candidate_office_district = candidate_office_district
        self._candidate_office_full = candidate_office_full
        self._candidate_office_state = candidate_office_state
        self._committee_id = committee_id
        self._committee_name = committee_name
        self._communication_class = communication_class
        self._communication_type = communication_type
        self._communication_type_full = communication_type_full
        self._cycle = cycle
        self._file_number = file_number
        self._form_type_code = form_type_code
        self._image_number = image_number
        self._original_sub_id = original_sub_id
        self._pdf_url = pdf_url
        self._primary_general_indicator = primary_general_indicator
        self._primary_general_indicator_description = primary_general_indicator_description
        self._purpose = purpose
        self._report_type = report_type
        self._report_year = report_year
        self._schedule_type = schedule_type
        self._schedule_type_full = schedule_type_full
        self._state_full = state_full
        self._sub_id = sub_id
        self._support_oppose_indicator = support_oppose_indicator
        self._tran_id = tran_id
        self._transaction_amount = transaction_amount
        self._transaction_date = transaction_date
        self._transaction_type = transaction_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommunicationCost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommunicationCost of this CommunicationCost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_code(self):
        """Gets the action_code of this CommunicationCost.


        :return: The action_code of this CommunicationCost.
        :rtype: str
        """
        return self._action_code

    @action_code.setter
    def action_code(self, action_code):
        """Sets the action_code of this CommunicationCost.


        :param action_code: The action_code of this CommunicationCost.
        :type action_code: str
        """

        self._action_code = action_code

    @property
    def action_code_full(self):
        """Gets the action_code_full of this CommunicationCost.


        :return: The action_code_full of this CommunicationCost.
        :rtype: str
        """
        return self._action_code_full

    @action_code_full.setter
    def action_code_full(self, action_code_full):
        """Sets the action_code_full of this CommunicationCost.


        :param action_code_full: The action_code_full of this CommunicationCost.
        :type action_code_full: str
        """

        self._action_code_full = action_code_full

    @property
    def candidate_first_name(self):
        """Gets the candidate_first_name of this CommunicationCost.


        :return: The candidate_first_name of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_first_name

    @candidate_first_name.setter
    def candidate_first_name(self, candidate_first_name):
        """Sets the candidate_first_name of this CommunicationCost.


        :param candidate_first_name: The candidate_first_name of this CommunicationCost.
        :type candidate_first_name: str
        """

        self._candidate_first_name = candidate_first_name

    @property
    def candidate_id(self):
        """Gets the candidate_id of this CommunicationCost.


        :return: The candidate_id of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_id

    @candidate_id.setter
    def candidate_id(self, candidate_id):
        """Sets the candidate_id of this CommunicationCost.


        :param candidate_id: The candidate_id of this CommunicationCost.
        :type candidate_id: str
        """

        self._candidate_id = candidate_id

    @property
    def candidate_last_name(self):
        """Gets the candidate_last_name of this CommunicationCost.


        :return: The candidate_last_name of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_last_name

    @candidate_last_name.setter
    def candidate_last_name(self, candidate_last_name):
        """Sets the candidate_last_name of this CommunicationCost.


        :param candidate_last_name: The candidate_last_name of this CommunicationCost.
        :type candidate_last_name: str
        """

        self._candidate_last_name = candidate_last_name

    @property
    def candidate_middle_name(self):
        """Gets the candidate_middle_name of this CommunicationCost.


        :return: The candidate_middle_name of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_middle_name

    @candidate_middle_name.setter
    def candidate_middle_name(self, candidate_middle_name):
        """Sets the candidate_middle_name of this CommunicationCost.


        :param candidate_middle_name: The candidate_middle_name of this CommunicationCost.
        :type candidate_middle_name: str
        """

        self._candidate_middle_name = candidate_middle_name

    @property
    def candidate_name(self):
        """Gets the candidate_name of this CommunicationCost.


        :return: The candidate_name of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_name

    @candidate_name.setter
    def candidate_name(self, candidate_name):
        """Sets the candidate_name of this CommunicationCost.


        :param candidate_name: The candidate_name of this CommunicationCost.
        :type candidate_name: str
        """

        self._candidate_name = candidate_name

    @property
    def candidate_office(self):
        """Gets the candidate_office of this CommunicationCost.


        :return: The candidate_office of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_office

    @candidate_office.setter
    def candidate_office(self, candidate_office):
        """Sets the candidate_office of this CommunicationCost.


        :param candidate_office: The candidate_office of this CommunicationCost.
        :type candidate_office: str
        """

        self._candidate_office = candidate_office

    @property
    def candidate_office_district(self):
        """Gets the candidate_office_district of this CommunicationCost.


        :return: The candidate_office_district of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_office_district

    @candidate_office_district.setter
    def candidate_office_district(self, candidate_office_district):
        """Sets the candidate_office_district of this CommunicationCost.


        :param candidate_office_district: The candidate_office_district of this CommunicationCost.
        :type candidate_office_district: str
        """

        self._candidate_office_district = candidate_office_district

    @property
    def candidate_office_full(self):
        """Gets the candidate_office_full of this CommunicationCost.


        :return: The candidate_office_full of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_office_full

    @candidate_office_full.setter
    def candidate_office_full(self, candidate_office_full):
        """Sets the candidate_office_full of this CommunicationCost.


        :param candidate_office_full: The candidate_office_full of this CommunicationCost.
        :type candidate_office_full: str
        """

        self._candidate_office_full = candidate_office_full

    @property
    def candidate_office_state(self):
        """Gets the candidate_office_state of this CommunicationCost.


        :return: The candidate_office_state of this CommunicationCost.
        :rtype: str
        """
        return self._candidate_office_state

    @candidate_office_state.setter
    def candidate_office_state(self, candidate_office_state):
        """Sets the candidate_office_state of this CommunicationCost.


        :param candidate_office_state: The candidate_office_state of this CommunicationCost.
        :type candidate_office_state: str
        """

        self._candidate_office_state = candidate_office_state

    @property
    def committee_id(self):
        """Gets the committee_id of this CommunicationCost.


        :return: The committee_id of this CommunicationCost.
        :rtype: str
        """
        return self._committee_id

    @committee_id.setter
    def committee_id(self, committee_id):
        """Sets the committee_id of this CommunicationCost.


        :param committee_id: The committee_id of this CommunicationCost.
        :type committee_id: str
        """

        self._committee_id = committee_id

    @property
    def committee_name(self):
        """Gets the committee_name of this CommunicationCost.


        :return: The committee_name of this CommunicationCost.
        :rtype: str
        """
        return self._committee_name

    @committee_name.setter
    def committee_name(self, committee_name):
        """Sets the committee_name of this CommunicationCost.


        :param committee_name: The committee_name of this CommunicationCost.
        :type committee_name: str
        """

        self._committee_name = committee_name

    @property
    def communication_class(self):
        """Gets the communication_class of this CommunicationCost.


        :return: The communication_class of this CommunicationCost.
        :rtype: str
        """
        return self._communication_class

    @communication_class.setter
    def communication_class(self, communication_class):
        """Sets the communication_class of this CommunicationCost.


        :param communication_class: The communication_class of this CommunicationCost.
        :type communication_class: str
        """

        self._communication_class = communication_class

    @property
    def communication_type(self):
        """Gets the communication_type of this CommunicationCost.


        :return: The communication_type of this CommunicationCost.
        :rtype: str
        """
        return self._communication_type

    @communication_type.setter
    def communication_type(self, communication_type):
        """Sets the communication_type of this CommunicationCost.


        :param communication_type: The communication_type of this CommunicationCost.
        :type communication_type: str
        """

        self._communication_type = communication_type

    @property
    def communication_type_full(self):
        """Gets the communication_type_full of this CommunicationCost.


        :return: The communication_type_full of this CommunicationCost.
        :rtype: str
        """
        return self._communication_type_full

    @communication_type_full.setter
    def communication_type_full(self, communication_type_full):
        """Sets the communication_type_full of this CommunicationCost.


        :param communication_type_full: The communication_type_full of this CommunicationCost.
        :type communication_type_full: str
        """

        self._communication_type_full = communication_type_full

    @property
    def cycle(self):
        """Gets the cycle of this CommunicationCost.


        :return: The cycle of this CommunicationCost.
        :rtype: int
        """
        return self._cycle

    @cycle.setter
    def cycle(self, cycle):
        """Sets the cycle of this CommunicationCost.


        :param cycle: The cycle of this CommunicationCost.
        :type cycle: int
        """

        self._cycle = cycle

    @property
    def file_number(self):
        """Gets the file_number of this CommunicationCost.


        :return: The file_number of this CommunicationCost.
        :rtype: int
        """
        return self._file_number

    @file_number.setter
    def file_number(self, file_number):
        """Sets the file_number of this CommunicationCost.


        :param file_number: The file_number of this CommunicationCost.
        :type file_number: int
        """

        self._file_number = file_number

    @property
    def form_type_code(self):
        """Gets the form_type_code of this CommunicationCost.


        :return: The form_type_code of this CommunicationCost.
        :rtype: str
        """
        return self._form_type_code

    @form_type_code.setter
    def form_type_code(self, form_type_code):
        """Sets the form_type_code of this CommunicationCost.


        :param form_type_code: The form_type_code of this CommunicationCost.
        :type form_type_code: str
        """

        self._form_type_code = form_type_code

    @property
    def image_number(self):
        """Gets the image_number of this CommunicationCost.


        :return: The image_number of this CommunicationCost.
        :rtype: str
        """
        return self._image_number

    @image_number.setter
    def image_number(self, image_number):
        """Sets the image_number of this CommunicationCost.


        :param image_number: The image_number of this CommunicationCost.
        :type image_number: str
        """

        self._image_number = image_number

    @property
    def original_sub_id(self):
        """Gets the original_sub_id of this CommunicationCost.


        :return: The original_sub_id of this CommunicationCost.
        :rtype: int
        """
        return self._original_sub_id

    @original_sub_id.setter
    def original_sub_id(self, original_sub_id):
        """Sets the original_sub_id of this CommunicationCost.


        :param original_sub_id: The original_sub_id of this CommunicationCost.
        :type original_sub_id: int
        """

        self._original_sub_id = original_sub_id

    @property
    def pdf_url(self):
        """Gets the pdf_url of this CommunicationCost.


        :return: The pdf_url of this CommunicationCost.
        :rtype: str
        """
        return self._pdf_url

    @pdf_url.setter
    def pdf_url(self, pdf_url):
        """Sets the pdf_url of this CommunicationCost.


        :param pdf_url: The pdf_url of this CommunicationCost.
        :type pdf_url: str
        """

        self._pdf_url = pdf_url

    @property
    def primary_general_indicator(self):
        """Gets the primary_general_indicator of this CommunicationCost.


        :return: The primary_general_indicator of this CommunicationCost.
        :rtype: str
        """
        return self._primary_general_indicator

    @primary_general_indicator.setter
    def primary_general_indicator(self, primary_general_indicator):
        """Sets the primary_general_indicator of this CommunicationCost.


        :param primary_general_indicator: The primary_general_indicator of this CommunicationCost.
        :type primary_general_indicator: str
        """

        self._primary_general_indicator = primary_general_indicator

    @property
    def primary_general_indicator_description(self):
        """Gets the primary_general_indicator_description of this CommunicationCost.


        :return: The primary_general_indicator_description of this CommunicationCost.
        :rtype: str
        """
        return self._primary_general_indicator_description

    @primary_general_indicator_description.setter
    def primary_general_indicator_description(self, primary_general_indicator_description):
        """Sets the primary_general_indicator_description of this CommunicationCost.


        :param primary_general_indicator_description: The primary_general_indicator_description of this CommunicationCost.
        :type primary_general_indicator_description: str
        """

        self._primary_general_indicator_description = primary_general_indicator_description

    @property
    def purpose(self):
        """Gets the purpose of this CommunicationCost.


        :return: The purpose of this CommunicationCost.
        :rtype: str
        """
        return self._purpose

    @purpose.setter
    def purpose(self, purpose):
        """Sets the purpose of this CommunicationCost.


        :param purpose: The purpose of this CommunicationCost.
        :type purpose: str
        """

        self._purpose = purpose

    @property
    def report_type(self):
        """Gets the report_type of this CommunicationCost.


        :return: The report_type of this CommunicationCost.
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this CommunicationCost.


        :param report_type: The report_type of this CommunicationCost.
        :type report_type: str
        """

        self._report_type = report_type

    @property
    def report_year(self):
        """Gets the report_year of this CommunicationCost.


        :return: The report_year of this CommunicationCost.
        :rtype: int
        """
        return self._report_year

    @report_year.setter
    def report_year(self, report_year):
        """Sets the report_year of this CommunicationCost.


        :param report_year: The report_year of this CommunicationCost.
        :type report_year: int
        """

        self._report_year = report_year

    @property
    def schedule_type(self):
        """Gets the schedule_type of this CommunicationCost.


        :return: The schedule_type of this CommunicationCost.
        :rtype: str
        """
        return self._schedule_type

    @schedule_type.setter
    def schedule_type(self, schedule_type):
        """Sets the schedule_type of this CommunicationCost.


        :param schedule_type: The schedule_type of this CommunicationCost.
        :type schedule_type: str
        """

        self._schedule_type = schedule_type

    @property
    def schedule_type_full(self):
        """Gets the schedule_type_full of this CommunicationCost.


        :return: The schedule_type_full of this CommunicationCost.
        :rtype: str
        """
        return self._schedule_type_full

    @schedule_type_full.setter
    def schedule_type_full(self, schedule_type_full):
        """Sets the schedule_type_full of this CommunicationCost.


        :param schedule_type_full: The schedule_type_full of this CommunicationCost.
        :type schedule_type_full: str
        """

        self._schedule_type_full = schedule_type_full

    @property
    def state_full(self):
        """Gets the state_full of this CommunicationCost.


        :return: The state_full of this CommunicationCost.
        :rtype: str
        """
        return self._state_full

    @state_full.setter
    def state_full(self, state_full):
        """Sets the state_full of this CommunicationCost.


        :param state_full: The state_full of this CommunicationCost.
        :type state_full: str
        """

        self._state_full = state_full

    @property
    def sub_id(self):
        """Gets the sub_id of this CommunicationCost.


        :return: The sub_id of this CommunicationCost.
        :rtype: int
        """
        return self._sub_id

    @sub_id.setter
    def sub_id(self, sub_id):
        """Sets the sub_id of this CommunicationCost.


        :param sub_id: The sub_id of this CommunicationCost.
        :type sub_id: int
        """

        self._sub_id = sub_id

    @property
    def support_oppose_indicator(self):
        """Gets the support_oppose_indicator of this CommunicationCost.


        :return: The support_oppose_indicator of this CommunicationCost.
        :rtype: str
        """
        return self._support_oppose_indicator

    @support_oppose_indicator.setter
    def support_oppose_indicator(self, support_oppose_indicator):
        """Sets the support_oppose_indicator of this CommunicationCost.


        :param support_oppose_indicator: The support_oppose_indicator of this CommunicationCost.
        :type support_oppose_indicator: str
        """

        self._support_oppose_indicator = support_oppose_indicator

    @property
    def tran_id(self):
        """Gets the tran_id of this CommunicationCost.


        :return: The tran_id of this CommunicationCost.
        :rtype: str
        """
        return self._tran_id

    @tran_id.setter
    def tran_id(self, tran_id):
        """Sets the tran_id of this CommunicationCost.


        :param tran_id: The tran_id of this CommunicationCost.
        :type tran_id: str
        """

        self._tran_id = tran_id

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this CommunicationCost.


        :return: The transaction_amount of this CommunicationCost.
        :rtype: float
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this CommunicationCost.


        :param transaction_amount: The transaction_amount of this CommunicationCost.
        :type transaction_amount: float
        """

        self._transaction_amount = transaction_amount

    @property
    def transaction_date(self):
        """Gets the transaction_date of this CommunicationCost.


        :return: The transaction_date of this CommunicationCost.
        :rtype: date
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this CommunicationCost.


        :param transaction_date: The transaction_date of this CommunicationCost.
        :type transaction_date: date
        """

        self._transaction_date = transaction_date

    @property
    def transaction_type(self):
        """Gets the transaction_type of this CommunicationCost.


        :return: The transaction_type of this CommunicationCost.
        :rtype: str
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this CommunicationCost.


        :param transaction_type: The transaction_type of this CommunicationCost.
        :type transaction_type: str
        """

        self._transaction_type = transaction_type
