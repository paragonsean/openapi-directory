# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner_ao_citations_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner_documents_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner_entities_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner_regulatory_citations_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner
from openapi_server.models.legal_search_get_default_response_advisory_opinions_inner_statutory_citations_inner import LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner
from openapi_server import util


class LegalSearchGetDefaultResponseAdvisoryOpinionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ao_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]=None, aos_cited_by: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]=None, commenter_names: List[str]=None, document_highlights: object=None, documents: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner]=None, entities: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner]=None, highlights: List[str]=None, is_pending: bool=None, issue_date: date=None, name: str=None, _false: str=None, regulatory_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner]=None, representative_names: List[str]=None, request_date: date=None, requestor_names: List[str]=None, requestor_types: List[str]=None, status: str=None, statutory_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner]=None, summary: str=None):
        """LegalSearchGetDefaultResponseAdvisoryOpinionsInner - a model defined in OpenAPI

        :param ao_citations: The ao_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param aos_cited_by: The aos_cited_by of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param commenter_names: The commenter_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param document_highlights: The document_highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param documents: The documents of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param entities: The entities of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param highlights: The highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param is_pending: The is_pending of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param issue_date: The issue_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param name: The name of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param _false: The _false of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param regulatory_citations: The regulatory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param representative_names: The representative_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param request_date: The request_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param requestor_names: The requestor_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param requestor_types: The requestor_types of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param status: The status of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param statutory_citations: The statutory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :param summary: The summary of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        """
        self.openapi_types = {
            'ao_citations': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner],
            'aos_cited_by': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner],
            'commenter_names': List[str],
            'document_highlights': object,
            'documents': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner],
            'entities': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner],
            'highlights': List[str],
            'is_pending': bool,
            'issue_date': date,
            'name': str,
            '_false': str,
            'regulatory_citations': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner],
            'representative_names': List[str],
            'request_date': date,
            'requestor_names': List[str],
            'requestor_types': List[str],
            'status': str,
            'statutory_citations': List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner],
            'summary': str
        }

        self.attribute_map = {
            'ao_citations': 'ao_citations',
            'aos_cited_by': 'aos_cited_by',
            'commenter_names': 'commenter_names',
            'document_highlights': 'document_highlights',
            'documents': 'documents',
            'entities': 'entities',
            'highlights': 'highlights',
            'is_pending': 'is_pending',
            'issue_date': 'issue_date',
            'name': 'name',
            '_false': 'false',
            'regulatory_citations': 'regulatory_citations',
            'representative_names': 'representative_names',
            'request_date': 'request_date',
            'requestor_names': 'requestor_names',
            'requestor_types': 'requestor_types',
            'status': 'status',
            'statutory_citations': 'statutory_citations',
            'summary': 'summary'
        }

        self._ao_citations = ao_citations
        self._aos_cited_by = aos_cited_by
        self._commenter_names = commenter_names
        self._document_highlights = document_highlights
        self._documents = documents
        self._entities = entities
        self._highlights = highlights
        self._is_pending = is_pending
        self._issue_date = issue_date
        self._name = name
        self.__false = _false
        self._regulatory_citations = regulatory_citations
        self._representative_names = representative_names
        self._request_date = request_date
        self._requestor_names = requestor_names
        self._requestor_types = requestor_types
        self._status = status
        self._statutory_citations = statutory_citations
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalSearchGetDefaultResponseAdvisoryOpinionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _legal_search__get_default_response_advisory_opinions_inner of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ao_citations(self):
        """Gets the ao_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The ao_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]
        """
        return self._ao_citations

    @ao_citations.setter
    def ao_citations(self, ao_citations):
        """Sets the ao_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param ao_citations: The ao_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type ao_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]
        """

        self._ao_citations = ao_citations

    @property
    def aos_cited_by(self):
        """Gets the aos_cited_by of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The aos_cited_by of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]
        """
        return self._aos_cited_by

    @aos_cited_by.setter
    def aos_cited_by(self, aos_cited_by):
        """Sets the aos_cited_by of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param aos_cited_by: The aos_cited_by of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type aos_cited_by: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerAoCitationsInner]
        """

        self._aos_cited_by = aos_cited_by

    @property
    def commenter_names(self):
        """Gets the commenter_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The commenter_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[str]
        """
        return self._commenter_names

    @commenter_names.setter
    def commenter_names(self, commenter_names):
        """Sets the commenter_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param commenter_names: The commenter_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type commenter_names: List[str]
        """

        self._commenter_names = commenter_names

    @property
    def document_highlights(self):
        """Gets the document_highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The document_highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: object
        """
        return self._document_highlights

    @document_highlights.setter
    def document_highlights(self, document_highlights):
        """Sets the document_highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param document_highlights: The document_highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type document_highlights: object
        """

        self._document_highlights = document_highlights

    @property
    def documents(self):
        """Gets the documents of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The documents of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param documents: The documents of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type documents: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerDocumentsInner]
        """

        self._documents = documents

    @property
    def entities(self):
        """Gets the entities of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The entities of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param entities: The entities of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type entities: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerEntitiesInner]
        """

        self._entities = entities

    @property
    def highlights(self):
        """Gets the highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[str]
        """
        return self._highlights

    @highlights.setter
    def highlights(self, highlights):
        """Sets the highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param highlights: The highlights of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type highlights: List[str]
        """

        self._highlights = highlights

    @property
    def is_pending(self):
        """Gets the is_pending of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The is_pending of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: bool
        """
        return self._is_pending

    @is_pending.setter
    def is_pending(self, is_pending):
        """Sets the is_pending of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param is_pending: The is_pending of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type is_pending: bool
        """

        self._is_pending = is_pending

    @property
    def issue_date(self):
        """Gets the issue_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The issue_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: date
        """
        return self._issue_date

    @issue_date.setter
    def issue_date(self, issue_date):
        """Sets the issue_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param issue_date: The issue_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type issue_date: date
        """

        self._issue_date = issue_date

    @property
    def name(self):
        """Gets the name of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The name of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param name: The name of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type name: str
        """

        self._name = name

    @property
    def _false(self):
        """Gets the _false of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The _false of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: str
        """
        return self.__false

    @_false.setter
    def _false(self, _false):
        """Sets the _false of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param _false: The _false of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type _false: str
        """

        self.__false = _false

    @property
    def regulatory_citations(self):
        """Gets the regulatory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The regulatory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner]
        """
        return self._regulatory_citations

    @regulatory_citations.setter
    def regulatory_citations(self, regulatory_citations):
        """Sets the regulatory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param regulatory_citations: The regulatory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type regulatory_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerRegulatoryCitationsInner]
        """

        self._regulatory_citations = regulatory_citations

    @property
    def representative_names(self):
        """Gets the representative_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The representative_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[str]
        """
        return self._representative_names

    @representative_names.setter
    def representative_names(self, representative_names):
        """Sets the representative_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param representative_names: The representative_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type representative_names: List[str]
        """

        self._representative_names = representative_names

    @property
    def request_date(self):
        """Gets the request_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The request_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: date
        """
        return self._request_date

    @request_date.setter
    def request_date(self, request_date):
        """Sets the request_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param request_date: The request_date of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type request_date: date
        """

        self._request_date = request_date

    @property
    def requestor_names(self):
        """Gets the requestor_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The requestor_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[str]
        """
        return self._requestor_names

    @requestor_names.setter
    def requestor_names(self, requestor_names):
        """Sets the requestor_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param requestor_names: The requestor_names of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type requestor_names: List[str]
        """

        self._requestor_names = requestor_names

    @property
    def requestor_types(self):
        """Gets the requestor_types of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The requestor_types of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[str]
        """
        return self._requestor_types

    @requestor_types.setter
    def requestor_types(self, requestor_types):
        """Sets the requestor_types of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param requestor_types: The requestor_types of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type requestor_types: List[str]
        """

        self._requestor_types = requestor_types

    @property
    def status(self):
        """Gets the status of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The status of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param status: The status of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type status: str
        """

        self._status = status

    @property
    def statutory_citations(self):
        """Gets the statutory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The statutory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner]
        """
        return self._statutory_citations

    @statutory_citations.setter
    def statutory_citations(self, statutory_citations):
        """Sets the statutory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param statutory_citations: The statutory_citations of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type statutory_citations: List[LegalSearchGetDefaultResponseAdvisoryOpinionsInnerStatutoryCitationsInner]
        """

        self._statutory_citations = statutory_citations

    @property
    def summary(self):
        """Gets the summary of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :return: The summary of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.


        :param summary: The summary of this LegalSearchGetDefaultResponseAdvisoryOpinionsInner.
        :type summary: str
        """

        self._summary = summary
