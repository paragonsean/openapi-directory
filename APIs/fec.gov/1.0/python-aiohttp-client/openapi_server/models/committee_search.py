# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommitteeSearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, is_active: bool=None, name: str=None):
        """CommitteeSearch - a model defined in OpenAPI

        :param id: The id of this CommitteeSearch.
        :param is_active: The is_active of this CommitteeSearch.
        :param name: The name of this CommitteeSearch.
        """
        self.openapi_types = {
            'id': str,
            'is_active': bool,
            'name': str
        }

        self.attribute_map = {
            'id': 'id',
            'is_active': 'is_active',
            'name': 'name'
        }

        self._id = id
        self._is_active = is_active
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitteeSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitteeSearch of this CommitteeSearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CommitteeSearch.


        :return: The id of this CommitteeSearch.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CommitteeSearch.


        :param id: The id of this CommitteeSearch.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this CommitteeSearch.


        :return: The is_active of this CommitteeSearch.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this CommitteeSearch.


        :param is_active: The is_active of this CommitteeSearch.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this CommitteeSearch.


        :return: The name of this CommitteeSearch.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CommitteeSearch.


        :param name: The name of this CommitteeSearch.
        :type name: str
        """

        self._name = name
