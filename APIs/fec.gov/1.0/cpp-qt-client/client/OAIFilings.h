/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilings.h
 *
 * 
 */

#ifndef OAIFilings_H
#define OAIFilings_H

#include <QJsonObject>

#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilings : public OAIObject {
public:
    OAIFilings();
    OAIFilings(QString json);
    ~OAIFilings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAdditionalBankNames() const;
    void setAdditionalBankNames(const QList<QString> &additional_bank_names);
    bool is_additional_bank_names_Set() const;
    bool is_additional_bank_names_Valid() const;

    QList<double> getAmendmentChain() const;
    void setAmendmentChain(const QList<double> &amendment_chain);
    bool is_amendment_chain_Set() const;
    bool is_amendment_chain_Valid() const;

    QString getAmendmentIndicator() const;
    void setAmendmentIndicator(const QString &amendment_indicator);
    bool is_amendment_indicator_Set() const;
    bool is_amendment_indicator_Valid() const;

    qint32 getAmendmentVersion() const;
    void setAmendmentVersion(const qint32 &amendment_version);
    bool is_amendment_version_Set() const;
    bool is_amendment_version_Valid() const;

    QString getBankDepositoryCity() const;
    void setBankDepositoryCity(const QString &bank_depository_city);
    bool is_bank_depository_city_Set() const;
    bool is_bank_depository_city_Valid() const;

    QString getBankDepositoryName() const;
    void setBankDepositoryName(const QString &bank_depository_name);
    bool is_bank_depository_name_Set() const;
    bool is_bank_depository_name_Valid() const;

    QString getBankDepositoryState() const;
    void setBankDepositoryState(const QString &bank_depository_state);
    bool is_bank_depository_state_Set() const;
    bool is_bank_depository_state_Valid() const;

    QString getBankDepositoryStreet1() const;
    void setBankDepositoryStreet1(const QString &bank_depository_street_1);
    bool is_bank_depository_street_1_Set() const;
    bool is_bank_depository_street_1_Valid() const;

    QString getBankDepositoryStreet2() const;
    void setBankDepositoryStreet2(const QString &bank_depository_street_2);
    bool is_bank_depository_street_2_Set() const;
    bool is_bank_depository_street_2_Valid() const;

    QString getBankDepositoryZip() const;
    void setBankDepositoryZip(const QString &bank_depository_zip);
    bool is_bank_depository_zip_Set() const;
    bool is_bank_depository_zip_Valid() const;

    QString getBeginningImageNumber() const;
    void setBeginningImageNumber(const QString &beginning_image_number);
    bool is_beginning_image_number_Set() const;
    bool is_beginning_image_number_Valid() const;

    QString getCandidateId() const;
    void setCandidateId(const QString &candidate_id);
    bool is_candidate_id_Set() const;
    bool is_candidate_id_Valid() const;

    QString getCandidateName() const;
    void setCandidateName(const QString &candidate_name);
    bool is_candidate_name_Set() const;
    bool is_candidate_name_Valid() const;

    double getCashOnHandBeginningPeriod() const;
    void setCashOnHandBeginningPeriod(const double &cash_on_hand_beginning_period);
    bool is_cash_on_hand_beginning_period_Set() const;
    bool is_cash_on_hand_beginning_period_Valid() const;

    double getCashOnHandEndPeriod() const;
    void setCashOnHandEndPeriod(const double &cash_on_hand_end_period);
    bool is_cash_on_hand_end_period_Set() const;
    bool is_cash_on_hand_end_period_Valid() const;

    QString getCommitteeId() const;
    void setCommitteeId(const QString &committee_id);
    bool is_committee_id_Set() const;
    bool is_committee_id_Valid() const;

    QString getCommitteeName() const;
    void setCommitteeName(const QString &committee_name);
    bool is_committee_name_Set() const;
    bool is_committee_name_Valid() const;

    QString getCommitteeType() const;
    void setCommitteeType(const QString &committee_type);
    bool is_committee_type_Set() const;
    bool is_committee_type_Valid() const;

    QDate getCoverageEndDate() const;
    void setCoverageEndDate(const QDate &coverage_end_date);
    bool is_coverage_end_date_Set() const;
    bool is_coverage_end_date_Valid() const;

    QDate getCoverageStartDate() const;
    void setCoverageStartDate(const QDate &coverage_start_date);
    bool is_coverage_start_date_Set() const;
    bool is_coverage_start_date_Valid() const;

    QString getCsvUrl() const;
    void setCsvUrl(const QString &csv_url);
    bool is_csv_url_Set() const;
    bool is_csv_url_Valid() const;

    qint32 getCycle() const;
    void setCycle(const qint32 &cycle);
    bool is_cycle_Set() const;
    bool is_cycle_Valid() const;

    double getDebtsOwedByCommittee() const;
    void setDebtsOwedByCommittee(const double &debts_owed_by_committee);
    bool is_debts_owed_by_committee_Set() const;
    bool is_debts_owed_by_committee_Valid() const;

    double getDebtsOwedToCommittee() const;
    void setDebtsOwedToCommittee(const double &debts_owed_to_committee);
    bool is_debts_owed_to_committee_Set() const;
    bool is_debts_owed_to_committee_Valid() const;

    QString getDocumentDescription() const;
    void setDocumentDescription(const QString &document_description);
    bool is_document_description_Set() const;
    bool is_document_description_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    QString getDocumentTypeFull() const;
    void setDocumentTypeFull(const QString &document_type_full);
    bool is_document_type_full_Set() const;
    bool is_document_type_full_Valid() const;

    qint32 getElectionYear() const;
    void setElectionYear(const qint32 &election_year);
    bool is_election_year_Set() const;
    bool is_election_year_Valid() const;

    QString getEndingImageNumber() const;
    void setEndingImageNumber(const QString &ending_image_number);
    bool is_ending_image_number_Set() const;
    bool is_ending_image_number_Valid() const;

    QString getFecFileId() const;
    void setFecFileId(const QString &fec_file_id);
    bool is_fec_file_id_Set() const;
    bool is_fec_file_id_Valid() const;

    QString getFecUrl() const;
    void setFecUrl(const QString &fec_url);
    bool is_fec_url_Set() const;
    bool is_fec_url_Valid() const;

    qint32 getFileNumber() const;
    void setFileNumber(const qint32 &file_number);
    bool is_file_number_Set() const;
    bool is_file_number_Valid() const;

    QString getFormCategory() const;
    void setFormCategory(const QString &form_category);
    bool is_form_category_Set() const;
    bool is_form_category_Valid() const;

    QString getFormType() const;
    void setFormType(const QString &form_type);
    bool is_form_type_Set() const;
    bool is_form_type_Valid() const;

    double getHousePersonalFunds() const;
    void setHousePersonalFunds(const double &house_personal_funds);
    bool is_house_personal_funds_Set() const;
    bool is_house_personal_funds_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    bool isIsAmended() const;
    void setIsAmended(const bool &is_amended);
    bool is_is_amended_Set() const;
    bool is_is_amended_Valid() const;

    QString getMeansFiled() const;
    void setMeansFiled(const QString &means_filed);
    bool is_means_filed_Set() const;
    bool is_means_filed_Valid() const;

    bool isMostRecent() const;
    void setMostRecent(const bool &most_recent);
    bool is_most_recent_Set() const;
    bool is_most_recent_Valid() const;

    qint32 getMostRecentFileNumber() const;
    void setMostRecentFileNumber(const qint32 &most_recent_file_number);
    bool is_most_recent_file_number_Set() const;
    bool is_most_recent_file_number_Valid() const;

    double getNetDonations() const;
    void setNetDonations(const double &net_donations);
    bool is_net_donations_Set() const;
    bool is_net_donations_Valid() const;

    QString getOffice() const;
    void setOffice(const QString &office);
    bool is_office_Set() const;
    bool is_office_Valid() const;

    double getOppositionPersonalFunds() const;
    void setOppositionPersonalFunds(const double &opposition_personal_funds);
    bool is_opposition_personal_funds_Set() const;
    bool is_opposition_personal_funds_Valid() const;

    qint32 getPages() const;
    void setPages(const qint32 &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    QString getParty() const;
    void setParty(const QString &party);
    bool is_party_Set() const;
    bool is_party_Valid() const;

    QString getPdfUrl() const;
    void setPdfUrl(const QString &pdf_url);
    bool is_pdf_url_Set() const;
    bool is_pdf_url_Valid() const;

    qint32 getPreviousFileNumber() const;
    void setPreviousFileNumber(const qint32 &previous_file_number);
    bool is_previous_file_number_Set() const;
    bool is_previous_file_number_Valid() const;

    QString getPrimaryGeneralIndicator() const;
    void setPrimaryGeneralIndicator(const QString &primary_general_indicator);
    bool is_primary_general_indicator_Set() const;
    bool is_primary_general_indicator_Valid() const;

    QDate getReceiptDate() const;
    void setReceiptDate(const QDate &receipt_date);
    bool is_receipt_date_Set() const;
    bool is_receipt_date_Valid() const;

    QString getReportType() const;
    void setReportType(const QString &report_type);
    bool is_report_type_Set() const;
    bool is_report_type_Valid() const;

    QString getReportTypeFull() const;
    void setReportTypeFull(const QString &report_type_full);
    bool is_report_type_full_Set() const;
    bool is_report_type_full_Valid() const;

    qint32 getReportYear() const;
    void setReportYear(const qint32 &report_year);
    bool is_report_year_Set() const;
    bool is_report_year_Valid() const;

    QString getRequestType() const;
    void setRequestType(const QString &request_type);
    bool is_request_type_Set() const;
    bool is_request_type_Valid() const;

    double getSenatePersonalFunds() const;
    void setSenatePersonalFunds(const double &senate_personal_funds);
    bool is_senate_personal_funds_Set() const;
    bool is_senate_personal_funds_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSubId() const;
    void setSubId(const QString &sub_id);
    bool is_sub_id_Set() const;
    bool is_sub_id_Valid() const;

    double getTotalCommunicationCost() const;
    void setTotalCommunicationCost(const double &total_communication_cost);
    bool is_total_communication_cost_Set() const;
    bool is_total_communication_cost_Valid() const;

    double getTotalDisbursements() const;
    void setTotalDisbursements(const double &total_disbursements);
    bool is_total_disbursements_Set() const;
    bool is_total_disbursements_Valid() const;

    double getTotalIndependentExpenditures() const;
    void setTotalIndependentExpenditures(const double &total_independent_expenditures);
    bool is_total_independent_expenditures_Set() const;
    bool is_total_independent_expenditures_Valid() const;

    double getTotalIndividualContributions() const;
    void setTotalIndividualContributions(const double &total_individual_contributions);
    bool is_total_individual_contributions_Set() const;
    bool is_total_individual_contributions_Valid() const;

    double getTotalReceipts() const;
    void setTotalReceipts(const double &total_receipts);
    bool is_total_receipts_Set() const;
    bool is_total_receipts_Valid() const;

    QString getTreasurerName() const;
    void setTreasurerName(const QString &treasurer_name);
    bool is_treasurer_name_Set() const;
    bool is_treasurer_name_Valid() const;

    QDate getUpdateDate() const;
    void setUpdateDate(const QDate &update_date);
    bool is_update_date_Set() const;
    bool is_update_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_additional_bank_names;
    bool m_additional_bank_names_isSet;
    bool m_additional_bank_names_isValid;

    QList<double> m_amendment_chain;
    bool m_amendment_chain_isSet;
    bool m_amendment_chain_isValid;

    QString m_amendment_indicator;
    bool m_amendment_indicator_isSet;
    bool m_amendment_indicator_isValid;

    qint32 m_amendment_version;
    bool m_amendment_version_isSet;
    bool m_amendment_version_isValid;

    QString m_bank_depository_city;
    bool m_bank_depository_city_isSet;
    bool m_bank_depository_city_isValid;

    QString m_bank_depository_name;
    bool m_bank_depository_name_isSet;
    bool m_bank_depository_name_isValid;

    QString m_bank_depository_state;
    bool m_bank_depository_state_isSet;
    bool m_bank_depository_state_isValid;

    QString m_bank_depository_street_1;
    bool m_bank_depository_street_1_isSet;
    bool m_bank_depository_street_1_isValid;

    QString m_bank_depository_street_2;
    bool m_bank_depository_street_2_isSet;
    bool m_bank_depository_street_2_isValid;

    QString m_bank_depository_zip;
    bool m_bank_depository_zip_isSet;
    bool m_bank_depository_zip_isValid;

    QString m_beginning_image_number;
    bool m_beginning_image_number_isSet;
    bool m_beginning_image_number_isValid;

    QString m_candidate_id;
    bool m_candidate_id_isSet;
    bool m_candidate_id_isValid;

    QString m_candidate_name;
    bool m_candidate_name_isSet;
    bool m_candidate_name_isValid;

    double m_cash_on_hand_beginning_period;
    bool m_cash_on_hand_beginning_period_isSet;
    bool m_cash_on_hand_beginning_period_isValid;

    double m_cash_on_hand_end_period;
    bool m_cash_on_hand_end_period_isSet;
    bool m_cash_on_hand_end_period_isValid;

    QString m_committee_id;
    bool m_committee_id_isSet;
    bool m_committee_id_isValid;

    QString m_committee_name;
    bool m_committee_name_isSet;
    bool m_committee_name_isValid;

    QString m_committee_type;
    bool m_committee_type_isSet;
    bool m_committee_type_isValid;

    QDate m_coverage_end_date;
    bool m_coverage_end_date_isSet;
    bool m_coverage_end_date_isValid;

    QDate m_coverage_start_date;
    bool m_coverage_start_date_isSet;
    bool m_coverage_start_date_isValid;

    QString m_csv_url;
    bool m_csv_url_isSet;
    bool m_csv_url_isValid;

    qint32 m_cycle;
    bool m_cycle_isSet;
    bool m_cycle_isValid;

    double m_debts_owed_by_committee;
    bool m_debts_owed_by_committee_isSet;
    bool m_debts_owed_by_committee_isValid;

    double m_debts_owed_to_committee;
    bool m_debts_owed_to_committee_isSet;
    bool m_debts_owed_to_committee_isValid;

    QString m_document_description;
    bool m_document_description_isSet;
    bool m_document_description_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    QString m_document_type_full;
    bool m_document_type_full_isSet;
    bool m_document_type_full_isValid;

    qint32 m_election_year;
    bool m_election_year_isSet;
    bool m_election_year_isValid;

    QString m_ending_image_number;
    bool m_ending_image_number_isSet;
    bool m_ending_image_number_isValid;

    QString m_fec_file_id;
    bool m_fec_file_id_isSet;
    bool m_fec_file_id_isValid;

    QString m_fec_url;
    bool m_fec_url_isSet;
    bool m_fec_url_isValid;

    qint32 m_file_number;
    bool m_file_number_isSet;
    bool m_file_number_isValid;

    QString m_form_category;
    bool m_form_category_isSet;
    bool m_form_category_isValid;

    QString m_form_type;
    bool m_form_type_isSet;
    bool m_form_type_isValid;

    double m_house_personal_funds;
    bool m_house_personal_funds_isSet;
    bool m_house_personal_funds_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    bool m_is_amended;
    bool m_is_amended_isSet;
    bool m_is_amended_isValid;

    QString m_means_filed;
    bool m_means_filed_isSet;
    bool m_means_filed_isValid;

    bool m_most_recent;
    bool m_most_recent_isSet;
    bool m_most_recent_isValid;

    qint32 m_most_recent_file_number;
    bool m_most_recent_file_number_isSet;
    bool m_most_recent_file_number_isValid;

    double m_net_donations;
    bool m_net_donations_isSet;
    bool m_net_donations_isValid;

    QString m_office;
    bool m_office_isSet;
    bool m_office_isValid;

    double m_opposition_personal_funds;
    bool m_opposition_personal_funds_isSet;
    bool m_opposition_personal_funds_isValid;

    qint32 m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    QString m_party;
    bool m_party_isSet;
    bool m_party_isValid;

    QString m_pdf_url;
    bool m_pdf_url_isSet;
    bool m_pdf_url_isValid;

    qint32 m_previous_file_number;
    bool m_previous_file_number_isSet;
    bool m_previous_file_number_isValid;

    QString m_primary_general_indicator;
    bool m_primary_general_indicator_isSet;
    bool m_primary_general_indicator_isValid;

    QDate m_receipt_date;
    bool m_receipt_date_isSet;
    bool m_receipt_date_isValid;

    QString m_report_type;
    bool m_report_type_isSet;
    bool m_report_type_isValid;

    QString m_report_type_full;
    bool m_report_type_full_isSet;
    bool m_report_type_full_isValid;

    qint32 m_report_year;
    bool m_report_year_isSet;
    bool m_report_year_isValid;

    QString m_request_type;
    bool m_request_type_isSet;
    bool m_request_type_isValid;

    double m_senate_personal_funds;
    bool m_senate_personal_funds_isSet;
    bool m_senate_personal_funds_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_sub_id;
    bool m_sub_id_isSet;
    bool m_sub_id_isValid;

    double m_total_communication_cost;
    bool m_total_communication_cost_isSet;
    bool m_total_communication_cost_isValid;

    double m_total_disbursements;
    bool m_total_disbursements_isSet;
    bool m_total_disbursements_isValid;

    double m_total_independent_expenditures;
    bool m_total_independent_expenditures_isSet;
    bool m_total_independent_expenditures_isValid;

    double m_total_individual_contributions;
    bool m_total_individual_contributions_isSet;
    bool m_total_individual_contributions_isValid;

    double m_total_receipts;
    bool m_total_receipts_isSet;
    bool m_total_receipts_isValid;

    QString m_treasurer_name;
    bool m_treasurer_name_isSet;
    bool m_treasurer_name_isValid;

    QDate m_update_date;
    bool m_update_date_isSet;
    bool m_update_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilings)

#endif // OAIFilings_H
