/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduleEEfile.h
 *
 * 
 */

#ifndef OAIScheduleEEfile_H
#define OAIScheduleEEfile_H

#include <QJsonObject>

#include "OAICommitteeHistory.h"
#include "OAIEFilings.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommitteeHistory;
class OAIEFilings;

class OAIScheduleEEfile : public OAIObject {
public:
    OAIScheduleEEfile();
    OAIScheduleEEfile(QString json);
    ~OAIScheduleEEfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAmendmentIndicator() const;
    void setAmendmentIndicator(const QString &amendment_indicator);
    bool is_amendment_indicator_Set() const;
    bool is_amendment_indicator_Valid() const;

    QString getBackReferenceScheduleName() const;
    void setBackReferenceScheduleName(const QString &back_reference_schedule_name);
    bool is_back_reference_schedule_name_Set() const;
    bool is_back_reference_schedule_name_Valid() const;

    QString getBackReferenceTransactionId() const;
    void setBackReferenceTransactionId(const QString &back_reference_transaction_id);
    bool is_back_reference_transaction_id_Set() const;
    bool is_back_reference_transaction_id_Valid() const;

    QString getBeginningImageNumber() const;
    void setBeginningImageNumber(const QString &beginning_image_number);
    bool is_beginning_image_number_Set() const;
    bool is_beginning_image_number_Valid() const;

    QString getCandidateFirstName() const;
    void setCandidateFirstName(const QString &candidate_first_name);
    bool is_candidate_first_name_Set() const;
    bool is_candidate_first_name_Valid() const;

    QString getCandidateId() const;
    void setCandidateId(const QString &candidate_id);
    bool is_candidate_id_Set() const;
    bool is_candidate_id_Valid() const;

    QString getCandidateMiddleName() const;
    void setCandidateMiddleName(const QString &candidate_middle_name);
    bool is_candidate_middle_name_Set() const;
    bool is_candidate_middle_name_Valid() const;

    QString getCandidateName() const;
    void setCandidateName(const QString &candidate_name);
    bool is_candidate_name_Set() const;
    bool is_candidate_name_Valid() const;

    QString getCandidateOffice() const;
    void setCandidateOffice(const QString &candidate_office);
    bool is_candidate_office_Set() const;
    bool is_candidate_office_Valid() const;

    QString getCandidateOfficeDistrict() const;
    void setCandidateOfficeDistrict(const QString &candidate_office_district);
    bool is_candidate_office_district_Set() const;
    bool is_candidate_office_district_Valid() const;

    QString getCandidateOfficeState() const;
    void setCandidateOfficeState(const QString &candidate_office_state);
    bool is_candidate_office_state_Set() const;
    bool is_candidate_office_state_Valid() const;

    QString getCandidateParty() const;
    void setCandidateParty(const QString &candidate_party);
    bool is_candidate_party_Set() const;
    bool is_candidate_party_Valid() const;

    QString getCandidatePrefix() const;
    void setCandidatePrefix(const QString &candidate_prefix);
    bool is_candidate_prefix_Set() const;
    bool is_candidate_prefix_Valid() const;

    QString getCandidateSuffix() const;
    void setCandidateSuffix(const QString &candidate_suffix);
    bool is_candidate_suffix_Set() const;
    bool is_candidate_suffix_Valid() const;

    QString getCategoryCode() const;
    void setCategoryCode(const QString &category_code);
    bool is_category_code_Set() const;
    bool is_category_code_Valid() const;

    OAICommitteeHistory getCommittee() const;
    void setCommittee(const OAICommitteeHistory &committee);
    bool is_committee_Set() const;
    bool is_committee_Valid() const;

    QString getCommitteeId() const;
    void setCommitteeId(const QString &committee_id);
    bool is_committee_id_Set() const;
    bool is_committee_id_Valid() const;

    QString getCsvUrl() const;
    void setCsvUrl(const QString &csv_url);
    bool is_csv_url_Set() const;
    bool is_csv_url_Valid() const;

    QDate getDisseminationDate() const;
    void setDisseminationDate(const QDate &dissemination_date);
    bool is_dissemination_date_Set() const;
    bool is_dissemination_date_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    qint32 getExpenditureAmount() const;
    void setExpenditureAmount(const qint32 &expenditure_amount);
    bool is_expenditure_amount_Set() const;
    bool is_expenditure_amount_Valid() const;

    QDate getExpenditureDate() const;
    void setExpenditureDate(const QDate &expenditure_date);
    bool is_expenditure_date_Set() const;
    bool is_expenditure_date_Valid() const;

    QString getExpenditureDescription() const;
    void setExpenditureDescription(const QString &expenditure_description);
    bool is_expenditure_description_Set() const;
    bool is_expenditure_description_Valid() const;

    QString getFecUrl() const;
    void setFecUrl(const QString &fec_url);
    bool is_fec_url_Set() const;
    bool is_fec_url_Valid() const;

    qint32 getFileNumber() const;
    void setFileNumber(const qint32 &file_number);
    bool is_file_number_Set() const;
    bool is_file_number_Valid() const;

    QString getFilerFirstName() const;
    void setFilerFirstName(const QString &filer_first_name);
    bool is_filer_first_name_Set() const;
    bool is_filer_first_name_Valid() const;

    QString getFilerLastName() const;
    void setFilerLastName(const QString &filer_last_name);
    bool is_filer_last_name_Set() const;
    bool is_filer_last_name_Valid() const;

    QString getFilerMiddleName() const;
    void setFilerMiddleName(const QString &filer_middle_name);
    bool is_filer_middle_name_Set() const;
    bool is_filer_middle_name_Valid() const;

    QString getFilerPrefix() const;
    void setFilerPrefix(const QString &filer_prefix);
    bool is_filer_prefix_Set() const;
    bool is_filer_prefix_Valid() const;

    QString getFilerSuffix() const;
    void setFilerSuffix(const QString &filer_suffix);
    bool is_filer_suffix_Set() const;
    bool is_filer_suffix_Valid() const;

    OAIEFilings getFiling() const;
    void setFiling(const OAIEFilings &filing);
    bool is_filing_Set() const;
    bool is_filing_Valid() const;

    QString getFilingForm() const;
    void setFilingForm(const QString &filing_form);
    bool is_filing_form_Set() const;
    bool is_filing_form_Valid() const;

    QString getImageNumber() const;
    void setImageNumber(const QString &image_number);
    bool is_image_number_Set() const;
    bool is_image_number_Valid() const;

    bool isIsNotice() const;
    void setIsNotice(const bool &is_notice);
    bool is_is_notice_Set() const;
    bool is_is_notice_Valid() const;

    QString getLineNumber() const;
    void setLineNumber(const QString &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    QDateTime getLoadTimestamp() const;
    void setLoadTimestamp(const QDateTime &load_timestamp);
    bool is_load_timestamp_Set() const;
    bool is_load_timestamp_Valid() const;

    QString getMemoCode() const;
    void setMemoCode(const QString &memo_code);
    bool is_memo_code_Set() const;
    bool is_memo_code_Valid() const;

    QString getMemoText() const;
    void setMemoText(const QString &memo_text);
    bool is_memo_text_Set() const;
    bool is_memo_text_Valid() const;

    bool isMostRecent() const;
    void setMostRecent(const bool &most_recent);
    bool is_most_recent_Set() const;
    bool is_most_recent_Valid() const;

    QDate getNotarySignDate() const;
    void setNotarySignDate(const QDate &notary_sign_date);
    bool is_notary_sign_date_Set() const;
    bool is_notary_sign_date_Valid() const;

    float getOfficeTotalYtd() const;
    void setOfficeTotalYtd(const float &office_total_ytd);
    bool is_office_total_ytd_Set() const;
    bool is_office_total_ytd_Valid() const;

    QString getPayeeCity() const;
    void setPayeeCity(const QString &payee_city);
    bool is_payee_city_Set() const;
    bool is_payee_city_Valid() const;

    QString getPayeeFirstName() const;
    void setPayeeFirstName(const QString &payee_first_name);
    bool is_payee_first_name_Set() const;
    bool is_payee_first_name_Valid() const;

    QString getPayeeLastName() const;
    void setPayeeLastName(const QString &payee_last_name);
    bool is_payee_last_name_Set() const;
    bool is_payee_last_name_Valid() const;

    QString getPayeeMiddleName() const;
    void setPayeeMiddleName(const QString &payee_middle_name);
    bool is_payee_middle_name_Set() const;
    bool is_payee_middle_name_Valid() const;

    QString getPayeeName() const;
    void setPayeeName(const QString &payee_name);
    bool is_payee_name_Set() const;
    bool is_payee_name_Valid() const;

    QString getPayeePrefix() const;
    void setPayeePrefix(const QString &payee_prefix);
    bool is_payee_prefix_Set() const;
    bool is_payee_prefix_Valid() const;

    QString getPayeeState() const;
    void setPayeeState(const QString &payee_state);
    bool is_payee_state_Set() const;
    bool is_payee_state_Valid() const;

    QString getPayeeStreet1() const;
    void setPayeeStreet1(const QString &payee_street_1);
    bool is_payee_street_1_Set() const;
    bool is_payee_street_1_Valid() const;

    QString getPayeeStreet2() const;
    void setPayeeStreet2(const QString &payee_street_2);
    bool is_payee_street_2_Set() const;
    bool is_payee_street_2_Valid() const;

    QString getPayeeSuffix() const;
    void setPayeeSuffix(const QString &payee_suffix);
    bool is_payee_suffix_Set() const;
    bool is_payee_suffix_Valid() const;

    QString getPayeeZip() const;
    void setPayeeZip(const QString &payee_zip);
    bool is_payee_zip_Set() const;
    bool is_payee_zip_Valid() const;

    QString getPdfUrl() const;
    void setPdfUrl(const QString &pdf_url);
    bool is_pdf_url_Set() const;
    bool is_pdf_url_Valid() const;

    qint32 getRelatedLineNumber() const;
    void setRelatedLineNumber(const qint32 &related_line_number);
    bool is_related_line_number_Set() const;
    bool is_related_line_number_Valid() const;

    QString getReportType() const;
    void setReportType(const QString &report_type);
    bool is_report_type_Set() const;
    bool is_report_type_Valid() const;

    QString getSupportOpposeIndicator() const;
    void setSupportOpposeIndicator(const QString &support_oppose_indicator);
    bool is_support_oppose_indicator_Set() const;
    bool is_support_oppose_indicator_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_amendment_indicator;
    bool m_amendment_indicator_isSet;
    bool m_amendment_indicator_isValid;

    QString m_back_reference_schedule_name;
    bool m_back_reference_schedule_name_isSet;
    bool m_back_reference_schedule_name_isValid;

    QString m_back_reference_transaction_id;
    bool m_back_reference_transaction_id_isSet;
    bool m_back_reference_transaction_id_isValid;

    QString m_beginning_image_number;
    bool m_beginning_image_number_isSet;
    bool m_beginning_image_number_isValid;

    QString m_candidate_first_name;
    bool m_candidate_first_name_isSet;
    bool m_candidate_first_name_isValid;

    QString m_candidate_id;
    bool m_candidate_id_isSet;
    bool m_candidate_id_isValid;

    QString m_candidate_middle_name;
    bool m_candidate_middle_name_isSet;
    bool m_candidate_middle_name_isValid;

    QString m_candidate_name;
    bool m_candidate_name_isSet;
    bool m_candidate_name_isValid;

    QString m_candidate_office;
    bool m_candidate_office_isSet;
    bool m_candidate_office_isValid;

    QString m_candidate_office_district;
    bool m_candidate_office_district_isSet;
    bool m_candidate_office_district_isValid;

    QString m_candidate_office_state;
    bool m_candidate_office_state_isSet;
    bool m_candidate_office_state_isValid;

    QString m_candidate_party;
    bool m_candidate_party_isSet;
    bool m_candidate_party_isValid;

    QString m_candidate_prefix;
    bool m_candidate_prefix_isSet;
    bool m_candidate_prefix_isValid;

    QString m_candidate_suffix;
    bool m_candidate_suffix_isSet;
    bool m_candidate_suffix_isValid;

    QString m_category_code;
    bool m_category_code_isSet;
    bool m_category_code_isValid;

    OAICommitteeHistory m_committee;
    bool m_committee_isSet;
    bool m_committee_isValid;

    QString m_committee_id;
    bool m_committee_id_isSet;
    bool m_committee_id_isValid;

    QString m_csv_url;
    bool m_csv_url_isSet;
    bool m_csv_url_isValid;

    QDate m_dissemination_date;
    bool m_dissemination_date_isSet;
    bool m_dissemination_date_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    qint32 m_expenditure_amount;
    bool m_expenditure_amount_isSet;
    bool m_expenditure_amount_isValid;

    QDate m_expenditure_date;
    bool m_expenditure_date_isSet;
    bool m_expenditure_date_isValid;

    QString m_expenditure_description;
    bool m_expenditure_description_isSet;
    bool m_expenditure_description_isValid;

    QString m_fec_url;
    bool m_fec_url_isSet;
    bool m_fec_url_isValid;

    qint32 m_file_number;
    bool m_file_number_isSet;
    bool m_file_number_isValid;

    QString m_filer_first_name;
    bool m_filer_first_name_isSet;
    bool m_filer_first_name_isValid;

    QString m_filer_last_name;
    bool m_filer_last_name_isSet;
    bool m_filer_last_name_isValid;

    QString m_filer_middle_name;
    bool m_filer_middle_name_isSet;
    bool m_filer_middle_name_isValid;

    QString m_filer_prefix;
    bool m_filer_prefix_isSet;
    bool m_filer_prefix_isValid;

    QString m_filer_suffix;
    bool m_filer_suffix_isSet;
    bool m_filer_suffix_isValid;

    OAIEFilings m_filing;
    bool m_filing_isSet;
    bool m_filing_isValid;

    QString m_filing_form;
    bool m_filing_form_isSet;
    bool m_filing_form_isValid;

    QString m_image_number;
    bool m_image_number_isSet;
    bool m_image_number_isValid;

    bool m_is_notice;
    bool m_is_notice_isSet;
    bool m_is_notice_isValid;

    QString m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    QDateTime m_load_timestamp;
    bool m_load_timestamp_isSet;
    bool m_load_timestamp_isValid;

    QString m_memo_code;
    bool m_memo_code_isSet;
    bool m_memo_code_isValid;

    QString m_memo_text;
    bool m_memo_text_isSet;
    bool m_memo_text_isValid;

    bool m_most_recent;
    bool m_most_recent_isSet;
    bool m_most_recent_isValid;

    QDate m_notary_sign_date;
    bool m_notary_sign_date_isSet;
    bool m_notary_sign_date_isValid;

    float m_office_total_ytd;
    bool m_office_total_ytd_isSet;
    bool m_office_total_ytd_isValid;

    QString m_payee_city;
    bool m_payee_city_isSet;
    bool m_payee_city_isValid;

    QString m_payee_first_name;
    bool m_payee_first_name_isSet;
    bool m_payee_first_name_isValid;

    QString m_payee_last_name;
    bool m_payee_last_name_isSet;
    bool m_payee_last_name_isValid;

    QString m_payee_middle_name;
    bool m_payee_middle_name_isSet;
    bool m_payee_middle_name_isValid;

    QString m_payee_name;
    bool m_payee_name_isSet;
    bool m_payee_name_isValid;

    QString m_payee_prefix;
    bool m_payee_prefix_isSet;
    bool m_payee_prefix_isValid;

    QString m_payee_state;
    bool m_payee_state_isSet;
    bool m_payee_state_isValid;

    QString m_payee_street_1;
    bool m_payee_street_1_isSet;
    bool m_payee_street_1_isValid;

    QString m_payee_street_2;
    bool m_payee_street_2_isSet;
    bool m_payee_street_2_isValid;

    QString m_payee_suffix;
    bool m_payee_suffix_isSet;
    bool m_payee_suffix_isValid;

    QString m_payee_zip;
    bool m_payee_zip_isSet;
    bool m_payee_zip_isValid;

    QString m_pdf_url;
    bool m_pdf_url_isSet;
    bool m_pdf_url_isValid;

    qint32 m_related_line_number;
    bool m_related_line_number_isSet;
    bool m_related_line_number_isValid;

    QString m_report_type;
    bool m_report_type_isSet;
    bool m_report_type_isValid;

    QString m_support_oppose_indicator;
    bool m_support_oppose_indicator_isSet;
    bool m_support_oppose_indicator_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduleEEfile)

#endif // OAIScheduleEEfile_H
