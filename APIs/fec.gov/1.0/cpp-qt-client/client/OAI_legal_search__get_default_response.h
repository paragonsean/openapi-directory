/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_legal_search__get_default_response.h
 *
 * 
 */

#ifndef OAI_legal_search__get_default_response_H
#define OAI_legal_search__get_default_response_H

#include <QJsonObject>

#include "OAI_legal_search__get_default_response_admin_fines_inner.h"
#include "OAI_legal_search__get_default_response_adrs_inner.h"
#include "OAI_legal_search__get_default_response_advisory_opinions_inner.h"
#include "OAI_legal_search__get_default_response_murs_inner.h"
#include "OAI_legal_search__get_default_response_regulations_inner.h"
#include "OAI_legal_search__get_default_response_statutes_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_legal_search__get_default_response_admin_fines_inner;
class OAI_legal_search__get_default_response_adrs_inner;
class OAI_legal_search__get_default_response_advisory_opinions_inner;
class OAI_legal_search__get_default_response_murs_inner;
class OAI_legal_search__get_default_response_regulations_inner;
class OAI_legal_search__get_default_response_statutes_inner;

class OAI_legal_search__get_default_response : public OAIObject {
public:
    OAI_legal_search__get_default_response();
    OAI_legal_search__get_default_response(QString json);
    ~OAI_legal_search__get_default_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAI_legal_search__get_default_response_admin_fines_inner> getAdminFines() const;
    void setAdminFines(const QList<OAI_legal_search__get_default_response_admin_fines_inner> &admin_fines);
    bool is_admin_fines_Set() const;
    bool is_admin_fines_Valid() const;

    QList<OAI_legal_search__get_default_response_adrs_inner> getAdrs() const;
    void setAdrs(const QList<OAI_legal_search__get_default_response_adrs_inner> &adrs);
    bool is_adrs_Set() const;
    bool is_adrs_Valid() const;

    QList<OAI_legal_search__get_default_response_advisory_opinions_inner> getAdvisoryOpinions() const;
    void setAdvisoryOpinions(const QList<OAI_legal_search__get_default_response_advisory_opinions_inner> &advisory_opinions);
    bool is_advisory_opinions_Set() const;
    bool is_advisory_opinions_Valid() const;

    QList<OAI_legal_search__get_default_response_murs_inner> getMurs() const;
    void setMurs(const QList<OAI_legal_search__get_default_response_murs_inner> &murs);
    bool is_murs_Set() const;
    bool is_murs_Valid() const;

    QList<OAI_legal_search__get_default_response_regulations_inner> getRegulations() const;
    void setRegulations(const QList<OAI_legal_search__get_default_response_regulations_inner> &regulations);
    bool is_regulations_Set() const;
    bool is_regulations_Valid() const;

    QList<OAI_legal_search__get_default_response_statutes_inner> getStatutes() const;
    void setStatutes(const QList<OAI_legal_search__get_default_response_statutes_inner> &statutes);
    bool is_statutes_Set() const;
    bool is_statutes_Valid() const;

    qint32 getTotalAdminFines() const;
    void setTotalAdminFines(const qint32 &total_admin_fines);
    bool is_total_admin_fines_Set() const;
    bool is_total_admin_fines_Valid() const;

    qint32 getTotalAdrs() const;
    void setTotalAdrs(const qint32 &total_adrs);
    bool is_total_adrs_Set() const;
    bool is_total_adrs_Valid() const;

    qint32 getTotalAdvisoryOpinions() const;
    void setTotalAdvisoryOpinions(const qint32 &total_advisory_opinions);
    bool is_total_advisory_opinions_Set() const;
    bool is_total_advisory_opinions_Valid() const;

    qint32 getTotalAll() const;
    void setTotalAll(const qint32 &total_all);
    bool is_total_all_Set() const;
    bool is_total_all_Valid() const;

    qint32 getTotalMurs() const;
    void setTotalMurs(const qint32 &total_murs);
    bool is_total_murs_Set() const;
    bool is_total_murs_Valid() const;

    qint32 getTotalRegulations() const;
    void setTotalRegulations(const qint32 &total_regulations);
    bool is_total_regulations_Set() const;
    bool is_total_regulations_Valid() const;

    qint32 getTotalStatutes() const;
    void setTotalStatutes(const qint32 &total_statutes);
    bool is_total_statutes_Set() const;
    bool is_total_statutes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAI_legal_search__get_default_response_admin_fines_inner> m_admin_fines;
    bool m_admin_fines_isSet;
    bool m_admin_fines_isValid;

    QList<OAI_legal_search__get_default_response_adrs_inner> m_adrs;
    bool m_adrs_isSet;
    bool m_adrs_isValid;

    QList<OAI_legal_search__get_default_response_advisory_opinions_inner> m_advisory_opinions;
    bool m_advisory_opinions_isSet;
    bool m_advisory_opinions_isValid;

    QList<OAI_legal_search__get_default_response_murs_inner> m_murs;
    bool m_murs_isSet;
    bool m_murs_isValid;

    QList<OAI_legal_search__get_default_response_regulations_inner> m_regulations;
    bool m_regulations_isSet;
    bool m_regulations_isValid;

    QList<OAI_legal_search__get_default_response_statutes_inner> m_statutes;
    bool m_statutes_isSet;
    bool m_statutes_isValid;

    qint32 m_total_admin_fines;
    bool m_total_admin_fines_isSet;
    bool m_total_admin_fines_isValid;

    qint32 m_total_adrs;
    bool m_total_adrs_isSet;
    bool m_total_adrs_isValid;

    qint32 m_total_advisory_opinions;
    bool m_total_advisory_opinions_isSet;
    bool m_total_advisory_opinions_isValid;

    qint32 m_total_all;
    bool m_total_all_isSet;
    bool m_total_all_isValid;

    qint32 m_total_murs;
    bool m_total_murs_isSet;
    bool m_total_murs_isValid;

    qint32 m_total_regulations;
    bool m_total_regulations_isSet;
    bool m_total_regulations_isValid;

    qint32 m_total_statutes;
    bool m_total_statutes_isSet;
    bool m_total_statutes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_legal_search__get_default_response)

#endif // OAI_legal_search__get_default_response_H
