/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPresidentialSummary.h
 *
 * 
 */

#ifndef OAIPresidentialSummary_H
#define OAIPresidentialSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPresidentialSummary : public OAIObject {
public:
    OAIPresidentialSummary();
    OAIPresidentialSummary(QString json);
    ~OAIPresidentialSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCandidateContributionsLessRepayments() const;
    void setCandidateContributionsLessRepayments(const double &candidate_contributions_less_repayments);
    bool is_candidate_contributions_less_repayments_Set() const;
    bool is_candidate_contributions_less_repayments_Valid() const;

    QString getCandidateId() const;
    void setCandidateId(const QString &candidate_id);
    bool is_candidate_id_Set() const;
    bool is_candidate_id_Valid() const;

    QString getCandidateLastName() const;
    void setCandidateLastName(const QString &candidate_last_name);
    bool is_candidate_last_name_Set() const;
    bool is_candidate_last_name_Valid() const;

    QString getCandidateName() const;
    void setCandidateName(const QString &candidate_name);
    bool is_candidate_name_Set() const;
    bool is_candidate_name_Valid() const;

    QString getCandidatePartyAffiliation() const;
    void setCandidatePartyAffiliation(const QString &candidate_party_affiliation);
    bool is_candidate_party_affiliation_Set() const;
    bool is_candidate_party_affiliation_Valid() const;

    double getCashOnHandEnd() const;
    void setCashOnHandEnd(const double &cash_on_hand_end);
    bool is_cash_on_hand_end_Set() const;
    bool is_cash_on_hand_end_Valid() const;

    QString getCommitteeDesignation() const;
    void setCommitteeDesignation(const QString &committee_designation);
    bool is_committee_designation_Set() const;
    bool is_committee_designation_Valid() const;

    QString getCommitteeId() const;
    void setCommitteeId(const QString &committee_id);
    bool is_committee_id_Set() const;
    bool is_committee_id_Valid() const;

    QString getCommitteeName() const;
    void setCommitteeName(const QString &committee_name);
    bool is_committee_name_Set() const;
    bool is_committee_name_Valid() const;

    QString getCommitteeType() const;
    void setCommitteeType(const QString &committee_type);
    bool is_committee_type_Set() const;
    bool is_committee_type_Valid() const;

    double getDebtsOwedByCommittee() const;
    void setDebtsOwedByCommittee(const double &debts_owed_by_committee);
    bool is_debts_owed_by_committee_Set() const;
    bool is_debts_owed_by_committee_Valid() const;

    double getDisbursementsLessOffsets() const;
    void setDisbursementsLessOffsets(const double &disbursements_less_offsets);
    bool is_disbursements_less_offsets_Set() const;
    bool is_disbursements_less_offsets_Valid() const;

    qint32 getElectionYear() const;
    void setElectionYear(const qint32 &election_year);
    bool is_election_year_Set() const;
    bool is_election_year_Valid() const;

    double getExemptLegalAccountingDisbursement() const;
    void setExemptLegalAccountingDisbursement(const double &exempt_legal_accounting_disbursement);
    bool is_exempt_legal_accounting_disbursement_Set() const;
    bool is_exempt_legal_accounting_disbursement_Valid() const;

    double getFederalFunds() const;
    void setFederalFunds(const double &federal_funds);
    bool is_federal_funds_Set() const;
    bool is_federal_funds_Valid() const;

    double getFundraisingDisbursements() const;
    void setFundraisingDisbursements(const double &fundraising_disbursements);
    bool is_fundraising_disbursements_Set() const;
    bool is_fundraising_disbursements_Valid() const;

    double getIndividualContributionsLessRefunds() const;
    void setIndividualContributionsLessRefunds(const double &individual_contributions_less_refunds);
    bool is_individual_contributions_less_refunds_Set() const;
    bool is_individual_contributions_less_refunds_Valid() const;

    double getNetReceipts() const;
    void setNetReceipts(const double &net_receipts);
    bool is_net_receipts_Set() const;
    bool is_net_receipts_Valid() const;

    double getOffsetsToOperatingExpenditures() const;
    void setOffsetsToOperatingExpenditures(const double &offsets_to_operating_expenditures);
    bool is_offsets_to_operating_expenditures_Set() const;
    bool is_offsets_to_operating_expenditures_Valid() const;

    double getOperatingExpenditures() const;
    void setOperatingExpenditures(const double &operating_expenditures);
    bool is_operating_expenditures_Set() const;
    bool is_operating_expenditures_Valid() const;

    double getOtherDisbursements() const;
    void setOtherDisbursements(const double &other_disbursements);
    bool is_other_disbursements_Set() const;
    bool is_other_disbursements_Valid() const;

    double getPacContributionsLessRefunds() const;
    void setPacContributionsLessRefunds(const double &pac_contributions_less_refunds);
    bool is_pac_contributions_less_refunds_Set() const;
    bool is_pac_contributions_less_refunds_Valid() const;

    double getPartyContributionsLessRefunds() const;
    void setPartyContributionsLessRefunds(const double &party_contributions_less_refunds);
    bool is_party_contributions_less_refunds_Set() const;
    bool is_party_contributions_less_refunds_Valid() const;

    double getRepaymentsLoansMadeByCandidate() const;
    void setRepaymentsLoansMadeByCandidate(const double &repayments_loans_made_by_candidate);
    bool is_repayments_loans_made_by_candidate_Set() const;
    bool is_repayments_loans_made_by_candidate_Valid() const;

    double getRepaymentsOtherLoans() const;
    void setRepaymentsOtherLoans(const double &repayments_other_loans);
    bool is_repayments_other_loans_Set() const;
    bool is_repayments_other_loans_Valid() const;

    double getRoundedNetReceipts() const;
    void setRoundedNetReceipts(const double &rounded_net_receipts);
    bool is_rounded_net_receipts_Set() const;
    bool is_rounded_net_receipts_Valid() const;

    double getTotalContributionRefunds() const;
    void setTotalContributionRefunds(const double &total_contribution_refunds);
    bool is_total_contribution_refunds_Set() const;
    bool is_total_contribution_refunds_Valid() const;

    double getTotalLoanRepaymentsMade() const;
    void setTotalLoanRepaymentsMade(const double &total_loan_repayments_made);
    bool is_total_loan_repayments_made_Set() const;
    bool is_total_loan_repayments_made_Valid() const;

    double getTransfersFromAffiliatedCommittees() const;
    void setTransfersFromAffiliatedCommittees(const double &transfers_from_affiliated_committees);
    bool is_transfers_from_affiliated_committees_Set() const;
    bool is_transfers_from_affiliated_committees_Valid() const;

    double getTransfersToOtherAuthorizedCommittees() const;
    void setTransfersToOtherAuthorizedCommittees(const double &transfers_to_other_authorized_committees);
    bool is_transfers_to_other_authorized_committees_Set() const;
    bool is_transfers_to_other_authorized_committees_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_candidate_contributions_less_repayments;
    bool m_candidate_contributions_less_repayments_isSet;
    bool m_candidate_contributions_less_repayments_isValid;

    QString m_candidate_id;
    bool m_candidate_id_isSet;
    bool m_candidate_id_isValid;

    QString m_candidate_last_name;
    bool m_candidate_last_name_isSet;
    bool m_candidate_last_name_isValid;

    QString m_candidate_name;
    bool m_candidate_name_isSet;
    bool m_candidate_name_isValid;

    QString m_candidate_party_affiliation;
    bool m_candidate_party_affiliation_isSet;
    bool m_candidate_party_affiliation_isValid;

    double m_cash_on_hand_end;
    bool m_cash_on_hand_end_isSet;
    bool m_cash_on_hand_end_isValid;

    QString m_committee_designation;
    bool m_committee_designation_isSet;
    bool m_committee_designation_isValid;

    QString m_committee_id;
    bool m_committee_id_isSet;
    bool m_committee_id_isValid;

    QString m_committee_name;
    bool m_committee_name_isSet;
    bool m_committee_name_isValid;

    QString m_committee_type;
    bool m_committee_type_isSet;
    bool m_committee_type_isValid;

    double m_debts_owed_by_committee;
    bool m_debts_owed_by_committee_isSet;
    bool m_debts_owed_by_committee_isValid;

    double m_disbursements_less_offsets;
    bool m_disbursements_less_offsets_isSet;
    bool m_disbursements_less_offsets_isValid;

    qint32 m_election_year;
    bool m_election_year_isSet;
    bool m_election_year_isValid;

    double m_exempt_legal_accounting_disbursement;
    bool m_exempt_legal_accounting_disbursement_isSet;
    bool m_exempt_legal_accounting_disbursement_isValid;

    double m_federal_funds;
    bool m_federal_funds_isSet;
    bool m_federal_funds_isValid;

    double m_fundraising_disbursements;
    bool m_fundraising_disbursements_isSet;
    bool m_fundraising_disbursements_isValid;

    double m_individual_contributions_less_refunds;
    bool m_individual_contributions_less_refunds_isSet;
    bool m_individual_contributions_less_refunds_isValid;

    double m_net_receipts;
    bool m_net_receipts_isSet;
    bool m_net_receipts_isValid;

    double m_offsets_to_operating_expenditures;
    bool m_offsets_to_operating_expenditures_isSet;
    bool m_offsets_to_operating_expenditures_isValid;

    double m_operating_expenditures;
    bool m_operating_expenditures_isSet;
    bool m_operating_expenditures_isValid;

    double m_other_disbursements;
    bool m_other_disbursements_isSet;
    bool m_other_disbursements_isValid;

    double m_pac_contributions_less_refunds;
    bool m_pac_contributions_less_refunds_isSet;
    bool m_pac_contributions_less_refunds_isValid;

    double m_party_contributions_less_refunds;
    bool m_party_contributions_less_refunds_isSet;
    bool m_party_contributions_less_refunds_isValid;

    double m_repayments_loans_made_by_candidate;
    bool m_repayments_loans_made_by_candidate_isSet;
    bool m_repayments_loans_made_by_candidate_isValid;

    double m_repayments_other_loans;
    bool m_repayments_other_loans_isSet;
    bool m_repayments_other_loans_isValid;

    double m_rounded_net_receipts;
    bool m_rounded_net_receipts_isSet;
    bool m_rounded_net_receipts_isValid;

    double m_total_contribution_refunds;
    bool m_total_contribution_refunds_isSet;
    bool m_total_contribution_refunds_isValid;

    double m_total_loan_repayments_made;
    bool m_total_loan_repayments_made_isSet;
    bool m_total_loan_repayments_made_isValid;

    double m_transfers_from_affiliated_committees;
    bool m_transfers_from_affiliated_committees_isSet;
    bool m_transfers_from_affiliated_committees_isValid;

    double m_transfers_to_other_authorized_committees;
    bool m_transfers_to_other_authorized_committees_isSet;
    bool m_transfers_to_other_authorized_committees_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPresidentialSummary)

#endif // OAIPresidentialSummary_H
