/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitteeReports.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitteeReports::OAICommitteeReports(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitteeReports::OAICommitteeReports() {
    this->initializeModel();
}

OAICommitteeReports::~OAICommitteeReports() {}

void OAICommitteeReports::initializeModel() {

    m_aggregate_amount_personal_contributions_general_isSet = false;
    m_aggregate_amount_personal_contributions_general_isValid = false;

    m_aggregate_contributions_personal_funds_primary_isSet = false;
    m_aggregate_contributions_personal_funds_primary_isValid = false;

    m_all_loans_received_period_isSet = false;
    m_all_loans_received_period_isValid = false;

    m_all_loans_received_ytd_isSet = false;
    m_all_loans_received_ytd_isValid = false;

    m_all_other_loans_period_isSet = false;
    m_all_other_loans_period_isValid = false;

    m_all_other_loans_ytd_isSet = false;
    m_all_other_loans_ytd_isValid = false;

    m_allocated_federal_election_levin_share_period_isSet = false;
    m_allocated_federal_election_levin_share_period_isValid = false;

    m_amendment_chain_isSet = false;
    m_amendment_chain_isValid = false;

    m_amendment_indicator_isSet = false;
    m_amendment_indicator_isValid = false;

    m_amendment_indicator_full_isSet = false;
    m_amendment_indicator_full_isValid = false;

    m_beginning_image_number_isSet = false;
    m_beginning_image_number_isValid = false;

    m_calendar_ytd_isSet = false;
    m_calendar_ytd_isValid = false;

    m_candidate_contribution_period_isSet = false;
    m_candidate_contribution_period_isValid = false;

    m_candidate_contribution_ytd_isSet = false;
    m_candidate_contribution_ytd_isValid = false;

    m_cash_on_hand_beginning_calendar_ytd_isSet = false;
    m_cash_on_hand_beginning_calendar_ytd_isValid = false;

    m_cash_on_hand_beginning_period_isSet = false;
    m_cash_on_hand_beginning_period_isValid = false;

    m_cash_on_hand_close_ytd_isSet = false;
    m_cash_on_hand_close_ytd_isValid = false;

    m_cash_on_hand_end_period_isSet = false;
    m_cash_on_hand_end_period_isValid = false;

    m_committee_id_isSet = false;
    m_committee_id_isValid = false;

    m_committee_name_isSet = false;
    m_committee_name_isValid = false;

    m_committee_type_isSet = false;
    m_committee_type_isValid = false;

    m_coordinated_expenditures_by_party_committee_period_isSet = false;
    m_coordinated_expenditures_by_party_committee_period_isValid = false;

    m_coordinated_expenditures_by_party_committee_ytd_isSet = false;
    m_coordinated_expenditures_by_party_committee_ytd_isValid = false;

    m_coverage_end_date_isSet = false;
    m_coverage_end_date_isValid = false;

    m_coverage_start_date_isSet = false;
    m_coverage_start_date_isValid = false;

    m_csv_url_isSet = false;
    m_csv_url_isValid = false;

    m_cycle_isSet = false;
    m_cycle_isValid = false;

    m_debts_owed_by_committee_isSet = false;
    m_debts_owed_by_committee_isValid = false;

    m_debts_owed_to_committee_isSet = false;
    m_debts_owed_to_committee_isValid = false;

    m_document_description_isSet = false;
    m_document_description_isValid = false;

    m_end_image_number_isSet = false;
    m_end_image_number_isValid = false;

    m_exempt_legal_accounting_disbursement_period_isSet = false;
    m_exempt_legal_accounting_disbursement_period_isValid = false;

    m_exempt_legal_accounting_disbursement_ytd_isSet = false;
    m_exempt_legal_accounting_disbursement_ytd_isValid = false;

    m_expenditure_subject_to_limits_isSet = false;
    m_expenditure_subject_to_limits_isValid = false;

    m_fec_file_id_isSet = false;
    m_fec_file_id_isValid = false;

    m_fec_url_isSet = false;
    m_fec_url_isValid = false;

    m_fed_candidate_committee_contribution_refunds_ytd_isSet = false;
    m_fed_candidate_committee_contribution_refunds_ytd_isValid = false;

    m_fed_candidate_committee_contributions_period_isSet = false;
    m_fed_candidate_committee_contributions_period_isValid = false;

    m_fed_candidate_committee_contributions_ytd_isSet = false;
    m_fed_candidate_committee_contributions_ytd_isValid = false;

    m_fed_candidate_contribution_refunds_period_isSet = false;
    m_fed_candidate_contribution_refunds_period_isValid = false;

    m_federal_funds_period_isSet = false;
    m_federal_funds_period_isValid = false;

    m_federal_funds_ytd_isSet = false;
    m_federal_funds_ytd_isValid = false;

    m_file_number_isSet = false;
    m_file_number_isValid = false;

    m_fundraising_disbursements_period_isSet = false;
    m_fundraising_disbursements_period_isValid = false;

    m_fundraising_disbursements_ytd_isSet = false;
    m_fundraising_disbursements_ytd_isValid = false;

    m_gross_receipt_authorized_committee_general_isSet = false;
    m_gross_receipt_authorized_committee_general_isValid = false;

    m_gross_receipt_authorized_committee_primary_isSet = false;
    m_gross_receipt_authorized_committee_primary_isValid = false;

    m_gross_receipt_minus_personal_contribution_general_isSet = false;
    m_gross_receipt_minus_personal_contribution_general_isValid = false;

    m_gross_receipt_minus_personal_contributions_primary_isSet = false;
    m_gross_receipt_minus_personal_contributions_primary_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_independent_contributions_period_isSet = false;
    m_independent_contributions_period_isValid = false;

    m_independent_expenditures_period_isSet = false;
    m_independent_expenditures_period_isValid = false;

    m_independent_expenditures_ytd_isSet = false;
    m_independent_expenditures_ytd_isValid = false;

    m_individual_itemized_contributions_period_isSet = false;
    m_individual_itemized_contributions_period_isValid = false;

    m_individual_itemized_contributions_ytd_isSet = false;
    m_individual_itemized_contributions_ytd_isValid = false;

    m_individual_unitemized_contributions_period_isSet = false;
    m_individual_unitemized_contributions_period_isValid = false;

    m_individual_unitemized_contributions_ytd_isSet = false;
    m_individual_unitemized_contributions_ytd_isValid = false;

    m_is_amended_isSet = false;
    m_is_amended_isValid = false;

    m_items_on_hand_liquidated_isSet = false;
    m_items_on_hand_liquidated_isValid = false;

    m_loan_repayments_candidate_loans_period_isSet = false;
    m_loan_repayments_candidate_loans_period_isValid = false;

    m_loan_repayments_candidate_loans_ytd_isSet = false;
    m_loan_repayments_candidate_loans_ytd_isValid = false;

    m_loan_repayments_made_period_isSet = false;
    m_loan_repayments_made_period_isValid = false;

    m_loan_repayments_made_ytd_isSet = false;
    m_loan_repayments_made_ytd_isValid = false;

    m_loan_repayments_other_loans_period_isSet = false;
    m_loan_repayments_other_loans_period_isValid = false;

    m_loan_repayments_other_loans_ytd_isSet = false;
    m_loan_repayments_other_loans_ytd_isValid = false;

    m_loan_repayments_received_period_isSet = false;
    m_loan_repayments_received_period_isValid = false;

    m_loan_repayments_received_ytd_isSet = false;
    m_loan_repayments_received_ytd_isValid = false;

    m_loans_made_by_candidate_period_isSet = false;
    m_loans_made_by_candidate_period_isValid = false;

    m_loans_made_by_candidate_ytd_isSet = false;
    m_loans_made_by_candidate_ytd_isValid = false;

    m_loans_made_period_isSet = false;
    m_loans_made_period_isValid = false;

    m_loans_made_ytd_isSet = false;
    m_loans_made_ytd_isValid = false;

    m_loans_received_from_candidate_period_isSet = false;
    m_loans_received_from_candidate_period_isValid = false;

    m_loans_received_from_candidate_ytd_isSet = false;
    m_loans_received_from_candidate_ytd_isValid = false;

    m_means_filed_isSet = false;
    m_means_filed_isValid = false;

    m_most_recent_isSet = false;
    m_most_recent_isValid = false;

    m_most_recent_file_number_isSet = false;
    m_most_recent_file_number_isValid = false;

    m_net_contributions_cycle_to_date_isSet = false;
    m_net_contributions_cycle_to_date_isValid = false;

    m_net_contributions_period_isSet = false;
    m_net_contributions_period_isValid = false;

    m_net_contributions_ytd_isSet = false;
    m_net_contributions_ytd_isValid = false;

    m_net_operating_expenditures_cycle_to_date_isSet = false;
    m_net_operating_expenditures_cycle_to_date_isValid = false;

    m_net_operating_expenditures_period_isSet = false;
    m_net_operating_expenditures_period_isValid = false;

    m_net_operating_expenditures_ytd_isSet = false;
    m_net_operating_expenditures_ytd_isValid = false;

    m_non_allocated_fed_election_activity_period_isSet = false;
    m_non_allocated_fed_election_activity_period_isValid = false;

    m_non_allocated_fed_election_activity_ytd_isSet = false;
    m_non_allocated_fed_election_activity_ytd_isValid = false;

    m_nonfed_share_allocated_disbursements_period_isSet = false;
    m_nonfed_share_allocated_disbursements_period_isValid = false;

    m_offsets_to_fundraising_expenditures_period_isSet = false;
    m_offsets_to_fundraising_expenditures_period_isValid = false;

    m_offsets_to_fundraising_expenditures_ytd_isSet = false;
    m_offsets_to_fundraising_expenditures_ytd_isValid = false;

    m_offsets_to_legal_accounting_period_isSet = false;
    m_offsets_to_legal_accounting_period_isValid = false;

    m_offsets_to_legal_accounting_ytd_isSet = false;
    m_offsets_to_legal_accounting_ytd_isValid = false;

    m_offsets_to_operating_expenditures_period_isSet = false;
    m_offsets_to_operating_expenditures_period_isValid = false;

    m_offsets_to_operating_expenditures_ytd_isSet = false;
    m_offsets_to_operating_expenditures_ytd_isValid = false;

    m_operating_expenditures_period_isSet = false;
    m_operating_expenditures_period_isValid = false;

    m_operating_expenditures_ytd_isSet = false;
    m_operating_expenditures_ytd_isValid = false;

    m_other_disbursements_period_isSet = false;
    m_other_disbursements_period_isValid = false;

    m_other_disbursements_ytd_isSet = false;
    m_other_disbursements_ytd_isValid = false;

    m_other_fed_operating_expenditures_period_isSet = false;
    m_other_fed_operating_expenditures_period_isValid = false;

    m_other_fed_operating_expenditures_ytd_isSet = false;
    m_other_fed_operating_expenditures_ytd_isValid = false;

    m_other_fed_receipts_period_isSet = false;
    m_other_fed_receipts_period_isValid = false;

    m_other_fed_receipts_ytd_isSet = false;
    m_other_fed_receipts_ytd_isValid = false;

    m_other_loans_received_period_isSet = false;
    m_other_loans_received_period_isValid = false;

    m_other_loans_received_ytd_isSet = false;
    m_other_loans_received_ytd_isValid = false;

    m_other_political_committee_contributions_period_isSet = false;
    m_other_political_committee_contributions_period_isValid = false;

    m_other_political_committee_contributions_ytd_isSet = false;
    m_other_political_committee_contributions_ytd_isValid = false;

    m_other_receipts_period_isSet = false;
    m_other_receipts_period_isValid = false;

    m_other_receipts_ytd_isSet = false;
    m_other_receipts_ytd_isValid = false;

    m_pdf_url_isSet = false;
    m_pdf_url_isValid = false;

    m_political_party_committee_contributions_period_isSet = false;
    m_political_party_committee_contributions_period_isValid = false;

    m_political_party_committee_contributions_ytd_isSet = false;
    m_political_party_committee_contributions_ytd_isValid = false;

    m_previous_file_number_isSet = false;
    m_previous_file_number_isValid = false;

    m_receipt_date_isSet = false;
    m_receipt_date_isValid = false;

    m_refunded_individual_contributions_period_isSet = false;
    m_refunded_individual_contributions_period_isValid = false;

    m_refunded_individual_contributions_ytd_isSet = false;
    m_refunded_individual_contributions_ytd_isValid = false;

    m_refunded_other_political_committee_contributions_period_isSet = false;
    m_refunded_other_political_committee_contributions_period_isValid = false;

    m_refunded_other_political_committee_contributions_ytd_isSet = false;
    m_refunded_other_political_committee_contributions_ytd_isValid = false;

    m_refunded_political_party_committee_contributions_period_isSet = false;
    m_refunded_political_party_committee_contributions_period_isValid = false;

    m_refunded_political_party_committee_contributions_ytd_isSet = false;
    m_refunded_political_party_committee_contributions_ytd_isValid = false;

    m_refunds_total_contributions_col_total_ytd_isSet = false;
    m_refunds_total_contributions_col_total_ytd_isValid = false;

    m_repayments_loans_made_by_candidate_period_isSet = false;
    m_repayments_loans_made_by_candidate_period_isValid = false;

    m_repayments_loans_made_candidate_ytd_isSet = false;
    m_repayments_loans_made_candidate_ytd_isValid = false;

    m_repayments_other_loans_period_isSet = false;
    m_repayments_other_loans_period_isValid = false;

    m_repayments_other_loans_ytd_isSet = false;
    m_repayments_other_loans_ytd_isValid = false;

    m_report_form_isSet = false;
    m_report_form_isValid = false;

    m_report_type_isSet = false;
    m_report_type_isValid = false;

    m_report_type_full_isSet = false;
    m_report_type_full_isValid = false;

    m_report_year_isSet = false;
    m_report_year_isValid = false;

    m_shared_fed_activity_nonfed_ytd_isSet = false;
    m_shared_fed_activity_nonfed_ytd_isValid = false;

    m_shared_fed_activity_period_isSet = false;
    m_shared_fed_activity_period_isValid = false;

    m_shared_fed_activity_ytd_isSet = false;
    m_shared_fed_activity_ytd_isValid = false;

    m_shared_fed_operating_expenditures_period_isSet = false;
    m_shared_fed_operating_expenditures_period_isValid = false;

    m_shared_fed_operating_expenditures_ytd_isSet = false;
    m_shared_fed_operating_expenditures_ytd_isValid = false;

    m_shared_nonfed_operating_expenditures_period_isSet = false;
    m_shared_nonfed_operating_expenditures_period_isValid = false;

    m_shared_nonfed_operating_expenditures_ytd_isSet = false;
    m_shared_nonfed_operating_expenditures_ytd_isValid = false;

    m_subtotal_period_isSet = false;
    m_subtotal_period_isValid = false;

    m_subtotal_summary_page_period_isSet = false;
    m_subtotal_summary_page_period_isValid = false;

    m_subtotal_summary_period_isSet = false;
    m_subtotal_summary_period_isValid = false;

    m_subtotal_summary_ytd_isSet = false;
    m_subtotal_summary_ytd_isValid = false;

    m_total_contribution_refunds_col_total_period_isSet = false;
    m_total_contribution_refunds_col_total_period_isValid = false;

    m_total_contribution_refunds_period_isSet = false;
    m_total_contribution_refunds_period_isValid = false;

    m_total_contribution_refunds_ytd_isSet = false;
    m_total_contribution_refunds_ytd_isValid = false;

    m_total_contributions_column_total_period_isSet = false;
    m_total_contributions_column_total_period_isValid = false;

    m_total_contributions_period_isSet = false;
    m_total_contributions_period_isValid = false;

    m_total_contributions_ytd_isSet = false;
    m_total_contributions_ytd_isValid = false;

    m_total_disbursements_period_isSet = false;
    m_total_disbursements_period_isValid = false;

    m_total_disbursements_ytd_isSet = false;
    m_total_disbursements_ytd_isValid = false;

    m_total_fed_disbursements_period_isSet = false;
    m_total_fed_disbursements_period_isValid = false;

    m_total_fed_disbursements_ytd_isSet = false;
    m_total_fed_disbursements_ytd_isValid = false;

    m_total_fed_election_activity_period_isSet = false;
    m_total_fed_election_activity_period_isValid = false;

    m_total_fed_election_activity_ytd_isSet = false;
    m_total_fed_election_activity_ytd_isValid = false;

    m_total_fed_operating_expenditures_period_isSet = false;
    m_total_fed_operating_expenditures_period_isValid = false;

    m_total_fed_operating_expenditures_ytd_isSet = false;
    m_total_fed_operating_expenditures_ytd_isValid = false;

    m_total_fed_receipts_period_isSet = false;
    m_total_fed_receipts_period_isValid = false;

    m_total_fed_receipts_ytd_isSet = false;
    m_total_fed_receipts_ytd_isValid = false;

    m_total_individual_contributions_period_isSet = false;
    m_total_individual_contributions_period_isValid = false;

    m_total_individual_contributions_ytd_isSet = false;
    m_total_individual_contributions_ytd_isValid = false;

    m_total_loan_repayments_made_period_isSet = false;
    m_total_loan_repayments_made_period_isValid = false;

    m_total_loan_repayments_made_ytd_isSet = false;
    m_total_loan_repayments_made_ytd_isValid = false;

    m_total_loans_received_period_isSet = false;
    m_total_loans_received_period_isValid = false;

    m_total_loans_received_ytd_isSet = false;
    m_total_loans_received_ytd_isValid = false;

    m_total_nonfed_transfers_period_isSet = false;
    m_total_nonfed_transfers_period_isValid = false;

    m_total_nonfed_transfers_ytd_isSet = false;
    m_total_nonfed_transfers_ytd_isValid = false;

    m_total_offsets_to_operating_expenditures_period_isSet = false;
    m_total_offsets_to_operating_expenditures_period_isValid = false;

    m_total_offsets_to_operating_expenditures_ytd_isSet = false;
    m_total_offsets_to_operating_expenditures_ytd_isValid = false;

    m_total_operating_expenditures_period_isSet = false;
    m_total_operating_expenditures_period_isValid = false;

    m_total_operating_expenditures_ytd_isSet = false;
    m_total_operating_expenditures_ytd_isValid = false;

    m_total_period_isSet = false;
    m_total_period_isValid = false;

    m_total_receipts_period_isSet = false;
    m_total_receipts_period_isValid = false;

    m_total_receipts_ytd_isSet = false;
    m_total_receipts_ytd_isValid = false;

    m_total_ytd_isSet = false;
    m_total_ytd_isValid = false;

    m_transfers_from_affiliated_committee_period_isSet = false;
    m_transfers_from_affiliated_committee_period_isValid = false;

    m_transfers_from_affiliated_committee_ytd_isSet = false;
    m_transfers_from_affiliated_committee_ytd_isValid = false;

    m_transfers_from_affiliated_party_period_isSet = false;
    m_transfers_from_affiliated_party_period_isValid = false;

    m_transfers_from_affiliated_party_ytd_isSet = false;
    m_transfers_from_affiliated_party_ytd_isValid = false;

    m_transfers_from_nonfed_account_period_isSet = false;
    m_transfers_from_nonfed_account_period_isValid = false;

    m_transfers_from_nonfed_account_ytd_isSet = false;
    m_transfers_from_nonfed_account_ytd_isValid = false;

    m_transfers_from_nonfed_levin_period_isSet = false;
    m_transfers_from_nonfed_levin_period_isValid = false;

    m_transfers_from_nonfed_levin_ytd_isSet = false;
    m_transfers_from_nonfed_levin_ytd_isValid = false;

    m_transfers_from_other_authorized_committee_period_isSet = false;
    m_transfers_from_other_authorized_committee_period_isValid = false;

    m_transfers_from_other_authorized_committee_ytd_isSet = false;
    m_transfers_from_other_authorized_committee_ytd_isValid = false;

    m_transfers_to_affiliated_committee_period_isSet = false;
    m_transfers_to_affiliated_committee_period_isValid = false;

    m_transfers_to_affilitated_committees_ytd_isSet = false;
    m_transfers_to_affilitated_committees_ytd_isValid = false;

    m_transfers_to_other_authorized_committee_period_isSet = false;
    m_transfers_to_other_authorized_committee_period_isValid = false;

    m_transfers_to_other_authorized_committee_ytd_isSet = false;
    m_transfers_to_other_authorized_committee_ytd_isValid = false;
}

void OAICommitteeReports::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitteeReports::fromJsonObject(QJsonObject json) {

    m_aggregate_amount_personal_contributions_general_isValid = ::OpenAPI::fromJsonValue(m_aggregate_amount_personal_contributions_general, json[QString("aggregate_amount_personal_contributions_general")]);
    m_aggregate_amount_personal_contributions_general_isSet = !json[QString("aggregate_amount_personal_contributions_general")].isNull() && m_aggregate_amount_personal_contributions_general_isValid;

    m_aggregate_contributions_personal_funds_primary_isValid = ::OpenAPI::fromJsonValue(m_aggregate_contributions_personal_funds_primary, json[QString("aggregate_contributions_personal_funds_primary")]);
    m_aggregate_contributions_personal_funds_primary_isSet = !json[QString("aggregate_contributions_personal_funds_primary")].isNull() && m_aggregate_contributions_personal_funds_primary_isValid;

    m_all_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_all_loans_received_period, json[QString("all_loans_received_period")]);
    m_all_loans_received_period_isSet = !json[QString("all_loans_received_period")].isNull() && m_all_loans_received_period_isValid;

    m_all_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_all_loans_received_ytd, json[QString("all_loans_received_ytd")]);
    m_all_loans_received_ytd_isSet = !json[QString("all_loans_received_ytd")].isNull() && m_all_loans_received_ytd_isValid;

    m_all_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_all_other_loans_period, json[QString("all_other_loans_period")]);
    m_all_other_loans_period_isSet = !json[QString("all_other_loans_period")].isNull() && m_all_other_loans_period_isValid;

    m_all_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_all_other_loans_ytd, json[QString("all_other_loans_ytd")]);
    m_all_other_loans_ytd_isSet = !json[QString("all_other_loans_ytd")].isNull() && m_all_other_loans_ytd_isValid;

    m_allocated_federal_election_levin_share_period_isValid = ::OpenAPI::fromJsonValue(m_allocated_federal_election_levin_share_period, json[QString("allocated_federal_election_levin_share_period")]);
    m_allocated_federal_election_levin_share_period_isSet = !json[QString("allocated_federal_election_levin_share_period")].isNull() && m_allocated_federal_election_levin_share_period_isValid;

    m_amendment_chain_isValid = ::OpenAPI::fromJsonValue(m_amendment_chain, json[QString("amendment_chain")]);
    m_amendment_chain_isSet = !json[QString("amendment_chain")].isNull() && m_amendment_chain_isValid;

    m_amendment_indicator_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator, json[QString("amendment_indicator")]);
    m_amendment_indicator_isSet = !json[QString("amendment_indicator")].isNull() && m_amendment_indicator_isValid;

    m_amendment_indicator_full_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator_full, json[QString("amendment_indicator_full")]);
    m_amendment_indicator_full_isSet = !json[QString("amendment_indicator_full")].isNull() && m_amendment_indicator_full_isValid;

    m_beginning_image_number_isValid = ::OpenAPI::fromJsonValue(m_beginning_image_number, json[QString("beginning_image_number")]);
    m_beginning_image_number_isSet = !json[QString("beginning_image_number")].isNull() && m_beginning_image_number_isValid;

    m_calendar_ytd_isValid = ::OpenAPI::fromJsonValue(m_calendar_ytd, json[QString("calendar_ytd")]);
    m_calendar_ytd_isSet = !json[QString("calendar_ytd")].isNull() && m_calendar_ytd_isValid;

    m_candidate_contribution_period_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_period, json[QString("candidate_contribution_period")]);
    m_candidate_contribution_period_isSet = !json[QString("candidate_contribution_period")].isNull() && m_candidate_contribution_period_isValid;

    m_candidate_contribution_ytd_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_ytd, json[QString("candidate_contribution_ytd")]);
    m_candidate_contribution_ytd_isSet = !json[QString("candidate_contribution_ytd")].isNull() && m_candidate_contribution_ytd_isValid;

    m_cash_on_hand_beginning_calendar_ytd_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_calendar_ytd, json[QString("cash_on_hand_beginning_calendar_ytd")]);
    m_cash_on_hand_beginning_calendar_ytd_isSet = !json[QString("cash_on_hand_beginning_calendar_ytd")].isNull() && m_cash_on_hand_beginning_calendar_ytd_isValid;

    m_cash_on_hand_beginning_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_period, json[QString("cash_on_hand_beginning_period")]);
    m_cash_on_hand_beginning_period_isSet = !json[QString("cash_on_hand_beginning_period")].isNull() && m_cash_on_hand_beginning_period_isValid;

    m_cash_on_hand_close_ytd_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_close_ytd, json[QString("cash_on_hand_close_ytd")]);
    m_cash_on_hand_close_ytd_isSet = !json[QString("cash_on_hand_close_ytd")].isNull() && m_cash_on_hand_close_ytd_isValid;

    m_cash_on_hand_end_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_end_period, json[QString("cash_on_hand_end_period")]);
    m_cash_on_hand_end_period_isSet = !json[QString("cash_on_hand_end_period")].isNull() && m_cash_on_hand_end_period_isValid;

    m_committee_id_isValid = ::OpenAPI::fromJsonValue(m_committee_id, json[QString("committee_id")]);
    m_committee_id_isSet = !json[QString("committee_id")].isNull() && m_committee_id_isValid;

    m_committee_name_isValid = ::OpenAPI::fromJsonValue(m_committee_name, json[QString("committee_name")]);
    m_committee_name_isSet = !json[QString("committee_name")].isNull() && m_committee_name_isValid;

    m_committee_type_isValid = ::OpenAPI::fromJsonValue(m_committee_type, json[QString("committee_type")]);
    m_committee_type_isSet = !json[QString("committee_type")].isNull() && m_committee_type_isValid;

    m_coordinated_expenditures_by_party_committee_period_isValid = ::OpenAPI::fromJsonValue(m_coordinated_expenditures_by_party_committee_period, json[QString("coordinated_expenditures_by_party_committee_period")]);
    m_coordinated_expenditures_by_party_committee_period_isSet = !json[QString("coordinated_expenditures_by_party_committee_period")].isNull() && m_coordinated_expenditures_by_party_committee_period_isValid;

    m_coordinated_expenditures_by_party_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_coordinated_expenditures_by_party_committee_ytd, json[QString("coordinated_expenditures_by_party_committee_ytd")]);
    m_coordinated_expenditures_by_party_committee_ytd_isSet = !json[QString("coordinated_expenditures_by_party_committee_ytd")].isNull() && m_coordinated_expenditures_by_party_committee_ytd_isValid;

    m_coverage_end_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_end_date, json[QString("coverage_end_date")]);
    m_coverage_end_date_isSet = !json[QString("coverage_end_date")].isNull() && m_coverage_end_date_isValid;

    m_coverage_start_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_start_date, json[QString("coverage_start_date")]);
    m_coverage_start_date_isSet = !json[QString("coverage_start_date")].isNull() && m_coverage_start_date_isValid;

    m_csv_url_isValid = ::OpenAPI::fromJsonValue(m_csv_url, json[QString("csv_url")]);
    m_csv_url_isSet = !json[QString("csv_url")].isNull() && m_csv_url_isValid;

    m_cycle_isValid = ::OpenAPI::fromJsonValue(m_cycle, json[QString("cycle")]);
    m_cycle_isSet = !json[QString("cycle")].isNull() && m_cycle_isValid;

    m_debts_owed_by_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_by_committee, json[QString("debts_owed_by_committee")]);
    m_debts_owed_by_committee_isSet = !json[QString("debts_owed_by_committee")].isNull() && m_debts_owed_by_committee_isValid;

    m_debts_owed_to_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_to_committee, json[QString("debts_owed_to_committee")]);
    m_debts_owed_to_committee_isSet = !json[QString("debts_owed_to_committee")].isNull() && m_debts_owed_to_committee_isValid;

    m_document_description_isValid = ::OpenAPI::fromJsonValue(m_document_description, json[QString("document_description")]);
    m_document_description_isSet = !json[QString("document_description")].isNull() && m_document_description_isValid;

    m_end_image_number_isValid = ::OpenAPI::fromJsonValue(m_end_image_number, json[QString("end_image_number")]);
    m_end_image_number_isSet = !json[QString("end_image_number")].isNull() && m_end_image_number_isValid;

    m_exempt_legal_accounting_disbursement_period_isValid = ::OpenAPI::fromJsonValue(m_exempt_legal_accounting_disbursement_period, json[QString("exempt_legal_accounting_disbursement_period")]);
    m_exempt_legal_accounting_disbursement_period_isSet = !json[QString("exempt_legal_accounting_disbursement_period")].isNull() && m_exempt_legal_accounting_disbursement_period_isValid;

    m_exempt_legal_accounting_disbursement_ytd_isValid = ::OpenAPI::fromJsonValue(m_exempt_legal_accounting_disbursement_ytd, json[QString("exempt_legal_accounting_disbursement_ytd")]);
    m_exempt_legal_accounting_disbursement_ytd_isSet = !json[QString("exempt_legal_accounting_disbursement_ytd")].isNull() && m_exempt_legal_accounting_disbursement_ytd_isValid;

    m_expenditure_subject_to_limits_isValid = ::OpenAPI::fromJsonValue(m_expenditure_subject_to_limits, json[QString("expenditure_subject_to_limits")]);
    m_expenditure_subject_to_limits_isSet = !json[QString("expenditure_subject_to_limits")].isNull() && m_expenditure_subject_to_limits_isValid;

    m_fec_file_id_isValid = ::OpenAPI::fromJsonValue(m_fec_file_id, json[QString("fec_file_id")]);
    m_fec_file_id_isSet = !json[QString("fec_file_id")].isNull() && m_fec_file_id_isValid;

    m_fec_url_isValid = ::OpenAPI::fromJsonValue(m_fec_url, json[QString("fec_url")]);
    m_fec_url_isSet = !json[QString("fec_url")].isNull() && m_fec_url_isValid;

    m_fed_candidate_committee_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contribution_refunds_ytd, json[QString("fed_candidate_committee_contribution_refunds_ytd")]);
    m_fed_candidate_committee_contribution_refunds_ytd_isSet = !json[QString("fed_candidate_committee_contribution_refunds_ytd")].isNull() && m_fed_candidate_committee_contribution_refunds_ytd_isValid;

    m_fed_candidate_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contributions_period, json[QString("fed_candidate_committee_contributions_period")]);
    m_fed_candidate_committee_contributions_period_isSet = !json[QString("fed_candidate_committee_contributions_period")].isNull() && m_fed_candidate_committee_contributions_period_isValid;

    m_fed_candidate_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contributions_ytd, json[QString("fed_candidate_committee_contributions_ytd")]);
    m_fed_candidate_committee_contributions_ytd_isSet = !json[QString("fed_candidate_committee_contributions_ytd")].isNull() && m_fed_candidate_committee_contributions_ytd_isValid;

    m_fed_candidate_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_contribution_refunds_period, json[QString("fed_candidate_contribution_refunds_period")]);
    m_fed_candidate_contribution_refunds_period_isSet = !json[QString("fed_candidate_contribution_refunds_period")].isNull() && m_fed_candidate_contribution_refunds_period_isValid;

    m_federal_funds_period_isValid = ::OpenAPI::fromJsonValue(m_federal_funds_period, json[QString("federal_funds_period")]);
    m_federal_funds_period_isSet = !json[QString("federal_funds_period")].isNull() && m_federal_funds_period_isValid;

    m_federal_funds_ytd_isValid = ::OpenAPI::fromJsonValue(m_federal_funds_ytd, json[QString("federal_funds_ytd")]);
    m_federal_funds_ytd_isSet = !json[QString("federal_funds_ytd")].isNull() && m_federal_funds_ytd_isValid;

    m_file_number_isValid = ::OpenAPI::fromJsonValue(m_file_number, json[QString("file_number")]);
    m_file_number_isSet = !json[QString("file_number")].isNull() && m_file_number_isValid;

    m_fundraising_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_fundraising_disbursements_period, json[QString("fundraising_disbursements_period")]);
    m_fundraising_disbursements_period_isSet = !json[QString("fundraising_disbursements_period")].isNull() && m_fundraising_disbursements_period_isValid;

    m_fundraising_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_fundraising_disbursements_ytd, json[QString("fundraising_disbursements_ytd")]);
    m_fundraising_disbursements_ytd_isSet = !json[QString("fundraising_disbursements_ytd")].isNull() && m_fundraising_disbursements_ytd_isValid;

    m_gross_receipt_authorized_committee_general_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_authorized_committee_general, json[QString("gross_receipt_authorized_committee_general")]);
    m_gross_receipt_authorized_committee_general_isSet = !json[QString("gross_receipt_authorized_committee_general")].isNull() && m_gross_receipt_authorized_committee_general_isValid;

    m_gross_receipt_authorized_committee_primary_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_authorized_committee_primary, json[QString("gross_receipt_authorized_committee_primary")]);
    m_gross_receipt_authorized_committee_primary_isSet = !json[QString("gross_receipt_authorized_committee_primary")].isNull() && m_gross_receipt_authorized_committee_primary_isValid;

    m_gross_receipt_minus_personal_contribution_general_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_minus_personal_contribution_general, json[QString("gross_receipt_minus_personal_contribution_general")]);
    m_gross_receipt_minus_personal_contribution_general_isSet = !json[QString("gross_receipt_minus_personal_contribution_general")].isNull() && m_gross_receipt_minus_personal_contribution_general_isValid;

    m_gross_receipt_minus_personal_contributions_primary_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_minus_personal_contributions_primary, json[QString("gross_receipt_minus_personal_contributions_primary")]);
    m_gross_receipt_minus_personal_contributions_primary_isSet = !json[QString("gross_receipt_minus_personal_contributions_primary")].isNull() && m_gross_receipt_minus_personal_contributions_primary_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_independent_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_independent_contributions_period, json[QString("independent_contributions_period")]);
    m_independent_contributions_period_isSet = !json[QString("independent_contributions_period")].isNull() && m_independent_contributions_period_isValid;

    m_independent_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_independent_expenditures_period, json[QString("independent_expenditures_period")]);
    m_independent_expenditures_period_isSet = !json[QString("independent_expenditures_period")].isNull() && m_independent_expenditures_period_isValid;

    m_independent_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_independent_expenditures_ytd, json[QString("independent_expenditures_ytd")]);
    m_independent_expenditures_ytd_isSet = !json[QString("independent_expenditures_ytd")].isNull() && m_independent_expenditures_ytd_isValid;

    m_individual_itemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_period, json[QString("individual_itemized_contributions_period")]);
    m_individual_itemized_contributions_period_isSet = !json[QString("individual_itemized_contributions_period")].isNull() && m_individual_itemized_contributions_period_isValid;

    m_individual_itemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_ytd, json[QString("individual_itemized_contributions_ytd")]);
    m_individual_itemized_contributions_ytd_isSet = !json[QString("individual_itemized_contributions_ytd")].isNull() && m_individual_itemized_contributions_ytd_isValid;

    m_individual_unitemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_period, json[QString("individual_unitemized_contributions_period")]);
    m_individual_unitemized_contributions_period_isSet = !json[QString("individual_unitemized_contributions_period")].isNull() && m_individual_unitemized_contributions_period_isValid;

    m_individual_unitemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_ytd, json[QString("individual_unitemized_contributions_ytd")]);
    m_individual_unitemized_contributions_ytd_isSet = !json[QString("individual_unitemized_contributions_ytd")].isNull() && m_individual_unitemized_contributions_ytd_isValid;

    m_is_amended_isValid = ::OpenAPI::fromJsonValue(m_is_amended, json[QString("is_amended")]);
    m_is_amended_isSet = !json[QString("is_amended")].isNull() && m_is_amended_isValid;

    m_items_on_hand_liquidated_isValid = ::OpenAPI::fromJsonValue(m_items_on_hand_liquidated, json[QString("items_on_hand_liquidated")]);
    m_items_on_hand_liquidated_isSet = !json[QString("items_on_hand_liquidated")].isNull() && m_items_on_hand_liquidated_isValid;

    m_loan_repayments_candidate_loans_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_candidate_loans_period, json[QString("loan_repayments_candidate_loans_period")]);
    m_loan_repayments_candidate_loans_period_isSet = !json[QString("loan_repayments_candidate_loans_period")].isNull() && m_loan_repayments_candidate_loans_period_isValid;

    m_loan_repayments_candidate_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_candidate_loans_ytd, json[QString("loan_repayments_candidate_loans_ytd")]);
    m_loan_repayments_candidate_loans_ytd_isSet = !json[QString("loan_repayments_candidate_loans_ytd")].isNull() && m_loan_repayments_candidate_loans_ytd_isValid;

    m_loan_repayments_made_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_made_period, json[QString("loan_repayments_made_period")]);
    m_loan_repayments_made_period_isSet = !json[QString("loan_repayments_made_period")].isNull() && m_loan_repayments_made_period_isValid;

    m_loan_repayments_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_made_ytd, json[QString("loan_repayments_made_ytd")]);
    m_loan_repayments_made_ytd_isSet = !json[QString("loan_repayments_made_ytd")].isNull() && m_loan_repayments_made_ytd_isValid;

    m_loan_repayments_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_other_loans_period, json[QString("loan_repayments_other_loans_period")]);
    m_loan_repayments_other_loans_period_isSet = !json[QString("loan_repayments_other_loans_period")].isNull() && m_loan_repayments_other_loans_period_isValid;

    m_loan_repayments_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_other_loans_ytd, json[QString("loan_repayments_other_loans_ytd")]);
    m_loan_repayments_other_loans_ytd_isSet = !json[QString("loan_repayments_other_loans_ytd")].isNull() && m_loan_repayments_other_loans_ytd_isValid;

    m_loan_repayments_received_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_received_period, json[QString("loan_repayments_received_period")]);
    m_loan_repayments_received_period_isSet = !json[QString("loan_repayments_received_period")].isNull() && m_loan_repayments_received_period_isValid;

    m_loan_repayments_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_received_ytd, json[QString("loan_repayments_received_ytd")]);
    m_loan_repayments_received_ytd_isSet = !json[QString("loan_repayments_received_ytd")].isNull() && m_loan_repayments_received_ytd_isValid;

    m_loans_made_by_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_loans_made_by_candidate_period, json[QString("loans_made_by_candidate_period")]);
    m_loans_made_by_candidate_period_isSet = !json[QString("loans_made_by_candidate_period")].isNull() && m_loans_made_by_candidate_period_isValid;

    m_loans_made_by_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_made_by_candidate_ytd, json[QString("loans_made_by_candidate_ytd")]);
    m_loans_made_by_candidate_ytd_isSet = !json[QString("loans_made_by_candidate_ytd")].isNull() && m_loans_made_by_candidate_ytd_isValid;

    m_loans_made_period_isValid = ::OpenAPI::fromJsonValue(m_loans_made_period, json[QString("loans_made_period")]);
    m_loans_made_period_isSet = !json[QString("loans_made_period")].isNull() && m_loans_made_period_isValid;

    m_loans_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_made_ytd, json[QString("loans_made_ytd")]);
    m_loans_made_ytd_isSet = !json[QString("loans_made_ytd")].isNull() && m_loans_made_ytd_isValid;

    m_loans_received_from_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_loans_received_from_candidate_period, json[QString("loans_received_from_candidate_period")]);
    m_loans_received_from_candidate_period_isSet = !json[QString("loans_received_from_candidate_period")].isNull() && m_loans_received_from_candidate_period_isValid;

    m_loans_received_from_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_received_from_candidate_ytd, json[QString("loans_received_from_candidate_ytd")]);
    m_loans_received_from_candidate_ytd_isSet = !json[QString("loans_received_from_candidate_ytd")].isNull() && m_loans_received_from_candidate_ytd_isValid;

    m_means_filed_isValid = ::OpenAPI::fromJsonValue(m_means_filed, json[QString("means_filed")]);
    m_means_filed_isSet = !json[QString("means_filed")].isNull() && m_means_filed_isValid;

    m_most_recent_isValid = ::OpenAPI::fromJsonValue(m_most_recent, json[QString("most_recent")]);
    m_most_recent_isSet = !json[QString("most_recent")].isNull() && m_most_recent_isValid;

    m_most_recent_file_number_isValid = ::OpenAPI::fromJsonValue(m_most_recent_file_number, json[QString("most_recent_file_number")]);
    m_most_recent_file_number_isSet = !json[QString("most_recent_file_number")].isNull() && m_most_recent_file_number_isValid;

    m_net_contributions_cycle_to_date_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_cycle_to_date, json[QString("net_contributions_cycle_to_date")]);
    m_net_contributions_cycle_to_date_isSet = !json[QString("net_contributions_cycle_to_date")].isNull() && m_net_contributions_cycle_to_date_isValid;

    m_net_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_period, json[QString("net_contributions_period")]);
    m_net_contributions_period_isSet = !json[QString("net_contributions_period")].isNull() && m_net_contributions_period_isValid;

    m_net_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_ytd, json[QString("net_contributions_ytd")]);
    m_net_contributions_ytd_isSet = !json[QString("net_contributions_ytd")].isNull() && m_net_contributions_ytd_isValid;

    m_net_operating_expenditures_cycle_to_date_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_cycle_to_date, json[QString("net_operating_expenditures_cycle_to_date")]);
    m_net_operating_expenditures_cycle_to_date_isSet = !json[QString("net_operating_expenditures_cycle_to_date")].isNull() && m_net_operating_expenditures_cycle_to_date_isValid;

    m_net_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_period, json[QString("net_operating_expenditures_period")]);
    m_net_operating_expenditures_period_isSet = !json[QString("net_operating_expenditures_period")].isNull() && m_net_operating_expenditures_period_isValid;

    m_net_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_ytd, json[QString("net_operating_expenditures_ytd")]);
    m_net_operating_expenditures_ytd_isSet = !json[QString("net_operating_expenditures_ytd")].isNull() && m_net_operating_expenditures_ytd_isValid;

    m_non_allocated_fed_election_activity_period_isValid = ::OpenAPI::fromJsonValue(m_non_allocated_fed_election_activity_period, json[QString("non_allocated_fed_election_activity_period")]);
    m_non_allocated_fed_election_activity_period_isSet = !json[QString("non_allocated_fed_election_activity_period")].isNull() && m_non_allocated_fed_election_activity_period_isValid;

    m_non_allocated_fed_election_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_non_allocated_fed_election_activity_ytd, json[QString("non_allocated_fed_election_activity_ytd")]);
    m_non_allocated_fed_election_activity_ytd_isSet = !json[QString("non_allocated_fed_election_activity_ytd")].isNull() && m_non_allocated_fed_election_activity_ytd_isValid;

    m_nonfed_share_allocated_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_nonfed_share_allocated_disbursements_period, json[QString("nonfed_share_allocated_disbursements_period")]);
    m_nonfed_share_allocated_disbursements_period_isSet = !json[QString("nonfed_share_allocated_disbursements_period")].isNull() && m_nonfed_share_allocated_disbursements_period_isValid;

    m_offsets_to_fundraising_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_fundraising_expenditures_period, json[QString("offsets_to_fundraising_expenditures_period")]);
    m_offsets_to_fundraising_expenditures_period_isSet = !json[QString("offsets_to_fundraising_expenditures_period")].isNull() && m_offsets_to_fundraising_expenditures_period_isValid;

    m_offsets_to_fundraising_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_fundraising_expenditures_ytd, json[QString("offsets_to_fundraising_expenditures_ytd")]);
    m_offsets_to_fundraising_expenditures_ytd_isSet = !json[QString("offsets_to_fundraising_expenditures_ytd")].isNull() && m_offsets_to_fundraising_expenditures_ytd_isValid;

    m_offsets_to_legal_accounting_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_legal_accounting_period, json[QString("offsets_to_legal_accounting_period")]);
    m_offsets_to_legal_accounting_period_isSet = !json[QString("offsets_to_legal_accounting_period")].isNull() && m_offsets_to_legal_accounting_period_isValid;

    m_offsets_to_legal_accounting_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_legal_accounting_ytd, json[QString("offsets_to_legal_accounting_ytd")]);
    m_offsets_to_legal_accounting_ytd_isSet = !json[QString("offsets_to_legal_accounting_ytd")].isNull() && m_offsets_to_legal_accounting_ytd_isValid;

    m_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_period, json[QString("offsets_to_operating_expenditures_period")]);
    m_offsets_to_operating_expenditures_period_isSet = !json[QString("offsets_to_operating_expenditures_period")].isNull() && m_offsets_to_operating_expenditures_period_isValid;

    m_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_ytd, json[QString("offsets_to_operating_expenditures_ytd")]);
    m_offsets_to_operating_expenditures_ytd_isSet = !json[QString("offsets_to_operating_expenditures_ytd")].isNull() && m_offsets_to_operating_expenditures_ytd_isValid;

    m_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_period, json[QString("operating_expenditures_period")]);
    m_operating_expenditures_period_isSet = !json[QString("operating_expenditures_period")].isNull() && m_operating_expenditures_period_isValid;

    m_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_ytd, json[QString("operating_expenditures_ytd")]);
    m_operating_expenditures_ytd_isSet = !json[QString("operating_expenditures_ytd")].isNull() && m_operating_expenditures_ytd_isValid;

    m_other_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_period, json[QString("other_disbursements_period")]);
    m_other_disbursements_period_isSet = !json[QString("other_disbursements_period")].isNull() && m_other_disbursements_period_isValid;

    m_other_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_ytd, json[QString("other_disbursements_ytd")]);
    m_other_disbursements_ytd_isSet = !json[QString("other_disbursements_ytd")].isNull() && m_other_disbursements_ytd_isValid;

    m_other_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_other_fed_operating_expenditures_period, json[QString("other_fed_operating_expenditures_period")]);
    m_other_fed_operating_expenditures_period_isSet = !json[QString("other_fed_operating_expenditures_period")].isNull() && m_other_fed_operating_expenditures_period_isValid;

    m_other_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_fed_operating_expenditures_ytd, json[QString("other_fed_operating_expenditures_ytd")]);
    m_other_fed_operating_expenditures_ytd_isSet = !json[QString("other_fed_operating_expenditures_ytd")].isNull() && m_other_fed_operating_expenditures_ytd_isValid;

    m_other_fed_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_other_fed_receipts_period, json[QString("other_fed_receipts_period")]);
    m_other_fed_receipts_period_isSet = !json[QString("other_fed_receipts_period")].isNull() && m_other_fed_receipts_period_isValid;

    m_other_fed_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_fed_receipts_ytd, json[QString("other_fed_receipts_ytd")]);
    m_other_fed_receipts_ytd_isSet = !json[QString("other_fed_receipts_ytd")].isNull() && m_other_fed_receipts_ytd_isValid;

    m_other_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_other_loans_received_period, json[QString("other_loans_received_period")]);
    m_other_loans_received_period_isSet = !json[QString("other_loans_received_period")].isNull() && m_other_loans_received_period_isValid;

    m_other_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_loans_received_ytd, json[QString("other_loans_received_ytd")]);
    m_other_loans_received_ytd_isSet = !json[QString("other_loans_received_ytd")].isNull() && m_other_loans_received_ytd_isValid;

    m_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_period, json[QString("other_political_committee_contributions_period")]);
    m_other_political_committee_contributions_period_isSet = !json[QString("other_political_committee_contributions_period")].isNull() && m_other_political_committee_contributions_period_isValid;

    m_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_ytd, json[QString("other_political_committee_contributions_ytd")]);
    m_other_political_committee_contributions_ytd_isSet = !json[QString("other_political_committee_contributions_ytd")].isNull() && m_other_political_committee_contributions_ytd_isValid;

    m_other_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_period, json[QString("other_receipts_period")]);
    m_other_receipts_period_isSet = !json[QString("other_receipts_period")].isNull() && m_other_receipts_period_isValid;

    m_other_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_ytd, json[QString("other_receipts_ytd")]);
    m_other_receipts_ytd_isSet = !json[QString("other_receipts_ytd")].isNull() && m_other_receipts_ytd_isValid;

    m_pdf_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_url, json[QString("pdf_url")]);
    m_pdf_url_isSet = !json[QString("pdf_url")].isNull() && m_pdf_url_isValid;

    m_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_period, json[QString("political_party_committee_contributions_period")]);
    m_political_party_committee_contributions_period_isSet = !json[QString("political_party_committee_contributions_period")].isNull() && m_political_party_committee_contributions_period_isValid;

    m_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_ytd, json[QString("political_party_committee_contributions_ytd")]);
    m_political_party_committee_contributions_ytd_isSet = !json[QString("political_party_committee_contributions_ytd")].isNull() && m_political_party_committee_contributions_ytd_isValid;

    m_previous_file_number_isValid = ::OpenAPI::fromJsonValue(m_previous_file_number, json[QString("previous_file_number")]);
    m_previous_file_number_isSet = !json[QString("previous_file_number")].isNull() && m_previous_file_number_isValid;

    m_receipt_date_isValid = ::OpenAPI::fromJsonValue(m_receipt_date, json[QString("receipt_date")]);
    m_receipt_date_isSet = !json[QString("receipt_date")].isNull() && m_receipt_date_isValid;

    m_refunded_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_period, json[QString("refunded_individual_contributions_period")]);
    m_refunded_individual_contributions_period_isSet = !json[QString("refunded_individual_contributions_period")].isNull() && m_refunded_individual_contributions_period_isValid;

    m_refunded_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_ytd, json[QString("refunded_individual_contributions_ytd")]);
    m_refunded_individual_contributions_ytd_isSet = !json[QString("refunded_individual_contributions_ytd")].isNull() && m_refunded_individual_contributions_ytd_isValid;

    m_refunded_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_period, json[QString("refunded_other_political_committee_contributions_period")]);
    m_refunded_other_political_committee_contributions_period_isSet = !json[QString("refunded_other_political_committee_contributions_period")].isNull() && m_refunded_other_political_committee_contributions_period_isValid;

    m_refunded_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_ytd, json[QString("refunded_other_political_committee_contributions_ytd")]);
    m_refunded_other_political_committee_contributions_ytd_isSet = !json[QString("refunded_other_political_committee_contributions_ytd")].isNull() && m_refunded_other_political_committee_contributions_ytd_isValid;

    m_refunded_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_period, json[QString("refunded_political_party_committee_contributions_period")]);
    m_refunded_political_party_committee_contributions_period_isSet = !json[QString("refunded_political_party_committee_contributions_period")].isNull() && m_refunded_political_party_committee_contributions_period_isValid;

    m_refunded_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_ytd, json[QString("refunded_political_party_committee_contributions_ytd")]);
    m_refunded_political_party_committee_contributions_ytd_isSet = !json[QString("refunded_political_party_committee_contributions_ytd")].isNull() && m_refunded_political_party_committee_contributions_ytd_isValid;

    m_refunds_total_contributions_col_total_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunds_total_contributions_col_total_ytd, json[QString("refunds_total_contributions_col_total_ytd")]);
    m_refunds_total_contributions_col_total_ytd_isSet = !json[QString("refunds_total_contributions_col_total_ytd")].isNull() && m_refunds_total_contributions_col_total_ytd_isValid;

    m_repayments_loans_made_by_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_repayments_loans_made_by_candidate_period, json[QString("repayments_loans_made_by_candidate_period")]);
    m_repayments_loans_made_by_candidate_period_isSet = !json[QString("repayments_loans_made_by_candidate_period")].isNull() && m_repayments_loans_made_by_candidate_period_isValid;

    m_repayments_loans_made_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_repayments_loans_made_candidate_ytd, json[QString("repayments_loans_made_candidate_ytd")]);
    m_repayments_loans_made_candidate_ytd_isSet = !json[QString("repayments_loans_made_candidate_ytd")].isNull() && m_repayments_loans_made_candidate_ytd_isValid;

    m_repayments_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_repayments_other_loans_period, json[QString("repayments_other_loans_period")]);
    m_repayments_other_loans_period_isSet = !json[QString("repayments_other_loans_period")].isNull() && m_repayments_other_loans_period_isValid;

    m_repayments_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_repayments_other_loans_ytd, json[QString("repayments_other_loans_ytd")]);
    m_repayments_other_loans_ytd_isSet = !json[QString("repayments_other_loans_ytd")].isNull() && m_repayments_other_loans_ytd_isValid;

    m_report_form_isValid = ::OpenAPI::fromJsonValue(m_report_form, json[QString("report_form")]);
    m_report_form_isSet = !json[QString("report_form")].isNull() && m_report_form_isValid;

    m_report_type_isValid = ::OpenAPI::fromJsonValue(m_report_type, json[QString("report_type")]);
    m_report_type_isSet = !json[QString("report_type")].isNull() && m_report_type_isValid;

    m_report_type_full_isValid = ::OpenAPI::fromJsonValue(m_report_type_full, json[QString("report_type_full")]);
    m_report_type_full_isSet = !json[QString("report_type_full")].isNull() && m_report_type_full_isValid;

    m_report_year_isValid = ::OpenAPI::fromJsonValue(m_report_year, json[QString("report_year")]);
    m_report_year_isSet = !json[QString("report_year")].isNull() && m_report_year_isValid;

    m_shared_fed_activity_nonfed_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_nonfed_ytd, json[QString("shared_fed_activity_nonfed_ytd")]);
    m_shared_fed_activity_nonfed_ytd_isSet = !json[QString("shared_fed_activity_nonfed_ytd")].isNull() && m_shared_fed_activity_nonfed_ytd_isValid;

    m_shared_fed_activity_period_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_period, json[QString("shared_fed_activity_period")]);
    m_shared_fed_activity_period_isSet = !json[QString("shared_fed_activity_period")].isNull() && m_shared_fed_activity_period_isValid;

    m_shared_fed_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_ytd, json[QString("shared_fed_activity_ytd")]);
    m_shared_fed_activity_ytd_isSet = !json[QString("shared_fed_activity_ytd")].isNull() && m_shared_fed_activity_ytd_isValid;

    m_shared_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_operating_expenditures_period, json[QString("shared_fed_operating_expenditures_period")]);
    m_shared_fed_operating_expenditures_period_isSet = !json[QString("shared_fed_operating_expenditures_period")].isNull() && m_shared_fed_operating_expenditures_period_isValid;

    m_shared_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_operating_expenditures_ytd, json[QString("shared_fed_operating_expenditures_ytd")]);
    m_shared_fed_operating_expenditures_ytd_isSet = !json[QString("shared_fed_operating_expenditures_ytd")].isNull() && m_shared_fed_operating_expenditures_ytd_isValid;

    m_shared_nonfed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_shared_nonfed_operating_expenditures_period, json[QString("shared_nonfed_operating_expenditures_period")]);
    m_shared_nonfed_operating_expenditures_period_isSet = !json[QString("shared_nonfed_operating_expenditures_period")].isNull() && m_shared_nonfed_operating_expenditures_period_isValid;

    m_shared_nonfed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_nonfed_operating_expenditures_ytd, json[QString("shared_nonfed_operating_expenditures_ytd")]);
    m_shared_nonfed_operating_expenditures_ytd_isSet = !json[QString("shared_nonfed_operating_expenditures_ytd")].isNull() && m_shared_nonfed_operating_expenditures_ytd_isValid;

    m_subtotal_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_period, json[QString("subtotal_period")]);
    m_subtotal_period_isSet = !json[QString("subtotal_period")].isNull() && m_subtotal_period_isValid;

    m_subtotal_summary_page_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_page_period, json[QString("subtotal_summary_page_period")]);
    m_subtotal_summary_page_period_isSet = !json[QString("subtotal_summary_page_period")].isNull() && m_subtotal_summary_page_period_isValid;

    m_subtotal_summary_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_period, json[QString("subtotal_summary_period")]);
    m_subtotal_summary_period_isSet = !json[QString("subtotal_summary_period")].isNull() && m_subtotal_summary_period_isValid;

    m_subtotal_summary_ytd_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_ytd, json[QString("subtotal_summary_ytd")]);
    m_subtotal_summary_ytd_isSet = !json[QString("subtotal_summary_ytd")].isNull() && m_subtotal_summary_ytd_isValid;

    m_total_contribution_refunds_col_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_col_total_period, json[QString("total_contribution_refunds_col_total_period")]);
    m_total_contribution_refunds_col_total_period_isSet = !json[QString("total_contribution_refunds_col_total_period")].isNull() && m_total_contribution_refunds_col_total_period_isValid;

    m_total_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_period, json[QString("total_contribution_refunds_period")]);
    m_total_contribution_refunds_period_isSet = !json[QString("total_contribution_refunds_period")].isNull() && m_total_contribution_refunds_period_isValid;

    m_total_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_ytd, json[QString("total_contribution_refunds_ytd")]);
    m_total_contribution_refunds_ytd_isSet = !json[QString("total_contribution_refunds_ytd")].isNull() && m_total_contribution_refunds_ytd_isValid;

    m_total_contributions_column_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_column_total_period, json[QString("total_contributions_column_total_period")]);
    m_total_contributions_column_total_period_isSet = !json[QString("total_contributions_column_total_period")].isNull() && m_total_contributions_column_total_period_isValid;

    m_total_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_period, json[QString("total_contributions_period")]);
    m_total_contributions_period_isSet = !json[QString("total_contributions_period")].isNull() && m_total_contributions_period_isValid;

    m_total_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_ytd, json[QString("total_contributions_ytd")]);
    m_total_contributions_ytd_isSet = !json[QString("total_contributions_ytd")].isNull() && m_total_contributions_ytd_isValid;

    m_total_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_period, json[QString("total_disbursements_period")]);
    m_total_disbursements_period_isSet = !json[QString("total_disbursements_period")].isNull() && m_total_disbursements_period_isValid;

    m_total_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_ytd, json[QString("total_disbursements_ytd")]);
    m_total_disbursements_ytd_isSet = !json[QString("total_disbursements_ytd")].isNull() && m_total_disbursements_ytd_isValid;

    m_total_fed_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_disbursements_period, json[QString("total_fed_disbursements_period")]);
    m_total_fed_disbursements_period_isSet = !json[QString("total_fed_disbursements_period")].isNull() && m_total_fed_disbursements_period_isValid;

    m_total_fed_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_disbursements_ytd, json[QString("total_fed_disbursements_ytd")]);
    m_total_fed_disbursements_ytd_isSet = !json[QString("total_fed_disbursements_ytd")].isNull() && m_total_fed_disbursements_ytd_isValid;

    m_total_fed_election_activity_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_election_activity_period, json[QString("total_fed_election_activity_period")]);
    m_total_fed_election_activity_period_isSet = !json[QString("total_fed_election_activity_period")].isNull() && m_total_fed_election_activity_period_isValid;

    m_total_fed_election_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_election_activity_ytd, json[QString("total_fed_election_activity_ytd")]);
    m_total_fed_election_activity_ytd_isSet = !json[QString("total_fed_election_activity_ytd")].isNull() && m_total_fed_election_activity_ytd_isValid;

    m_total_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_operating_expenditures_period, json[QString("total_fed_operating_expenditures_period")]);
    m_total_fed_operating_expenditures_period_isSet = !json[QString("total_fed_operating_expenditures_period")].isNull() && m_total_fed_operating_expenditures_period_isValid;

    m_total_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_operating_expenditures_ytd, json[QString("total_fed_operating_expenditures_ytd")]);
    m_total_fed_operating_expenditures_ytd_isSet = !json[QString("total_fed_operating_expenditures_ytd")].isNull() && m_total_fed_operating_expenditures_ytd_isValid;

    m_total_fed_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_receipts_period, json[QString("total_fed_receipts_period")]);
    m_total_fed_receipts_period_isSet = !json[QString("total_fed_receipts_period")].isNull() && m_total_fed_receipts_period_isValid;

    m_total_fed_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_receipts_ytd, json[QString("total_fed_receipts_ytd")]);
    m_total_fed_receipts_ytd_isSet = !json[QString("total_fed_receipts_ytd")].isNull() && m_total_fed_receipts_ytd_isValid;

    m_total_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_period, json[QString("total_individual_contributions_period")]);
    m_total_individual_contributions_period_isSet = !json[QString("total_individual_contributions_period")].isNull() && m_total_individual_contributions_period_isValid;

    m_total_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_ytd, json[QString("total_individual_contributions_ytd")]);
    m_total_individual_contributions_ytd_isSet = !json[QString("total_individual_contributions_ytd")].isNull() && m_total_individual_contributions_ytd_isValid;

    m_total_loan_repayments_made_period_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_period, json[QString("total_loan_repayments_made_period")]);
    m_total_loan_repayments_made_period_isSet = !json[QString("total_loan_repayments_made_period")].isNull() && m_total_loan_repayments_made_period_isValid;

    m_total_loan_repayments_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_ytd, json[QString("total_loan_repayments_made_ytd")]);
    m_total_loan_repayments_made_ytd_isSet = !json[QString("total_loan_repayments_made_ytd")].isNull() && m_total_loan_repayments_made_ytd_isValid;

    m_total_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_period, json[QString("total_loans_received_period")]);
    m_total_loans_received_period_isSet = !json[QString("total_loans_received_period")].isNull() && m_total_loans_received_period_isValid;

    m_total_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_ytd, json[QString("total_loans_received_ytd")]);
    m_total_loans_received_ytd_isSet = !json[QString("total_loans_received_ytd")].isNull() && m_total_loans_received_ytd_isValid;

    m_total_nonfed_transfers_period_isValid = ::OpenAPI::fromJsonValue(m_total_nonfed_transfers_period, json[QString("total_nonfed_transfers_period")]);
    m_total_nonfed_transfers_period_isSet = !json[QString("total_nonfed_transfers_period")].isNull() && m_total_nonfed_transfers_period_isValid;

    m_total_nonfed_transfers_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_nonfed_transfers_ytd, json[QString("total_nonfed_transfers_ytd")]);
    m_total_nonfed_transfers_ytd_isSet = !json[QString("total_nonfed_transfers_ytd")].isNull() && m_total_nonfed_transfers_ytd_isValid;

    m_total_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_period, json[QString("total_offsets_to_operating_expenditures_period")]);
    m_total_offsets_to_operating_expenditures_period_isSet = !json[QString("total_offsets_to_operating_expenditures_period")].isNull() && m_total_offsets_to_operating_expenditures_period_isValid;

    m_total_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_ytd, json[QString("total_offsets_to_operating_expenditures_ytd")]);
    m_total_offsets_to_operating_expenditures_ytd_isSet = !json[QString("total_offsets_to_operating_expenditures_ytd")].isNull() && m_total_offsets_to_operating_expenditures_ytd_isValid;

    m_total_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_period, json[QString("total_operating_expenditures_period")]);
    m_total_operating_expenditures_period_isSet = !json[QString("total_operating_expenditures_period")].isNull() && m_total_operating_expenditures_period_isValid;

    m_total_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_ytd, json[QString("total_operating_expenditures_ytd")]);
    m_total_operating_expenditures_ytd_isSet = !json[QString("total_operating_expenditures_ytd")].isNull() && m_total_operating_expenditures_ytd_isValid;

    m_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_period, json[QString("total_period")]);
    m_total_period_isSet = !json[QString("total_period")].isNull() && m_total_period_isValid;

    m_total_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_period, json[QString("total_receipts_period")]);
    m_total_receipts_period_isSet = !json[QString("total_receipts_period")].isNull() && m_total_receipts_period_isValid;

    m_total_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_ytd, json[QString("total_receipts_ytd")]);
    m_total_receipts_ytd_isSet = !json[QString("total_receipts_ytd")].isNull() && m_total_receipts_ytd_isValid;

    m_total_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_ytd, json[QString("total_ytd")]);
    m_total_ytd_isSet = !json[QString("total_ytd")].isNull() && m_total_ytd_isValid;

    m_transfers_from_affiliated_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_committee_period, json[QString("transfers_from_affiliated_committee_period")]);
    m_transfers_from_affiliated_committee_period_isSet = !json[QString("transfers_from_affiliated_committee_period")].isNull() && m_transfers_from_affiliated_committee_period_isValid;

    m_transfers_from_affiliated_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_committee_ytd, json[QString("transfers_from_affiliated_committee_ytd")]);
    m_transfers_from_affiliated_committee_ytd_isSet = !json[QString("transfers_from_affiliated_committee_ytd")].isNull() && m_transfers_from_affiliated_committee_ytd_isValid;

    m_transfers_from_affiliated_party_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_party_period, json[QString("transfers_from_affiliated_party_period")]);
    m_transfers_from_affiliated_party_period_isSet = !json[QString("transfers_from_affiliated_party_period")].isNull() && m_transfers_from_affiliated_party_period_isValid;

    m_transfers_from_affiliated_party_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_party_ytd, json[QString("transfers_from_affiliated_party_ytd")]);
    m_transfers_from_affiliated_party_ytd_isSet = !json[QString("transfers_from_affiliated_party_ytd")].isNull() && m_transfers_from_affiliated_party_ytd_isValid;

    m_transfers_from_nonfed_account_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_account_period, json[QString("transfers_from_nonfed_account_period")]);
    m_transfers_from_nonfed_account_period_isSet = !json[QString("transfers_from_nonfed_account_period")].isNull() && m_transfers_from_nonfed_account_period_isValid;

    m_transfers_from_nonfed_account_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_account_ytd, json[QString("transfers_from_nonfed_account_ytd")]);
    m_transfers_from_nonfed_account_ytd_isSet = !json[QString("transfers_from_nonfed_account_ytd")].isNull() && m_transfers_from_nonfed_account_ytd_isValid;

    m_transfers_from_nonfed_levin_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_levin_period, json[QString("transfers_from_nonfed_levin_period")]);
    m_transfers_from_nonfed_levin_period_isSet = !json[QString("transfers_from_nonfed_levin_period")].isNull() && m_transfers_from_nonfed_levin_period_isValid;

    m_transfers_from_nonfed_levin_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_levin_ytd, json[QString("transfers_from_nonfed_levin_ytd")]);
    m_transfers_from_nonfed_levin_ytd_isSet = !json[QString("transfers_from_nonfed_levin_ytd")].isNull() && m_transfers_from_nonfed_levin_ytd_isValid;

    m_transfers_from_other_authorized_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_other_authorized_committee_period, json[QString("transfers_from_other_authorized_committee_period")]);
    m_transfers_from_other_authorized_committee_period_isSet = !json[QString("transfers_from_other_authorized_committee_period")].isNull() && m_transfers_from_other_authorized_committee_period_isValid;

    m_transfers_from_other_authorized_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_other_authorized_committee_ytd, json[QString("transfers_from_other_authorized_committee_ytd")]);
    m_transfers_from_other_authorized_committee_ytd_isSet = !json[QString("transfers_from_other_authorized_committee_ytd")].isNull() && m_transfers_from_other_authorized_committee_ytd_isValid;

    m_transfers_to_affiliated_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_affiliated_committee_period, json[QString("transfers_to_affiliated_committee_period")]);
    m_transfers_to_affiliated_committee_period_isSet = !json[QString("transfers_to_affiliated_committee_period")].isNull() && m_transfers_to_affiliated_committee_period_isValid;

    m_transfers_to_affilitated_committees_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_affilitated_committees_ytd, json[QString("transfers_to_affilitated_committees_ytd")]);
    m_transfers_to_affilitated_committees_ytd_isSet = !json[QString("transfers_to_affilitated_committees_ytd")].isNull() && m_transfers_to_affilitated_committees_ytd_isValid;

    m_transfers_to_other_authorized_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_period, json[QString("transfers_to_other_authorized_committee_period")]);
    m_transfers_to_other_authorized_committee_period_isSet = !json[QString("transfers_to_other_authorized_committee_period")].isNull() && m_transfers_to_other_authorized_committee_period_isValid;

    m_transfers_to_other_authorized_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_ytd, json[QString("transfers_to_other_authorized_committee_ytd")]);
    m_transfers_to_other_authorized_committee_ytd_isSet = !json[QString("transfers_to_other_authorized_committee_ytd")].isNull() && m_transfers_to_other_authorized_committee_ytd_isValid;
}

QString OAICommitteeReports::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitteeReports::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregate_amount_personal_contributions_general_isSet) {
        obj.insert(QString("aggregate_amount_personal_contributions_general"), ::OpenAPI::toJsonValue(m_aggregate_amount_personal_contributions_general));
    }
    if (m_aggregate_contributions_personal_funds_primary_isSet) {
        obj.insert(QString("aggregate_contributions_personal_funds_primary"), ::OpenAPI::toJsonValue(m_aggregate_contributions_personal_funds_primary));
    }
    if (m_all_loans_received_period_isSet) {
        obj.insert(QString("all_loans_received_period"), ::OpenAPI::toJsonValue(m_all_loans_received_period));
    }
    if (m_all_loans_received_ytd_isSet) {
        obj.insert(QString("all_loans_received_ytd"), ::OpenAPI::toJsonValue(m_all_loans_received_ytd));
    }
    if (m_all_other_loans_period_isSet) {
        obj.insert(QString("all_other_loans_period"), ::OpenAPI::toJsonValue(m_all_other_loans_period));
    }
    if (m_all_other_loans_ytd_isSet) {
        obj.insert(QString("all_other_loans_ytd"), ::OpenAPI::toJsonValue(m_all_other_loans_ytd));
    }
    if (m_allocated_federal_election_levin_share_period_isSet) {
        obj.insert(QString("allocated_federal_election_levin_share_period"), ::OpenAPI::toJsonValue(m_allocated_federal_election_levin_share_period));
    }
    if (m_amendment_chain.size() > 0) {
        obj.insert(QString("amendment_chain"), ::OpenAPI::toJsonValue(m_amendment_chain));
    }
    if (m_amendment_indicator_isSet) {
        obj.insert(QString("amendment_indicator"), ::OpenAPI::toJsonValue(m_amendment_indicator));
    }
    if (m_amendment_indicator_full_isSet) {
        obj.insert(QString("amendment_indicator_full"), ::OpenAPI::toJsonValue(m_amendment_indicator_full));
    }
    if (m_beginning_image_number_isSet) {
        obj.insert(QString("beginning_image_number"), ::OpenAPI::toJsonValue(m_beginning_image_number));
    }
    if (m_calendar_ytd_isSet) {
        obj.insert(QString("calendar_ytd"), ::OpenAPI::toJsonValue(m_calendar_ytd));
    }
    if (m_candidate_contribution_period_isSet) {
        obj.insert(QString("candidate_contribution_period"), ::OpenAPI::toJsonValue(m_candidate_contribution_period));
    }
    if (m_candidate_contribution_ytd_isSet) {
        obj.insert(QString("candidate_contribution_ytd"), ::OpenAPI::toJsonValue(m_candidate_contribution_ytd));
    }
    if (m_cash_on_hand_beginning_calendar_ytd_isSet) {
        obj.insert(QString("cash_on_hand_beginning_calendar_ytd"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_calendar_ytd));
    }
    if (m_cash_on_hand_beginning_period_isSet) {
        obj.insert(QString("cash_on_hand_beginning_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_period));
    }
    if (m_cash_on_hand_close_ytd_isSet) {
        obj.insert(QString("cash_on_hand_close_ytd"), ::OpenAPI::toJsonValue(m_cash_on_hand_close_ytd));
    }
    if (m_cash_on_hand_end_period_isSet) {
        obj.insert(QString("cash_on_hand_end_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_end_period));
    }
    if (m_committee_id_isSet) {
        obj.insert(QString("committee_id"), ::OpenAPI::toJsonValue(m_committee_id));
    }
    if (m_committee_name_isSet) {
        obj.insert(QString("committee_name"), ::OpenAPI::toJsonValue(m_committee_name));
    }
    if (m_committee_type_isSet) {
        obj.insert(QString("committee_type"), ::OpenAPI::toJsonValue(m_committee_type));
    }
    if (m_coordinated_expenditures_by_party_committee_period_isSet) {
        obj.insert(QString("coordinated_expenditures_by_party_committee_period"), ::OpenAPI::toJsonValue(m_coordinated_expenditures_by_party_committee_period));
    }
    if (m_coordinated_expenditures_by_party_committee_ytd_isSet) {
        obj.insert(QString("coordinated_expenditures_by_party_committee_ytd"), ::OpenAPI::toJsonValue(m_coordinated_expenditures_by_party_committee_ytd));
    }
    if (m_coverage_end_date_isSet) {
        obj.insert(QString("coverage_end_date"), ::OpenAPI::toJsonValue(m_coverage_end_date));
    }
    if (m_coverage_start_date_isSet) {
        obj.insert(QString("coverage_start_date"), ::OpenAPI::toJsonValue(m_coverage_start_date));
    }
    if (m_csv_url_isSet) {
        obj.insert(QString("csv_url"), ::OpenAPI::toJsonValue(m_csv_url));
    }
    if (m_cycle_isSet) {
        obj.insert(QString("cycle"), ::OpenAPI::toJsonValue(m_cycle));
    }
    if (m_debts_owed_by_committee_isSet) {
        obj.insert(QString("debts_owed_by_committee"), ::OpenAPI::toJsonValue(m_debts_owed_by_committee));
    }
    if (m_debts_owed_to_committee_isSet) {
        obj.insert(QString("debts_owed_to_committee"), ::OpenAPI::toJsonValue(m_debts_owed_to_committee));
    }
    if (m_document_description_isSet) {
        obj.insert(QString("document_description"), ::OpenAPI::toJsonValue(m_document_description));
    }
    if (m_end_image_number_isSet) {
        obj.insert(QString("end_image_number"), ::OpenAPI::toJsonValue(m_end_image_number));
    }
    if (m_exempt_legal_accounting_disbursement_period_isSet) {
        obj.insert(QString("exempt_legal_accounting_disbursement_period"), ::OpenAPI::toJsonValue(m_exempt_legal_accounting_disbursement_period));
    }
    if (m_exempt_legal_accounting_disbursement_ytd_isSet) {
        obj.insert(QString("exempt_legal_accounting_disbursement_ytd"), ::OpenAPI::toJsonValue(m_exempt_legal_accounting_disbursement_ytd));
    }
    if (m_expenditure_subject_to_limits_isSet) {
        obj.insert(QString("expenditure_subject_to_limits"), ::OpenAPI::toJsonValue(m_expenditure_subject_to_limits));
    }
    if (m_fec_file_id_isSet) {
        obj.insert(QString("fec_file_id"), ::OpenAPI::toJsonValue(m_fec_file_id));
    }
    if (m_fec_url_isSet) {
        obj.insert(QString("fec_url"), ::OpenAPI::toJsonValue(m_fec_url));
    }
    if (m_fed_candidate_committee_contribution_refunds_ytd_isSet) {
        obj.insert(QString("fed_candidate_committee_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contribution_refunds_ytd));
    }
    if (m_fed_candidate_committee_contributions_period_isSet) {
        obj.insert(QString("fed_candidate_committee_contributions_period"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contributions_period));
    }
    if (m_fed_candidate_committee_contributions_ytd_isSet) {
        obj.insert(QString("fed_candidate_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contributions_ytd));
    }
    if (m_fed_candidate_contribution_refunds_period_isSet) {
        obj.insert(QString("fed_candidate_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_fed_candidate_contribution_refunds_period));
    }
    if (m_federal_funds_period_isSet) {
        obj.insert(QString("federal_funds_period"), ::OpenAPI::toJsonValue(m_federal_funds_period));
    }
    if (m_federal_funds_ytd_isSet) {
        obj.insert(QString("federal_funds_ytd"), ::OpenAPI::toJsonValue(m_federal_funds_ytd));
    }
    if (m_file_number_isSet) {
        obj.insert(QString("file_number"), ::OpenAPI::toJsonValue(m_file_number));
    }
    if (m_fundraising_disbursements_period_isSet) {
        obj.insert(QString("fundraising_disbursements_period"), ::OpenAPI::toJsonValue(m_fundraising_disbursements_period));
    }
    if (m_fundraising_disbursements_ytd_isSet) {
        obj.insert(QString("fundraising_disbursements_ytd"), ::OpenAPI::toJsonValue(m_fundraising_disbursements_ytd));
    }
    if (m_gross_receipt_authorized_committee_general_isSet) {
        obj.insert(QString("gross_receipt_authorized_committee_general"), ::OpenAPI::toJsonValue(m_gross_receipt_authorized_committee_general));
    }
    if (m_gross_receipt_authorized_committee_primary_isSet) {
        obj.insert(QString("gross_receipt_authorized_committee_primary"), ::OpenAPI::toJsonValue(m_gross_receipt_authorized_committee_primary));
    }
    if (m_gross_receipt_minus_personal_contribution_general_isSet) {
        obj.insert(QString("gross_receipt_minus_personal_contribution_general"), ::OpenAPI::toJsonValue(m_gross_receipt_minus_personal_contribution_general));
    }
    if (m_gross_receipt_minus_personal_contributions_primary_isSet) {
        obj.insert(QString("gross_receipt_minus_personal_contributions_primary"), ::OpenAPI::toJsonValue(m_gross_receipt_minus_personal_contributions_primary));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_independent_contributions_period_isSet) {
        obj.insert(QString("independent_contributions_period"), ::OpenAPI::toJsonValue(m_independent_contributions_period));
    }
    if (m_independent_expenditures_period_isSet) {
        obj.insert(QString("independent_expenditures_period"), ::OpenAPI::toJsonValue(m_independent_expenditures_period));
    }
    if (m_independent_expenditures_ytd_isSet) {
        obj.insert(QString("independent_expenditures_ytd"), ::OpenAPI::toJsonValue(m_independent_expenditures_ytd));
    }
    if (m_individual_itemized_contributions_period_isSet) {
        obj.insert(QString("individual_itemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_period));
    }
    if (m_individual_itemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_itemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_ytd));
    }
    if (m_individual_unitemized_contributions_period_isSet) {
        obj.insert(QString("individual_unitemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_period));
    }
    if (m_individual_unitemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_unitemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_ytd));
    }
    if (m_is_amended_isSet) {
        obj.insert(QString("is_amended"), ::OpenAPI::toJsonValue(m_is_amended));
    }
    if (m_items_on_hand_liquidated_isSet) {
        obj.insert(QString("items_on_hand_liquidated"), ::OpenAPI::toJsonValue(m_items_on_hand_liquidated));
    }
    if (m_loan_repayments_candidate_loans_period_isSet) {
        obj.insert(QString("loan_repayments_candidate_loans_period"), ::OpenAPI::toJsonValue(m_loan_repayments_candidate_loans_period));
    }
    if (m_loan_repayments_candidate_loans_ytd_isSet) {
        obj.insert(QString("loan_repayments_candidate_loans_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_candidate_loans_ytd));
    }
    if (m_loan_repayments_made_period_isSet) {
        obj.insert(QString("loan_repayments_made_period"), ::OpenAPI::toJsonValue(m_loan_repayments_made_period));
    }
    if (m_loan_repayments_made_ytd_isSet) {
        obj.insert(QString("loan_repayments_made_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_made_ytd));
    }
    if (m_loan_repayments_other_loans_period_isSet) {
        obj.insert(QString("loan_repayments_other_loans_period"), ::OpenAPI::toJsonValue(m_loan_repayments_other_loans_period));
    }
    if (m_loan_repayments_other_loans_ytd_isSet) {
        obj.insert(QString("loan_repayments_other_loans_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_other_loans_ytd));
    }
    if (m_loan_repayments_received_period_isSet) {
        obj.insert(QString("loan_repayments_received_period"), ::OpenAPI::toJsonValue(m_loan_repayments_received_period));
    }
    if (m_loan_repayments_received_ytd_isSet) {
        obj.insert(QString("loan_repayments_received_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_received_ytd));
    }
    if (m_loans_made_by_candidate_period_isSet) {
        obj.insert(QString("loans_made_by_candidate_period"), ::OpenAPI::toJsonValue(m_loans_made_by_candidate_period));
    }
    if (m_loans_made_by_candidate_ytd_isSet) {
        obj.insert(QString("loans_made_by_candidate_ytd"), ::OpenAPI::toJsonValue(m_loans_made_by_candidate_ytd));
    }
    if (m_loans_made_period_isSet) {
        obj.insert(QString("loans_made_period"), ::OpenAPI::toJsonValue(m_loans_made_period));
    }
    if (m_loans_made_ytd_isSet) {
        obj.insert(QString("loans_made_ytd"), ::OpenAPI::toJsonValue(m_loans_made_ytd));
    }
    if (m_loans_received_from_candidate_period_isSet) {
        obj.insert(QString("loans_received_from_candidate_period"), ::OpenAPI::toJsonValue(m_loans_received_from_candidate_period));
    }
    if (m_loans_received_from_candidate_ytd_isSet) {
        obj.insert(QString("loans_received_from_candidate_ytd"), ::OpenAPI::toJsonValue(m_loans_received_from_candidate_ytd));
    }
    if (m_means_filed_isSet) {
        obj.insert(QString("means_filed"), ::OpenAPI::toJsonValue(m_means_filed));
    }
    if (m_most_recent_isSet) {
        obj.insert(QString("most_recent"), ::OpenAPI::toJsonValue(m_most_recent));
    }
    if (m_most_recent_file_number_isSet) {
        obj.insert(QString("most_recent_file_number"), ::OpenAPI::toJsonValue(m_most_recent_file_number));
    }
    if (m_net_contributions_cycle_to_date_isSet) {
        obj.insert(QString("net_contributions_cycle_to_date"), ::OpenAPI::toJsonValue(m_net_contributions_cycle_to_date));
    }
    if (m_net_contributions_period_isSet) {
        obj.insert(QString("net_contributions_period"), ::OpenAPI::toJsonValue(m_net_contributions_period));
    }
    if (m_net_contributions_ytd_isSet) {
        obj.insert(QString("net_contributions_ytd"), ::OpenAPI::toJsonValue(m_net_contributions_ytd));
    }
    if (m_net_operating_expenditures_cycle_to_date_isSet) {
        obj.insert(QString("net_operating_expenditures_cycle_to_date"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_cycle_to_date));
    }
    if (m_net_operating_expenditures_period_isSet) {
        obj.insert(QString("net_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_period));
    }
    if (m_net_operating_expenditures_ytd_isSet) {
        obj.insert(QString("net_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_ytd));
    }
    if (m_non_allocated_fed_election_activity_period_isSet) {
        obj.insert(QString("non_allocated_fed_election_activity_period"), ::OpenAPI::toJsonValue(m_non_allocated_fed_election_activity_period));
    }
    if (m_non_allocated_fed_election_activity_ytd_isSet) {
        obj.insert(QString("non_allocated_fed_election_activity_ytd"), ::OpenAPI::toJsonValue(m_non_allocated_fed_election_activity_ytd));
    }
    if (m_nonfed_share_allocated_disbursements_period_isSet) {
        obj.insert(QString("nonfed_share_allocated_disbursements_period"), ::OpenAPI::toJsonValue(m_nonfed_share_allocated_disbursements_period));
    }
    if (m_offsets_to_fundraising_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_fundraising_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_fundraising_expenditures_period));
    }
    if (m_offsets_to_fundraising_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_fundraising_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_fundraising_expenditures_ytd));
    }
    if (m_offsets_to_legal_accounting_period_isSet) {
        obj.insert(QString("offsets_to_legal_accounting_period"), ::OpenAPI::toJsonValue(m_offsets_to_legal_accounting_period));
    }
    if (m_offsets_to_legal_accounting_ytd_isSet) {
        obj.insert(QString("offsets_to_legal_accounting_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_legal_accounting_ytd));
    }
    if (m_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_period));
    }
    if (m_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_ytd));
    }
    if (m_operating_expenditures_period_isSet) {
        obj.insert(QString("operating_expenditures_period"), ::OpenAPI::toJsonValue(m_operating_expenditures_period));
    }
    if (m_operating_expenditures_ytd_isSet) {
        obj.insert(QString("operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_operating_expenditures_ytd));
    }
    if (m_other_disbursements_period_isSet) {
        obj.insert(QString("other_disbursements_period"), ::OpenAPI::toJsonValue(m_other_disbursements_period));
    }
    if (m_other_disbursements_ytd_isSet) {
        obj.insert(QString("other_disbursements_ytd"), ::OpenAPI::toJsonValue(m_other_disbursements_ytd));
    }
    if (m_other_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("other_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_other_fed_operating_expenditures_period));
    }
    if (m_other_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("other_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_other_fed_operating_expenditures_ytd));
    }
    if (m_other_fed_receipts_period_isSet) {
        obj.insert(QString("other_fed_receipts_period"), ::OpenAPI::toJsonValue(m_other_fed_receipts_period));
    }
    if (m_other_fed_receipts_ytd_isSet) {
        obj.insert(QString("other_fed_receipts_ytd"), ::OpenAPI::toJsonValue(m_other_fed_receipts_ytd));
    }
    if (m_other_loans_received_period_isSet) {
        obj.insert(QString("other_loans_received_period"), ::OpenAPI::toJsonValue(m_other_loans_received_period));
    }
    if (m_other_loans_received_ytd_isSet) {
        obj.insert(QString("other_loans_received_ytd"), ::OpenAPI::toJsonValue(m_other_loans_received_ytd));
    }
    if (m_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_period));
    }
    if (m_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_ytd));
    }
    if (m_other_receipts_period_isSet) {
        obj.insert(QString("other_receipts_period"), ::OpenAPI::toJsonValue(m_other_receipts_period));
    }
    if (m_other_receipts_ytd_isSet) {
        obj.insert(QString("other_receipts_ytd"), ::OpenAPI::toJsonValue(m_other_receipts_ytd));
    }
    if (m_pdf_url_isSet) {
        obj.insert(QString("pdf_url"), ::OpenAPI::toJsonValue(m_pdf_url));
    }
    if (m_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_period));
    }
    if (m_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_ytd));
    }
    if (m_previous_file_number_isSet) {
        obj.insert(QString("previous_file_number"), ::OpenAPI::toJsonValue(m_previous_file_number));
    }
    if (m_receipt_date_isSet) {
        obj.insert(QString("receipt_date"), ::OpenAPI::toJsonValue(m_receipt_date));
    }
    if (m_refunded_individual_contributions_period_isSet) {
        obj.insert(QString("refunded_individual_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_period));
    }
    if (m_refunded_individual_contributions_ytd_isSet) {
        obj.insert(QString("refunded_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_ytd));
    }
    if (m_refunded_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_period));
    }
    if (m_refunded_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_ytd));
    }
    if (m_refunded_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_period));
    }
    if (m_refunded_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_ytd));
    }
    if (m_refunds_total_contributions_col_total_ytd_isSet) {
        obj.insert(QString("refunds_total_contributions_col_total_ytd"), ::OpenAPI::toJsonValue(m_refunds_total_contributions_col_total_ytd));
    }
    if (m_repayments_loans_made_by_candidate_period_isSet) {
        obj.insert(QString("repayments_loans_made_by_candidate_period"), ::OpenAPI::toJsonValue(m_repayments_loans_made_by_candidate_period));
    }
    if (m_repayments_loans_made_candidate_ytd_isSet) {
        obj.insert(QString("repayments_loans_made_candidate_ytd"), ::OpenAPI::toJsonValue(m_repayments_loans_made_candidate_ytd));
    }
    if (m_repayments_other_loans_period_isSet) {
        obj.insert(QString("repayments_other_loans_period"), ::OpenAPI::toJsonValue(m_repayments_other_loans_period));
    }
    if (m_repayments_other_loans_ytd_isSet) {
        obj.insert(QString("repayments_other_loans_ytd"), ::OpenAPI::toJsonValue(m_repayments_other_loans_ytd));
    }
    if (m_report_form_isSet) {
        obj.insert(QString("report_form"), ::OpenAPI::toJsonValue(m_report_form));
    }
    if (m_report_type_isSet) {
        obj.insert(QString("report_type"), ::OpenAPI::toJsonValue(m_report_type));
    }
    if (m_report_type_full_isSet) {
        obj.insert(QString("report_type_full"), ::OpenAPI::toJsonValue(m_report_type_full));
    }
    if (m_report_year_isSet) {
        obj.insert(QString("report_year"), ::OpenAPI::toJsonValue(m_report_year));
    }
    if (m_shared_fed_activity_nonfed_ytd_isSet) {
        obj.insert(QString("shared_fed_activity_nonfed_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_activity_nonfed_ytd));
    }
    if (m_shared_fed_activity_period_isSet) {
        obj.insert(QString("shared_fed_activity_period"), ::OpenAPI::toJsonValue(m_shared_fed_activity_period));
    }
    if (m_shared_fed_activity_ytd_isSet) {
        obj.insert(QString("shared_fed_activity_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_activity_ytd));
    }
    if (m_shared_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("shared_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_shared_fed_operating_expenditures_period));
    }
    if (m_shared_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("shared_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_operating_expenditures_ytd));
    }
    if (m_shared_nonfed_operating_expenditures_period_isSet) {
        obj.insert(QString("shared_nonfed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_shared_nonfed_operating_expenditures_period));
    }
    if (m_shared_nonfed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("shared_nonfed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_shared_nonfed_operating_expenditures_ytd));
    }
    if (m_subtotal_period_isSet) {
        obj.insert(QString("subtotal_period"), ::OpenAPI::toJsonValue(m_subtotal_period));
    }
    if (m_subtotal_summary_page_period_isSet) {
        obj.insert(QString("subtotal_summary_page_period"), ::OpenAPI::toJsonValue(m_subtotal_summary_page_period));
    }
    if (m_subtotal_summary_period_isSet) {
        obj.insert(QString("subtotal_summary_period"), ::OpenAPI::toJsonValue(m_subtotal_summary_period));
    }
    if (m_subtotal_summary_ytd_isSet) {
        obj.insert(QString("subtotal_summary_ytd"), ::OpenAPI::toJsonValue(m_subtotal_summary_ytd));
    }
    if (m_total_contribution_refunds_col_total_period_isSet) {
        obj.insert(QString("total_contribution_refunds_col_total_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_col_total_period));
    }
    if (m_total_contribution_refunds_period_isSet) {
        obj.insert(QString("total_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_period));
    }
    if (m_total_contribution_refunds_ytd_isSet) {
        obj.insert(QString("total_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_ytd));
    }
    if (m_total_contributions_column_total_period_isSet) {
        obj.insert(QString("total_contributions_column_total_period"), ::OpenAPI::toJsonValue(m_total_contributions_column_total_period));
    }
    if (m_total_contributions_period_isSet) {
        obj.insert(QString("total_contributions_period"), ::OpenAPI::toJsonValue(m_total_contributions_period));
    }
    if (m_total_contributions_ytd_isSet) {
        obj.insert(QString("total_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_contributions_ytd));
    }
    if (m_total_disbursements_period_isSet) {
        obj.insert(QString("total_disbursements_period"), ::OpenAPI::toJsonValue(m_total_disbursements_period));
    }
    if (m_total_disbursements_ytd_isSet) {
        obj.insert(QString("total_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_disbursements_ytd));
    }
    if (m_total_fed_disbursements_period_isSet) {
        obj.insert(QString("total_fed_disbursements_period"), ::OpenAPI::toJsonValue(m_total_fed_disbursements_period));
    }
    if (m_total_fed_disbursements_ytd_isSet) {
        obj.insert(QString("total_fed_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_fed_disbursements_ytd));
    }
    if (m_total_fed_election_activity_period_isSet) {
        obj.insert(QString("total_fed_election_activity_period"), ::OpenAPI::toJsonValue(m_total_fed_election_activity_period));
    }
    if (m_total_fed_election_activity_ytd_isSet) {
        obj.insert(QString("total_fed_election_activity_ytd"), ::OpenAPI::toJsonValue(m_total_fed_election_activity_ytd));
    }
    if (m_total_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("total_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_fed_operating_expenditures_period));
    }
    if (m_total_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_fed_operating_expenditures_ytd));
    }
    if (m_total_fed_receipts_period_isSet) {
        obj.insert(QString("total_fed_receipts_period"), ::OpenAPI::toJsonValue(m_total_fed_receipts_period));
    }
    if (m_total_fed_receipts_ytd_isSet) {
        obj.insert(QString("total_fed_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_fed_receipts_ytd));
    }
    if (m_total_individual_contributions_period_isSet) {
        obj.insert(QString("total_individual_contributions_period"), ::OpenAPI::toJsonValue(m_total_individual_contributions_period));
    }
    if (m_total_individual_contributions_ytd_isSet) {
        obj.insert(QString("total_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_individual_contributions_ytd));
    }
    if (m_total_loan_repayments_made_period_isSet) {
        obj.insert(QString("total_loan_repayments_made_period"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_period));
    }
    if (m_total_loan_repayments_made_ytd_isSet) {
        obj.insert(QString("total_loan_repayments_made_ytd"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_ytd));
    }
    if (m_total_loans_received_period_isSet) {
        obj.insert(QString("total_loans_received_period"), ::OpenAPI::toJsonValue(m_total_loans_received_period));
    }
    if (m_total_loans_received_ytd_isSet) {
        obj.insert(QString("total_loans_received_ytd"), ::OpenAPI::toJsonValue(m_total_loans_received_ytd));
    }
    if (m_total_nonfed_transfers_period_isSet) {
        obj.insert(QString("total_nonfed_transfers_period"), ::OpenAPI::toJsonValue(m_total_nonfed_transfers_period));
    }
    if (m_total_nonfed_transfers_ytd_isSet) {
        obj.insert(QString("total_nonfed_transfers_ytd"), ::OpenAPI::toJsonValue(m_total_nonfed_transfers_ytd));
    }
    if (m_total_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_period));
    }
    if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_ytd));
    }
    if (m_total_operating_expenditures_period_isSet) {
        obj.insert(QString("total_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_period));
    }
    if (m_total_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_ytd));
    }
    if (m_total_period_isSet) {
        obj.insert(QString("total_period"), ::OpenAPI::toJsonValue(m_total_period));
    }
    if (m_total_receipts_period_isSet) {
        obj.insert(QString("total_receipts_period"), ::OpenAPI::toJsonValue(m_total_receipts_period));
    }
    if (m_total_receipts_ytd_isSet) {
        obj.insert(QString("total_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_receipts_ytd));
    }
    if (m_total_ytd_isSet) {
        obj.insert(QString("total_ytd"), ::OpenAPI::toJsonValue(m_total_ytd));
    }
    if (m_transfers_from_affiliated_committee_period_isSet) {
        obj.insert(QString("transfers_from_affiliated_committee_period"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_committee_period));
    }
    if (m_transfers_from_affiliated_committee_ytd_isSet) {
        obj.insert(QString("transfers_from_affiliated_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_committee_ytd));
    }
    if (m_transfers_from_affiliated_party_period_isSet) {
        obj.insert(QString("transfers_from_affiliated_party_period"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_party_period));
    }
    if (m_transfers_from_affiliated_party_ytd_isSet) {
        obj.insert(QString("transfers_from_affiliated_party_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_party_ytd));
    }
    if (m_transfers_from_nonfed_account_period_isSet) {
        obj.insert(QString("transfers_from_nonfed_account_period"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_account_period));
    }
    if (m_transfers_from_nonfed_account_ytd_isSet) {
        obj.insert(QString("transfers_from_nonfed_account_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_account_ytd));
    }
    if (m_transfers_from_nonfed_levin_period_isSet) {
        obj.insert(QString("transfers_from_nonfed_levin_period"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_levin_period));
    }
    if (m_transfers_from_nonfed_levin_ytd_isSet) {
        obj.insert(QString("transfers_from_nonfed_levin_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_levin_ytd));
    }
    if (m_transfers_from_other_authorized_committee_period_isSet) {
        obj.insert(QString("transfers_from_other_authorized_committee_period"), ::OpenAPI::toJsonValue(m_transfers_from_other_authorized_committee_period));
    }
    if (m_transfers_from_other_authorized_committee_ytd_isSet) {
        obj.insert(QString("transfers_from_other_authorized_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_other_authorized_committee_ytd));
    }
    if (m_transfers_to_affiliated_committee_period_isSet) {
        obj.insert(QString("transfers_to_affiliated_committee_period"), ::OpenAPI::toJsonValue(m_transfers_to_affiliated_committee_period));
    }
    if (m_transfers_to_affilitated_committees_ytd_isSet) {
        obj.insert(QString("transfers_to_affilitated_committees_ytd"), ::OpenAPI::toJsonValue(m_transfers_to_affilitated_committees_ytd));
    }
    if (m_transfers_to_other_authorized_committee_period_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_period"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_period));
    }
    if (m_transfers_to_other_authorized_committee_ytd_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_ytd));
    }
    return obj;
}

double OAICommitteeReports::getAggregateAmountPersonalContributionsGeneral() const {
    return m_aggregate_amount_personal_contributions_general;
}
void OAICommitteeReports::setAggregateAmountPersonalContributionsGeneral(const double &aggregate_amount_personal_contributions_general) {
    m_aggregate_amount_personal_contributions_general = aggregate_amount_personal_contributions_general;
    m_aggregate_amount_personal_contributions_general_isSet = true;
}

bool OAICommitteeReports::is_aggregate_amount_personal_contributions_general_Set() const{
    return m_aggregate_amount_personal_contributions_general_isSet;
}

bool OAICommitteeReports::is_aggregate_amount_personal_contributions_general_Valid() const{
    return m_aggregate_amount_personal_contributions_general_isValid;
}

double OAICommitteeReports::getAggregateContributionsPersonalFundsPrimary() const {
    return m_aggregate_contributions_personal_funds_primary;
}
void OAICommitteeReports::setAggregateContributionsPersonalFundsPrimary(const double &aggregate_contributions_personal_funds_primary) {
    m_aggregate_contributions_personal_funds_primary = aggregate_contributions_personal_funds_primary;
    m_aggregate_contributions_personal_funds_primary_isSet = true;
}

bool OAICommitteeReports::is_aggregate_contributions_personal_funds_primary_Set() const{
    return m_aggregate_contributions_personal_funds_primary_isSet;
}

bool OAICommitteeReports::is_aggregate_contributions_personal_funds_primary_Valid() const{
    return m_aggregate_contributions_personal_funds_primary_isValid;
}

double OAICommitteeReports::getAllLoansReceivedPeriod() const {
    return m_all_loans_received_period;
}
void OAICommitteeReports::setAllLoansReceivedPeriod(const double &all_loans_received_period) {
    m_all_loans_received_period = all_loans_received_period;
    m_all_loans_received_period_isSet = true;
}

bool OAICommitteeReports::is_all_loans_received_period_Set() const{
    return m_all_loans_received_period_isSet;
}

bool OAICommitteeReports::is_all_loans_received_period_Valid() const{
    return m_all_loans_received_period_isValid;
}

double OAICommitteeReports::getAllLoansReceivedYtd() const {
    return m_all_loans_received_ytd;
}
void OAICommitteeReports::setAllLoansReceivedYtd(const double &all_loans_received_ytd) {
    m_all_loans_received_ytd = all_loans_received_ytd;
    m_all_loans_received_ytd_isSet = true;
}

bool OAICommitteeReports::is_all_loans_received_ytd_Set() const{
    return m_all_loans_received_ytd_isSet;
}

bool OAICommitteeReports::is_all_loans_received_ytd_Valid() const{
    return m_all_loans_received_ytd_isValid;
}

double OAICommitteeReports::getAllOtherLoansPeriod() const {
    return m_all_other_loans_period;
}
void OAICommitteeReports::setAllOtherLoansPeriod(const double &all_other_loans_period) {
    m_all_other_loans_period = all_other_loans_period;
    m_all_other_loans_period_isSet = true;
}

bool OAICommitteeReports::is_all_other_loans_period_Set() const{
    return m_all_other_loans_period_isSet;
}

bool OAICommitteeReports::is_all_other_loans_period_Valid() const{
    return m_all_other_loans_period_isValid;
}

double OAICommitteeReports::getAllOtherLoansYtd() const {
    return m_all_other_loans_ytd;
}
void OAICommitteeReports::setAllOtherLoansYtd(const double &all_other_loans_ytd) {
    m_all_other_loans_ytd = all_other_loans_ytd;
    m_all_other_loans_ytd_isSet = true;
}

bool OAICommitteeReports::is_all_other_loans_ytd_Set() const{
    return m_all_other_loans_ytd_isSet;
}

bool OAICommitteeReports::is_all_other_loans_ytd_Valid() const{
    return m_all_other_loans_ytd_isValid;
}

double OAICommitteeReports::getAllocatedFederalElectionLevinSharePeriod() const {
    return m_allocated_federal_election_levin_share_period;
}
void OAICommitteeReports::setAllocatedFederalElectionLevinSharePeriod(const double &allocated_federal_election_levin_share_period) {
    m_allocated_federal_election_levin_share_period = allocated_federal_election_levin_share_period;
    m_allocated_federal_election_levin_share_period_isSet = true;
}

bool OAICommitteeReports::is_allocated_federal_election_levin_share_period_Set() const{
    return m_allocated_federal_election_levin_share_period_isSet;
}

bool OAICommitteeReports::is_allocated_federal_election_levin_share_period_Valid() const{
    return m_allocated_federal_election_levin_share_period_isValid;
}

QList<double> OAICommitteeReports::getAmendmentChain() const {
    return m_amendment_chain;
}
void OAICommitteeReports::setAmendmentChain(const QList<double> &amendment_chain) {
    m_amendment_chain = amendment_chain;
    m_amendment_chain_isSet = true;
}

bool OAICommitteeReports::is_amendment_chain_Set() const{
    return m_amendment_chain_isSet;
}

bool OAICommitteeReports::is_amendment_chain_Valid() const{
    return m_amendment_chain_isValid;
}

QString OAICommitteeReports::getAmendmentIndicator() const {
    return m_amendment_indicator;
}
void OAICommitteeReports::setAmendmentIndicator(const QString &amendment_indicator) {
    m_amendment_indicator = amendment_indicator;
    m_amendment_indicator_isSet = true;
}

bool OAICommitteeReports::is_amendment_indicator_Set() const{
    return m_amendment_indicator_isSet;
}

bool OAICommitteeReports::is_amendment_indicator_Valid() const{
    return m_amendment_indicator_isValid;
}

QString OAICommitteeReports::getAmendmentIndicatorFull() const {
    return m_amendment_indicator_full;
}
void OAICommitteeReports::setAmendmentIndicatorFull(const QString &amendment_indicator_full) {
    m_amendment_indicator_full = amendment_indicator_full;
    m_amendment_indicator_full_isSet = true;
}

bool OAICommitteeReports::is_amendment_indicator_full_Set() const{
    return m_amendment_indicator_full_isSet;
}

bool OAICommitteeReports::is_amendment_indicator_full_Valid() const{
    return m_amendment_indicator_full_isValid;
}

QString OAICommitteeReports::getBeginningImageNumber() const {
    return m_beginning_image_number;
}
void OAICommitteeReports::setBeginningImageNumber(const QString &beginning_image_number) {
    m_beginning_image_number = beginning_image_number;
    m_beginning_image_number_isSet = true;
}

bool OAICommitteeReports::is_beginning_image_number_Set() const{
    return m_beginning_image_number_isSet;
}

bool OAICommitteeReports::is_beginning_image_number_Valid() const{
    return m_beginning_image_number_isValid;
}

qint32 OAICommitteeReports::getCalendarYtd() const {
    return m_calendar_ytd;
}
void OAICommitteeReports::setCalendarYtd(const qint32 &calendar_ytd) {
    m_calendar_ytd = calendar_ytd;
    m_calendar_ytd_isSet = true;
}

bool OAICommitteeReports::is_calendar_ytd_Set() const{
    return m_calendar_ytd_isSet;
}

bool OAICommitteeReports::is_calendar_ytd_Valid() const{
    return m_calendar_ytd_isValid;
}

double OAICommitteeReports::getCandidateContributionPeriod() const {
    return m_candidate_contribution_period;
}
void OAICommitteeReports::setCandidateContributionPeriod(const double &candidate_contribution_period) {
    m_candidate_contribution_period = candidate_contribution_period;
    m_candidate_contribution_period_isSet = true;
}

bool OAICommitteeReports::is_candidate_contribution_period_Set() const{
    return m_candidate_contribution_period_isSet;
}

bool OAICommitteeReports::is_candidate_contribution_period_Valid() const{
    return m_candidate_contribution_period_isValid;
}

double OAICommitteeReports::getCandidateContributionYtd() const {
    return m_candidate_contribution_ytd;
}
void OAICommitteeReports::setCandidateContributionYtd(const double &candidate_contribution_ytd) {
    m_candidate_contribution_ytd = candidate_contribution_ytd;
    m_candidate_contribution_ytd_isSet = true;
}

bool OAICommitteeReports::is_candidate_contribution_ytd_Set() const{
    return m_candidate_contribution_ytd_isSet;
}

bool OAICommitteeReports::is_candidate_contribution_ytd_Valid() const{
    return m_candidate_contribution_ytd_isValid;
}

double OAICommitteeReports::getCashOnHandBeginningCalendarYtd() const {
    return m_cash_on_hand_beginning_calendar_ytd;
}
void OAICommitteeReports::setCashOnHandBeginningCalendarYtd(const double &cash_on_hand_beginning_calendar_ytd) {
    m_cash_on_hand_beginning_calendar_ytd = cash_on_hand_beginning_calendar_ytd;
    m_cash_on_hand_beginning_calendar_ytd_isSet = true;
}

bool OAICommitteeReports::is_cash_on_hand_beginning_calendar_ytd_Set() const{
    return m_cash_on_hand_beginning_calendar_ytd_isSet;
}

bool OAICommitteeReports::is_cash_on_hand_beginning_calendar_ytd_Valid() const{
    return m_cash_on_hand_beginning_calendar_ytd_isValid;
}

double OAICommitteeReports::getCashOnHandBeginningPeriod() const {
    return m_cash_on_hand_beginning_period;
}
void OAICommitteeReports::setCashOnHandBeginningPeriod(const double &cash_on_hand_beginning_period) {
    m_cash_on_hand_beginning_period = cash_on_hand_beginning_period;
    m_cash_on_hand_beginning_period_isSet = true;
}

bool OAICommitteeReports::is_cash_on_hand_beginning_period_Set() const{
    return m_cash_on_hand_beginning_period_isSet;
}

bool OAICommitteeReports::is_cash_on_hand_beginning_period_Valid() const{
    return m_cash_on_hand_beginning_period_isValid;
}

double OAICommitteeReports::getCashOnHandCloseYtd() const {
    return m_cash_on_hand_close_ytd;
}
void OAICommitteeReports::setCashOnHandCloseYtd(const double &cash_on_hand_close_ytd) {
    m_cash_on_hand_close_ytd = cash_on_hand_close_ytd;
    m_cash_on_hand_close_ytd_isSet = true;
}

bool OAICommitteeReports::is_cash_on_hand_close_ytd_Set() const{
    return m_cash_on_hand_close_ytd_isSet;
}

bool OAICommitteeReports::is_cash_on_hand_close_ytd_Valid() const{
    return m_cash_on_hand_close_ytd_isValid;
}

double OAICommitteeReports::getCashOnHandEndPeriod() const {
    return m_cash_on_hand_end_period;
}
void OAICommitteeReports::setCashOnHandEndPeriod(const double &cash_on_hand_end_period) {
    m_cash_on_hand_end_period = cash_on_hand_end_period;
    m_cash_on_hand_end_period_isSet = true;
}

bool OAICommitteeReports::is_cash_on_hand_end_period_Set() const{
    return m_cash_on_hand_end_period_isSet;
}

bool OAICommitteeReports::is_cash_on_hand_end_period_Valid() const{
    return m_cash_on_hand_end_period_isValid;
}

QString OAICommitteeReports::getCommitteeId() const {
    return m_committee_id;
}
void OAICommitteeReports::setCommitteeId(const QString &committee_id) {
    m_committee_id = committee_id;
    m_committee_id_isSet = true;
}

bool OAICommitteeReports::is_committee_id_Set() const{
    return m_committee_id_isSet;
}

bool OAICommitteeReports::is_committee_id_Valid() const{
    return m_committee_id_isValid;
}

QString OAICommitteeReports::getCommitteeName() const {
    return m_committee_name;
}
void OAICommitteeReports::setCommitteeName(const QString &committee_name) {
    m_committee_name = committee_name;
    m_committee_name_isSet = true;
}

bool OAICommitteeReports::is_committee_name_Set() const{
    return m_committee_name_isSet;
}

bool OAICommitteeReports::is_committee_name_Valid() const{
    return m_committee_name_isValid;
}

QString OAICommitteeReports::getCommitteeType() const {
    return m_committee_type;
}
void OAICommitteeReports::setCommitteeType(const QString &committee_type) {
    m_committee_type = committee_type;
    m_committee_type_isSet = true;
}

bool OAICommitteeReports::is_committee_type_Set() const{
    return m_committee_type_isSet;
}

bool OAICommitteeReports::is_committee_type_Valid() const{
    return m_committee_type_isValid;
}

double OAICommitteeReports::getCoordinatedExpendituresByPartyCommitteePeriod() const {
    return m_coordinated_expenditures_by_party_committee_period;
}
void OAICommitteeReports::setCoordinatedExpendituresByPartyCommitteePeriod(const double &coordinated_expenditures_by_party_committee_period) {
    m_coordinated_expenditures_by_party_committee_period = coordinated_expenditures_by_party_committee_period;
    m_coordinated_expenditures_by_party_committee_period_isSet = true;
}

bool OAICommitteeReports::is_coordinated_expenditures_by_party_committee_period_Set() const{
    return m_coordinated_expenditures_by_party_committee_period_isSet;
}

bool OAICommitteeReports::is_coordinated_expenditures_by_party_committee_period_Valid() const{
    return m_coordinated_expenditures_by_party_committee_period_isValid;
}

double OAICommitteeReports::getCoordinatedExpendituresByPartyCommitteeYtd() const {
    return m_coordinated_expenditures_by_party_committee_ytd;
}
void OAICommitteeReports::setCoordinatedExpendituresByPartyCommitteeYtd(const double &coordinated_expenditures_by_party_committee_ytd) {
    m_coordinated_expenditures_by_party_committee_ytd = coordinated_expenditures_by_party_committee_ytd;
    m_coordinated_expenditures_by_party_committee_ytd_isSet = true;
}

bool OAICommitteeReports::is_coordinated_expenditures_by_party_committee_ytd_Set() const{
    return m_coordinated_expenditures_by_party_committee_ytd_isSet;
}

bool OAICommitteeReports::is_coordinated_expenditures_by_party_committee_ytd_Valid() const{
    return m_coordinated_expenditures_by_party_committee_ytd_isValid;
}

QDateTime OAICommitteeReports::getCoverageEndDate() const {
    return m_coverage_end_date;
}
void OAICommitteeReports::setCoverageEndDate(const QDateTime &coverage_end_date) {
    m_coverage_end_date = coverage_end_date;
    m_coverage_end_date_isSet = true;
}

bool OAICommitteeReports::is_coverage_end_date_Set() const{
    return m_coverage_end_date_isSet;
}

bool OAICommitteeReports::is_coverage_end_date_Valid() const{
    return m_coverage_end_date_isValid;
}

QDateTime OAICommitteeReports::getCoverageStartDate() const {
    return m_coverage_start_date;
}
void OAICommitteeReports::setCoverageStartDate(const QDateTime &coverage_start_date) {
    m_coverage_start_date = coverage_start_date;
    m_coverage_start_date_isSet = true;
}

bool OAICommitteeReports::is_coverage_start_date_Set() const{
    return m_coverage_start_date_isSet;
}

bool OAICommitteeReports::is_coverage_start_date_Valid() const{
    return m_coverage_start_date_isValid;
}

QString OAICommitteeReports::getCsvUrl() const {
    return m_csv_url;
}
void OAICommitteeReports::setCsvUrl(const QString &csv_url) {
    m_csv_url = csv_url;
    m_csv_url_isSet = true;
}

bool OAICommitteeReports::is_csv_url_Set() const{
    return m_csv_url_isSet;
}

bool OAICommitteeReports::is_csv_url_Valid() const{
    return m_csv_url_isValid;
}

qint32 OAICommitteeReports::getCycle() const {
    return m_cycle;
}
void OAICommitteeReports::setCycle(const qint32 &cycle) {
    m_cycle = cycle;
    m_cycle_isSet = true;
}

bool OAICommitteeReports::is_cycle_Set() const{
    return m_cycle_isSet;
}

bool OAICommitteeReports::is_cycle_Valid() const{
    return m_cycle_isValid;
}

double OAICommitteeReports::getDebtsOwedByCommittee() const {
    return m_debts_owed_by_committee;
}
void OAICommitteeReports::setDebtsOwedByCommittee(const double &debts_owed_by_committee) {
    m_debts_owed_by_committee = debts_owed_by_committee;
    m_debts_owed_by_committee_isSet = true;
}

bool OAICommitteeReports::is_debts_owed_by_committee_Set() const{
    return m_debts_owed_by_committee_isSet;
}

bool OAICommitteeReports::is_debts_owed_by_committee_Valid() const{
    return m_debts_owed_by_committee_isValid;
}

double OAICommitteeReports::getDebtsOwedToCommittee() const {
    return m_debts_owed_to_committee;
}
void OAICommitteeReports::setDebtsOwedToCommittee(const double &debts_owed_to_committee) {
    m_debts_owed_to_committee = debts_owed_to_committee;
    m_debts_owed_to_committee_isSet = true;
}

bool OAICommitteeReports::is_debts_owed_to_committee_Set() const{
    return m_debts_owed_to_committee_isSet;
}

bool OAICommitteeReports::is_debts_owed_to_committee_Valid() const{
    return m_debts_owed_to_committee_isValid;
}

QString OAICommitteeReports::getDocumentDescription() const {
    return m_document_description;
}
void OAICommitteeReports::setDocumentDescription(const QString &document_description) {
    m_document_description = document_description;
    m_document_description_isSet = true;
}

bool OAICommitteeReports::is_document_description_Set() const{
    return m_document_description_isSet;
}

bool OAICommitteeReports::is_document_description_Valid() const{
    return m_document_description_isValid;
}

QString OAICommitteeReports::getEndImageNumber() const {
    return m_end_image_number;
}
void OAICommitteeReports::setEndImageNumber(const QString &end_image_number) {
    m_end_image_number = end_image_number;
    m_end_image_number_isSet = true;
}

bool OAICommitteeReports::is_end_image_number_Set() const{
    return m_end_image_number_isSet;
}

bool OAICommitteeReports::is_end_image_number_Valid() const{
    return m_end_image_number_isValid;
}

double OAICommitteeReports::getExemptLegalAccountingDisbursementPeriod() const {
    return m_exempt_legal_accounting_disbursement_period;
}
void OAICommitteeReports::setExemptLegalAccountingDisbursementPeriod(const double &exempt_legal_accounting_disbursement_period) {
    m_exempt_legal_accounting_disbursement_period = exempt_legal_accounting_disbursement_period;
    m_exempt_legal_accounting_disbursement_period_isSet = true;
}

bool OAICommitteeReports::is_exempt_legal_accounting_disbursement_period_Set() const{
    return m_exempt_legal_accounting_disbursement_period_isSet;
}

bool OAICommitteeReports::is_exempt_legal_accounting_disbursement_period_Valid() const{
    return m_exempt_legal_accounting_disbursement_period_isValid;
}

double OAICommitteeReports::getExemptLegalAccountingDisbursementYtd() const {
    return m_exempt_legal_accounting_disbursement_ytd;
}
void OAICommitteeReports::setExemptLegalAccountingDisbursementYtd(const double &exempt_legal_accounting_disbursement_ytd) {
    m_exempt_legal_accounting_disbursement_ytd = exempt_legal_accounting_disbursement_ytd;
    m_exempt_legal_accounting_disbursement_ytd_isSet = true;
}

bool OAICommitteeReports::is_exempt_legal_accounting_disbursement_ytd_Set() const{
    return m_exempt_legal_accounting_disbursement_ytd_isSet;
}

bool OAICommitteeReports::is_exempt_legal_accounting_disbursement_ytd_Valid() const{
    return m_exempt_legal_accounting_disbursement_ytd_isValid;
}

double OAICommitteeReports::getExpenditureSubjectToLimits() const {
    return m_expenditure_subject_to_limits;
}
void OAICommitteeReports::setExpenditureSubjectToLimits(const double &expenditure_subject_to_limits) {
    m_expenditure_subject_to_limits = expenditure_subject_to_limits;
    m_expenditure_subject_to_limits_isSet = true;
}

bool OAICommitteeReports::is_expenditure_subject_to_limits_Set() const{
    return m_expenditure_subject_to_limits_isSet;
}

bool OAICommitteeReports::is_expenditure_subject_to_limits_Valid() const{
    return m_expenditure_subject_to_limits_isValid;
}

QString OAICommitteeReports::getFecFileId() const {
    return m_fec_file_id;
}
void OAICommitteeReports::setFecFileId(const QString &fec_file_id) {
    m_fec_file_id = fec_file_id;
    m_fec_file_id_isSet = true;
}

bool OAICommitteeReports::is_fec_file_id_Set() const{
    return m_fec_file_id_isSet;
}

bool OAICommitteeReports::is_fec_file_id_Valid() const{
    return m_fec_file_id_isValid;
}

QString OAICommitteeReports::getFecUrl() const {
    return m_fec_url;
}
void OAICommitteeReports::setFecUrl(const QString &fec_url) {
    m_fec_url = fec_url;
    m_fec_url_isSet = true;
}

bool OAICommitteeReports::is_fec_url_Set() const{
    return m_fec_url_isSet;
}

bool OAICommitteeReports::is_fec_url_Valid() const{
    return m_fec_url_isValid;
}

double OAICommitteeReports::getFedCandidateCommitteeContributionRefundsYtd() const {
    return m_fed_candidate_committee_contribution_refunds_ytd;
}
void OAICommitteeReports::setFedCandidateCommitteeContributionRefundsYtd(const double &fed_candidate_committee_contribution_refunds_ytd) {
    m_fed_candidate_committee_contribution_refunds_ytd = fed_candidate_committee_contribution_refunds_ytd;
    m_fed_candidate_committee_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReports::is_fed_candidate_committee_contribution_refunds_ytd_Set() const{
    return m_fed_candidate_committee_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReports::is_fed_candidate_committee_contribution_refunds_ytd_Valid() const{
    return m_fed_candidate_committee_contribution_refunds_ytd_isValid;
}

double OAICommitteeReports::getFedCandidateCommitteeContributionsPeriod() const {
    return m_fed_candidate_committee_contributions_period;
}
void OAICommitteeReports::setFedCandidateCommitteeContributionsPeriod(const double &fed_candidate_committee_contributions_period) {
    m_fed_candidate_committee_contributions_period = fed_candidate_committee_contributions_period;
    m_fed_candidate_committee_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_fed_candidate_committee_contributions_period_Set() const{
    return m_fed_candidate_committee_contributions_period_isSet;
}

bool OAICommitteeReports::is_fed_candidate_committee_contributions_period_Valid() const{
    return m_fed_candidate_committee_contributions_period_isValid;
}

double OAICommitteeReports::getFedCandidateCommitteeContributionsYtd() const {
    return m_fed_candidate_committee_contributions_ytd;
}
void OAICommitteeReports::setFedCandidateCommitteeContributionsYtd(const double &fed_candidate_committee_contributions_ytd) {
    m_fed_candidate_committee_contributions_ytd = fed_candidate_committee_contributions_ytd;
    m_fed_candidate_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_fed_candidate_committee_contributions_ytd_Set() const{
    return m_fed_candidate_committee_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_fed_candidate_committee_contributions_ytd_Valid() const{
    return m_fed_candidate_committee_contributions_ytd_isValid;
}

double OAICommitteeReports::getFedCandidateContributionRefundsPeriod() const {
    return m_fed_candidate_contribution_refunds_period;
}
void OAICommitteeReports::setFedCandidateContributionRefundsPeriod(const double &fed_candidate_contribution_refunds_period) {
    m_fed_candidate_contribution_refunds_period = fed_candidate_contribution_refunds_period;
    m_fed_candidate_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReports::is_fed_candidate_contribution_refunds_period_Set() const{
    return m_fed_candidate_contribution_refunds_period_isSet;
}

bool OAICommitteeReports::is_fed_candidate_contribution_refunds_period_Valid() const{
    return m_fed_candidate_contribution_refunds_period_isValid;
}

double OAICommitteeReports::getFederalFundsPeriod() const {
    return m_federal_funds_period;
}
void OAICommitteeReports::setFederalFundsPeriod(const double &federal_funds_period) {
    m_federal_funds_period = federal_funds_period;
    m_federal_funds_period_isSet = true;
}

bool OAICommitteeReports::is_federal_funds_period_Set() const{
    return m_federal_funds_period_isSet;
}

bool OAICommitteeReports::is_federal_funds_period_Valid() const{
    return m_federal_funds_period_isValid;
}

double OAICommitteeReports::getFederalFundsYtd() const {
    return m_federal_funds_ytd;
}
void OAICommitteeReports::setFederalFundsYtd(const double &federal_funds_ytd) {
    m_federal_funds_ytd = federal_funds_ytd;
    m_federal_funds_ytd_isSet = true;
}

bool OAICommitteeReports::is_federal_funds_ytd_Set() const{
    return m_federal_funds_ytd_isSet;
}

bool OAICommitteeReports::is_federal_funds_ytd_Valid() const{
    return m_federal_funds_ytd_isValid;
}

qint32 OAICommitteeReports::getFileNumber() const {
    return m_file_number;
}
void OAICommitteeReports::setFileNumber(const qint32 &file_number) {
    m_file_number = file_number;
    m_file_number_isSet = true;
}

bool OAICommitteeReports::is_file_number_Set() const{
    return m_file_number_isSet;
}

bool OAICommitteeReports::is_file_number_Valid() const{
    return m_file_number_isValid;
}

double OAICommitteeReports::getFundraisingDisbursementsPeriod() const {
    return m_fundraising_disbursements_period;
}
void OAICommitteeReports::setFundraisingDisbursementsPeriod(const double &fundraising_disbursements_period) {
    m_fundraising_disbursements_period = fundraising_disbursements_period;
    m_fundraising_disbursements_period_isSet = true;
}

bool OAICommitteeReports::is_fundraising_disbursements_period_Set() const{
    return m_fundraising_disbursements_period_isSet;
}

bool OAICommitteeReports::is_fundraising_disbursements_period_Valid() const{
    return m_fundraising_disbursements_period_isValid;
}

double OAICommitteeReports::getFundraisingDisbursementsYtd() const {
    return m_fundraising_disbursements_ytd;
}
void OAICommitteeReports::setFundraisingDisbursementsYtd(const double &fundraising_disbursements_ytd) {
    m_fundraising_disbursements_ytd = fundraising_disbursements_ytd;
    m_fundraising_disbursements_ytd_isSet = true;
}

bool OAICommitteeReports::is_fundraising_disbursements_ytd_Set() const{
    return m_fundraising_disbursements_ytd_isSet;
}

bool OAICommitteeReports::is_fundraising_disbursements_ytd_Valid() const{
    return m_fundraising_disbursements_ytd_isValid;
}

double OAICommitteeReports::getGrossReceiptAuthorizedCommitteeGeneral() const {
    return m_gross_receipt_authorized_committee_general;
}
void OAICommitteeReports::setGrossReceiptAuthorizedCommitteeGeneral(const double &gross_receipt_authorized_committee_general) {
    m_gross_receipt_authorized_committee_general = gross_receipt_authorized_committee_general;
    m_gross_receipt_authorized_committee_general_isSet = true;
}

bool OAICommitteeReports::is_gross_receipt_authorized_committee_general_Set() const{
    return m_gross_receipt_authorized_committee_general_isSet;
}

bool OAICommitteeReports::is_gross_receipt_authorized_committee_general_Valid() const{
    return m_gross_receipt_authorized_committee_general_isValid;
}

double OAICommitteeReports::getGrossReceiptAuthorizedCommitteePrimary() const {
    return m_gross_receipt_authorized_committee_primary;
}
void OAICommitteeReports::setGrossReceiptAuthorizedCommitteePrimary(const double &gross_receipt_authorized_committee_primary) {
    m_gross_receipt_authorized_committee_primary = gross_receipt_authorized_committee_primary;
    m_gross_receipt_authorized_committee_primary_isSet = true;
}

bool OAICommitteeReports::is_gross_receipt_authorized_committee_primary_Set() const{
    return m_gross_receipt_authorized_committee_primary_isSet;
}

bool OAICommitteeReports::is_gross_receipt_authorized_committee_primary_Valid() const{
    return m_gross_receipt_authorized_committee_primary_isValid;
}

double OAICommitteeReports::getGrossReceiptMinusPersonalContributionGeneral() const {
    return m_gross_receipt_minus_personal_contribution_general;
}
void OAICommitteeReports::setGrossReceiptMinusPersonalContributionGeneral(const double &gross_receipt_minus_personal_contribution_general) {
    m_gross_receipt_minus_personal_contribution_general = gross_receipt_minus_personal_contribution_general;
    m_gross_receipt_minus_personal_contribution_general_isSet = true;
}

bool OAICommitteeReports::is_gross_receipt_minus_personal_contribution_general_Set() const{
    return m_gross_receipt_minus_personal_contribution_general_isSet;
}

bool OAICommitteeReports::is_gross_receipt_minus_personal_contribution_general_Valid() const{
    return m_gross_receipt_minus_personal_contribution_general_isValid;
}

double OAICommitteeReports::getGrossReceiptMinusPersonalContributionsPrimary() const {
    return m_gross_receipt_minus_personal_contributions_primary;
}
void OAICommitteeReports::setGrossReceiptMinusPersonalContributionsPrimary(const double &gross_receipt_minus_personal_contributions_primary) {
    m_gross_receipt_minus_personal_contributions_primary = gross_receipt_minus_personal_contributions_primary;
    m_gross_receipt_minus_personal_contributions_primary_isSet = true;
}

bool OAICommitteeReports::is_gross_receipt_minus_personal_contributions_primary_Set() const{
    return m_gross_receipt_minus_personal_contributions_primary_isSet;
}

bool OAICommitteeReports::is_gross_receipt_minus_personal_contributions_primary_Valid() const{
    return m_gross_receipt_minus_personal_contributions_primary_isValid;
}

QString OAICommitteeReports::getHtmlUrl() const {
    return m_html_url;
}
void OAICommitteeReports::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAICommitteeReports::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAICommitteeReports::is_html_url_Valid() const{
    return m_html_url_isValid;
}

double OAICommitteeReports::getIndependentContributionsPeriod() const {
    return m_independent_contributions_period;
}
void OAICommitteeReports::setIndependentContributionsPeriod(const double &independent_contributions_period) {
    m_independent_contributions_period = independent_contributions_period;
    m_independent_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_independent_contributions_period_Set() const{
    return m_independent_contributions_period_isSet;
}

bool OAICommitteeReports::is_independent_contributions_period_Valid() const{
    return m_independent_contributions_period_isValid;
}

double OAICommitteeReports::getIndependentExpendituresPeriod() const {
    return m_independent_expenditures_period;
}
void OAICommitteeReports::setIndependentExpendituresPeriod(const double &independent_expenditures_period) {
    m_independent_expenditures_period = independent_expenditures_period;
    m_independent_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_independent_expenditures_period_Set() const{
    return m_independent_expenditures_period_isSet;
}

bool OAICommitteeReports::is_independent_expenditures_period_Valid() const{
    return m_independent_expenditures_period_isValid;
}

double OAICommitteeReports::getIndependentExpendituresYtd() const {
    return m_independent_expenditures_ytd;
}
void OAICommitteeReports::setIndependentExpendituresYtd(const double &independent_expenditures_ytd) {
    m_independent_expenditures_ytd = independent_expenditures_ytd;
    m_independent_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_independent_expenditures_ytd_Set() const{
    return m_independent_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_independent_expenditures_ytd_Valid() const{
    return m_independent_expenditures_ytd_isValid;
}

double OAICommitteeReports::getIndividualItemizedContributionsPeriod() const {
    return m_individual_itemized_contributions_period;
}
void OAICommitteeReports::setIndividualItemizedContributionsPeriod(const double &individual_itemized_contributions_period) {
    m_individual_itemized_contributions_period = individual_itemized_contributions_period;
    m_individual_itemized_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_individual_itemized_contributions_period_Set() const{
    return m_individual_itemized_contributions_period_isSet;
}

bool OAICommitteeReports::is_individual_itemized_contributions_period_Valid() const{
    return m_individual_itemized_contributions_period_isValid;
}

double OAICommitteeReports::getIndividualItemizedContributionsYtd() const {
    return m_individual_itemized_contributions_ytd;
}
void OAICommitteeReports::setIndividualItemizedContributionsYtd(const double &individual_itemized_contributions_ytd) {
    m_individual_itemized_contributions_ytd = individual_itemized_contributions_ytd;
    m_individual_itemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_individual_itemized_contributions_ytd_Set() const{
    return m_individual_itemized_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_individual_itemized_contributions_ytd_Valid() const{
    return m_individual_itemized_contributions_ytd_isValid;
}

double OAICommitteeReports::getIndividualUnitemizedContributionsPeriod() const {
    return m_individual_unitemized_contributions_period;
}
void OAICommitteeReports::setIndividualUnitemizedContributionsPeriod(const double &individual_unitemized_contributions_period) {
    m_individual_unitemized_contributions_period = individual_unitemized_contributions_period;
    m_individual_unitemized_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_individual_unitemized_contributions_period_Set() const{
    return m_individual_unitemized_contributions_period_isSet;
}

bool OAICommitteeReports::is_individual_unitemized_contributions_period_Valid() const{
    return m_individual_unitemized_contributions_period_isValid;
}

double OAICommitteeReports::getIndividualUnitemizedContributionsYtd() const {
    return m_individual_unitemized_contributions_ytd;
}
void OAICommitteeReports::setIndividualUnitemizedContributionsYtd(const double &individual_unitemized_contributions_ytd) {
    m_individual_unitemized_contributions_ytd = individual_unitemized_contributions_ytd;
    m_individual_unitemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_individual_unitemized_contributions_ytd_Set() const{
    return m_individual_unitemized_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_individual_unitemized_contributions_ytd_Valid() const{
    return m_individual_unitemized_contributions_ytd_isValid;
}

bool OAICommitteeReports::isIsAmended() const {
    return m_is_amended;
}
void OAICommitteeReports::setIsAmended(const bool &is_amended) {
    m_is_amended = is_amended;
    m_is_amended_isSet = true;
}

bool OAICommitteeReports::is_is_amended_Set() const{
    return m_is_amended_isSet;
}

bool OAICommitteeReports::is_is_amended_Valid() const{
    return m_is_amended_isValid;
}

double OAICommitteeReports::getItemsOnHandLiquidated() const {
    return m_items_on_hand_liquidated;
}
void OAICommitteeReports::setItemsOnHandLiquidated(const double &items_on_hand_liquidated) {
    m_items_on_hand_liquidated = items_on_hand_liquidated;
    m_items_on_hand_liquidated_isSet = true;
}

bool OAICommitteeReports::is_items_on_hand_liquidated_Set() const{
    return m_items_on_hand_liquidated_isSet;
}

bool OAICommitteeReports::is_items_on_hand_liquidated_Valid() const{
    return m_items_on_hand_liquidated_isValid;
}

double OAICommitteeReports::getLoanRepaymentsCandidateLoansPeriod() const {
    return m_loan_repayments_candidate_loans_period;
}
void OAICommitteeReports::setLoanRepaymentsCandidateLoansPeriod(const double &loan_repayments_candidate_loans_period) {
    m_loan_repayments_candidate_loans_period = loan_repayments_candidate_loans_period;
    m_loan_repayments_candidate_loans_period_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_candidate_loans_period_Set() const{
    return m_loan_repayments_candidate_loans_period_isSet;
}

bool OAICommitteeReports::is_loan_repayments_candidate_loans_period_Valid() const{
    return m_loan_repayments_candidate_loans_period_isValid;
}

double OAICommitteeReports::getLoanRepaymentsCandidateLoansYtd() const {
    return m_loan_repayments_candidate_loans_ytd;
}
void OAICommitteeReports::setLoanRepaymentsCandidateLoansYtd(const double &loan_repayments_candidate_loans_ytd) {
    m_loan_repayments_candidate_loans_ytd = loan_repayments_candidate_loans_ytd;
    m_loan_repayments_candidate_loans_ytd_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_candidate_loans_ytd_Set() const{
    return m_loan_repayments_candidate_loans_ytd_isSet;
}

bool OAICommitteeReports::is_loan_repayments_candidate_loans_ytd_Valid() const{
    return m_loan_repayments_candidate_loans_ytd_isValid;
}

double OAICommitteeReports::getLoanRepaymentsMadePeriod() const {
    return m_loan_repayments_made_period;
}
void OAICommitteeReports::setLoanRepaymentsMadePeriod(const double &loan_repayments_made_period) {
    m_loan_repayments_made_period = loan_repayments_made_period;
    m_loan_repayments_made_period_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_made_period_Set() const{
    return m_loan_repayments_made_period_isSet;
}

bool OAICommitteeReports::is_loan_repayments_made_period_Valid() const{
    return m_loan_repayments_made_period_isValid;
}

double OAICommitteeReports::getLoanRepaymentsMadeYtd() const {
    return m_loan_repayments_made_ytd;
}
void OAICommitteeReports::setLoanRepaymentsMadeYtd(const double &loan_repayments_made_ytd) {
    m_loan_repayments_made_ytd = loan_repayments_made_ytd;
    m_loan_repayments_made_ytd_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_made_ytd_Set() const{
    return m_loan_repayments_made_ytd_isSet;
}

bool OAICommitteeReports::is_loan_repayments_made_ytd_Valid() const{
    return m_loan_repayments_made_ytd_isValid;
}

double OAICommitteeReports::getLoanRepaymentsOtherLoansPeriod() const {
    return m_loan_repayments_other_loans_period;
}
void OAICommitteeReports::setLoanRepaymentsOtherLoansPeriod(const double &loan_repayments_other_loans_period) {
    m_loan_repayments_other_loans_period = loan_repayments_other_loans_period;
    m_loan_repayments_other_loans_period_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_other_loans_period_Set() const{
    return m_loan_repayments_other_loans_period_isSet;
}

bool OAICommitteeReports::is_loan_repayments_other_loans_period_Valid() const{
    return m_loan_repayments_other_loans_period_isValid;
}

double OAICommitteeReports::getLoanRepaymentsOtherLoansYtd() const {
    return m_loan_repayments_other_loans_ytd;
}
void OAICommitteeReports::setLoanRepaymentsOtherLoansYtd(const double &loan_repayments_other_loans_ytd) {
    m_loan_repayments_other_loans_ytd = loan_repayments_other_loans_ytd;
    m_loan_repayments_other_loans_ytd_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_other_loans_ytd_Set() const{
    return m_loan_repayments_other_loans_ytd_isSet;
}

bool OAICommitteeReports::is_loan_repayments_other_loans_ytd_Valid() const{
    return m_loan_repayments_other_loans_ytd_isValid;
}

double OAICommitteeReports::getLoanRepaymentsReceivedPeriod() const {
    return m_loan_repayments_received_period;
}
void OAICommitteeReports::setLoanRepaymentsReceivedPeriod(const double &loan_repayments_received_period) {
    m_loan_repayments_received_period = loan_repayments_received_period;
    m_loan_repayments_received_period_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_received_period_Set() const{
    return m_loan_repayments_received_period_isSet;
}

bool OAICommitteeReports::is_loan_repayments_received_period_Valid() const{
    return m_loan_repayments_received_period_isValid;
}

double OAICommitteeReports::getLoanRepaymentsReceivedYtd() const {
    return m_loan_repayments_received_ytd;
}
void OAICommitteeReports::setLoanRepaymentsReceivedYtd(const double &loan_repayments_received_ytd) {
    m_loan_repayments_received_ytd = loan_repayments_received_ytd;
    m_loan_repayments_received_ytd_isSet = true;
}

bool OAICommitteeReports::is_loan_repayments_received_ytd_Set() const{
    return m_loan_repayments_received_ytd_isSet;
}

bool OAICommitteeReports::is_loan_repayments_received_ytd_Valid() const{
    return m_loan_repayments_received_ytd_isValid;
}

double OAICommitteeReports::getLoansMadeByCandidatePeriod() const {
    return m_loans_made_by_candidate_period;
}
void OAICommitteeReports::setLoansMadeByCandidatePeriod(const double &loans_made_by_candidate_period) {
    m_loans_made_by_candidate_period = loans_made_by_candidate_period;
    m_loans_made_by_candidate_period_isSet = true;
}

bool OAICommitteeReports::is_loans_made_by_candidate_period_Set() const{
    return m_loans_made_by_candidate_period_isSet;
}

bool OAICommitteeReports::is_loans_made_by_candidate_period_Valid() const{
    return m_loans_made_by_candidate_period_isValid;
}

double OAICommitteeReports::getLoansMadeByCandidateYtd() const {
    return m_loans_made_by_candidate_ytd;
}
void OAICommitteeReports::setLoansMadeByCandidateYtd(const double &loans_made_by_candidate_ytd) {
    m_loans_made_by_candidate_ytd = loans_made_by_candidate_ytd;
    m_loans_made_by_candidate_ytd_isSet = true;
}

bool OAICommitteeReports::is_loans_made_by_candidate_ytd_Set() const{
    return m_loans_made_by_candidate_ytd_isSet;
}

bool OAICommitteeReports::is_loans_made_by_candidate_ytd_Valid() const{
    return m_loans_made_by_candidate_ytd_isValid;
}

double OAICommitteeReports::getLoansMadePeriod() const {
    return m_loans_made_period;
}
void OAICommitteeReports::setLoansMadePeriod(const double &loans_made_period) {
    m_loans_made_period = loans_made_period;
    m_loans_made_period_isSet = true;
}

bool OAICommitteeReports::is_loans_made_period_Set() const{
    return m_loans_made_period_isSet;
}

bool OAICommitteeReports::is_loans_made_period_Valid() const{
    return m_loans_made_period_isValid;
}

double OAICommitteeReports::getLoansMadeYtd() const {
    return m_loans_made_ytd;
}
void OAICommitteeReports::setLoansMadeYtd(const double &loans_made_ytd) {
    m_loans_made_ytd = loans_made_ytd;
    m_loans_made_ytd_isSet = true;
}

bool OAICommitteeReports::is_loans_made_ytd_Set() const{
    return m_loans_made_ytd_isSet;
}

bool OAICommitteeReports::is_loans_made_ytd_Valid() const{
    return m_loans_made_ytd_isValid;
}

double OAICommitteeReports::getLoansReceivedFromCandidatePeriod() const {
    return m_loans_received_from_candidate_period;
}
void OAICommitteeReports::setLoansReceivedFromCandidatePeriod(const double &loans_received_from_candidate_period) {
    m_loans_received_from_candidate_period = loans_received_from_candidate_period;
    m_loans_received_from_candidate_period_isSet = true;
}

bool OAICommitteeReports::is_loans_received_from_candidate_period_Set() const{
    return m_loans_received_from_candidate_period_isSet;
}

bool OAICommitteeReports::is_loans_received_from_candidate_period_Valid() const{
    return m_loans_received_from_candidate_period_isValid;
}

double OAICommitteeReports::getLoansReceivedFromCandidateYtd() const {
    return m_loans_received_from_candidate_ytd;
}
void OAICommitteeReports::setLoansReceivedFromCandidateYtd(const double &loans_received_from_candidate_ytd) {
    m_loans_received_from_candidate_ytd = loans_received_from_candidate_ytd;
    m_loans_received_from_candidate_ytd_isSet = true;
}

bool OAICommitteeReports::is_loans_received_from_candidate_ytd_Set() const{
    return m_loans_received_from_candidate_ytd_isSet;
}

bool OAICommitteeReports::is_loans_received_from_candidate_ytd_Valid() const{
    return m_loans_received_from_candidate_ytd_isValid;
}

QString OAICommitteeReports::getMeansFiled() const {
    return m_means_filed;
}
void OAICommitteeReports::setMeansFiled(const QString &means_filed) {
    m_means_filed = means_filed;
    m_means_filed_isSet = true;
}

bool OAICommitteeReports::is_means_filed_Set() const{
    return m_means_filed_isSet;
}

bool OAICommitteeReports::is_means_filed_Valid() const{
    return m_means_filed_isValid;
}

bool OAICommitteeReports::isMostRecent() const {
    return m_most_recent;
}
void OAICommitteeReports::setMostRecent(const bool &most_recent) {
    m_most_recent = most_recent;
    m_most_recent_isSet = true;
}

bool OAICommitteeReports::is_most_recent_Set() const{
    return m_most_recent_isSet;
}

bool OAICommitteeReports::is_most_recent_Valid() const{
    return m_most_recent_isValid;
}

double OAICommitteeReports::getMostRecentFileNumber() const {
    return m_most_recent_file_number;
}
void OAICommitteeReports::setMostRecentFileNumber(const double &most_recent_file_number) {
    m_most_recent_file_number = most_recent_file_number;
    m_most_recent_file_number_isSet = true;
}

bool OAICommitteeReports::is_most_recent_file_number_Set() const{
    return m_most_recent_file_number_isSet;
}

bool OAICommitteeReports::is_most_recent_file_number_Valid() const{
    return m_most_recent_file_number_isValid;
}

double OAICommitteeReports::getNetContributionsCycleToDate() const {
    return m_net_contributions_cycle_to_date;
}
void OAICommitteeReports::setNetContributionsCycleToDate(const double &net_contributions_cycle_to_date) {
    m_net_contributions_cycle_to_date = net_contributions_cycle_to_date;
    m_net_contributions_cycle_to_date_isSet = true;
}

bool OAICommitteeReports::is_net_contributions_cycle_to_date_Set() const{
    return m_net_contributions_cycle_to_date_isSet;
}

bool OAICommitteeReports::is_net_contributions_cycle_to_date_Valid() const{
    return m_net_contributions_cycle_to_date_isValid;
}

double OAICommitteeReports::getNetContributionsPeriod() const {
    return m_net_contributions_period;
}
void OAICommitteeReports::setNetContributionsPeriod(const double &net_contributions_period) {
    m_net_contributions_period = net_contributions_period;
    m_net_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_net_contributions_period_Set() const{
    return m_net_contributions_period_isSet;
}

bool OAICommitteeReports::is_net_contributions_period_Valid() const{
    return m_net_contributions_period_isValid;
}

double OAICommitteeReports::getNetContributionsYtd() const {
    return m_net_contributions_ytd;
}
void OAICommitteeReports::setNetContributionsYtd(const double &net_contributions_ytd) {
    m_net_contributions_ytd = net_contributions_ytd;
    m_net_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_net_contributions_ytd_Set() const{
    return m_net_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_net_contributions_ytd_Valid() const{
    return m_net_contributions_ytd_isValid;
}

double OAICommitteeReports::getNetOperatingExpendituresCycleToDate() const {
    return m_net_operating_expenditures_cycle_to_date;
}
void OAICommitteeReports::setNetOperatingExpendituresCycleToDate(const double &net_operating_expenditures_cycle_to_date) {
    m_net_operating_expenditures_cycle_to_date = net_operating_expenditures_cycle_to_date;
    m_net_operating_expenditures_cycle_to_date_isSet = true;
}

bool OAICommitteeReports::is_net_operating_expenditures_cycle_to_date_Set() const{
    return m_net_operating_expenditures_cycle_to_date_isSet;
}

bool OAICommitteeReports::is_net_operating_expenditures_cycle_to_date_Valid() const{
    return m_net_operating_expenditures_cycle_to_date_isValid;
}

double OAICommitteeReports::getNetOperatingExpendituresPeriod() const {
    return m_net_operating_expenditures_period;
}
void OAICommitteeReports::setNetOperatingExpendituresPeriod(const double &net_operating_expenditures_period) {
    m_net_operating_expenditures_period = net_operating_expenditures_period;
    m_net_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_net_operating_expenditures_period_Set() const{
    return m_net_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_net_operating_expenditures_period_Valid() const{
    return m_net_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getNetOperatingExpendituresYtd() const {
    return m_net_operating_expenditures_ytd;
}
void OAICommitteeReports::setNetOperatingExpendituresYtd(const double &net_operating_expenditures_ytd) {
    m_net_operating_expenditures_ytd = net_operating_expenditures_ytd;
    m_net_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_net_operating_expenditures_ytd_Set() const{
    return m_net_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_net_operating_expenditures_ytd_Valid() const{
    return m_net_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getNonAllocatedFedElectionActivityPeriod() const {
    return m_non_allocated_fed_election_activity_period;
}
void OAICommitteeReports::setNonAllocatedFedElectionActivityPeriod(const double &non_allocated_fed_election_activity_period) {
    m_non_allocated_fed_election_activity_period = non_allocated_fed_election_activity_period;
    m_non_allocated_fed_election_activity_period_isSet = true;
}

bool OAICommitteeReports::is_non_allocated_fed_election_activity_period_Set() const{
    return m_non_allocated_fed_election_activity_period_isSet;
}

bool OAICommitteeReports::is_non_allocated_fed_election_activity_period_Valid() const{
    return m_non_allocated_fed_election_activity_period_isValid;
}

double OAICommitteeReports::getNonAllocatedFedElectionActivityYtd() const {
    return m_non_allocated_fed_election_activity_ytd;
}
void OAICommitteeReports::setNonAllocatedFedElectionActivityYtd(const double &non_allocated_fed_election_activity_ytd) {
    m_non_allocated_fed_election_activity_ytd = non_allocated_fed_election_activity_ytd;
    m_non_allocated_fed_election_activity_ytd_isSet = true;
}

bool OAICommitteeReports::is_non_allocated_fed_election_activity_ytd_Set() const{
    return m_non_allocated_fed_election_activity_ytd_isSet;
}

bool OAICommitteeReports::is_non_allocated_fed_election_activity_ytd_Valid() const{
    return m_non_allocated_fed_election_activity_ytd_isValid;
}

double OAICommitteeReports::getNonfedShareAllocatedDisbursementsPeriod() const {
    return m_nonfed_share_allocated_disbursements_period;
}
void OAICommitteeReports::setNonfedShareAllocatedDisbursementsPeriod(const double &nonfed_share_allocated_disbursements_period) {
    m_nonfed_share_allocated_disbursements_period = nonfed_share_allocated_disbursements_period;
    m_nonfed_share_allocated_disbursements_period_isSet = true;
}

bool OAICommitteeReports::is_nonfed_share_allocated_disbursements_period_Set() const{
    return m_nonfed_share_allocated_disbursements_period_isSet;
}

bool OAICommitteeReports::is_nonfed_share_allocated_disbursements_period_Valid() const{
    return m_nonfed_share_allocated_disbursements_period_isValid;
}

double OAICommitteeReports::getOffsetsToFundraisingExpendituresPeriod() const {
    return m_offsets_to_fundraising_expenditures_period;
}
void OAICommitteeReports::setOffsetsToFundraisingExpendituresPeriod(const double &offsets_to_fundraising_expenditures_period) {
    m_offsets_to_fundraising_expenditures_period = offsets_to_fundraising_expenditures_period;
    m_offsets_to_fundraising_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_fundraising_expenditures_period_Set() const{
    return m_offsets_to_fundraising_expenditures_period_isSet;
}

bool OAICommitteeReports::is_offsets_to_fundraising_expenditures_period_Valid() const{
    return m_offsets_to_fundraising_expenditures_period_isValid;
}

double OAICommitteeReports::getOffsetsToFundraisingExpendituresYtd() const {
    return m_offsets_to_fundraising_expenditures_ytd;
}
void OAICommitteeReports::setOffsetsToFundraisingExpendituresYtd(const double &offsets_to_fundraising_expenditures_ytd) {
    m_offsets_to_fundraising_expenditures_ytd = offsets_to_fundraising_expenditures_ytd;
    m_offsets_to_fundraising_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_fundraising_expenditures_ytd_Set() const{
    return m_offsets_to_fundraising_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_offsets_to_fundraising_expenditures_ytd_Valid() const{
    return m_offsets_to_fundraising_expenditures_ytd_isValid;
}

double OAICommitteeReports::getOffsetsToLegalAccountingPeriod() const {
    return m_offsets_to_legal_accounting_period;
}
void OAICommitteeReports::setOffsetsToLegalAccountingPeriod(const double &offsets_to_legal_accounting_period) {
    m_offsets_to_legal_accounting_period = offsets_to_legal_accounting_period;
    m_offsets_to_legal_accounting_period_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_legal_accounting_period_Set() const{
    return m_offsets_to_legal_accounting_period_isSet;
}

bool OAICommitteeReports::is_offsets_to_legal_accounting_period_Valid() const{
    return m_offsets_to_legal_accounting_period_isValid;
}

double OAICommitteeReports::getOffsetsToLegalAccountingYtd() const {
    return m_offsets_to_legal_accounting_ytd;
}
void OAICommitteeReports::setOffsetsToLegalAccountingYtd(const double &offsets_to_legal_accounting_ytd) {
    m_offsets_to_legal_accounting_ytd = offsets_to_legal_accounting_ytd;
    m_offsets_to_legal_accounting_ytd_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_legal_accounting_ytd_Set() const{
    return m_offsets_to_legal_accounting_ytd_isSet;
}

bool OAICommitteeReports::is_offsets_to_legal_accounting_ytd_Valid() const{
    return m_offsets_to_legal_accounting_ytd_isValid;
}

double OAICommitteeReports::getOffsetsToOperatingExpendituresPeriod() const {
    return m_offsets_to_operating_expenditures_period;
}
void OAICommitteeReports::setOffsetsToOperatingExpendituresPeriod(const double &offsets_to_operating_expenditures_period) {
    m_offsets_to_operating_expenditures_period = offsets_to_operating_expenditures_period;
    m_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_operating_expenditures_period_Set() const{
    return m_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_offsets_to_operating_expenditures_period_Valid() const{
    return m_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getOffsetsToOperatingExpendituresYtd() const {
    return m_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReports::setOffsetsToOperatingExpendituresYtd(const double &offsets_to_operating_expenditures_ytd) {
    m_offsets_to_operating_expenditures_ytd = offsets_to_operating_expenditures_ytd;
    m_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_offsets_to_operating_expenditures_ytd_Set() const{
    return m_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getOperatingExpendituresPeriod() const {
    return m_operating_expenditures_period;
}
void OAICommitteeReports::setOperatingExpendituresPeriod(const double &operating_expenditures_period) {
    m_operating_expenditures_period = operating_expenditures_period;
    m_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_operating_expenditures_period_Set() const{
    return m_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_operating_expenditures_period_Valid() const{
    return m_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getOperatingExpendituresYtd() const {
    return m_operating_expenditures_ytd;
}
void OAICommitteeReports::setOperatingExpendituresYtd(const double &operating_expenditures_ytd) {
    m_operating_expenditures_ytd = operating_expenditures_ytd;
    m_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_operating_expenditures_ytd_Set() const{
    return m_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_operating_expenditures_ytd_Valid() const{
    return m_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getOtherDisbursementsPeriod() const {
    return m_other_disbursements_period;
}
void OAICommitteeReports::setOtherDisbursementsPeriod(const double &other_disbursements_period) {
    m_other_disbursements_period = other_disbursements_period;
    m_other_disbursements_period_isSet = true;
}

bool OAICommitteeReports::is_other_disbursements_period_Set() const{
    return m_other_disbursements_period_isSet;
}

bool OAICommitteeReports::is_other_disbursements_period_Valid() const{
    return m_other_disbursements_period_isValid;
}

double OAICommitteeReports::getOtherDisbursementsYtd() const {
    return m_other_disbursements_ytd;
}
void OAICommitteeReports::setOtherDisbursementsYtd(const double &other_disbursements_ytd) {
    m_other_disbursements_ytd = other_disbursements_ytd;
    m_other_disbursements_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_disbursements_ytd_Set() const{
    return m_other_disbursements_ytd_isSet;
}

bool OAICommitteeReports::is_other_disbursements_ytd_Valid() const{
    return m_other_disbursements_ytd_isValid;
}

double OAICommitteeReports::getOtherFedOperatingExpendituresPeriod() const {
    return m_other_fed_operating_expenditures_period;
}
void OAICommitteeReports::setOtherFedOperatingExpendituresPeriod(const double &other_fed_operating_expenditures_period) {
    m_other_fed_operating_expenditures_period = other_fed_operating_expenditures_period;
    m_other_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_other_fed_operating_expenditures_period_Set() const{
    return m_other_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_other_fed_operating_expenditures_period_Valid() const{
    return m_other_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getOtherFedOperatingExpendituresYtd() const {
    return m_other_fed_operating_expenditures_ytd;
}
void OAICommitteeReports::setOtherFedOperatingExpendituresYtd(const double &other_fed_operating_expenditures_ytd) {
    m_other_fed_operating_expenditures_ytd = other_fed_operating_expenditures_ytd;
    m_other_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_fed_operating_expenditures_ytd_Set() const{
    return m_other_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_other_fed_operating_expenditures_ytd_Valid() const{
    return m_other_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getOtherFedReceiptsPeriod() const {
    return m_other_fed_receipts_period;
}
void OAICommitteeReports::setOtherFedReceiptsPeriod(const double &other_fed_receipts_period) {
    m_other_fed_receipts_period = other_fed_receipts_period;
    m_other_fed_receipts_period_isSet = true;
}

bool OAICommitteeReports::is_other_fed_receipts_period_Set() const{
    return m_other_fed_receipts_period_isSet;
}

bool OAICommitteeReports::is_other_fed_receipts_period_Valid() const{
    return m_other_fed_receipts_period_isValid;
}

double OAICommitteeReports::getOtherFedReceiptsYtd() const {
    return m_other_fed_receipts_ytd;
}
void OAICommitteeReports::setOtherFedReceiptsYtd(const double &other_fed_receipts_ytd) {
    m_other_fed_receipts_ytd = other_fed_receipts_ytd;
    m_other_fed_receipts_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_fed_receipts_ytd_Set() const{
    return m_other_fed_receipts_ytd_isSet;
}

bool OAICommitteeReports::is_other_fed_receipts_ytd_Valid() const{
    return m_other_fed_receipts_ytd_isValid;
}

double OAICommitteeReports::getOtherLoansReceivedPeriod() const {
    return m_other_loans_received_period;
}
void OAICommitteeReports::setOtherLoansReceivedPeriod(const double &other_loans_received_period) {
    m_other_loans_received_period = other_loans_received_period;
    m_other_loans_received_period_isSet = true;
}

bool OAICommitteeReports::is_other_loans_received_period_Set() const{
    return m_other_loans_received_period_isSet;
}

bool OAICommitteeReports::is_other_loans_received_period_Valid() const{
    return m_other_loans_received_period_isValid;
}

double OAICommitteeReports::getOtherLoansReceivedYtd() const {
    return m_other_loans_received_ytd;
}
void OAICommitteeReports::setOtherLoansReceivedYtd(const double &other_loans_received_ytd) {
    m_other_loans_received_ytd = other_loans_received_ytd;
    m_other_loans_received_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_loans_received_ytd_Set() const{
    return m_other_loans_received_ytd_isSet;
}

bool OAICommitteeReports::is_other_loans_received_ytd_Valid() const{
    return m_other_loans_received_ytd_isValid;
}

double OAICommitteeReports::getOtherPoliticalCommitteeContributionsPeriod() const {
    return m_other_political_committee_contributions_period;
}
void OAICommitteeReports::setOtherPoliticalCommitteeContributionsPeriod(const double &other_political_committee_contributions_period) {
    m_other_political_committee_contributions_period = other_political_committee_contributions_period;
    m_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_other_political_committee_contributions_period_Set() const{
    return m_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReports::is_other_political_committee_contributions_period_Valid() const{
    return m_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReports::getOtherPoliticalCommitteeContributionsYtd() const {
    return m_other_political_committee_contributions_ytd;
}
void OAICommitteeReports::setOtherPoliticalCommitteeContributionsYtd(const double &other_political_committee_contributions_ytd) {
    m_other_political_committee_contributions_ytd = other_political_committee_contributions_ytd;
    m_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_political_committee_contributions_ytd_Set() const{
    return m_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_other_political_committee_contributions_ytd_Valid() const{
    return m_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReports::getOtherReceiptsPeriod() const {
    return m_other_receipts_period;
}
void OAICommitteeReports::setOtherReceiptsPeriod(const double &other_receipts_period) {
    m_other_receipts_period = other_receipts_period;
    m_other_receipts_period_isSet = true;
}

bool OAICommitteeReports::is_other_receipts_period_Set() const{
    return m_other_receipts_period_isSet;
}

bool OAICommitteeReports::is_other_receipts_period_Valid() const{
    return m_other_receipts_period_isValid;
}

double OAICommitteeReports::getOtherReceiptsYtd() const {
    return m_other_receipts_ytd;
}
void OAICommitteeReports::setOtherReceiptsYtd(const double &other_receipts_ytd) {
    m_other_receipts_ytd = other_receipts_ytd;
    m_other_receipts_ytd_isSet = true;
}

bool OAICommitteeReports::is_other_receipts_ytd_Set() const{
    return m_other_receipts_ytd_isSet;
}

bool OAICommitteeReports::is_other_receipts_ytd_Valid() const{
    return m_other_receipts_ytd_isValid;
}

QString OAICommitteeReports::getPdfUrl() const {
    return m_pdf_url;
}
void OAICommitteeReports::setPdfUrl(const QString &pdf_url) {
    m_pdf_url = pdf_url;
    m_pdf_url_isSet = true;
}

bool OAICommitteeReports::is_pdf_url_Set() const{
    return m_pdf_url_isSet;
}

bool OAICommitteeReports::is_pdf_url_Valid() const{
    return m_pdf_url_isValid;
}

double OAICommitteeReports::getPoliticalPartyCommitteeContributionsPeriod() const {
    return m_political_party_committee_contributions_period;
}
void OAICommitteeReports::setPoliticalPartyCommitteeContributionsPeriod(const double &political_party_committee_contributions_period) {
    m_political_party_committee_contributions_period = political_party_committee_contributions_period;
    m_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_political_party_committee_contributions_period_Set() const{
    return m_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReports::is_political_party_committee_contributions_period_Valid() const{
    return m_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReports::getPoliticalPartyCommitteeContributionsYtd() const {
    return m_political_party_committee_contributions_ytd;
}
void OAICommitteeReports::setPoliticalPartyCommitteeContributionsYtd(const double &political_party_committee_contributions_ytd) {
    m_political_party_committee_contributions_ytd = political_party_committee_contributions_ytd;
    m_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_political_party_committee_contributions_ytd_Set() const{
    return m_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_political_party_committee_contributions_ytd_Valid() const{
    return m_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReports::getPreviousFileNumber() const {
    return m_previous_file_number;
}
void OAICommitteeReports::setPreviousFileNumber(const double &previous_file_number) {
    m_previous_file_number = previous_file_number;
    m_previous_file_number_isSet = true;
}

bool OAICommitteeReports::is_previous_file_number_Set() const{
    return m_previous_file_number_isSet;
}

bool OAICommitteeReports::is_previous_file_number_Valid() const{
    return m_previous_file_number_isValid;
}

QDate OAICommitteeReports::getReceiptDate() const {
    return m_receipt_date;
}
void OAICommitteeReports::setReceiptDate(const QDate &receipt_date) {
    m_receipt_date = receipt_date;
    m_receipt_date_isSet = true;
}

bool OAICommitteeReports::is_receipt_date_Set() const{
    return m_receipt_date_isSet;
}

bool OAICommitteeReports::is_receipt_date_Valid() const{
    return m_receipt_date_isValid;
}

double OAICommitteeReports::getRefundedIndividualContributionsPeriod() const {
    return m_refunded_individual_contributions_period;
}
void OAICommitteeReports::setRefundedIndividualContributionsPeriod(const double &refunded_individual_contributions_period) {
    m_refunded_individual_contributions_period = refunded_individual_contributions_period;
    m_refunded_individual_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_refunded_individual_contributions_period_Set() const{
    return m_refunded_individual_contributions_period_isSet;
}

bool OAICommitteeReports::is_refunded_individual_contributions_period_Valid() const{
    return m_refunded_individual_contributions_period_isValid;
}

double OAICommitteeReports::getRefundedIndividualContributionsYtd() const {
    return m_refunded_individual_contributions_ytd;
}
void OAICommitteeReports::setRefundedIndividualContributionsYtd(const double &refunded_individual_contributions_ytd) {
    m_refunded_individual_contributions_ytd = refunded_individual_contributions_ytd;
    m_refunded_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_refunded_individual_contributions_ytd_Set() const{
    return m_refunded_individual_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_refunded_individual_contributions_ytd_Valid() const{
    return m_refunded_individual_contributions_ytd_isValid;
}

double OAICommitteeReports::getRefundedOtherPoliticalCommitteeContributionsPeriod() const {
    return m_refunded_other_political_committee_contributions_period;
}
void OAICommitteeReports::setRefundedOtherPoliticalCommitteeContributionsPeriod(const double &refunded_other_political_committee_contributions_period) {
    m_refunded_other_political_committee_contributions_period = refunded_other_political_committee_contributions_period;
    m_refunded_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_refunded_other_political_committee_contributions_period_Set() const{
    return m_refunded_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReports::is_refunded_other_political_committee_contributions_period_Valid() const{
    return m_refunded_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReports::getRefundedOtherPoliticalCommitteeContributionsYtd() const {
    return m_refunded_other_political_committee_contributions_ytd;
}
void OAICommitteeReports::setRefundedOtherPoliticalCommitteeContributionsYtd(const double &refunded_other_political_committee_contributions_ytd) {
    m_refunded_other_political_committee_contributions_ytd = refunded_other_political_committee_contributions_ytd;
    m_refunded_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_refunded_other_political_committee_contributions_ytd_Set() const{
    return m_refunded_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_refunded_other_political_committee_contributions_ytd_Valid() const{
    return m_refunded_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReports::getRefundedPoliticalPartyCommitteeContributionsPeriod() const {
    return m_refunded_political_party_committee_contributions_period;
}
void OAICommitteeReports::setRefundedPoliticalPartyCommitteeContributionsPeriod(const double &refunded_political_party_committee_contributions_period) {
    m_refunded_political_party_committee_contributions_period = refunded_political_party_committee_contributions_period;
    m_refunded_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_refunded_political_party_committee_contributions_period_Set() const{
    return m_refunded_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReports::is_refunded_political_party_committee_contributions_period_Valid() const{
    return m_refunded_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReports::getRefundedPoliticalPartyCommitteeContributionsYtd() const {
    return m_refunded_political_party_committee_contributions_ytd;
}
void OAICommitteeReports::setRefundedPoliticalPartyCommitteeContributionsYtd(const double &refunded_political_party_committee_contributions_ytd) {
    m_refunded_political_party_committee_contributions_ytd = refunded_political_party_committee_contributions_ytd;
    m_refunded_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_refunded_political_party_committee_contributions_ytd_Set() const{
    return m_refunded_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_refunded_political_party_committee_contributions_ytd_Valid() const{
    return m_refunded_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReports::getRefundsTotalContributionsColTotalYtd() const {
    return m_refunds_total_contributions_col_total_ytd;
}
void OAICommitteeReports::setRefundsTotalContributionsColTotalYtd(const double &refunds_total_contributions_col_total_ytd) {
    m_refunds_total_contributions_col_total_ytd = refunds_total_contributions_col_total_ytd;
    m_refunds_total_contributions_col_total_ytd_isSet = true;
}

bool OAICommitteeReports::is_refunds_total_contributions_col_total_ytd_Set() const{
    return m_refunds_total_contributions_col_total_ytd_isSet;
}

bool OAICommitteeReports::is_refunds_total_contributions_col_total_ytd_Valid() const{
    return m_refunds_total_contributions_col_total_ytd_isValid;
}

double OAICommitteeReports::getRepaymentsLoansMadeByCandidatePeriod() const {
    return m_repayments_loans_made_by_candidate_period;
}
void OAICommitteeReports::setRepaymentsLoansMadeByCandidatePeriod(const double &repayments_loans_made_by_candidate_period) {
    m_repayments_loans_made_by_candidate_period = repayments_loans_made_by_candidate_period;
    m_repayments_loans_made_by_candidate_period_isSet = true;
}

bool OAICommitteeReports::is_repayments_loans_made_by_candidate_period_Set() const{
    return m_repayments_loans_made_by_candidate_period_isSet;
}

bool OAICommitteeReports::is_repayments_loans_made_by_candidate_period_Valid() const{
    return m_repayments_loans_made_by_candidate_period_isValid;
}

double OAICommitteeReports::getRepaymentsLoansMadeCandidateYtd() const {
    return m_repayments_loans_made_candidate_ytd;
}
void OAICommitteeReports::setRepaymentsLoansMadeCandidateYtd(const double &repayments_loans_made_candidate_ytd) {
    m_repayments_loans_made_candidate_ytd = repayments_loans_made_candidate_ytd;
    m_repayments_loans_made_candidate_ytd_isSet = true;
}

bool OAICommitteeReports::is_repayments_loans_made_candidate_ytd_Set() const{
    return m_repayments_loans_made_candidate_ytd_isSet;
}

bool OAICommitteeReports::is_repayments_loans_made_candidate_ytd_Valid() const{
    return m_repayments_loans_made_candidate_ytd_isValid;
}

double OAICommitteeReports::getRepaymentsOtherLoansPeriod() const {
    return m_repayments_other_loans_period;
}
void OAICommitteeReports::setRepaymentsOtherLoansPeriod(const double &repayments_other_loans_period) {
    m_repayments_other_loans_period = repayments_other_loans_period;
    m_repayments_other_loans_period_isSet = true;
}

bool OAICommitteeReports::is_repayments_other_loans_period_Set() const{
    return m_repayments_other_loans_period_isSet;
}

bool OAICommitteeReports::is_repayments_other_loans_period_Valid() const{
    return m_repayments_other_loans_period_isValid;
}

double OAICommitteeReports::getRepaymentsOtherLoansYtd() const {
    return m_repayments_other_loans_ytd;
}
void OAICommitteeReports::setRepaymentsOtherLoansYtd(const double &repayments_other_loans_ytd) {
    m_repayments_other_loans_ytd = repayments_other_loans_ytd;
    m_repayments_other_loans_ytd_isSet = true;
}

bool OAICommitteeReports::is_repayments_other_loans_ytd_Set() const{
    return m_repayments_other_loans_ytd_isSet;
}

bool OAICommitteeReports::is_repayments_other_loans_ytd_Valid() const{
    return m_repayments_other_loans_ytd_isValid;
}

QString OAICommitteeReports::getReportForm() const {
    return m_report_form;
}
void OAICommitteeReports::setReportForm(const QString &report_form) {
    m_report_form = report_form;
    m_report_form_isSet = true;
}

bool OAICommitteeReports::is_report_form_Set() const{
    return m_report_form_isSet;
}

bool OAICommitteeReports::is_report_form_Valid() const{
    return m_report_form_isValid;
}

QString OAICommitteeReports::getReportType() const {
    return m_report_type;
}
void OAICommitteeReports::setReportType(const QString &report_type) {
    m_report_type = report_type;
    m_report_type_isSet = true;
}

bool OAICommitteeReports::is_report_type_Set() const{
    return m_report_type_isSet;
}

bool OAICommitteeReports::is_report_type_Valid() const{
    return m_report_type_isValid;
}

QString OAICommitteeReports::getReportTypeFull() const {
    return m_report_type_full;
}
void OAICommitteeReports::setReportTypeFull(const QString &report_type_full) {
    m_report_type_full = report_type_full;
    m_report_type_full_isSet = true;
}

bool OAICommitteeReports::is_report_type_full_Set() const{
    return m_report_type_full_isSet;
}

bool OAICommitteeReports::is_report_type_full_Valid() const{
    return m_report_type_full_isValid;
}

qint32 OAICommitteeReports::getReportYear() const {
    return m_report_year;
}
void OAICommitteeReports::setReportYear(const qint32 &report_year) {
    m_report_year = report_year;
    m_report_year_isSet = true;
}

bool OAICommitteeReports::is_report_year_Set() const{
    return m_report_year_isSet;
}

bool OAICommitteeReports::is_report_year_Valid() const{
    return m_report_year_isValid;
}

double OAICommitteeReports::getSharedFedActivityNonfedYtd() const {
    return m_shared_fed_activity_nonfed_ytd;
}
void OAICommitteeReports::setSharedFedActivityNonfedYtd(const double &shared_fed_activity_nonfed_ytd) {
    m_shared_fed_activity_nonfed_ytd = shared_fed_activity_nonfed_ytd;
    m_shared_fed_activity_nonfed_ytd_isSet = true;
}

bool OAICommitteeReports::is_shared_fed_activity_nonfed_ytd_Set() const{
    return m_shared_fed_activity_nonfed_ytd_isSet;
}

bool OAICommitteeReports::is_shared_fed_activity_nonfed_ytd_Valid() const{
    return m_shared_fed_activity_nonfed_ytd_isValid;
}

double OAICommitteeReports::getSharedFedActivityPeriod() const {
    return m_shared_fed_activity_period;
}
void OAICommitteeReports::setSharedFedActivityPeriod(const double &shared_fed_activity_period) {
    m_shared_fed_activity_period = shared_fed_activity_period;
    m_shared_fed_activity_period_isSet = true;
}

bool OAICommitteeReports::is_shared_fed_activity_period_Set() const{
    return m_shared_fed_activity_period_isSet;
}

bool OAICommitteeReports::is_shared_fed_activity_period_Valid() const{
    return m_shared_fed_activity_period_isValid;
}

double OAICommitteeReports::getSharedFedActivityYtd() const {
    return m_shared_fed_activity_ytd;
}
void OAICommitteeReports::setSharedFedActivityYtd(const double &shared_fed_activity_ytd) {
    m_shared_fed_activity_ytd = shared_fed_activity_ytd;
    m_shared_fed_activity_ytd_isSet = true;
}

bool OAICommitteeReports::is_shared_fed_activity_ytd_Set() const{
    return m_shared_fed_activity_ytd_isSet;
}

bool OAICommitteeReports::is_shared_fed_activity_ytd_Valid() const{
    return m_shared_fed_activity_ytd_isValid;
}

double OAICommitteeReports::getSharedFedOperatingExpendituresPeriod() const {
    return m_shared_fed_operating_expenditures_period;
}
void OAICommitteeReports::setSharedFedOperatingExpendituresPeriod(const double &shared_fed_operating_expenditures_period) {
    m_shared_fed_operating_expenditures_period = shared_fed_operating_expenditures_period;
    m_shared_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_shared_fed_operating_expenditures_period_Set() const{
    return m_shared_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_shared_fed_operating_expenditures_period_Valid() const{
    return m_shared_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getSharedFedOperatingExpendituresYtd() const {
    return m_shared_fed_operating_expenditures_ytd;
}
void OAICommitteeReports::setSharedFedOperatingExpendituresYtd(const double &shared_fed_operating_expenditures_ytd) {
    m_shared_fed_operating_expenditures_ytd = shared_fed_operating_expenditures_ytd;
    m_shared_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_shared_fed_operating_expenditures_ytd_Set() const{
    return m_shared_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_shared_fed_operating_expenditures_ytd_Valid() const{
    return m_shared_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getSharedNonfedOperatingExpendituresPeriod() const {
    return m_shared_nonfed_operating_expenditures_period;
}
void OAICommitteeReports::setSharedNonfedOperatingExpendituresPeriod(const double &shared_nonfed_operating_expenditures_period) {
    m_shared_nonfed_operating_expenditures_period = shared_nonfed_operating_expenditures_period;
    m_shared_nonfed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_shared_nonfed_operating_expenditures_period_Set() const{
    return m_shared_nonfed_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_shared_nonfed_operating_expenditures_period_Valid() const{
    return m_shared_nonfed_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getSharedNonfedOperatingExpendituresYtd() const {
    return m_shared_nonfed_operating_expenditures_ytd;
}
void OAICommitteeReports::setSharedNonfedOperatingExpendituresYtd(const double &shared_nonfed_operating_expenditures_ytd) {
    m_shared_nonfed_operating_expenditures_ytd = shared_nonfed_operating_expenditures_ytd;
    m_shared_nonfed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_shared_nonfed_operating_expenditures_ytd_Set() const{
    return m_shared_nonfed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_shared_nonfed_operating_expenditures_ytd_Valid() const{
    return m_shared_nonfed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getSubtotalPeriod() const {
    return m_subtotal_period;
}
void OAICommitteeReports::setSubtotalPeriod(const double &subtotal_period) {
    m_subtotal_period = subtotal_period;
    m_subtotal_period_isSet = true;
}

bool OAICommitteeReports::is_subtotal_period_Set() const{
    return m_subtotal_period_isSet;
}

bool OAICommitteeReports::is_subtotal_period_Valid() const{
    return m_subtotal_period_isValid;
}

double OAICommitteeReports::getSubtotalSummaryPagePeriod() const {
    return m_subtotal_summary_page_period;
}
void OAICommitteeReports::setSubtotalSummaryPagePeriod(const double &subtotal_summary_page_period) {
    m_subtotal_summary_page_period = subtotal_summary_page_period;
    m_subtotal_summary_page_period_isSet = true;
}

bool OAICommitteeReports::is_subtotal_summary_page_period_Set() const{
    return m_subtotal_summary_page_period_isSet;
}

bool OAICommitteeReports::is_subtotal_summary_page_period_Valid() const{
    return m_subtotal_summary_page_period_isValid;
}

double OAICommitteeReports::getSubtotalSummaryPeriod() const {
    return m_subtotal_summary_period;
}
void OAICommitteeReports::setSubtotalSummaryPeriod(const double &subtotal_summary_period) {
    m_subtotal_summary_period = subtotal_summary_period;
    m_subtotal_summary_period_isSet = true;
}

bool OAICommitteeReports::is_subtotal_summary_period_Set() const{
    return m_subtotal_summary_period_isSet;
}

bool OAICommitteeReports::is_subtotal_summary_period_Valid() const{
    return m_subtotal_summary_period_isValid;
}

double OAICommitteeReports::getSubtotalSummaryYtd() const {
    return m_subtotal_summary_ytd;
}
void OAICommitteeReports::setSubtotalSummaryYtd(const double &subtotal_summary_ytd) {
    m_subtotal_summary_ytd = subtotal_summary_ytd;
    m_subtotal_summary_ytd_isSet = true;
}

bool OAICommitteeReports::is_subtotal_summary_ytd_Set() const{
    return m_subtotal_summary_ytd_isSet;
}

bool OAICommitteeReports::is_subtotal_summary_ytd_Valid() const{
    return m_subtotal_summary_ytd_isValid;
}

double OAICommitteeReports::getTotalContributionRefundsColTotalPeriod() const {
    return m_total_contribution_refunds_col_total_period;
}
void OAICommitteeReports::setTotalContributionRefundsColTotalPeriod(const double &total_contribution_refunds_col_total_period) {
    m_total_contribution_refunds_col_total_period = total_contribution_refunds_col_total_period;
    m_total_contribution_refunds_col_total_period_isSet = true;
}

bool OAICommitteeReports::is_total_contribution_refunds_col_total_period_Set() const{
    return m_total_contribution_refunds_col_total_period_isSet;
}

bool OAICommitteeReports::is_total_contribution_refunds_col_total_period_Valid() const{
    return m_total_contribution_refunds_col_total_period_isValid;
}

double OAICommitteeReports::getTotalContributionRefundsPeriod() const {
    return m_total_contribution_refunds_period;
}
void OAICommitteeReports::setTotalContributionRefundsPeriod(const double &total_contribution_refunds_period) {
    m_total_contribution_refunds_period = total_contribution_refunds_period;
    m_total_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReports::is_total_contribution_refunds_period_Set() const{
    return m_total_contribution_refunds_period_isSet;
}

bool OAICommitteeReports::is_total_contribution_refunds_period_Valid() const{
    return m_total_contribution_refunds_period_isValid;
}

double OAICommitteeReports::getTotalContributionRefundsYtd() const {
    return m_total_contribution_refunds_ytd;
}
void OAICommitteeReports::setTotalContributionRefundsYtd(const double &total_contribution_refunds_ytd) {
    m_total_contribution_refunds_ytd = total_contribution_refunds_ytd;
    m_total_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_contribution_refunds_ytd_Set() const{
    return m_total_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReports::is_total_contribution_refunds_ytd_Valid() const{
    return m_total_contribution_refunds_ytd_isValid;
}

double OAICommitteeReports::getTotalContributionsColumnTotalPeriod() const {
    return m_total_contributions_column_total_period;
}
void OAICommitteeReports::setTotalContributionsColumnTotalPeriod(const double &total_contributions_column_total_period) {
    m_total_contributions_column_total_period = total_contributions_column_total_period;
    m_total_contributions_column_total_period_isSet = true;
}

bool OAICommitteeReports::is_total_contributions_column_total_period_Set() const{
    return m_total_contributions_column_total_period_isSet;
}

bool OAICommitteeReports::is_total_contributions_column_total_period_Valid() const{
    return m_total_contributions_column_total_period_isValid;
}

double OAICommitteeReports::getTotalContributionsPeriod() const {
    return m_total_contributions_period;
}
void OAICommitteeReports::setTotalContributionsPeriod(const double &total_contributions_period) {
    m_total_contributions_period = total_contributions_period;
    m_total_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_total_contributions_period_Set() const{
    return m_total_contributions_period_isSet;
}

bool OAICommitteeReports::is_total_contributions_period_Valid() const{
    return m_total_contributions_period_isValid;
}

double OAICommitteeReports::getTotalContributionsYtd() const {
    return m_total_contributions_ytd;
}
void OAICommitteeReports::setTotalContributionsYtd(const double &total_contributions_ytd) {
    m_total_contributions_ytd = total_contributions_ytd;
    m_total_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_contributions_ytd_Set() const{
    return m_total_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_total_contributions_ytd_Valid() const{
    return m_total_contributions_ytd_isValid;
}

double OAICommitteeReports::getTotalDisbursementsPeriod() const {
    return m_total_disbursements_period;
}
void OAICommitteeReports::setTotalDisbursementsPeriod(const double &total_disbursements_period) {
    m_total_disbursements_period = total_disbursements_period;
    m_total_disbursements_period_isSet = true;
}

bool OAICommitteeReports::is_total_disbursements_period_Set() const{
    return m_total_disbursements_period_isSet;
}

bool OAICommitteeReports::is_total_disbursements_period_Valid() const{
    return m_total_disbursements_period_isValid;
}

double OAICommitteeReports::getTotalDisbursementsYtd() const {
    return m_total_disbursements_ytd;
}
void OAICommitteeReports::setTotalDisbursementsYtd(const double &total_disbursements_ytd) {
    m_total_disbursements_ytd = total_disbursements_ytd;
    m_total_disbursements_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_disbursements_ytd_Set() const{
    return m_total_disbursements_ytd_isSet;
}

bool OAICommitteeReports::is_total_disbursements_ytd_Valid() const{
    return m_total_disbursements_ytd_isValid;
}

double OAICommitteeReports::getTotalFedDisbursementsPeriod() const {
    return m_total_fed_disbursements_period;
}
void OAICommitteeReports::setTotalFedDisbursementsPeriod(const double &total_fed_disbursements_period) {
    m_total_fed_disbursements_period = total_fed_disbursements_period;
    m_total_fed_disbursements_period_isSet = true;
}

bool OAICommitteeReports::is_total_fed_disbursements_period_Set() const{
    return m_total_fed_disbursements_period_isSet;
}

bool OAICommitteeReports::is_total_fed_disbursements_period_Valid() const{
    return m_total_fed_disbursements_period_isValid;
}

double OAICommitteeReports::getTotalFedDisbursementsYtd() const {
    return m_total_fed_disbursements_ytd;
}
void OAICommitteeReports::setTotalFedDisbursementsYtd(const double &total_fed_disbursements_ytd) {
    m_total_fed_disbursements_ytd = total_fed_disbursements_ytd;
    m_total_fed_disbursements_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_fed_disbursements_ytd_Set() const{
    return m_total_fed_disbursements_ytd_isSet;
}

bool OAICommitteeReports::is_total_fed_disbursements_ytd_Valid() const{
    return m_total_fed_disbursements_ytd_isValid;
}

double OAICommitteeReports::getTotalFedElectionActivityPeriod() const {
    return m_total_fed_election_activity_period;
}
void OAICommitteeReports::setTotalFedElectionActivityPeriod(const double &total_fed_election_activity_period) {
    m_total_fed_election_activity_period = total_fed_election_activity_period;
    m_total_fed_election_activity_period_isSet = true;
}

bool OAICommitteeReports::is_total_fed_election_activity_period_Set() const{
    return m_total_fed_election_activity_period_isSet;
}

bool OAICommitteeReports::is_total_fed_election_activity_period_Valid() const{
    return m_total_fed_election_activity_period_isValid;
}

double OAICommitteeReports::getTotalFedElectionActivityYtd() const {
    return m_total_fed_election_activity_ytd;
}
void OAICommitteeReports::setTotalFedElectionActivityYtd(const double &total_fed_election_activity_ytd) {
    m_total_fed_election_activity_ytd = total_fed_election_activity_ytd;
    m_total_fed_election_activity_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_fed_election_activity_ytd_Set() const{
    return m_total_fed_election_activity_ytd_isSet;
}

bool OAICommitteeReports::is_total_fed_election_activity_ytd_Valid() const{
    return m_total_fed_election_activity_ytd_isValid;
}

double OAICommitteeReports::getTotalFedOperatingExpendituresPeriod() const {
    return m_total_fed_operating_expenditures_period;
}
void OAICommitteeReports::setTotalFedOperatingExpendituresPeriod(const double &total_fed_operating_expenditures_period) {
    m_total_fed_operating_expenditures_period = total_fed_operating_expenditures_period;
    m_total_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_total_fed_operating_expenditures_period_Set() const{
    return m_total_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_total_fed_operating_expenditures_period_Valid() const{
    return m_total_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getTotalFedOperatingExpendituresYtd() const {
    return m_total_fed_operating_expenditures_ytd;
}
void OAICommitteeReports::setTotalFedOperatingExpendituresYtd(const double &total_fed_operating_expenditures_ytd) {
    m_total_fed_operating_expenditures_ytd = total_fed_operating_expenditures_ytd;
    m_total_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_fed_operating_expenditures_ytd_Set() const{
    return m_total_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_total_fed_operating_expenditures_ytd_Valid() const{
    return m_total_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getTotalFedReceiptsPeriod() const {
    return m_total_fed_receipts_period;
}
void OAICommitteeReports::setTotalFedReceiptsPeriod(const double &total_fed_receipts_period) {
    m_total_fed_receipts_period = total_fed_receipts_period;
    m_total_fed_receipts_period_isSet = true;
}

bool OAICommitteeReports::is_total_fed_receipts_period_Set() const{
    return m_total_fed_receipts_period_isSet;
}

bool OAICommitteeReports::is_total_fed_receipts_period_Valid() const{
    return m_total_fed_receipts_period_isValid;
}

double OAICommitteeReports::getTotalFedReceiptsYtd() const {
    return m_total_fed_receipts_ytd;
}
void OAICommitteeReports::setTotalFedReceiptsYtd(const double &total_fed_receipts_ytd) {
    m_total_fed_receipts_ytd = total_fed_receipts_ytd;
    m_total_fed_receipts_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_fed_receipts_ytd_Set() const{
    return m_total_fed_receipts_ytd_isSet;
}

bool OAICommitteeReports::is_total_fed_receipts_ytd_Valid() const{
    return m_total_fed_receipts_ytd_isValid;
}

double OAICommitteeReports::getTotalIndividualContributionsPeriod() const {
    return m_total_individual_contributions_period;
}
void OAICommitteeReports::setTotalIndividualContributionsPeriod(const double &total_individual_contributions_period) {
    m_total_individual_contributions_period = total_individual_contributions_period;
    m_total_individual_contributions_period_isSet = true;
}

bool OAICommitteeReports::is_total_individual_contributions_period_Set() const{
    return m_total_individual_contributions_period_isSet;
}

bool OAICommitteeReports::is_total_individual_contributions_period_Valid() const{
    return m_total_individual_contributions_period_isValid;
}

double OAICommitteeReports::getTotalIndividualContributionsYtd() const {
    return m_total_individual_contributions_ytd;
}
void OAICommitteeReports::setTotalIndividualContributionsYtd(const double &total_individual_contributions_ytd) {
    m_total_individual_contributions_ytd = total_individual_contributions_ytd;
    m_total_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_individual_contributions_ytd_Set() const{
    return m_total_individual_contributions_ytd_isSet;
}

bool OAICommitteeReports::is_total_individual_contributions_ytd_Valid() const{
    return m_total_individual_contributions_ytd_isValid;
}

double OAICommitteeReports::getTotalLoanRepaymentsMadePeriod() const {
    return m_total_loan_repayments_made_period;
}
void OAICommitteeReports::setTotalLoanRepaymentsMadePeriod(const double &total_loan_repayments_made_period) {
    m_total_loan_repayments_made_period = total_loan_repayments_made_period;
    m_total_loan_repayments_made_period_isSet = true;
}

bool OAICommitteeReports::is_total_loan_repayments_made_period_Set() const{
    return m_total_loan_repayments_made_period_isSet;
}

bool OAICommitteeReports::is_total_loan_repayments_made_period_Valid() const{
    return m_total_loan_repayments_made_period_isValid;
}

double OAICommitteeReports::getTotalLoanRepaymentsMadeYtd() const {
    return m_total_loan_repayments_made_ytd;
}
void OAICommitteeReports::setTotalLoanRepaymentsMadeYtd(const double &total_loan_repayments_made_ytd) {
    m_total_loan_repayments_made_ytd = total_loan_repayments_made_ytd;
    m_total_loan_repayments_made_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_loan_repayments_made_ytd_Set() const{
    return m_total_loan_repayments_made_ytd_isSet;
}

bool OAICommitteeReports::is_total_loan_repayments_made_ytd_Valid() const{
    return m_total_loan_repayments_made_ytd_isValid;
}

double OAICommitteeReports::getTotalLoansReceivedPeriod() const {
    return m_total_loans_received_period;
}
void OAICommitteeReports::setTotalLoansReceivedPeriod(const double &total_loans_received_period) {
    m_total_loans_received_period = total_loans_received_period;
    m_total_loans_received_period_isSet = true;
}

bool OAICommitteeReports::is_total_loans_received_period_Set() const{
    return m_total_loans_received_period_isSet;
}

bool OAICommitteeReports::is_total_loans_received_period_Valid() const{
    return m_total_loans_received_period_isValid;
}

double OAICommitteeReports::getTotalLoansReceivedYtd() const {
    return m_total_loans_received_ytd;
}
void OAICommitteeReports::setTotalLoansReceivedYtd(const double &total_loans_received_ytd) {
    m_total_loans_received_ytd = total_loans_received_ytd;
    m_total_loans_received_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_loans_received_ytd_Set() const{
    return m_total_loans_received_ytd_isSet;
}

bool OAICommitteeReports::is_total_loans_received_ytd_Valid() const{
    return m_total_loans_received_ytd_isValid;
}

double OAICommitteeReports::getTotalNonfedTransfersPeriod() const {
    return m_total_nonfed_transfers_period;
}
void OAICommitteeReports::setTotalNonfedTransfersPeriod(const double &total_nonfed_transfers_period) {
    m_total_nonfed_transfers_period = total_nonfed_transfers_period;
    m_total_nonfed_transfers_period_isSet = true;
}

bool OAICommitteeReports::is_total_nonfed_transfers_period_Set() const{
    return m_total_nonfed_transfers_period_isSet;
}

bool OAICommitteeReports::is_total_nonfed_transfers_period_Valid() const{
    return m_total_nonfed_transfers_period_isValid;
}

double OAICommitteeReports::getTotalNonfedTransfersYtd() const {
    return m_total_nonfed_transfers_ytd;
}
void OAICommitteeReports::setTotalNonfedTransfersYtd(const double &total_nonfed_transfers_ytd) {
    m_total_nonfed_transfers_ytd = total_nonfed_transfers_ytd;
    m_total_nonfed_transfers_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_nonfed_transfers_ytd_Set() const{
    return m_total_nonfed_transfers_ytd_isSet;
}

bool OAICommitteeReports::is_total_nonfed_transfers_ytd_Valid() const{
    return m_total_nonfed_transfers_ytd_isValid;
}

double OAICommitteeReports::getTotalOffsetsToOperatingExpendituresPeriod() const {
    return m_total_offsets_to_operating_expenditures_period;
}
void OAICommitteeReports::setTotalOffsetsToOperatingExpendituresPeriod(const double &total_offsets_to_operating_expenditures_period) {
    m_total_offsets_to_operating_expenditures_period = total_offsets_to_operating_expenditures_period;
    m_total_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_total_offsets_to_operating_expenditures_period_Set() const{
    return m_total_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_total_offsets_to_operating_expenditures_period_Valid() const{
    return m_total_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getTotalOffsetsToOperatingExpendituresYtd() const {
    return m_total_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReports::setTotalOffsetsToOperatingExpendituresYtd(const double &total_offsets_to_operating_expenditures_ytd) {
    m_total_offsets_to_operating_expenditures_ytd = total_offsets_to_operating_expenditures_ytd;
    m_total_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_offsets_to_operating_expenditures_ytd_Set() const{
    return m_total_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_total_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_total_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getTotalOperatingExpendituresPeriod() const {
    return m_total_operating_expenditures_period;
}
void OAICommitteeReports::setTotalOperatingExpendituresPeriod(const double &total_operating_expenditures_period) {
    m_total_operating_expenditures_period = total_operating_expenditures_period;
    m_total_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReports::is_total_operating_expenditures_period_Set() const{
    return m_total_operating_expenditures_period_isSet;
}

bool OAICommitteeReports::is_total_operating_expenditures_period_Valid() const{
    return m_total_operating_expenditures_period_isValid;
}

double OAICommitteeReports::getTotalOperatingExpendituresYtd() const {
    return m_total_operating_expenditures_ytd;
}
void OAICommitteeReports::setTotalOperatingExpendituresYtd(const double &total_operating_expenditures_ytd) {
    m_total_operating_expenditures_ytd = total_operating_expenditures_ytd;
    m_total_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_operating_expenditures_ytd_Set() const{
    return m_total_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReports::is_total_operating_expenditures_ytd_Valid() const{
    return m_total_operating_expenditures_ytd_isValid;
}

double OAICommitteeReports::getTotalPeriod() const {
    return m_total_period;
}
void OAICommitteeReports::setTotalPeriod(const double &total_period) {
    m_total_period = total_period;
    m_total_period_isSet = true;
}

bool OAICommitteeReports::is_total_period_Set() const{
    return m_total_period_isSet;
}

bool OAICommitteeReports::is_total_period_Valid() const{
    return m_total_period_isValid;
}

double OAICommitteeReports::getTotalReceiptsPeriod() const {
    return m_total_receipts_period;
}
void OAICommitteeReports::setTotalReceiptsPeriod(const double &total_receipts_period) {
    m_total_receipts_period = total_receipts_period;
    m_total_receipts_period_isSet = true;
}

bool OAICommitteeReports::is_total_receipts_period_Set() const{
    return m_total_receipts_period_isSet;
}

bool OAICommitteeReports::is_total_receipts_period_Valid() const{
    return m_total_receipts_period_isValid;
}

double OAICommitteeReports::getTotalReceiptsYtd() const {
    return m_total_receipts_ytd;
}
void OAICommitteeReports::setTotalReceiptsYtd(const double &total_receipts_ytd) {
    m_total_receipts_ytd = total_receipts_ytd;
    m_total_receipts_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_receipts_ytd_Set() const{
    return m_total_receipts_ytd_isSet;
}

bool OAICommitteeReports::is_total_receipts_ytd_Valid() const{
    return m_total_receipts_ytd_isValid;
}

double OAICommitteeReports::getTotalYtd() const {
    return m_total_ytd;
}
void OAICommitteeReports::setTotalYtd(const double &total_ytd) {
    m_total_ytd = total_ytd;
    m_total_ytd_isSet = true;
}

bool OAICommitteeReports::is_total_ytd_Set() const{
    return m_total_ytd_isSet;
}

bool OAICommitteeReports::is_total_ytd_Valid() const{
    return m_total_ytd_isValid;
}

double OAICommitteeReports::getTransfersFromAffiliatedCommitteePeriod() const {
    return m_transfers_from_affiliated_committee_period;
}
void OAICommitteeReports::setTransfersFromAffiliatedCommitteePeriod(const double &transfers_from_affiliated_committee_period) {
    m_transfers_from_affiliated_committee_period = transfers_from_affiliated_committee_period;
    m_transfers_from_affiliated_committee_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_affiliated_committee_period_Set() const{
    return m_transfers_from_affiliated_committee_period_isSet;
}

bool OAICommitteeReports::is_transfers_from_affiliated_committee_period_Valid() const{
    return m_transfers_from_affiliated_committee_period_isValid;
}

double OAICommitteeReports::getTransfersFromAffiliatedCommitteeYtd() const {
    return m_transfers_from_affiliated_committee_ytd;
}
void OAICommitteeReports::setTransfersFromAffiliatedCommitteeYtd(const double &transfers_from_affiliated_committee_ytd) {
    m_transfers_from_affiliated_committee_ytd = transfers_from_affiliated_committee_ytd;
    m_transfers_from_affiliated_committee_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_affiliated_committee_ytd_Set() const{
    return m_transfers_from_affiliated_committee_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_from_affiliated_committee_ytd_Valid() const{
    return m_transfers_from_affiliated_committee_ytd_isValid;
}

double OAICommitteeReports::getTransfersFromAffiliatedPartyPeriod() const {
    return m_transfers_from_affiliated_party_period;
}
void OAICommitteeReports::setTransfersFromAffiliatedPartyPeriod(const double &transfers_from_affiliated_party_period) {
    m_transfers_from_affiliated_party_period = transfers_from_affiliated_party_period;
    m_transfers_from_affiliated_party_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_affiliated_party_period_Set() const{
    return m_transfers_from_affiliated_party_period_isSet;
}

bool OAICommitteeReports::is_transfers_from_affiliated_party_period_Valid() const{
    return m_transfers_from_affiliated_party_period_isValid;
}

double OAICommitteeReports::getTransfersFromAffiliatedPartyYtd() const {
    return m_transfers_from_affiliated_party_ytd;
}
void OAICommitteeReports::setTransfersFromAffiliatedPartyYtd(const double &transfers_from_affiliated_party_ytd) {
    m_transfers_from_affiliated_party_ytd = transfers_from_affiliated_party_ytd;
    m_transfers_from_affiliated_party_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_affiliated_party_ytd_Set() const{
    return m_transfers_from_affiliated_party_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_from_affiliated_party_ytd_Valid() const{
    return m_transfers_from_affiliated_party_ytd_isValid;
}

double OAICommitteeReports::getTransfersFromNonfedAccountPeriod() const {
    return m_transfers_from_nonfed_account_period;
}
void OAICommitteeReports::setTransfersFromNonfedAccountPeriod(const double &transfers_from_nonfed_account_period) {
    m_transfers_from_nonfed_account_period = transfers_from_nonfed_account_period;
    m_transfers_from_nonfed_account_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_nonfed_account_period_Set() const{
    return m_transfers_from_nonfed_account_period_isSet;
}

bool OAICommitteeReports::is_transfers_from_nonfed_account_period_Valid() const{
    return m_transfers_from_nonfed_account_period_isValid;
}

double OAICommitteeReports::getTransfersFromNonfedAccountYtd() const {
    return m_transfers_from_nonfed_account_ytd;
}
void OAICommitteeReports::setTransfersFromNonfedAccountYtd(const double &transfers_from_nonfed_account_ytd) {
    m_transfers_from_nonfed_account_ytd = transfers_from_nonfed_account_ytd;
    m_transfers_from_nonfed_account_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_nonfed_account_ytd_Set() const{
    return m_transfers_from_nonfed_account_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_from_nonfed_account_ytd_Valid() const{
    return m_transfers_from_nonfed_account_ytd_isValid;
}

double OAICommitteeReports::getTransfersFromNonfedLevinPeriod() const {
    return m_transfers_from_nonfed_levin_period;
}
void OAICommitteeReports::setTransfersFromNonfedLevinPeriod(const double &transfers_from_nonfed_levin_period) {
    m_transfers_from_nonfed_levin_period = transfers_from_nonfed_levin_period;
    m_transfers_from_nonfed_levin_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_nonfed_levin_period_Set() const{
    return m_transfers_from_nonfed_levin_period_isSet;
}

bool OAICommitteeReports::is_transfers_from_nonfed_levin_period_Valid() const{
    return m_transfers_from_nonfed_levin_period_isValid;
}

double OAICommitteeReports::getTransfersFromNonfedLevinYtd() const {
    return m_transfers_from_nonfed_levin_ytd;
}
void OAICommitteeReports::setTransfersFromNonfedLevinYtd(const double &transfers_from_nonfed_levin_ytd) {
    m_transfers_from_nonfed_levin_ytd = transfers_from_nonfed_levin_ytd;
    m_transfers_from_nonfed_levin_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_nonfed_levin_ytd_Set() const{
    return m_transfers_from_nonfed_levin_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_from_nonfed_levin_ytd_Valid() const{
    return m_transfers_from_nonfed_levin_ytd_isValid;
}

double OAICommitteeReports::getTransfersFromOtherAuthorizedCommitteePeriod() const {
    return m_transfers_from_other_authorized_committee_period;
}
void OAICommitteeReports::setTransfersFromOtherAuthorizedCommitteePeriod(const double &transfers_from_other_authorized_committee_period) {
    m_transfers_from_other_authorized_committee_period = transfers_from_other_authorized_committee_period;
    m_transfers_from_other_authorized_committee_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_other_authorized_committee_period_Set() const{
    return m_transfers_from_other_authorized_committee_period_isSet;
}

bool OAICommitteeReports::is_transfers_from_other_authorized_committee_period_Valid() const{
    return m_transfers_from_other_authorized_committee_period_isValid;
}

double OAICommitteeReports::getTransfersFromOtherAuthorizedCommitteeYtd() const {
    return m_transfers_from_other_authorized_committee_ytd;
}
void OAICommitteeReports::setTransfersFromOtherAuthorizedCommitteeYtd(const double &transfers_from_other_authorized_committee_ytd) {
    m_transfers_from_other_authorized_committee_ytd = transfers_from_other_authorized_committee_ytd;
    m_transfers_from_other_authorized_committee_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_from_other_authorized_committee_ytd_Set() const{
    return m_transfers_from_other_authorized_committee_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_from_other_authorized_committee_ytd_Valid() const{
    return m_transfers_from_other_authorized_committee_ytd_isValid;
}

double OAICommitteeReports::getTransfersToAffiliatedCommitteePeriod() const {
    return m_transfers_to_affiliated_committee_period;
}
void OAICommitteeReports::setTransfersToAffiliatedCommitteePeriod(const double &transfers_to_affiliated_committee_period) {
    m_transfers_to_affiliated_committee_period = transfers_to_affiliated_committee_period;
    m_transfers_to_affiliated_committee_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_to_affiliated_committee_period_Set() const{
    return m_transfers_to_affiliated_committee_period_isSet;
}

bool OAICommitteeReports::is_transfers_to_affiliated_committee_period_Valid() const{
    return m_transfers_to_affiliated_committee_period_isValid;
}

double OAICommitteeReports::getTransfersToAffilitatedCommitteesYtd() const {
    return m_transfers_to_affilitated_committees_ytd;
}
void OAICommitteeReports::setTransfersToAffilitatedCommitteesYtd(const double &transfers_to_affilitated_committees_ytd) {
    m_transfers_to_affilitated_committees_ytd = transfers_to_affilitated_committees_ytd;
    m_transfers_to_affilitated_committees_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_to_affilitated_committees_ytd_Set() const{
    return m_transfers_to_affilitated_committees_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_to_affilitated_committees_ytd_Valid() const{
    return m_transfers_to_affilitated_committees_ytd_isValid;
}

double OAICommitteeReports::getTransfersToOtherAuthorizedCommitteePeriod() const {
    return m_transfers_to_other_authorized_committee_period;
}
void OAICommitteeReports::setTransfersToOtherAuthorizedCommitteePeriod(const double &transfers_to_other_authorized_committee_period) {
    m_transfers_to_other_authorized_committee_period = transfers_to_other_authorized_committee_period;
    m_transfers_to_other_authorized_committee_period_isSet = true;
}

bool OAICommitteeReports::is_transfers_to_other_authorized_committee_period_Set() const{
    return m_transfers_to_other_authorized_committee_period_isSet;
}

bool OAICommitteeReports::is_transfers_to_other_authorized_committee_period_Valid() const{
    return m_transfers_to_other_authorized_committee_period_isValid;
}

double OAICommitteeReports::getTransfersToOtherAuthorizedCommitteeYtd() const {
    return m_transfers_to_other_authorized_committee_ytd;
}
void OAICommitteeReports::setTransfersToOtherAuthorizedCommitteeYtd(const double &transfers_to_other_authorized_committee_ytd) {
    m_transfers_to_other_authorized_committee_ytd = transfers_to_other_authorized_committee_ytd;
    m_transfers_to_other_authorized_committee_ytd_isSet = true;
}

bool OAICommitteeReports::is_transfers_to_other_authorized_committee_ytd_Set() const{
    return m_transfers_to_other_authorized_committee_ytd_isSet;
}

bool OAICommitteeReports::is_transfers_to_other_authorized_committee_ytd_Valid() const{
    return m_transfers_to_other_authorized_committee_ytd_isValid;
}

bool OAICommitteeReports::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregate_amount_personal_contributions_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregate_contributions_personal_funds_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allocated_federal_election_levin_share_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_chain.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beginning_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calendar_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_calendar_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_close_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_end_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coordinated_expenditures_by_party_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coordinated_expenditures_by_party_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_by_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_to_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exempt_legal_accounting_disbursement_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exempt_legal_accounting_disbursement_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expenditure_subject_to_limits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_federal_funds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_federal_funds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fundraising_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fundraising_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_authorized_committee_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_authorized_committee_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_minus_personal_contribution_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_minus_personal_contributions_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_independent_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_independent_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_independent_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_amended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_on_hand_liquidated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_candidate_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_candidate_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_by_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_by_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_received_from_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_received_from_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_means_filed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_cycle_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_cycle_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_allocated_fed_election_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_allocated_fed_election_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nonfed_share_allocated_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_fundraising_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_fundraising_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_legal_accounting_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_legal_accounting_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunds_total_contributions_col_total_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_loans_made_by_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_loans_made_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_nonfed_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_nonfed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_nonfed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_page_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_col_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_column_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_election_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_election_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_nonfed_transfers_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_nonfed_transfers_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_party_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_party_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_account_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_account_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_levin_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_levin_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_other_authorized_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_other_authorized_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_affiliated_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_affilitated_committees_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitteeReports::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
