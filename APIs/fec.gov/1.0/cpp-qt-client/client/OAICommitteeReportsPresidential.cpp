/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitteeReportsPresidential.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitteeReportsPresidential::OAICommitteeReportsPresidential(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitteeReportsPresidential::OAICommitteeReportsPresidential() {
    this->initializeModel();
}

OAICommitteeReportsPresidential::~OAICommitteeReportsPresidential() {}

void OAICommitteeReportsPresidential::initializeModel() {

    m_amendment_chain_isSet = false;
    m_amendment_chain_isValid = false;

    m_amendment_indicator_isSet = false;
    m_amendment_indicator_isValid = false;

    m_amendment_indicator_full_isSet = false;
    m_amendment_indicator_full_isValid = false;

    m_beginning_image_number_isSet = false;
    m_beginning_image_number_isValid = false;

    m_candidate_contribution_period_isSet = false;
    m_candidate_contribution_period_isValid = false;

    m_candidate_contribution_ytd_isSet = false;
    m_candidate_contribution_ytd_isValid = false;

    m_cash_on_hand_beginning_period_isSet = false;
    m_cash_on_hand_beginning_period_isValid = false;

    m_cash_on_hand_end_period_isSet = false;
    m_cash_on_hand_end_period_isValid = false;

    m_committee_id_isSet = false;
    m_committee_id_isValid = false;

    m_committee_name_isSet = false;
    m_committee_name_isValid = false;

    m_committee_type_isSet = false;
    m_committee_type_isValid = false;

    m_coverage_end_date_isSet = false;
    m_coverage_end_date_isValid = false;

    m_coverage_start_date_isSet = false;
    m_coverage_start_date_isValid = false;

    m_csv_url_isSet = false;
    m_csv_url_isValid = false;

    m_cycle_isSet = false;
    m_cycle_isValid = false;

    m_debts_owed_by_committee_isSet = false;
    m_debts_owed_by_committee_isValid = false;

    m_debts_owed_to_committee_isSet = false;
    m_debts_owed_to_committee_isValid = false;

    m_document_description_isSet = false;
    m_document_description_isValid = false;

    m_end_image_number_isSet = false;
    m_end_image_number_isValid = false;

    m_exempt_legal_accounting_disbursement_period_isSet = false;
    m_exempt_legal_accounting_disbursement_period_isValid = false;

    m_exempt_legal_accounting_disbursement_ytd_isSet = false;
    m_exempt_legal_accounting_disbursement_ytd_isValid = false;

    m_expenditure_subject_to_limits_isSet = false;
    m_expenditure_subject_to_limits_isValid = false;

    m_fec_file_id_isSet = false;
    m_fec_file_id_isValid = false;

    m_fec_url_isSet = false;
    m_fec_url_isValid = false;

    m_federal_funds_period_isSet = false;
    m_federal_funds_period_isValid = false;

    m_federal_funds_ytd_isSet = false;
    m_federal_funds_ytd_isValid = false;

    m_file_number_isSet = false;
    m_file_number_isValid = false;

    m_fundraising_disbursements_period_isSet = false;
    m_fundraising_disbursements_period_isValid = false;

    m_fundraising_disbursements_ytd_isSet = false;
    m_fundraising_disbursements_ytd_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_individual_itemized_contributions_period_isSet = false;
    m_individual_itemized_contributions_period_isValid = false;

    m_individual_itemized_contributions_ytd_isSet = false;
    m_individual_itemized_contributions_ytd_isValid = false;

    m_individual_unitemized_contributions_period_isSet = false;
    m_individual_unitemized_contributions_period_isValid = false;

    m_individual_unitemized_contributions_ytd_isSet = false;
    m_individual_unitemized_contributions_ytd_isValid = false;

    m_is_amended_isSet = false;
    m_is_amended_isValid = false;

    m_items_on_hand_liquidated_isSet = false;
    m_items_on_hand_liquidated_isValid = false;

    m_loans_received_from_candidate_period_isSet = false;
    m_loans_received_from_candidate_period_isValid = false;

    m_loans_received_from_candidate_ytd_isSet = false;
    m_loans_received_from_candidate_ytd_isValid = false;

    m_means_filed_isSet = false;
    m_means_filed_isValid = false;

    m_most_recent_isSet = false;
    m_most_recent_isValid = false;

    m_most_recent_file_number_isSet = false;
    m_most_recent_file_number_isValid = false;

    m_net_contributions_cycle_to_date_isSet = false;
    m_net_contributions_cycle_to_date_isValid = false;

    m_net_operating_expenditures_cycle_to_date_isSet = false;
    m_net_operating_expenditures_cycle_to_date_isValid = false;

    m_offsets_to_fundraising_expenditures_period_isSet = false;
    m_offsets_to_fundraising_expenditures_period_isValid = false;

    m_offsets_to_fundraising_expenditures_ytd_isSet = false;
    m_offsets_to_fundraising_expenditures_ytd_isValid = false;

    m_offsets_to_legal_accounting_period_isSet = false;
    m_offsets_to_legal_accounting_period_isValid = false;

    m_offsets_to_legal_accounting_ytd_isSet = false;
    m_offsets_to_legal_accounting_ytd_isValid = false;

    m_offsets_to_operating_expenditures_period_isSet = false;
    m_offsets_to_operating_expenditures_period_isValid = false;

    m_offsets_to_operating_expenditures_ytd_isSet = false;
    m_offsets_to_operating_expenditures_ytd_isValid = false;

    m_operating_expenditures_period_isSet = false;
    m_operating_expenditures_period_isValid = false;

    m_operating_expenditures_ytd_isSet = false;
    m_operating_expenditures_ytd_isValid = false;

    m_other_disbursements_period_isSet = false;
    m_other_disbursements_period_isValid = false;

    m_other_disbursements_ytd_isSet = false;
    m_other_disbursements_ytd_isValid = false;

    m_other_loans_received_period_isSet = false;
    m_other_loans_received_period_isValid = false;

    m_other_loans_received_ytd_isSet = false;
    m_other_loans_received_ytd_isValid = false;

    m_other_political_committee_contributions_period_isSet = false;
    m_other_political_committee_contributions_period_isValid = false;

    m_other_political_committee_contributions_ytd_isSet = false;
    m_other_political_committee_contributions_ytd_isValid = false;

    m_other_receipts_period_isSet = false;
    m_other_receipts_period_isValid = false;

    m_other_receipts_ytd_isSet = false;
    m_other_receipts_ytd_isValid = false;

    m_pdf_url_isSet = false;
    m_pdf_url_isValid = false;

    m_political_party_committee_contributions_period_isSet = false;
    m_political_party_committee_contributions_period_isValid = false;

    m_political_party_committee_contributions_ytd_isSet = false;
    m_political_party_committee_contributions_ytd_isValid = false;

    m_previous_file_number_isSet = false;
    m_previous_file_number_isValid = false;

    m_receipt_date_isSet = false;
    m_receipt_date_isValid = false;

    m_refunded_individual_contributions_period_isSet = false;
    m_refunded_individual_contributions_period_isValid = false;

    m_refunded_individual_contributions_ytd_isSet = false;
    m_refunded_individual_contributions_ytd_isValid = false;

    m_refunded_other_political_committee_contributions_period_isSet = false;
    m_refunded_other_political_committee_contributions_period_isValid = false;

    m_refunded_other_political_committee_contributions_ytd_isSet = false;
    m_refunded_other_political_committee_contributions_ytd_isValid = false;

    m_refunded_political_party_committee_contributions_period_isSet = false;
    m_refunded_political_party_committee_contributions_period_isValid = false;

    m_refunded_political_party_committee_contributions_ytd_isSet = false;
    m_refunded_political_party_committee_contributions_ytd_isValid = false;

    m_repayments_loans_made_by_candidate_period_isSet = false;
    m_repayments_loans_made_by_candidate_period_isValid = false;

    m_repayments_loans_made_candidate_ytd_isSet = false;
    m_repayments_loans_made_candidate_ytd_isValid = false;

    m_repayments_other_loans_period_isSet = false;
    m_repayments_other_loans_period_isValid = false;

    m_repayments_other_loans_ytd_isSet = false;
    m_repayments_other_loans_ytd_isValid = false;

    m_report_form_isSet = false;
    m_report_form_isValid = false;

    m_report_type_isSet = false;
    m_report_type_isValid = false;

    m_report_type_full_isSet = false;
    m_report_type_full_isValid = false;

    m_report_year_isSet = false;
    m_report_year_isValid = false;

    m_subtotal_summary_period_isSet = false;
    m_subtotal_summary_period_isValid = false;

    m_total_contribution_refunds_period_isSet = false;
    m_total_contribution_refunds_period_isValid = false;

    m_total_contribution_refunds_ytd_isSet = false;
    m_total_contribution_refunds_ytd_isValid = false;

    m_total_contributions_period_isSet = false;
    m_total_contributions_period_isValid = false;

    m_total_contributions_ytd_isSet = false;
    m_total_contributions_ytd_isValid = false;

    m_total_disbursements_period_isSet = false;
    m_total_disbursements_period_isValid = false;

    m_total_disbursements_ytd_isSet = false;
    m_total_disbursements_ytd_isValid = false;

    m_total_individual_contributions_period_isSet = false;
    m_total_individual_contributions_period_isValid = false;

    m_total_individual_contributions_ytd_isSet = false;
    m_total_individual_contributions_ytd_isValid = false;

    m_total_loan_repayments_made_period_isSet = false;
    m_total_loan_repayments_made_period_isValid = false;

    m_total_loan_repayments_made_ytd_isSet = false;
    m_total_loan_repayments_made_ytd_isValid = false;

    m_total_loans_received_period_isSet = false;
    m_total_loans_received_period_isValid = false;

    m_total_loans_received_ytd_isSet = false;
    m_total_loans_received_ytd_isValid = false;

    m_total_offsets_to_operating_expenditures_period_isSet = false;
    m_total_offsets_to_operating_expenditures_period_isValid = false;

    m_total_offsets_to_operating_expenditures_ytd_isSet = false;
    m_total_offsets_to_operating_expenditures_ytd_isValid = false;

    m_total_period_isSet = false;
    m_total_period_isValid = false;

    m_total_receipts_period_isSet = false;
    m_total_receipts_period_isValid = false;

    m_total_receipts_ytd_isSet = false;
    m_total_receipts_ytd_isValid = false;

    m_total_ytd_isSet = false;
    m_total_ytd_isValid = false;

    m_transfers_from_affiliated_committee_period_isSet = false;
    m_transfers_from_affiliated_committee_period_isValid = false;

    m_transfers_from_affiliated_committee_ytd_isSet = false;
    m_transfers_from_affiliated_committee_ytd_isValid = false;

    m_transfers_to_other_authorized_committee_period_isSet = false;
    m_transfers_to_other_authorized_committee_period_isValid = false;

    m_transfers_to_other_authorized_committee_ytd_isSet = false;
    m_transfers_to_other_authorized_committee_ytd_isValid = false;
}

void OAICommitteeReportsPresidential::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitteeReportsPresidential::fromJsonObject(QJsonObject json) {

    m_amendment_chain_isValid = ::OpenAPI::fromJsonValue(m_amendment_chain, json[QString("amendment_chain")]);
    m_amendment_chain_isSet = !json[QString("amendment_chain")].isNull() && m_amendment_chain_isValid;

    m_amendment_indicator_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator, json[QString("amendment_indicator")]);
    m_amendment_indicator_isSet = !json[QString("amendment_indicator")].isNull() && m_amendment_indicator_isValid;

    m_amendment_indicator_full_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator_full, json[QString("amendment_indicator_full")]);
    m_amendment_indicator_full_isSet = !json[QString("amendment_indicator_full")].isNull() && m_amendment_indicator_full_isValid;

    m_beginning_image_number_isValid = ::OpenAPI::fromJsonValue(m_beginning_image_number, json[QString("beginning_image_number")]);
    m_beginning_image_number_isSet = !json[QString("beginning_image_number")].isNull() && m_beginning_image_number_isValid;

    m_candidate_contribution_period_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_period, json[QString("candidate_contribution_period")]);
    m_candidate_contribution_period_isSet = !json[QString("candidate_contribution_period")].isNull() && m_candidate_contribution_period_isValid;

    m_candidate_contribution_ytd_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_ytd, json[QString("candidate_contribution_ytd")]);
    m_candidate_contribution_ytd_isSet = !json[QString("candidate_contribution_ytd")].isNull() && m_candidate_contribution_ytd_isValid;

    m_cash_on_hand_beginning_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_period, json[QString("cash_on_hand_beginning_period")]);
    m_cash_on_hand_beginning_period_isSet = !json[QString("cash_on_hand_beginning_period")].isNull() && m_cash_on_hand_beginning_period_isValid;

    m_cash_on_hand_end_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_end_period, json[QString("cash_on_hand_end_period")]);
    m_cash_on_hand_end_period_isSet = !json[QString("cash_on_hand_end_period")].isNull() && m_cash_on_hand_end_period_isValid;

    m_committee_id_isValid = ::OpenAPI::fromJsonValue(m_committee_id, json[QString("committee_id")]);
    m_committee_id_isSet = !json[QString("committee_id")].isNull() && m_committee_id_isValid;

    m_committee_name_isValid = ::OpenAPI::fromJsonValue(m_committee_name, json[QString("committee_name")]);
    m_committee_name_isSet = !json[QString("committee_name")].isNull() && m_committee_name_isValid;

    m_committee_type_isValid = ::OpenAPI::fromJsonValue(m_committee_type, json[QString("committee_type")]);
    m_committee_type_isSet = !json[QString("committee_type")].isNull() && m_committee_type_isValid;

    m_coverage_end_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_end_date, json[QString("coverage_end_date")]);
    m_coverage_end_date_isSet = !json[QString("coverage_end_date")].isNull() && m_coverage_end_date_isValid;

    m_coverage_start_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_start_date, json[QString("coverage_start_date")]);
    m_coverage_start_date_isSet = !json[QString("coverage_start_date")].isNull() && m_coverage_start_date_isValid;

    m_csv_url_isValid = ::OpenAPI::fromJsonValue(m_csv_url, json[QString("csv_url")]);
    m_csv_url_isSet = !json[QString("csv_url")].isNull() && m_csv_url_isValid;

    m_cycle_isValid = ::OpenAPI::fromJsonValue(m_cycle, json[QString("cycle")]);
    m_cycle_isSet = !json[QString("cycle")].isNull() && m_cycle_isValid;

    m_debts_owed_by_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_by_committee, json[QString("debts_owed_by_committee")]);
    m_debts_owed_by_committee_isSet = !json[QString("debts_owed_by_committee")].isNull() && m_debts_owed_by_committee_isValid;

    m_debts_owed_to_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_to_committee, json[QString("debts_owed_to_committee")]);
    m_debts_owed_to_committee_isSet = !json[QString("debts_owed_to_committee")].isNull() && m_debts_owed_to_committee_isValid;

    m_document_description_isValid = ::OpenAPI::fromJsonValue(m_document_description, json[QString("document_description")]);
    m_document_description_isSet = !json[QString("document_description")].isNull() && m_document_description_isValid;

    m_end_image_number_isValid = ::OpenAPI::fromJsonValue(m_end_image_number, json[QString("end_image_number")]);
    m_end_image_number_isSet = !json[QString("end_image_number")].isNull() && m_end_image_number_isValid;

    m_exempt_legal_accounting_disbursement_period_isValid = ::OpenAPI::fromJsonValue(m_exempt_legal_accounting_disbursement_period, json[QString("exempt_legal_accounting_disbursement_period")]);
    m_exempt_legal_accounting_disbursement_period_isSet = !json[QString("exempt_legal_accounting_disbursement_period")].isNull() && m_exempt_legal_accounting_disbursement_period_isValid;

    m_exempt_legal_accounting_disbursement_ytd_isValid = ::OpenAPI::fromJsonValue(m_exempt_legal_accounting_disbursement_ytd, json[QString("exempt_legal_accounting_disbursement_ytd")]);
    m_exempt_legal_accounting_disbursement_ytd_isSet = !json[QString("exempt_legal_accounting_disbursement_ytd")].isNull() && m_exempt_legal_accounting_disbursement_ytd_isValid;

    m_expenditure_subject_to_limits_isValid = ::OpenAPI::fromJsonValue(m_expenditure_subject_to_limits, json[QString("expenditure_subject_to_limits")]);
    m_expenditure_subject_to_limits_isSet = !json[QString("expenditure_subject_to_limits")].isNull() && m_expenditure_subject_to_limits_isValid;

    m_fec_file_id_isValid = ::OpenAPI::fromJsonValue(m_fec_file_id, json[QString("fec_file_id")]);
    m_fec_file_id_isSet = !json[QString("fec_file_id")].isNull() && m_fec_file_id_isValid;

    m_fec_url_isValid = ::OpenAPI::fromJsonValue(m_fec_url, json[QString("fec_url")]);
    m_fec_url_isSet = !json[QString("fec_url")].isNull() && m_fec_url_isValid;

    m_federal_funds_period_isValid = ::OpenAPI::fromJsonValue(m_federal_funds_period, json[QString("federal_funds_period")]);
    m_federal_funds_period_isSet = !json[QString("federal_funds_period")].isNull() && m_federal_funds_period_isValid;

    m_federal_funds_ytd_isValid = ::OpenAPI::fromJsonValue(m_federal_funds_ytd, json[QString("federal_funds_ytd")]);
    m_federal_funds_ytd_isSet = !json[QString("federal_funds_ytd")].isNull() && m_federal_funds_ytd_isValid;

    m_file_number_isValid = ::OpenAPI::fromJsonValue(m_file_number, json[QString("file_number")]);
    m_file_number_isSet = !json[QString("file_number")].isNull() && m_file_number_isValid;

    m_fundraising_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_fundraising_disbursements_period, json[QString("fundraising_disbursements_period")]);
    m_fundraising_disbursements_period_isSet = !json[QString("fundraising_disbursements_period")].isNull() && m_fundraising_disbursements_period_isValid;

    m_fundraising_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_fundraising_disbursements_ytd, json[QString("fundraising_disbursements_ytd")]);
    m_fundraising_disbursements_ytd_isSet = !json[QString("fundraising_disbursements_ytd")].isNull() && m_fundraising_disbursements_ytd_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_individual_itemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_period, json[QString("individual_itemized_contributions_period")]);
    m_individual_itemized_contributions_period_isSet = !json[QString("individual_itemized_contributions_period")].isNull() && m_individual_itemized_contributions_period_isValid;

    m_individual_itemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_ytd, json[QString("individual_itemized_contributions_ytd")]);
    m_individual_itemized_contributions_ytd_isSet = !json[QString("individual_itemized_contributions_ytd")].isNull() && m_individual_itemized_contributions_ytd_isValid;

    m_individual_unitemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_period, json[QString("individual_unitemized_contributions_period")]);
    m_individual_unitemized_contributions_period_isSet = !json[QString("individual_unitemized_contributions_period")].isNull() && m_individual_unitemized_contributions_period_isValid;

    m_individual_unitemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_ytd, json[QString("individual_unitemized_contributions_ytd")]);
    m_individual_unitemized_contributions_ytd_isSet = !json[QString("individual_unitemized_contributions_ytd")].isNull() && m_individual_unitemized_contributions_ytd_isValid;

    m_is_amended_isValid = ::OpenAPI::fromJsonValue(m_is_amended, json[QString("is_amended")]);
    m_is_amended_isSet = !json[QString("is_amended")].isNull() && m_is_amended_isValid;

    m_items_on_hand_liquidated_isValid = ::OpenAPI::fromJsonValue(m_items_on_hand_liquidated, json[QString("items_on_hand_liquidated")]);
    m_items_on_hand_liquidated_isSet = !json[QString("items_on_hand_liquidated")].isNull() && m_items_on_hand_liquidated_isValid;

    m_loans_received_from_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_loans_received_from_candidate_period, json[QString("loans_received_from_candidate_period")]);
    m_loans_received_from_candidate_period_isSet = !json[QString("loans_received_from_candidate_period")].isNull() && m_loans_received_from_candidate_period_isValid;

    m_loans_received_from_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_received_from_candidate_ytd, json[QString("loans_received_from_candidate_ytd")]);
    m_loans_received_from_candidate_ytd_isSet = !json[QString("loans_received_from_candidate_ytd")].isNull() && m_loans_received_from_candidate_ytd_isValid;

    m_means_filed_isValid = ::OpenAPI::fromJsonValue(m_means_filed, json[QString("means_filed")]);
    m_means_filed_isSet = !json[QString("means_filed")].isNull() && m_means_filed_isValid;

    m_most_recent_isValid = ::OpenAPI::fromJsonValue(m_most_recent, json[QString("most_recent")]);
    m_most_recent_isSet = !json[QString("most_recent")].isNull() && m_most_recent_isValid;

    m_most_recent_file_number_isValid = ::OpenAPI::fromJsonValue(m_most_recent_file_number, json[QString("most_recent_file_number")]);
    m_most_recent_file_number_isSet = !json[QString("most_recent_file_number")].isNull() && m_most_recent_file_number_isValid;

    m_net_contributions_cycle_to_date_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_cycle_to_date, json[QString("net_contributions_cycle_to_date")]);
    m_net_contributions_cycle_to_date_isSet = !json[QString("net_contributions_cycle_to_date")].isNull() && m_net_contributions_cycle_to_date_isValid;

    m_net_operating_expenditures_cycle_to_date_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_cycle_to_date, json[QString("net_operating_expenditures_cycle_to_date")]);
    m_net_operating_expenditures_cycle_to_date_isSet = !json[QString("net_operating_expenditures_cycle_to_date")].isNull() && m_net_operating_expenditures_cycle_to_date_isValid;

    m_offsets_to_fundraising_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_fundraising_expenditures_period, json[QString("offsets_to_fundraising_expenditures_period")]);
    m_offsets_to_fundraising_expenditures_period_isSet = !json[QString("offsets_to_fundraising_expenditures_period")].isNull() && m_offsets_to_fundraising_expenditures_period_isValid;

    m_offsets_to_fundraising_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_fundraising_expenditures_ytd, json[QString("offsets_to_fundraising_expenditures_ytd")]);
    m_offsets_to_fundraising_expenditures_ytd_isSet = !json[QString("offsets_to_fundraising_expenditures_ytd")].isNull() && m_offsets_to_fundraising_expenditures_ytd_isValid;

    m_offsets_to_legal_accounting_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_legal_accounting_period, json[QString("offsets_to_legal_accounting_period")]);
    m_offsets_to_legal_accounting_period_isSet = !json[QString("offsets_to_legal_accounting_period")].isNull() && m_offsets_to_legal_accounting_period_isValid;

    m_offsets_to_legal_accounting_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_legal_accounting_ytd, json[QString("offsets_to_legal_accounting_ytd")]);
    m_offsets_to_legal_accounting_ytd_isSet = !json[QString("offsets_to_legal_accounting_ytd")].isNull() && m_offsets_to_legal_accounting_ytd_isValid;

    m_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_period, json[QString("offsets_to_operating_expenditures_period")]);
    m_offsets_to_operating_expenditures_period_isSet = !json[QString("offsets_to_operating_expenditures_period")].isNull() && m_offsets_to_operating_expenditures_period_isValid;

    m_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_ytd, json[QString("offsets_to_operating_expenditures_ytd")]);
    m_offsets_to_operating_expenditures_ytd_isSet = !json[QString("offsets_to_operating_expenditures_ytd")].isNull() && m_offsets_to_operating_expenditures_ytd_isValid;

    m_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_period, json[QString("operating_expenditures_period")]);
    m_operating_expenditures_period_isSet = !json[QString("operating_expenditures_period")].isNull() && m_operating_expenditures_period_isValid;

    m_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_ytd, json[QString("operating_expenditures_ytd")]);
    m_operating_expenditures_ytd_isSet = !json[QString("operating_expenditures_ytd")].isNull() && m_operating_expenditures_ytd_isValid;

    m_other_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_period, json[QString("other_disbursements_period")]);
    m_other_disbursements_period_isSet = !json[QString("other_disbursements_period")].isNull() && m_other_disbursements_period_isValid;

    m_other_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_ytd, json[QString("other_disbursements_ytd")]);
    m_other_disbursements_ytd_isSet = !json[QString("other_disbursements_ytd")].isNull() && m_other_disbursements_ytd_isValid;

    m_other_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_other_loans_received_period, json[QString("other_loans_received_period")]);
    m_other_loans_received_period_isSet = !json[QString("other_loans_received_period")].isNull() && m_other_loans_received_period_isValid;

    m_other_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_loans_received_ytd, json[QString("other_loans_received_ytd")]);
    m_other_loans_received_ytd_isSet = !json[QString("other_loans_received_ytd")].isNull() && m_other_loans_received_ytd_isValid;

    m_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_period, json[QString("other_political_committee_contributions_period")]);
    m_other_political_committee_contributions_period_isSet = !json[QString("other_political_committee_contributions_period")].isNull() && m_other_political_committee_contributions_period_isValid;

    m_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_ytd, json[QString("other_political_committee_contributions_ytd")]);
    m_other_political_committee_contributions_ytd_isSet = !json[QString("other_political_committee_contributions_ytd")].isNull() && m_other_political_committee_contributions_ytd_isValid;

    m_other_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_period, json[QString("other_receipts_period")]);
    m_other_receipts_period_isSet = !json[QString("other_receipts_period")].isNull() && m_other_receipts_period_isValid;

    m_other_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_ytd, json[QString("other_receipts_ytd")]);
    m_other_receipts_ytd_isSet = !json[QString("other_receipts_ytd")].isNull() && m_other_receipts_ytd_isValid;

    m_pdf_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_url, json[QString("pdf_url")]);
    m_pdf_url_isSet = !json[QString("pdf_url")].isNull() && m_pdf_url_isValid;

    m_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_period, json[QString("political_party_committee_contributions_period")]);
    m_political_party_committee_contributions_period_isSet = !json[QString("political_party_committee_contributions_period")].isNull() && m_political_party_committee_contributions_period_isValid;

    m_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_ytd, json[QString("political_party_committee_contributions_ytd")]);
    m_political_party_committee_contributions_ytd_isSet = !json[QString("political_party_committee_contributions_ytd")].isNull() && m_political_party_committee_contributions_ytd_isValid;

    m_previous_file_number_isValid = ::OpenAPI::fromJsonValue(m_previous_file_number, json[QString("previous_file_number")]);
    m_previous_file_number_isSet = !json[QString("previous_file_number")].isNull() && m_previous_file_number_isValid;

    m_receipt_date_isValid = ::OpenAPI::fromJsonValue(m_receipt_date, json[QString("receipt_date")]);
    m_receipt_date_isSet = !json[QString("receipt_date")].isNull() && m_receipt_date_isValid;

    m_refunded_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_period, json[QString("refunded_individual_contributions_period")]);
    m_refunded_individual_contributions_period_isSet = !json[QString("refunded_individual_contributions_period")].isNull() && m_refunded_individual_contributions_period_isValid;

    m_refunded_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_ytd, json[QString("refunded_individual_contributions_ytd")]);
    m_refunded_individual_contributions_ytd_isSet = !json[QString("refunded_individual_contributions_ytd")].isNull() && m_refunded_individual_contributions_ytd_isValid;

    m_refunded_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_period, json[QString("refunded_other_political_committee_contributions_period")]);
    m_refunded_other_political_committee_contributions_period_isSet = !json[QString("refunded_other_political_committee_contributions_period")].isNull() && m_refunded_other_political_committee_contributions_period_isValid;

    m_refunded_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_ytd, json[QString("refunded_other_political_committee_contributions_ytd")]);
    m_refunded_other_political_committee_contributions_ytd_isSet = !json[QString("refunded_other_political_committee_contributions_ytd")].isNull() && m_refunded_other_political_committee_contributions_ytd_isValid;

    m_refunded_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_period, json[QString("refunded_political_party_committee_contributions_period")]);
    m_refunded_political_party_committee_contributions_period_isSet = !json[QString("refunded_political_party_committee_contributions_period")].isNull() && m_refunded_political_party_committee_contributions_period_isValid;

    m_refunded_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_ytd, json[QString("refunded_political_party_committee_contributions_ytd")]);
    m_refunded_political_party_committee_contributions_ytd_isSet = !json[QString("refunded_political_party_committee_contributions_ytd")].isNull() && m_refunded_political_party_committee_contributions_ytd_isValid;

    m_repayments_loans_made_by_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_repayments_loans_made_by_candidate_period, json[QString("repayments_loans_made_by_candidate_period")]);
    m_repayments_loans_made_by_candidate_period_isSet = !json[QString("repayments_loans_made_by_candidate_period")].isNull() && m_repayments_loans_made_by_candidate_period_isValid;

    m_repayments_loans_made_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_repayments_loans_made_candidate_ytd, json[QString("repayments_loans_made_candidate_ytd")]);
    m_repayments_loans_made_candidate_ytd_isSet = !json[QString("repayments_loans_made_candidate_ytd")].isNull() && m_repayments_loans_made_candidate_ytd_isValid;

    m_repayments_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_repayments_other_loans_period, json[QString("repayments_other_loans_period")]);
    m_repayments_other_loans_period_isSet = !json[QString("repayments_other_loans_period")].isNull() && m_repayments_other_loans_period_isValid;

    m_repayments_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_repayments_other_loans_ytd, json[QString("repayments_other_loans_ytd")]);
    m_repayments_other_loans_ytd_isSet = !json[QString("repayments_other_loans_ytd")].isNull() && m_repayments_other_loans_ytd_isValid;

    m_report_form_isValid = ::OpenAPI::fromJsonValue(m_report_form, json[QString("report_form")]);
    m_report_form_isSet = !json[QString("report_form")].isNull() && m_report_form_isValid;

    m_report_type_isValid = ::OpenAPI::fromJsonValue(m_report_type, json[QString("report_type")]);
    m_report_type_isSet = !json[QString("report_type")].isNull() && m_report_type_isValid;

    m_report_type_full_isValid = ::OpenAPI::fromJsonValue(m_report_type_full, json[QString("report_type_full")]);
    m_report_type_full_isSet = !json[QString("report_type_full")].isNull() && m_report_type_full_isValid;

    m_report_year_isValid = ::OpenAPI::fromJsonValue(m_report_year, json[QString("report_year")]);
    m_report_year_isSet = !json[QString("report_year")].isNull() && m_report_year_isValid;

    m_subtotal_summary_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_period, json[QString("subtotal_summary_period")]);
    m_subtotal_summary_period_isSet = !json[QString("subtotal_summary_period")].isNull() && m_subtotal_summary_period_isValid;

    m_total_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_period, json[QString("total_contribution_refunds_period")]);
    m_total_contribution_refunds_period_isSet = !json[QString("total_contribution_refunds_period")].isNull() && m_total_contribution_refunds_period_isValid;

    m_total_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_ytd, json[QString("total_contribution_refunds_ytd")]);
    m_total_contribution_refunds_ytd_isSet = !json[QString("total_contribution_refunds_ytd")].isNull() && m_total_contribution_refunds_ytd_isValid;

    m_total_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_period, json[QString("total_contributions_period")]);
    m_total_contributions_period_isSet = !json[QString("total_contributions_period")].isNull() && m_total_contributions_period_isValid;

    m_total_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_ytd, json[QString("total_contributions_ytd")]);
    m_total_contributions_ytd_isSet = !json[QString("total_contributions_ytd")].isNull() && m_total_contributions_ytd_isValid;

    m_total_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_period, json[QString("total_disbursements_period")]);
    m_total_disbursements_period_isSet = !json[QString("total_disbursements_period")].isNull() && m_total_disbursements_period_isValid;

    m_total_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_ytd, json[QString("total_disbursements_ytd")]);
    m_total_disbursements_ytd_isSet = !json[QString("total_disbursements_ytd")].isNull() && m_total_disbursements_ytd_isValid;

    m_total_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_period, json[QString("total_individual_contributions_period")]);
    m_total_individual_contributions_period_isSet = !json[QString("total_individual_contributions_period")].isNull() && m_total_individual_contributions_period_isValid;

    m_total_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_ytd, json[QString("total_individual_contributions_ytd")]);
    m_total_individual_contributions_ytd_isSet = !json[QString("total_individual_contributions_ytd")].isNull() && m_total_individual_contributions_ytd_isValid;

    m_total_loan_repayments_made_period_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_period, json[QString("total_loan_repayments_made_period")]);
    m_total_loan_repayments_made_period_isSet = !json[QString("total_loan_repayments_made_period")].isNull() && m_total_loan_repayments_made_period_isValid;

    m_total_loan_repayments_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_ytd, json[QString("total_loan_repayments_made_ytd")]);
    m_total_loan_repayments_made_ytd_isSet = !json[QString("total_loan_repayments_made_ytd")].isNull() && m_total_loan_repayments_made_ytd_isValid;

    m_total_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_period, json[QString("total_loans_received_period")]);
    m_total_loans_received_period_isSet = !json[QString("total_loans_received_period")].isNull() && m_total_loans_received_period_isValid;

    m_total_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_ytd, json[QString("total_loans_received_ytd")]);
    m_total_loans_received_ytd_isSet = !json[QString("total_loans_received_ytd")].isNull() && m_total_loans_received_ytd_isValid;

    m_total_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_period, json[QString("total_offsets_to_operating_expenditures_period")]);
    m_total_offsets_to_operating_expenditures_period_isSet = !json[QString("total_offsets_to_operating_expenditures_period")].isNull() && m_total_offsets_to_operating_expenditures_period_isValid;

    m_total_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_ytd, json[QString("total_offsets_to_operating_expenditures_ytd")]);
    m_total_offsets_to_operating_expenditures_ytd_isSet = !json[QString("total_offsets_to_operating_expenditures_ytd")].isNull() && m_total_offsets_to_operating_expenditures_ytd_isValid;

    m_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_period, json[QString("total_period")]);
    m_total_period_isSet = !json[QString("total_period")].isNull() && m_total_period_isValid;

    m_total_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_period, json[QString("total_receipts_period")]);
    m_total_receipts_period_isSet = !json[QString("total_receipts_period")].isNull() && m_total_receipts_period_isValid;

    m_total_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_ytd, json[QString("total_receipts_ytd")]);
    m_total_receipts_ytd_isSet = !json[QString("total_receipts_ytd")].isNull() && m_total_receipts_ytd_isValid;

    m_total_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_ytd, json[QString("total_ytd")]);
    m_total_ytd_isSet = !json[QString("total_ytd")].isNull() && m_total_ytd_isValid;

    m_transfers_from_affiliated_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_committee_period, json[QString("transfers_from_affiliated_committee_period")]);
    m_transfers_from_affiliated_committee_period_isSet = !json[QString("transfers_from_affiliated_committee_period")].isNull() && m_transfers_from_affiliated_committee_period_isValid;

    m_transfers_from_affiliated_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_committee_ytd, json[QString("transfers_from_affiliated_committee_ytd")]);
    m_transfers_from_affiliated_committee_ytd_isSet = !json[QString("transfers_from_affiliated_committee_ytd")].isNull() && m_transfers_from_affiliated_committee_ytd_isValid;

    m_transfers_to_other_authorized_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_period, json[QString("transfers_to_other_authorized_committee_period")]);
    m_transfers_to_other_authorized_committee_period_isSet = !json[QString("transfers_to_other_authorized_committee_period")].isNull() && m_transfers_to_other_authorized_committee_period_isValid;

    m_transfers_to_other_authorized_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_ytd, json[QString("transfers_to_other_authorized_committee_ytd")]);
    m_transfers_to_other_authorized_committee_ytd_isSet = !json[QString("transfers_to_other_authorized_committee_ytd")].isNull() && m_transfers_to_other_authorized_committee_ytd_isValid;
}

QString OAICommitteeReportsPresidential::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitteeReportsPresidential::asJsonObject() const {
    QJsonObject obj;
    if (m_amendment_chain.size() > 0) {
        obj.insert(QString("amendment_chain"), ::OpenAPI::toJsonValue(m_amendment_chain));
    }
    if (m_amendment_indicator_isSet) {
        obj.insert(QString("amendment_indicator"), ::OpenAPI::toJsonValue(m_amendment_indicator));
    }
    if (m_amendment_indicator_full_isSet) {
        obj.insert(QString("amendment_indicator_full"), ::OpenAPI::toJsonValue(m_amendment_indicator_full));
    }
    if (m_beginning_image_number_isSet) {
        obj.insert(QString("beginning_image_number"), ::OpenAPI::toJsonValue(m_beginning_image_number));
    }
    if (m_candidate_contribution_period_isSet) {
        obj.insert(QString("candidate_contribution_period"), ::OpenAPI::toJsonValue(m_candidate_contribution_period));
    }
    if (m_candidate_contribution_ytd_isSet) {
        obj.insert(QString("candidate_contribution_ytd"), ::OpenAPI::toJsonValue(m_candidate_contribution_ytd));
    }
    if (m_cash_on_hand_beginning_period_isSet) {
        obj.insert(QString("cash_on_hand_beginning_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_period));
    }
    if (m_cash_on_hand_end_period_isSet) {
        obj.insert(QString("cash_on_hand_end_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_end_period));
    }
    if (m_committee_id_isSet) {
        obj.insert(QString("committee_id"), ::OpenAPI::toJsonValue(m_committee_id));
    }
    if (m_committee_name_isSet) {
        obj.insert(QString("committee_name"), ::OpenAPI::toJsonValue(m_committee_name));
    }
    if (m_committee_type_isSet) {
        obj.insert(QString("committee_type"), ::OpenAPI::toJsonValue(m_committee_type));
    }
    if (m_coverage_end_date_isSet) {
        obj.insert(QString("coverage_end_date"), ::OpenAPI::toJsonValue(m_coverage_end_date));
    }
    if (m_coverage_start_date_isSet) {
        obj.insert(QString("coverage_start_date"), ::OpenAPI::toJsonValue(m_coverage_start_date));
    }
    if (m_csv_url_isSet) {
        obj.insert(QString("csv_url"), ::OpenAPI::toJsonValue(m_csv_url));
    }
    if (m_cycle_isSet) {
        obj.insert(QString("cycle"), ::OpenAPI::toJsonValue(m_cycle));
    }
    if (m_debts_owed_by_committee_isSet) {
        obj.insert(QString("debts_owed_by_committee"), ::OpenAPI::toJsonValue(m_debts_owed_by_committee));
    }
    if (m_debts_owed_to_committee_isSet) {
        obj.insert(QString("debts_owed_to_committee"), ::OpenAPI::toJsonValue(m_debts_owed_to_committee));
    }
    if (m_document_description_isSet) {
        obj.insert(QString("document_description"), ::OpenAPI::toJsonValue(m_document_description));
    }
    if (m_end_image_number_isSet) {
        obj.insert(QString("end_image_number"), ::OpenAPI::toJsonValue(m_end_image_number));
    }
    if (m_exempt_legal_accounting_disbursement_period_isSet) {
        obj.insert(QString("exempt_legal_accounting_disbursement_period"), ::OpenAPI::toJsonValue(m_exempt_legal_accounting_disbursement_period));
    }
    if (m_exempt_legal_accounting_disbursement_ytd_isSet) {
        obj.insert(QString("exempt_legal_accounting_disbursement_ytd"), ::OpenAPI::toJsonValue(m_exempt_legal_accounting_disbursement_ytd));
    }
    if (m_expenditure_subject_to_limits_isSet) {
        obj.insert(QString("expenditure_subject_to_limits"), ::OpenAPI::toJsonValue(m_expenditure_subject_to_limits));
    }
    if (m_fec_file_id_isSet) {
        obj.insert(QString("fec_file_id"), ::OpenAPI::toJsonValue(m_fec_file_id));
    }
    if (m_fec_url_isSet) {
        obj.insert(QString("fec_url"), ::OpenAPI::toJsonValue(m_fec_url));
    }
    if (m_federal_funds_period_isSet) {
        obj.insert(QString("federal_funds_period"), ::OpenAPI::toJsonValue(m_federal_funds_period));
    }
    if (m_federal_funds_ytd_isSet) {
        obj.insert(QString("federal_funds_ytd"), ::OpenAPI::toJsonValue(m_federal_funds_ytd));
    }
    if (m_file_number_isSet) {
        obj.insert(QString("file_number"), ::OpenAPI::toJsonValue(m_file_number));
    }
    if (m_fundraising_disbursements_period_isSet) {
        obj.insert(QString("fundraising_disbursements_period"), ::OpenAPI::toJsonValue(m_fundraising_disbursements_period));
    }
    if (m_fundraising_disbursements_ytd_isSet) {
        obj.insert(QString("fundraising_disbursements_ytd"), ::OpenAPI::toJsonValue(m_fundraising_disbursements_ytd));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_individual_itemized_contributions_period_isSet) {
        obj.insert(QString("individual_itemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_period));
    }
    if (m_individual_itemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_itemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_ytd));
    }
    if (m_individual_unitemized_contributions_period_isSet) {
        obj.insert(QString("individual_unitemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_period));
    }
    if (m_individual_unitemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_unitemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_ytd));
    }
    if (m_is_amended_isSet) {
        obj.insert(QString("is_amended"), ::OpenAPI::toJsonValue(m_is_amended));
    }
    if (m_items_on_hand_liquidated_isSet) {
        obj.insert(QString("items_on_hand_liquidated"), ::OpenAPI::toJsonValue(m_items_on_hand_liquidated));
    }
    if (m_loans_received_from_candidate_period_isSet) {
        obj.insert(QString("loans_received_from_candidate_period"), ::OpenAPI::toJsonValue(m_loans_received_from_candidate_period));
    }
    if (m_loans_received_from_candidate_ytd_isSet) {
        obj.insert(QString("loans_received_from_candidate_ytd"), ::OpenAPI::toJsonValue(m_loans_received_from_candidate_ytd));
    }
    if (m_means_filed_isSet) {
        obj.insert(QString("means_filed"), ::OpenAPI::toJsonValue(m_means_filed));
    }
    if (m_most_recent_isSet) {
        obj.insert(QString("most_recent"), ::OpenAPI::toJsonValue(m_most_recent));
    }
    if (m_most_recent_file_number_isSet) {
        obj.insert(QString("most_recent_file_number"), ::OpenAPI::toJsonValue(m_most_recent_file_number));
    }
    if (m_net_contributions_cycle_to_date_isSet) {
        obj.insert(QString("net_contributions_cycle_to_date"), ::OpenAPI::toJsonValue(m_net_contributions_cycle_to_date));
    }
    if (m_net_operating_expenditures_cycle_to_date_isSet) {
        obj.insert(QString("net_operating_expenditures_cycle_to_date"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_cycle_to_date));
    }
    if (m_offsets_to_fundraising_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_fundraising_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_fundraising_expenditures_period));
    }
    if (m_offsets_to_fundraising_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_fundraising_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_fundraising_expenditures_ytd));
    }
    if (m_offsets_to_legal_accounting_period_isSet) {
        obj.insert(QString("offsets_to_legal_accounting_period"), ::OpenAPI::toJsonValue(m_offsets_to_legal_accounting_period));
    }
    if (m_offsets_to_legal_accounting_ytd_isSet) {
        obj.insert(QString("offsets_to_legal_accounting_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_legal_accounting_ytd));
    }
    if (m_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_period));
    }
    if (m_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_ytd));
    }
    if (m_operating_expenditures_period_isSet) {
        obj.insert(QString("operating_expenditures_period"), ::OpenAPI::toJsonValue(m_operating_expenditures_period));
    }
    if (m_operating_expenditures_ytd_isSet) {
        obj.insert(QString("operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_operating_expenditures_ytd));
    }
    if (m_other_disbursements_period_isSet) {
        obj.insert(QString("other_disbursements_period"), ::OpenAPI::toJsonValue(m_other_disbursements_period));
    }
    if (m_other_disbursements_ytd_isSet) {
        obj.insert(QString("other_disbursements_ytd"), ::OpenAPI::toJsonValue(m_other_disbursements_ytd));
    }
    if (m_other_loans_received_period_isSet) {
        obj.insert(QString("other_loans_received_period"), ::OpenAPI::toJsonValue(m_other_loans_received_period));
    }
    if (m_other_loans_received_ytd_isSet) {
        obj.insert(QString("other_loans_received_ytd"), ::OpenAPI::toJsonValue(m_other_loans_received_ytd));
    }
    if (m_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_period));
    }
    if (m_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_ytd));
    }
    if (m_other_receipts_period_isSet) {
        obj.insert(QString("other_receipts_period"), ::OpenAPI::toJsonValue(m_other_receipts_period));
    }
    if (m_other_receipts_ytd_isSet) {
        obj.insert(QString("other_receipts_ytd"), ::OpenAPI::toJsonValue(m_other_receipts_ytd));
    }
    if (m_pdf_url_isSet) {
        obj.insert(QString("pdf_url"), ::OpenAPI::toJsonValue(m_pdf_url));
    }
    if (m_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_period));
    }
    if (m_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_ytd));
    }
    if (m_previous_file_number_isSet) {
        obj.insert(QString("previous_file_number"), ::OpenAPI::toJsonValue(m_previous_file_number));
    }
    if (m_receipt_date_isSet) {
        obj.insert(QString("receipt_date"), ::OpenAPI::toJsonValue(m_receipt_date));
    }
    if (m_refunded_individual_contributions_period_isSet) {
        obj.insert(QString("refunded_individual_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_period));
    }
    if (m_refunded_individual_contributions_ytd_isSet) {
        obj.insert(QString("refunded_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_ytd));
    }
    if (m_refunded_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_period));
    }
    if (m_refunded_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_ytd));
    }
    if (m_refunded_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_period));
    }
    if (m_refunded_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_ytd));
    }
    if (m_repayments_loans_made_by_candidate_period_isSet) {
        obj.insert(QString("repayments_loans_made_by_candidate_period"), ::OpenAPI::toJsonValue(m_repayments_loans_made_by_candidate_period));
    }
    if (m_repayments_loans_made_candidate_ytd_isSet) {
        obj.insert(QString("repayments_loans_made_candidate_ytd"), ::OpenAPI::toJsonValue(m_repayments_loans_made_candidate_ytd));
    }
    if (m_repayments_other_loans_period_isSet) {
        obj.insert(QString("repayments_other_loans_period"), ::OpenAPI::toJsonValue(m_repayments_other_loans_period));
    }
    if (m_repayments_other_loans_ytd_isSet) {
        obj.insert(QString("repayments_other_loans_ytd"), ::OpenAPI::toJsonValue(m_repayments_other_loans_ytd));
    }
    if (m_report_form_isSet) {
        obj.insert(QString("report_form"), ::OpenAPI::toJsonValue(m_report_form));
    }
    if (m_report_type_isSet) {
        obj.insert(QString("report_type"), ::OpenAPI::toJsonValue(m_report_type));
    }
    if (m_report_type_full_isSet) {
        obj.insert(QString("report_type_full"), ::OpenAPI::toJsonValue(m_report_type_full));
    }
    if (m_report_year_isSet) {
        obj.insert(QString("report_year"), ::OpenAPI::toJsonValue(m_report_year));
    }
    if (m_subtotal_summary_period_isSet) {
        obj.insert(QString("subtotal_summary_period"), ::OpenAPI::toJsonValue(m_subtotal_summary_period));
    }
    if (m_total_contribution_refunds_period_isSet) {
        obj.insert(QString("total_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_period));
    }
    if (m_total_contribution_refunds_ytd_isSet) {
        obj.insert(QString("total_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_ytd));
    }
    if (m_total_contributions_period_isSet) {
        obj.insert(QString("total_contributions_period"), ::OpenAPI::toJsonValue(m_total_contributions_period));
    }
    if (m_total_contributions_ytd_isSet) {
        obj.insert(QString("total_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_contributions_ytd));
    }
    if (m_total_disbursements_period_isSet) {
        obj.insert(QString("total_disbursements_period"), ::OpenAPI::toJsonValue(m_total_disbursements_period));
    }
    if (m_total_disbursements_ytd_isSet) {
        obj.insert(QString("total_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_disbursements_ytd));
    }
    if (m_total_individual_contributions_period_isSet) {
        obj.insert(QString("total_individual_contributions_period"), ::OpenAPI::toJsonValue(m_total_individual_contributions_period));
    }
    if (m_total_individual_contributions_ytd_isSet) {
        obj.insert(QString("total_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_individual_contributions_ytd));
    }
    if (m_total_loan_repayments_made_period_isSet) {
        obj.insert(QString("total_loan_repayments_made_period"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_period));
    }
    if (m_total_loan_repayments_made_ytd_isSet) {
        obj.insert(QString("total_loan_repayments_made_ytd"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_ytd));
    }
    if (m_total_loans_received_period_isSet) {
        obj.insert(QString("total_loans_received_period"), ::OpenAPI::toJsonValue(m_total_loans_received_period));
    }
    if (m_total_loans_received_ytd_isSet) {
        obj.insert(QString("total_loans_received_ytd"), ::OpenAPI::toJsonValue(m_total_loans_received_ytd));
    }
    if (m_total_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_period));
    }
    if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_ytd));
    }
    if (m_total_period_isSet) {
        obj.insert(QString("total_period"), ::OpenAPI::toJsonValue(m_total_period));
    }
    if (m_total_receipts_period_isSet) {
        obj.insert(QString("total_receipts_period"), ::OpenAPI::toJsonValue(m_total_receipts_period));
    }
    if (m_total_receipts_ytd_isSet) {
        obj.insert(QString("total_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_receipts_ytd));
    }
    if (m_total_ytd_isSet) {
        obj.insert(QString("total_ytd"), ::OpenAPI::toJsonValue(m_total_ytd));
    }
    if (m_transfers_from_affiliated_committee_period_isSet) {
        obj.insert(QString("transfers_from_affiliated_committee_period"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_committee_period));
    }
    if (m_transfers_from_affiliated_committee_ytd_isSet) {
        obj.insert(QString("transfers_from_affiliated_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_committee_ytd));
    }
    if (m_transfers_to_other_authorized_committee_period_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_period"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_period));
    }
    if (m_transfers_to_other_authorized_committee_ytd_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_ytd));
    }
    return obj;
}

QList<double> OAICommitteeReportsPresidential::getAmendmentChain() const {
    return m_amendment_chain;
}
void OAICommitteeReportsPresidential::setAmendmentChain(const QList<double> &amendment_chain) {
    m_amendment_chain = amendment_chain;
    m_amendment_chain_isSet = true;
}

bool OAICommitteeReportsPresidential::is_amendment_chain_Set() const{
    return m_amendment_chain_isSet;
}

bool OAICommitteeReportsPresidential::is_amendment_chain_Valid() const{
    return m_amendment_chain_isValid;
}

QString OAICommitteeReportsPresidential::getAmendmentIndicator() const {
    return m_amendment_indicator;
}
void OAICommitteeReportsPresidential::setAmendmentIndicator(const QString &amendment_indicator) {
    m_amendment_indicator = amendment_indicator;
    m_amendment_indicator_isSet = true;
}

bool OAICommitteeReportsPresidential::is_amendment_indicator_Set() const{
    return m_amendment_indicator_isSet;
}

bool OAICommitteeReportsPresidential::is_amendment_indicator_Valid() const{
    return m_amendment_indicator_isValid;
}

QString OAICommitteeReportsPresidential::getAmendmentIndicatorFull() const {
    return m_amendment_indicator_full;
}
void OAICommitteeReportsPresidential::setAmendmentIndicatorFull(const QString &amendment_indicator_full) {
    m_amendment_indicator_full = amendment_indicator_full;
    m_amendment_indicator_full_isSet = true;
}

bool OAICommitteeReportsPresidential::is_amendment_indicator_full_Set() const{
    return m_amendment_indicator_full_isSet;
}

bool OAICommitteeReportsPresidential::is_amendment_indicator_full_Valid() const{
    return m_amendment_indicator_full_isValid;
}

QString OAICommitteeReportsPresidential::getBeginningImageNumber() const {
    return m_beginning_image_number;
}
void OAICommitteeReportsPresidential::setBeginningImageNumber(const QString &beginning_image_number) {
    m_beginning_image_number = beginning_image_number;
    m_beginning_image_number_isSet = true;
}

bool OAICommitteeReportsPresidential::is_beginning_image_number_Set() const{
    return m_beginning_image_number_isSet;
}

bool OAICommitteeReportsPresidential::is_beginning_image_number_Valid() const{
    return m_beginning_image_number_isValid;
}

double OAICommitteeReportsPresidential::getCandidateContributionPeriod() const {
    return m_candidate_contribution_period;
}
void OAICommitteeReportsPresidential::setCandidateContributionPeriod(const double &candidate_contribution_period) {
    m_candidate_contribution_period = candidate_contribution_period;
    m_candidate_contribution_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_candidate_contribution_period_Set() const{
    return m_candidate_contribution_period_isSet;
}

bool OAICommitteeReportsPresidential::is_candidate_contribution_period_Valid() const{
    return m_candidate_contribution_period_isValid;
}

double OAICommitteeReportsPresidential::getCandidateContributionYtd() const {
    return m_candidate_contribution_ytd;
}
void OAICommitteeReportsPresidential::setCandidateContributionYtd(const double &candidate_contribution_ytd) {
    m_candidate_contribution_ytd = candidate_contribution_ytd;
    m_candidate_contribution_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_candidate_contribution_ytd_Set() const{
    return m_candidate_contribution_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_candidate_contribution_ytd_Valid() const{
    return m_candidate_contribution_ytd_isValid;
}

double OAICommitteeReportsPresidential::getCashOnHandBeginningPeriod() const {
    return m_cash_on_hand_beginning_period;
}
void OAICommitteeReportsPresidential::setCashOnHandBeginningPeriod(const double &cash_on_hand_beginning_period) {
    m_cash_on_hand_beginning_period = cash_on_hand_beginning_period;
    m_cash_on_hand_beginning_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_cash_on_hand_beginning_period_Set() const{
    return m_cash_on_hand_beginning_period_isSet;
}

bool OAICommitteeReportsPresidential::is_cash_on_hand_beginning_period_Valid() const{
    return m_cash_on_hand_beginning_period_isValid;
}

double OAICommitteeReportsPresidential::getCashOnHandEndPeriod() const {
    return m_cash_on_hand_end_period;
}
void OAICommitteeReportsPresidential::setCashOnHandEndPeriod(const double &cash_on_hand_end_period) {
    m_cash_on_hand_end_period = cash_on_hand_end_period;
    m_cash_on_hand_end_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_cash_on_hand_end_period_Set() const{
    return m_cash_on_hand_end_period_isSet;
}

bool OAICommitteeReportsPresidential::is_cash_on_hand_end_period_Valid() const{
    return m_cash_on_hand_end_period_isValid;
}

QString OAICommitteeReportsPresidential::getCommitteeId() const {
    return m_committee_id;
}
void OAICommitteeReportsPresidential::setCommitteeId(const QString &committee_id) {
    m_committee_id = committee_id;
    m_committee_id_isSet = true;
}

bool OAICommitteeReportsPresidential::is_committee_id_Set() const{
    return m_committee_id_isSet;
}

bool OAICommitteeReportsPresidential::is_committee_id_Valid() const{
    return m_committee_id_isValid;
}

QString OAICommitteeReportsPresidential::getCommitteeName() const {
    return m_committee_name;
}
void OAICommitteeReportsPresidential::setCommitteeName(const QString &committee_name) {
    m_committee_name = committee_name;
    m_committee_name_isSet = true;
}

bool OAICommitteeReportsPresidential::is_committee_name_Set() const{
    return m_committee_name_isSet;
}

bool OAICommitteeReportsPresidential::is_committee_name_Valid() const{
    return m_committee_name_isValid;
}

QString OAICommitteeReportsPresidential::getCommitteeType() const {
    return m_committee_type;
}
void OAICommitteeReportsPresidential::setCommitteeType(const QString &committee_type) {
    m_committee_type = committee_type;
    m_committee_type_isSet = true;
}

bool OAICommitteeReportsPresidential::is_committee_type_Set() const{
    return m_committee_type_isSet;
}

bool OAICommitteeReportsPresidential::is_committee_type_Valid() const{
    return m_committee_type_isValid;
}

QDateTime OAICommitteeReportsPresidential::getCoverageEndDate() const {
    return m_coverage_end_date;
}
void OAICommitteeReportsPresidential::setCoverageEndDate(const QDateTime &coverage_end_date) {
    m_coverage_end_date = coverage_end_date;
    m_coverage_end_date_isSet = true;
}

bool OAICommitteeReportsPresidential::is_coverage_end_date_Set() const{
    return m_coverage_end_date_isSet;
}

bool OAICommitteeReportsPresidential::is_coverage_end_date_Valid() const{
    return m_coverage_end_date_isValid;
}

QDateTime OAICommitteeReportsPresidential::getCoverageStartDate() const {
    return m_coverage_start_date;
}
void OAICommitteeReportsPresidential::setCoverageStartDate(const QDateTime &coverage_start_date) {
    m_coverage_start_date = coverage_start_date;
    m_coverage_start_date_isSet = true;
}

bool OAICommitteeReportsPresidential::is_coverage_start_date_Set() const{
    return m_coverage_start_date_isSet;
}

bool OAICommitteeReportsPresidential::is_coverage_start_date_Valid() const{
    return m_coverage_start_date_isValid;
}

QString OAICommitteeReportsPresidential::getCsvUrl() const {
    return m_csv_url;
}
void OAICommitteeReportsPresidential::setCsvUrl(const QString &csv_url) {
    m_csv_url = csv_url;
    m_csv_url_isSet = true;
}

bool OAICommitteeReportsPresidential::is_csv_url_Set() const{
    return m_csv_url_isSet;
}

bool OAICommitteeReportsPresidential::is_csv_url_Valid() const{
    return m_csv_url_isValid;
}

qint32 OAICommitteeReportsPresidential::getCycle() const {
    return m_cycle;
}
void OAICommitteeReportsPresidential::setCycle(const qint32 &cycle) {
    m_cycle = cycle;
    m_cycle_isSet = true;
}

bool OAICommitteeReportsPresidential::is_cycle_Set() const{
    return m_cycle_isSet;
}

bool OAICommitteeReportsPresidential::is_cycle_Valid() const{
    return m_cycle_isValid;
}

double OAICommitteeReportsPresidential::getDebtsOwedByCommittee() const {
    return m_debts_owed_by_committee;
}
void OAICommitteeReportsPresidential::setDebtsOwedByCommittee(const double &debts_owed_by_committee) {
    m_debts_owed_by_committee = debts_owed_by_committee;
    m_debts_owed_by_committee_isSet = true;
}

bool OAICommitteeReportsPresidential::is_debts_owed_by_committee_Set() const{
    return m_debts_owed_by_committee_isSet;
}

bool OAICommitteeReportsPresidential::is_debts_owed_by_committee_Valid() const{
    return m_debts_owed_by_committee_isValid;
}

double OAICommitteeReportsPresidential::getDebtsOwedToCommittee() const {
    return m_debts_owed_to_committee;
}
void OAICommitteeReportsPresidential::setDebtsOwedToCommittee(const double &debts_owed_to_committee) {
    m_debts_owed_to_committee = debts_owed_to_committee;
    m_debts_owed_to_committee_isSet = true;
}

bool OAICommitteeReportsPresidential::is_debts_owed_to_committee_Set() const{
    return m_debts_owed_to_committee_isSet;
}

bool OAICommitteeReportsPresidential::is_debts_owed_to_committee_Valid() const{
    return m_debts_owed_to_committee_isValid;
}

QString OAICommitteeReportsPresidential::getDocumentDescription() const {
    return m_document_description;
}
void OAICommitteeReportsPresidential::setDocumentDescription(const QString &document_description) {
    m_document_description = document_description;
    m_document_description_isSet = true;
}

bool OAICommitteeReportsPresidential::is_document_description_Set() const{
    return m_document_description_isSet;
}

bool OAICommitteeReportsPresidential::is_document_description_Valid() const{
    return m_document_description_isValid;
}

QString OAICommitteeReportsPresidential::getEndImageNumber() const {
    return m_end_image_number;
}
void OAICommitteeReportsPresidential::setEndImageNumber(const QString &end_image_number) {
    m_end_image_number = end_image_number;
    m_end_image_number_isSet = true;
}

bool OAICommitteeReportsPresidential::is_end_image_number_Set() const{
    return m_end_image_number_isSet;
}

bool OAICommitteeReportsPresidential::is_end_image_number_Valid() const{
    return m_end_image_number_isValid;
}

double OAICommitteeReportsPresidential::getExemptLegalAccountingDisbursementPeriod() const {
    return m_exempt_legal_accounting_disbursement_period;
}
void OAICommitteeReportsPresidential::setExemptLegalAccountingDisbursementPeriod(const double &exempt_legal_accounting_disbursement_period) {
    m_exempt_legal_accounting_disbursement_period = exempt_legal_accounting_disbursement_period;
    m_exempt_legal_accounting_disbursement_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_exempt_legal_accounting_disbursement_period_Set() const{
    return m_exempt_legal_accounting_disbursement_period_isSet;
}

bool OAICommitteeReportsPresidential::is_exempt_legal_accounting_disbursement_period_Valid() const{
    return m_exempt_legal_accounting_disbursement_period_isValid;
}

double OAICommitteeReportsPresidential::getExemptLegalAccountingDisbursementYtd() const {
    return m_exempt_legal_accounting_disbursement_ytd;
}
void OAICommitteeReportsPresidential::setExemptLegalAccountingDisbursementYtd(const double &exempt_legal_accounting_disbursement_ytd) {
    m_exempt_legal_accounting_disbursement_ytd = exempt_legal_accounting_disbursement_ytd;
    m_exempt_legal_accounting_disbursement_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_exempt_legal_accounting_disbursement_ytd_Set() const{
    return m_exempt_legal_accounting_disbursement_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_exempt_legal_accounting_disbursement_ytd_Valid() const{
    return m_exempt_legal_accounting_disbursement_ytd_isValid;
}

double OAICommitteeReportsPresidential::getExpenditureSubjectToLimits() const {
    return m_expenditure_subject_to_limits;
}
void OAICommitteeReportsPresidential::setExpenditureSubjectToLimits(const double &expenditure_subject_to_limits) {
    m_expenditure_subject_to_limits = expenditure_subject_to_limits;
    m_expenditure_subject_to_limits_isSet = true;
}

bool OAICommitteeReportsPresidential::is_expenditure_subject_to_limits_Set() const{
    return m_expenditure_subject_to_limits_isSet;
}

bool OAICommitteeReportsPresidential::is_expenditure_subject_to_limits_Valid() const{
    return m_expenditure_subject_to_limits_isValid;
}

QString OAICommitteeReportsPresidential::getFecFileId() const {
    return m_fec_file_id;
}
void OAICommitteeReportsPresidential::setFecFileId(const QString &fec_file_id) {
    m_fec_file_id = fec_file_id;
    m_fec_file_id_isSet = true;
}

bool OAICommitteeReportsPresidential::is_fec_file_id_Set() const{
    return m_fec_file_id_isSet;
}

bool OAICommitteeReportsPresidential::is_fec_file_id_Valid() const{
    return m_fec_file_id_isValid;
}

QString OAICommitteeReportsPresidential::getFecUrl() const {
    return m_fec_url;
}
void OAICommitteeReportsPresidential::setFecUrl(const QString &fec_url) {
    m_fec_url = fec_url;
    m_fec_url_isSet = true;
}

bool OAICommitteeReportsPresidential::is_fec_url_Set() const{
    return m_fec_url_isSet;
}

bool OAICommitteeReportsPresidential::is_fec_url_Valid() const{
    return m_fec_url_isValid;
}

double OAICommitteeReportsPresidential::getFederalFundsPeriod() const {
    return m_federal_funds_period;
}
void OAICommitteeReportsPresidential::setFederalFundsPeriod(const double &federal_funds_period) {
    m_federal_funds_period = federal_funds_period;
    m_federal_funds_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_federal_funds_period_Set() const{
    return m_federal_funds_period_isSet;
}

bool OAICommitteeReportsPresidential::is_federal_funds_period_Valid() const{
    return m_federal_funds_period_isValid;
}

double OAICommitteeReportsPresidential::getFederalFundsYtd() const {
    return m_federal_funds_ytd;
}
void OAICommitteeReportsPresidential::setFederalFundsYtd(const double &federal_funds_ytd) {
    m_federal_funds_ytd = federal_funds_ytd;
    m_federal_funds_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_federal_funds_ytd_Set() const{
    return m_federal_funds_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_federal_funds_ytd_Valid() const{
    return m_federal_funds_ytd_isValid;
}

qint32 OAICommitteeReportsPresidential::getFileNumber() const {
    return m_file_number;
}
void OAICommitteeReportsPresidential::setFileNumber(const qint32 &file_number) {
    m_file_number = file_number;
    m_file_number_isSet = true;
}

bool OAICommitteeReportsPresidential::is_file_number_Set() const{
    return m_file_number_isSet;
}

bool OAICommitteeReportsPresidential::is_file_number_Valid() const{
    return m_file_number_isValid;
}

double OAICommitteeReportsPresidential::getFundraisingDisbursementsPeriod() const {
    return m_fundraising_disbursements_period;
}
void OAICommitteeReportsPresidential::setFundraisingDisbursementsPeriod(const double &fundraising_disbursements_period) {
    m_fundraising_disbursements_period = fundraising_disbursements_period;
    m_fundraising_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_fundraising_disbursements_period_Set() const{
    return m_fundraising_disbursements_period_isSet;
}

bool OAICommitteeReportsPresidential::is_fundraising_disbursements_period_Valid() const{
    return m_fundraising_disbursements_period_isValid;
}

double OAICommitteeReportsPresidential::getFundraisingDisbursementsYtd() const {
    return m_fundraising_disbursements_ytd;
}
void OAICommitteeReportsPresidential::setFundraisingDisbursementsYtd(const double &fundraising_disbursements_ytd) {
    m_fundraising_disbursements_ytd = fundraising_disbursements_ytd;
    m_fundraising_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_fundraising_disbursements_ytd_Set() const{
    return m_fundraising_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_fundraising_disbursements_ytd_Valid() const{
    return m_fundraising_disbursements_ytd_isValid;
}

QString OAICommitteeReportsPresidential::getHtmlUrl() const {
    return m_html_url;
}
void OAICommitteeReportsPresidential::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAICommitteeReportsPresidential::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAICommitteeReportsPresidential::is_html_url_Valid() const{
    return m_html_url_isValid;
}

double OAICommitteeReportsPresidential::getIndividualItemizedContributionsPeriod() const {
    return m_individual_itemized_contributions_period;
}
void OAICommitteeReportsPresidential::setIndividualItemizedContributionsPeriod(const double &individual_itemized_contributions_period) {
    m_individual_itemized_contributions_period = individual_itemized_contributions_period;
    m_individual_itemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_individual_itemized_contributions_period_Set() const{
    return m_individual_itemized_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_individual_itemized_contributions_period_Valid() const{
    return m_individual_itemized_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getIndividualItemizedContributionsYtd() const {
    return m_individual_itemized_contributions_ytd;
}
void OAICommitteeReportsPresidential::setIndividualItemizedContributionsYtd(const double &individual_itemized_contributions_ytd) {
    m_individual_itemized_contributions_ytd = individual_itemized_contributions_ytd;
    m_individual_itemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_individual_itemized_contributions_ytd_Set() const{
    return m_individual_itemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_individual_itemized_contributions_ytd_Valid() const{
    return m_individual_itemized_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getIndividualUnitemizedContributionsPeriod() const {
    return m_individual_unitemized_contributions_period;
}
void OAICommitteeReportsPresidential::setIndividualUnitemizedContributionsPeriod(const double &individual_unitemized_contributions_period) {
    m_individual_unitemized_contributions_period = individual_unitemized_contributions_period;
    m_individual_unitemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_individual_unitemized_contributions_period_Set() const{
    return m_individual_unitemized_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_individual_unitemized_contributions_period_Valid() const{
    return m_individual_unitemized_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getIndividualUnitemizedContributionsYtd() const {
    return m_individual_unitemized_contributions_ytd;
}
void OAICommitteeReportsPresidential::setIndividualUnitemizedContributionsYtd(const double &individual_unitemized_contributions_ytd) {
    m_individual_unitemized_contributions_ytd = individual_unitemized_contributions_ytd;
    m_individual_unitemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_individual_unitemized_contributions_ytd_Set() const{
    return m_individual_unitemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_individual_unitemized_contributions_ytd_Valid() const{
    return m_individual_unitemized_contributions_ytd_isValid;
}

bool OAICommitteeReportsPresidential::isIsAmended() const {
    return m_is_amended;
}
void OAICommitteeReportsPresidential::setIsAmended(const bool &is_amended) {
    m_is_amended = is_amended;
    m_is_amended_isSet = true;
}

bool OAICommitteeReportsPresidential::is_is_amended_Set() const{
    return m_is_amended_isSet;
}

bool OAICommitteeReportsPresidential::is_is_amended_Valid() const{
    return m_is_amended_isValid;
}

double OAICommitteeReportsPresidential::getItemsOnHandLiquidated() const {
    return m_items_on_hand_liquidated;
}
void OAICommitteeReportsPresidential::setItemsOnHandLiquidated(const double &items_on_hand_liquidated) {
    m_items_on_hand_liquidated = items_on_hand_liquidated;
    m_items_on_hand_liquidated_isSet = true;
}

bool OAICommitteeReportsPresidential::is_items_on_hand_liquidated_Set() const{
    return m_items_on_hand_liquidated_isSet;
}

bool OAICommitteeReportsPresidential::is_items_on_hand_liquidated_Valid() const{
    return m_items_on_hand_liquidated_isValid;
}

double OAICommitteeReportsPresidential::getLoansReceivedFromCandidatePeriod() const {
    return m_loans_received_from_candidate_period;
}
void OAICommitteeReportsPresidential::setLoansReceivedFromCandidatePeriod(const double &loans_received_from_candidate_period) {
    m_loans_received_from_candidate_period = loans_received_from_candidate_period;
    m_loans_received_from_candidate_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_loans_received_from_candidate_period_Set() const{
    return m_loans_received_from_candidate_period_isSet;
}

bool OAICommitteeReportsPresidential::is_loans_received_from_candidate_period_Valid() const{
    return m_loans_received_from_candidate_period_isValid;
}

double OAICommitteeReportsPresidential::getLoansReceivedFromCandidateYtd() const {
    return m_loans_received_from_candidate_ytd;
}
void OAICommitteeReportsPresidential::setLoansReceivedFromCandidateYtd(const double &loans_received_from_candidate_ytd) {
    m_loans_received_from_candidate_ytd = loans_received_from_candidate_ytd;
    m_loans_received_from_candidate_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_loans_received_from_candidate_ytd_Set() const{
    return m_loans_received_from_candidate_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_loans_received_from_candidate_ytd_Valid() const{
    return m_loans_received_from_candidate_ytd_isValid;
}

QString OAICommitteeReportsPresidential::getMeansFiled() const {
    return m_means_filed;
}
void OAICommitteeReportsPresidential::setMeansFiled(const QString &means_filed) {
    m_means_filed = means_filed;
    m_means_filed_isSet = true;
}

bool OAICommitteeReportsPresidential::is_means_filed_Set() const{
    return m_means_filed_isSet;
}

bool OAICommitteeReportsPresidential::is_means_filed_Valid() const{
    return m_means_filed_isValid;
}

bool OAICommitteeReportsPresidential::isMostRecent() const {
    return m_most_recent;
}
void OAICommitteeReportsPresidential::setMostRecent(const bool &most_recent) {
    m_most_recent = most_recent;
    m_most_recent_isSet = true;
}

bool OAICommitteeReportsPresidential::is_most_recent_Set() const{
    return m_most_recent_isSet;
}

bool OAICommitteeReportsPresidential::is_most_recent_Valid() const{
    return m_most_recent_isValid;
}

double OAICommitteeReportsPresidential::getMostRecentFileNumber() const {
    return m_most_recent_file_number;
}
void OAICommitteeReportsPresidential::setMostRecentFileNumber(const double &most_recent_file_number) {
    m_most_recent_file_number = most_recent_file_number;
    m_most_recent_file_number_isSet = true;
}

bool OAICommitteeReportsPresidential::is_most_recent_file_number_Set() const{
    return m_most_recent_file_number_isSet;
}

bool OAICommitteeReportsPresidential::is_most_recent_file_number_Valid() const{
    return m_most_recent_file_number_isValid;
}

double OAICommitteeReportsPresidential::getNetContributionsCycleToDate() const {
    return m_net_contributions_cycle_to_date;
}
void OAICommitteeReportsPresidential::setNetContributionsCycleToDate(const double &net_contributions_cycle_to_date) {
    m_net_contributions_cycle_to_date = net_contributions_cycle_to_date;
    m_net_contributions_cycle_to_date_isSet = true;
}

bool OAICommitteeReportsPresidential::is_net_contributions_cycle_to_date_Set() const{
    return m_net_contributions_cycle_to_date_isSet;
}

bool OAICommitteeReportsPresidential::is_net_contributions_cycle_to_date_Valid() const{
    return m_net_contributions_cycle_to_date_isValid;
}

double OAICommitteeReportsPresidential::getNetOperatingExpendituresCycleToDate() const {
    return m_net_operating_expenditures_cycle_to_date;
}
void OAICommitteeReportsPresidential::setNetOperatingExpendituresCycleToDate(const double &net_operating_expenditures_cycle_to_date) {
    m_net_operating_expenditures_cycle_to_date = net_operating_expenditures_cycle_to_date;
    m_net_operating_expenditures_cycle_to_date_isSet = true;
}

bool OAICommitteeReportsPresidential::is_net_operating_expenditures_cycle_to_date_Set() const{
    return m_net_operating_expenditures_cycle_to_date_isSet;
}

bool OAICommitteeReportsPresidential::is_net_operating_expenditures_cycle_to_date_Valid() const{
    return m_net_operating_expenditures_cycle_to_date_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToFundraisingExpendituresPeriod() const {
    return m_offsets_to_fundraising_expenditures_period;
}
void OAICommitteeReportsPresidential::setOffsetsToFundraisingExpendituresPeriod(const double &offsets_to_fundraising_expenditures_period) {
    m_offsets_to_fundraising_expenditures_period = offsets_to_fundraising_expenditures_period;
    m_offsets_to_fundraising_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_fundraising_expenditures_period_Set() const{
    return m_offsets_to_fundraising_expenditures_period_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_fundraising_expenditures_period_Valid() const{
    return m_offsets_to_fundraising_expenditures_period_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToFundraisingExpendituresYtd() const {
    return m_offsets_to_fundraising_expenditures_ytd;
}
void OAICommitteeReportsPresidential::setOffsetsToFundraisingExpendituresYtd(const double &offsets_to_fundraising_expenditures_ytd) {
    m_offsets_to_fundraising_expenditures_ytd = offsets_to_fundraising_expenditures_ytd;
    m_offsets_to_fundraising_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_fundraising_expenditures_ytd_Set() const{
    return m_offsets_to_fundraising_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_fundraising_expenditures_ytd_Valid() const{
    return m_offsets_to_fundraising_expenditures_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToLegalAccountingPeriod() const {
    return m_offsets_to_legal_accounting_period;
}
void OAICommitteeReportsPresidential::setOffsetsToLegalAccountingPeriod(const double &offsets_to_legal_accounting_period) {
    m_offsets_to_legal_accounting_period = offsets_to_legal_accounting_period;
    m_offsets_to_legal_accounting_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_legal_accounting_period_Set() const{
    return m_offsets_to_legal_accounting_period_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_legal_accounting_period_Valid() const{
    return m_offsets_to_legal_accounting_period_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToLegalAccountingYtd() const {
    return m_offsets_to_legal_accounting_ytd;
}
void OAICommitteeReportsPresidential::setOffsetsToLegalAccountingYtd(const double &offsets_to_legal_accounting_ytd) {
    m_offsets_to_legal_accounting_ytd = offsets_to_legal_accounting_ytd;
    m_offsets_to_legal_accounting_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_legal_accounting_ytd_Set() const{
    return m_offsets_to_legal_accounting_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_legal_accounting_ytd_Valid() const{
    return m_offsets_to_legal_accounting_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToOperatingExpendituresPeriod() const {
    return m_offsets_to_operating_expenditures_period;
}
void OAICommitteeReportsPresidential::setOffsetsToOperatingExpendituresPeriod(const double &offsets_to_operating_expenditures_period) {
    m_offsets_to_operating_expenditures_period = offsets_to_operating_expenditures_period;
    m_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_operating_expenditures_period_Set() const{
    return m_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_operating_expenditures_period_Valid() const{
    return m_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPresidential::getOffsetsToOperatingExpendituresYtd() const {
    return m_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReportsPresidential::setOffsetsToOperatingExpendituresYtd(const double &offsets_to_operating_expenditures_ytd) {
    m_offsets_to_operating_expenditures_ytd = offsets_to_operating_expenditures_ytd;
    m_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_offsets_to_operating_expenditures_ytd_Set() const{
    return m_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOperatingExpendituresPeriod() const {
    return m_operating_expenditures_period;
}
void OAICommitteeReportsPresidential::setOperatingExpendituresPeriod(const double &operating_expenditures_period) {
    m_operating_expenditures_period = operating_expenditures_period;
    m_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_operating_expenditures_period_Set() const{
    return m_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPresidential::is_operating_expenditures_period_Valid() const{
    return m_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPresidential::getOperatingExpendituresYtd() const {
    return m_operating_expenditures_ytd;
}
void OAICommitteeReportsPresidential::setOperatingExpendituresYtd(const double &operating_expenditures_ytd) {
    m_operating_expenditures_ytd = operating_expenditures_ytd;
    m_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_operating_expenditures_ytd_Set() const{
    return m_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_operating_expenditures_ytd_Valid() const{
    return m_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOtherDisbursementsPeriod() const {
    return m_other_disbursements_period;
}
void OAICommitteeReportsPresidential::setOtherDisbursementsPeriod(const double &other_disbursements_period) {
    m_other_disbursements_period = other_disbursements_period;
    m_other_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_disbursements_period_Set() const{
    return m_other_disbursements_period_isSet;
}

bool OAICommitteeReportsPresidential::is_other_disbursements_period_Valid() const{
    return m_other_disbursements_period_isValid;
}

double OAICommitteeReportsPresidential::getOtherDisbursementsYtd() const {
    return m_other_disbursements_ytd;
}
void OAICommitteeReportsPresidential::setOtherDisbursementsYtd(const double &other_disbursements_ytd) {
    m_other_disbursements_ytd = other_disbursements_ytd;
    m_other_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_disbursements_ytd_Set() const{
    return m_other_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_other_disbursements_ytd_Valid() const{
    return m_other_disbursements_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOtherLoansReceivedPeriod() const {
    return m_other_loans_received_period;
}
void OAICommitteeReportsPresidential::setOtherLoansReceivedPeriod(const double &other_loans_received_period) {
    m_other_loans_received_period = other_loans_received_period;
    m_other_loans_received_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_loans_received_period_Set() const{
    return m_other_loans_received_period_isSet;
}

bool OAICommitteeReportsPresidential::is_other_loans_received_period_Valid() const{
    return m_other_loans_received_period_isValid;
}

double OAICommitteeReportsPresidential::getOtherLoansReceivedYtd() const {
    return m_other_loans_received_ytd;
}
void OAICommitteeReportsPresidential::setOtherLoansReceivedYtd(const double &other_loans_received_ytd) {
    m_other_loans_received_ytd = other_loans_received_ytd;
    m_other_loans_received_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_loans_received_ytd_Set() const{
    return m_other_loans_received_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_other_loans_received_ytd_Valid() const{
    return m_other_loans_received_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOtherPoliticalCommitteeContributionsPeriod() const {
    return m_other_political_committee_contributions_period;
}
void OAICommitteeReportsPresidential::setOtherPoliticalCommitteeContributionsPeriod(const double &other_political_committee_contributions_period) {
    m_other_political_committee_contributions_period = other_political_committee_contributions_period;
    m_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_political_committee_contributions_period_Set() const{
    return m_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_other_political_committee_contributions_period_Valid() const{
    return m_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getOtherPoliticalCommitteeContributionsYtd() const {
    return m_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsPresidential::setOtherPoliticalCommitteeContributionsYtd(const double &other_political_committee_contributions_ytd) {
    m_other_political_committee_contributions_ytd = other_political_committee_contributions_ytd;
    m_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_political_committee_contributions_ytd_Set() const{
    return m_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_other_political_committee_contributions_ytd_Valid() const{
    return m_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getOtherReceiptsPeriod() const {
    return m_other_receipts_period;
}
void OAICommitteeReportsPresidential::setOtherReceiptsPeriod(const double &other_receipts_period) {
    m_other_receipts_period = other_receipts_period;
    m_other_receipts_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_receipts_period_Set() const{
    return m_other_receipts_period_isSet;
}

bool OAICommitteeReportsPresidential::is_other_receipts_period_Valid() const{
    return m_other_receipts_period_isValid;
}

double OAICommitteeReportsPresidential::getOtherReceiptsYtd() const {
    return m_other_receipts_ytd;
}
void OAICommitteeReportsPresidential::setOtherReceiptsYtd(const double &other_receipts_ytd) {
    m_other_receipts_ytd = other_receipts_ytd;
    m_other_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_other_receipts_ytd_Set() const{
    return m_other_receipts_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_other_receipts_ytd_Valid() const{
    return m_other_receipts_ytd_isValid;
}

QString OAICommitteeReportsPresidential::getPdfUrl() const {
    return m_pdf_url;
}
void OAICommitteeReportsPresidential::setPdfUrl(const QString &pdf_url) {
    m_pdf_url = pdf_url;
    m_pdf_url_isSet = true;
}

bool OAICommitteeReportsPresidential::is_pdf_url_Set() const{
    return m_pdf_url_isSet;
}

bool OAICommitteeReportsPresidential::is_pdf_url_Valid() const{
    return m_pdf_url_isValid;
}

double OAICommitteeReportsPresidential::getPoliticalPartyCommitteeContributionsPeriod() const {
    return m_political_party_committee_contributions_period;
}
void OAICommitteeReportsPresidential::setPoliticalPartyCommitteeContributionsPeriod(const double &political_party_committee_contributions_period) {
    m_political_party_committee_contributions_period = political_party_committee_contributions_period;
    m_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_political_party_committee_contributions_period_Set() const{
    return m_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_political_party_committee_contributions_period_Valid() const{
    return m_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getPoliticalPartyCommitteeContributionsYtd() const {
    return m_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsPresidential::setPoliticalPartyCommitteeContributionsYtd(const double &political_party_committee_contributions_ytd) {
    m_political_party_committee_contributions_ytd = political_party_committee_contributions_ytd;
    m_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_political_party_committee_contributions_ytd_Set() const{
    return m_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_political_party_committee_contributions_ytd_Valid() const{
    return m_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getPreviousFileNumber() const {
    return m_previous_file_number;
}
void OAICommitteeReportsPresidential::setPreviousFileNumber(const double &previous_file_number) {
    m_previous_file_number = previous_file_number;
    m_previous_file_number_isSet = true;
}

bool OAICommitteeReportsPresidential::is_previous_file_number_Set() const{
    return m_previous_file_number_isSet;
}

bool OAICommitteeReportsPresidential::is_previous_file_number_Valid() const{
    return m_previous_file_number_isValid;
}

QDate OAICommitteeReportsPresidential::getReceiptDate() const {
    return m_receipt_date;
}
void OAICommitteeReportsPresidential::setReceiptDate(const QDate &receipt_date) {
    m_receipt_date = receipt_date;
    m_receipt_date_isSet = true;
}

bool OAICommitteeReportsPresidential::is_receipt_date_Set() const{
    return m_receipt_date_isSet;
}

bool OAICommitteeReportsPresidential::is_receipt_date_Valid() const{
    return m_receipt_date_isValid;
}

double OAICommitteeReportsPresidential::getRefundedIndividualContributionsPeriod() const {
    return m_refunded_individual_contributions_period;
}
void OAICommitteeReportsPresidential::setRefundedIndividualContributionsPeriod(const double &refunded_individual_contributions_period) {
    m_refunded_individual_contributions_period = refunded_individual_contributions_period;
    m_refunded_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_individual_contributions_period_Set() const{
    return m_refunded_individual_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_individual_contributions_period_Valid() const{
    return m_refunded_individual_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getRefundedIndividualContributionsYtd() const {
    return m_refunded_individual_contributions_ytd;
}
void OAICommitteeReportsPresidential::setRefundedIndividualContributionsYtd(const double &refunded_individual_contributions_ytd) {
    m_refunded_individual_contributions_ytd = refunded_individual_contributions_ytd;
    m_refunded_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_individual_contributions_ytd_Set() const{
    return m_refunded_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_individual_contributions_ytd_Valid() const{
    return m_refunded_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getRefundedOtherPoliticalCommitteeContributionsPeriod() const {
    return m_refunded_other_political_committee_contributions_period;
}
void OAICommitteeReportsPresidential::setRefundedOtherPoliticalCommitteeContributionsPeriod(const double &refunded_other_political_committee_contributions_period) {
    m_refunded_other_political_committee_contributions_period = refunded_other_political_committee_contributions_period;
    m_refunded_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_other_political_committee_contributions_period_Set() const{
    return m_refunded_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_other_political_committee_contributions_period_Valid() const{
    return m_refunded_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getRefundedOtherPoliticalCommitteeContributionsYtd() const {
    return m_refunded_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsPresidential::setRefundedOtherPoliticalCommitteeContributionsYtd(const double &refunded_other_political_committee_contributions_ytd) {
    m_refunded_other_political_committee_contributions_ytd = refunded_other_political_committee_contributions_ytd;
    m_refunded_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_other_political_committee_contributions_ytd_Set() const{
    return m_refunded_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_other_political_committee_contributions_ytd_Valid() const{
    return m_refunded_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getRefundedPoliticalPartyCommitteeContributionsPeriod() const {
    return m_refunded_political_party_committee_contributions_period;
}
void OAICommitteeReportsPresidential::setRefundedPoliticalPartyCommitteeContributionsPeriod(const double &refunded_political_party_committee_contributions_period) {
    m_refunded_political_party_committee_contributions_period = refunded_political_party_committee_contributions_period;
    m_refunded_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_political_party_committee_contributions_period_Set() const{
    return m_refunded_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_political_party_committee_contributions_period_Valid() const{
    return m_refunded_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getRefundedPoliticalPartyCommitteeContributionsYtd() const {
    return m_refunded_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsPresidential::setRefundedPoliticalPartyCommitteeContributionsYtd(const double &refunded_political_party_committee_contributions_ytd) {
    m_refunded_political_party_committee_contributions_ytd = refunded_political_party_committee_contributions_ytd;
    m_refunded_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_refunded_political_party_committee_contributions_ytd_Set() const{
    return m_refunded_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_refunded_political_party_committee_contributions_ytd_Valid() const{
    return m_refunded_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getRepaymentsLoansMadeByCandidatePeriod() const {
    return m_repayments_loans_made_by_candidate_period;
}
void OAICommitteeReportsPresidential::setRepaymentsLoansMadeByCandidatePeriod(const double &repayments_loans_made_by_candidate_period) {
    m_repayments_loans_made_by_candidate_period = repayments_loans_made_by_candidate_period;
    m_repayments_loans_made_by_candidate_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_repayments_loans_made_by_candidate_period_Set() const{
    return m_repayments_loans_made_by_candidate_period_isSet;
}

bool OAICommitteeReportsPresidential::is_repayments_loans_made_by_candidate_period_Valid() const{
    return m_repayments_loans_made_by_candidate_period_isValid;
}

double OAICommitteeReportsPresidential::getRepaymentsLoansMadeCandidateYtd() const {
    return m_repayments_loans_made_candidate_ytd;
}
void OAICommitteeReportsPresidential::setRepaymentsLoansMadeCandidateYtd(const double &repayments_loans_made_candidate_ytd) {
    m_repayments_loans_made_candidate_ytd = repayments_loans_made_candidate_ytd;
    m_repayments_loans_made_candidate_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_repayments_loans_made_candidate_ytd_Set() const{
    return m_repayments_loans_made_candidate_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_repayments_loans_made_candidate_ytd_Valid() const{
    return m_repayments_loans_made_candidate_ytd_isValid;
}

double OAICommitteeReportsPresidential::getRepaymentsOtherLoansPeriod() const {
    return m_repayments_other_loans_period;
}
void OAICommitteeReportsPresidential::setRepaymentsOtherLoansPeriod(const double &repayments_other_loans_period) {
    m_repayments_other_loans_period = repayments_other_loans_period;
    m_repayments_other_loans_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_repayments_other_loans_period_Set() const{
    return m_repayments_other_loans_period_isSet;
}

bool OAICommitteeReportsPresidential::is_repayments_other_loans_period_Valid() const{
    return m_repayments_other_loans_period_isValid;
}

double OAICommitteeReportsPresidential::getRepaymentsOtherLoansYtd() const {
    return m_repayments_other_loans_ytd;
}
void OAICommitteeReportsPresidential::setRepaymentsOtherLoansYtd(const double &repayments_other_loans_ytd) {
    m_repayments_other_loans_ytd = repayments_other_loans_ytd;
    m_repayments_other_loans_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_repayments_other_loans_ytd_Set() const{
    return m_repayments_other_loans_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_repayments_other_loans_ytd_Valid() const{
    return m_repayments_other_loans_ytd_isValid;
}

QString OAICommitteeReportsPresidential::getReportForm() const {
    return m_report_form;
}
void OAICommitteeReportsPresidential::setReportForm(const QString &report_form) {
    m_report_form = report_form;
    m_report_form_isSet = true;
}

bool OAICommitteeReportsPresidential::is_report_form_Set() const{
    return m_report_form_isSet;
}

bool OAICommitteeReportsPresidential::is_report_form_Valid() const{
    return m_report_form_isValid;
}

QString OAICommitteeReportsPresidential::getReportType() const {
    return m_report_type;
}
void OAICommitteeReportsPresidential::setReportType(const QString &report_type) {
    m_report_type = report_type;
    m_report_type_isSet = true;
}

bool OAICommitteeReportsPresidential::is_report_type_Set() const{
    return m_report_type_isSet;
}

bool OAICommitteeReportsPresidential::is_report_type_Valid() const{
    return m_report_type_isValid;
}

QString OAICommitteeReportsPresidential::getReportTypeFull() const {
    return m_report_type_full;
}
void OAICommitteeReportsPresidential::setReportTypeFull(const QString &report_type_full) {
    m_report_type_full = report_type_full;
    m_report_type_full_isSet = true;
}

bool OAICommitteeReportsPresidential::is_report_type_full_Set() const{
    return m_report_type_full_isSet;
}

bool OAICommitteeReportsPresidential::is_report_type_full_Valid() const{
    return m_report_type_full_isValid;
}

qint32 OAICommitteeReportsPresidential::getReportYear() const {
    return m_report_year;
}
void OAICommitteeReportsPresidential::setReportYear(const qint32 &report_year) {
    m_report_year = report_year;
    m_report_year_isSet = true;
}

bool OAICommitteeReportsPresidential::is_report_year_Set() const{
    return m_report_year_isSet;
}

bool OAICommitteeReportsPresidential::is_report_year_Valid() const{
    return m_report_year_isValid;
}

double OAICommitteeReportsPresidential::getSubtotalSummaryPeriod() const {
    return m_subtotal_summary_period;
}
void OAICommitteeReportsPresidential::setSubtotalSummaryPeriod(const double &subtotal_summary_period) {
    m_subtotal_summary_period = subtotal_summary_period;
    m_subtotal_summary_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_subtotal_summary_period_Set() const{
    return m_subtotal_summary_period_isSet;
}

bool OAICommitteeReportsPresidential::is_subtotal_summary_period_Valid() const{
    return m_subtotal_summary_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalContributionRefundsPeriod() const {
    return m_total_contribution_refunds_period;
}
void OAICommitteeReportsPresidential::setTotalContributionRefundsPeriod(const double &total_contribution_refunds_period) {
    m_total_contribution_refunds_period = total_contribution_refunds_period;
    m_total_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_contribution_refunds_period_Set() const{
    return m_total_contribution_refunds_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_contribution_refunds_period_Valid() const{
    return m_total_contribution_refunds_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalContributionRefundsYtd() const {
    return m_total_contribution_refunds_ytd;
}
void OAICommitteeReportsPresidential::setTotalContributionRefundsYtd(const double &total_contribution_refunds_ytd) {
    m_total_contribution_refunds_ytd = total_contribution_refunds_ytd;
    m_total_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_contribution_refunds_ytd_Set() const{
    return m_total_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_contribution_refunds_ytd_Valid() const{
    return m_total_contribution_refunds_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalContributionsPeriod() const {
    return m_total_contributions_period;
}
void OAICommitteeReportsPresidential::setTotalContributionsPeriod(const double &total_contributions_period) {
    m_total_contributions_period = total_contributions_period;
    m_total_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_contributions_period_Set() const{
    return m_total_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_contributions_period_Valid() const{
    return m_total_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalContributionsYtd() const {
    return m_total_contributions_ytd;
}
void OAICommitteeReportsPresidential::setTotalContributionsYtd(const double &total_contributions_ytd) {
    m_total_contributions_ytd = total_contributions_ytd;
    m_total_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_contributions_ytd_Set() const{
    return m_total_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_contributions_ytd_Valid() const{
    return m_total_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalDisbursementsPeriod() const {
    return m_total_disbursements_period;
}
void OAICommitteeReportsPresidential::setTotalDisbursementsPeriod(const double &total_disbursements_period) {
    m_total_disbursements_period = total_disbursements_period;
    m_total_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_disbursements_period_Set() const{
    return m_total_disbursements_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_disbursements_period_Valid() const{
    return m_total_disbursements_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalDisbursementsYtd() const {
    return m_total_disbursements_ytd;
}
void OAICommitteeReportsPresidential::setTotalDisbursementsYtd(const double &total_disbursements_ytd) {
    m_total_disbursements_ytd = total_disbursements_ytd;
    m_total_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_disbursements_ytd_Set() const{
    return m_total_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_disbursements_ytd_Valid() const{
    return m_total_disbursements_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalIndividualContributionsPeriod() const {
    return m_total_individual_contributions_period;
}
void OAICommitteeReportsPresidential::setTotalIndividualContributionsPeriod(const double &total_individual_contributions_period) {
    m_total_individual_contributions_period = total_individual_contributions_period;
    m_total_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_individual_contributions_period_Set() const{
    return m_total_individual_contributions_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_individual_contributions_period_Valid() const{
    return m_total_individual_contributions_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalIndividualContributionsYtd() const {
    return m_total_individual_contributions_ytd;
}
void OAICommitteeReportsPresidential::setTotalIndividualContributionsYtd(const double &total_individual_contributions_ytd) {
    m_total_individual_contributions_ytd = total_individual_contributions_ytd;
    m_total_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_individual_contributions_ytd_Set() const{
    return m_total_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_individual_contributions_ytd_Valid() const{
    return m_total_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalLoanRepaymentsMadePeriod() const {
    return m_total_loan_repayments_made_period;
}
void OAICommitteeReportsPresidential::setTotalLoanRepaymentsMadePeriod(const double &total_loan_repayments_made_period) {
    m_total_loan_repayments_made_period = total_loan_repayments_made_period;
    m_total_loan_repayments_made_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_loan_repayments_made_period_Set() const{
    return m_total_loan_repayments_made_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_loan_repayments_made_period_Valid() const{
    return m_total_loan_repayments_made_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalLoanRepaymentsMadeYtd() const {
    return m_total_loan_repayments_made_ytd;
}
void OAICommitteeReportsPresidential::setTotalLoanRepaymentsMadeYtd(const double &total_loan_repayments_made_ytd) {
    m_total_loan_repayments_made_ytd = total_loan_repayments_made_ytd;
    m_total_loan_repayments_made_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_loan_repayments_made_ytd_Set() const{
    return m_total_loan_repayments_made_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_loan_repayments_made_ytd_Valid() const{
    return m_total_loan_repayments_made_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalLoansReceivedPeriod() const {
    return m_total_loans_received_period;
}
void OAICommitteeReportsPresidential::setTotalLoansReceivedPeriod(const double &total_loans_received_period) {
    m_total_loans_received_period = total_loans_received_period;
    m_total_loans_received_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_loans_received_period_Set() const{
    return m_total_loans_received_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_loans_received_period_Valid() const{
    return m_total_loans_received_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalLoansReceivedYtd() const {
    return m_total_loans_received_ytd;
}
void OAICommitteeReportsPresidential::setTotalLoansReceivedYtd(const double &total_loans_received_ytd) {
    m_total_loans_received_ytd = total_loans_received_ytd;
    m_total_loans_received_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_loans_received_ytd_Set() const{
    return m_total_loans_received_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_loans_received_ytd_Valid() const{
    return m_total_loans_received_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalOffsetsToOperatingExpendituresPeriod() const {
    return m_total_offsets_to_operating_expenditures_period;
}
void OAICommitteeReportsPresidential::setTotalOffsetsToOperatingExpendituresPeriod(const double &total_offsets_to_operating_expenditures_period) {
    m_total_offsets_to_operating_expenditures_period = total_offsets_to_operating_expenditures_period;
    m_total_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_offsets_to_operating_expenditures_period_Set() const{
    return m_total_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_offsets_to_operating_expenditures_period_Valid() const{
    return m_total_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalOffsetsToOperatingExpendituresYtd() const {
    return m_total_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReportsPresidential::setTotalOffsetsToOperatingExpendituresYtd(const double &total_offsets_to_operating_expenditures_ytd) {
    m_total_offsets_to_operating_expenditures_ytd = total_offsets_to_operating_expenditures_ytd;
    m_total_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_offsets_to_operating_expenditures_ytd_Set() const{
    return m_total_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_total_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalPeriod() const {
    return m_total_period;
}
void OAICommitteeReportsPresidential::setTotalPeriod(const double &total_period) {
    m_total_period = total_period;
    m_total_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_period_Set() const{
    return m_total_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_period_Valid() const{
    return m_total_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalReceiptsPeriod() const {
    return m_total_receipts_period;
}
void OAICommitteeReportsPresidential::setTotalReceiptsPeriod(const double &total_receipts_period) {
    m_total_receipts_period = total_receipts_period;
    m_total_receipts_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_receipts_period_Set() const{
    return m_total_receipts_period_isSet;
}

bool OAICommitteeReportsPresidential::is_total_receipts_period_Valid() const{
    return m_total_receipts_period_isValid;
}

double OAICommitteeReportsPresidential::getTotalReceiptsYtd() const {
    return m_total_receipts_ytd;
}
void OAICommitteeReportsPresidential::setTotalReceiptsYtd(const double &total_receipts_ytd) {
    m_total_receipts_ytd = total_receipts_ytd;
    m_total_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_receipts_ytd_Set() const{
    return m_total_receipts_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_receipts_ytd_Valid() const{
    return m_total_receipts_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTotalYtd() const {
    return m_total_ytd;
}
void OAICommitteeReportsPresidential::setTotalYtd(const double &total_ytd) {
    m_total_ytd = total_ytd;
    m_total_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_total_ytd_Set() const{
    return m_total_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_total_ytd_Valid() const{
    return m_total_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTransfersFromAffiliatedCommitteePeriod() const {
    return m_transfers_from_affiliated_committee_period;
}
void OAICommitteeReportsPresidential::setTransfersFromAffiliatedCommitteePeriod(const double &transfers_from_affiliated_committee_period) {
    m_transfers_from_affiliated_committee_period = transfers_from_affiliated_committee_period;
    m_transfers_from_affiliated_committee_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_transfers_from_affiliated_committee_period_Set() const{
    return m_transfers_from_affiliated_committee_period_isSet;
}

bool OAICommitteeReportsPresidential::is_transfers_from_affiliated_committee_period_Valid() const{
    return m_transfers_from_affiliated_committee_period_isValid;
}

double OAICommitteeReportsPresidential::getTransfersFromAffiliatedCommitteeYtd() const {
    return m_transfers_from_affiliated_committee_ytd;
}
void OAICommitteeReportsPresidential::setTransfersFromAffiliatedCommitteeYtd(const double &transfers_from_affiliated_committee_ytd) {
    m_transfers_from_affiliated_committee_ytd = transfers_from_affiliated_committee_ytd;
    m_transfers_from_affiliated_committee_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_transfers_from_affiliated_committee_ytd_Set() const{
    return m_transfers_from_affiliated_committee_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_transfers_from_affiliated_committee_ytd_Valid() const{
    return m_transfers_from_affiliated_committee_ytd_isValid;
}

double OAICommitteeReportsPresidential::getTransfersToOtherAuthorizedCommitteePeriod() const {
    return m_transfers_to_other_authorized_committee_period;
}
void OAICommitteeReportsPresidential::setTransfersToOtherAuthorizedCommitteePeriod(const double &transfers_to_other_authorized_committee_period) {
    m_transfers_to_other_authorized_committee_period = transfers_to_other_authorized_committee_period;
    m_transfers_to_other_authorized_committee_period_isSet = true;
}

bool OAICommitteeReportsPresidential::is_transfers_to_other_authorized_committee_period_Set() const{
    return m_transfers_to_other_authorized_committee_period_isSet;
}

bool OAICommitteeReportsPresidential::is_transfers_to_other_authorized_committee_period_Valid() const{
    return m_transfers_to_other_authorized_committee_period_isValid;
}

double OAICommitteeReportsPresidential::getTransfersToOtherAuthorizedCommitteeYtd() const {
    return m_transfers_to_other_authorized_committee_ytd;
}
void OAICommitteeReportsPresidential::setTransfersToOtherAuthorizedCommitteeYtd(const double &transfers_to_other_authorized_committee_ytd) {
    m_transfers_to_other_authorized_committee_ytd = transfers_to_other_authorized_committee_ytd;
    m_transfers_to_other_authorized_committee_ytd_isSet = true;
}

bool OAICommitteeReportsPresidential::is_transfers_to_other_authorized_committee_ytd_Set() const{
    return m_transfers_to_other_authorized_committee_ytd_isSet;
}

bool OAICommitteeReportsPresidential::is_transfers_to_other_authorized_committee_ytd_Valid() const{
    return m_transfers_to_other_authorized_committee_ytd_isValid;
}

bool OAICommitteeReportsPresidential::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amendment_chain.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beginning_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_end_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_by_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_to_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exempt_legal_accounting_disbursement_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exempt_legal_accounting_disbursement_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expenditure_subject_to_limits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_federal_funds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_federal_funds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fundraising_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fundraising_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_amended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_on_hand_liquidated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_received_from_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_received_from_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_means_filed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_cycle_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_cycle_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_fundraising_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_fundraising_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_legal_accounting_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_legal_accounting_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_loans_made_by_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_loans_made_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repayments_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitteeReportsPresidential::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
