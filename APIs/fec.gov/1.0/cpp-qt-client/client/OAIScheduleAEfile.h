/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduleAEfile.h
 *
 * 
 */

#ifndef OAIScheduleAEfile_H
#define OAIScheduleAEfile_H

#include <QJsonObject>

#include "OAICommitteeHistory.h"
#include "OAIEFilings.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommitteeHistory;
class OAIEFilings;

class OAIScheduleAEfile : public OAIObject {
public:
    OAIScheduleAEfile();
    OAIScheduleAEfile(QString json);
    ~OAIScheduleAEfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAmendmentIndicator() const;
    void setAmendmentIndicator(const QString &amendment_indicator);
    bool is_amendment_indicator_Set() const;
    bool is_amendment_indicator_Valid() const;

    QString getBackReferenceScheduleName() const;
    void setBackReferenceScheduleName(const QString &back_reference_schedule_name);
    bool is_back_reference_schedule_name_Set() const;
    bool is_back_reference_schedule_name_Valid() const;

    QString getBackReferenceTransactionId() const;
    void setBackReferenceTransactionId(const QString &back_reference_transaction_id);
    bool is_back_reference_transaction_id_Set() const;
    bool is_back_reference_transaction_id_Valid() const;

    QString getBeginningImageNumber() const;
    void setBeginningImageNumber(const QString &beginning_image_number);
    bool is_beginning_image_number_Set() const;
    bool is_beginning_image_number_Valid() const;

    OAICommitteeHistory getCommittee() const;
    void setCommittee(const OAICommitteeHistory &committee);
    bool is_committee_Set() const;
    bool is_committee_Valid() const;

    QString getCommitteeId() const;
    void setCommitteeId(const QString &committee_id);
    bool is_committee_id_Set() const;
    bool is_committee_id_Valid() const;

    QString getConduitCommitteeCity() const;
    void setConduitCommitteeCity(const QString &conduit_committee_city);
    bool is_conduit_committee_city_Set() const;
    bool is_conduit_committee_city_Valid() const;

    QString getConduitCommitteeId() const;
    void setConduitCommitteeId(const QString &conduit_committee_id);
    bool is_conduit_committee_id_Set() const;
    bool is_conduit_committee_id_Valid() const;

    QString getConduitCommitteeName() const;
    void setConduitCommitteeName(const QString &conduit_committee_name);
    bool is_conduit_committee_name_Set() const;
    bool is_conduit_committee_name_Valid() const;

    QString getConduitCommitteeState() const;
    void setConduitCommitteeState(const QString &conduit_committee_state);
    bool is_conduit_committee_state_Set() const;
    bool is_conduit_committee_state_Valid() const;

    QString getConduitCommitteeStreet1() const;
    void setConduitCommitteeStreet1(const QString &conduit_committee_street1);
    bool is_conduit_committee_street1_Set() const;
    bool is_conduit_committee_street1_Valid() const;

    QString getConduitCommitteeStreet2() const;
    void setConduitCommitteeStreet2(const QString &conduit_committee_street2);
    bool is_conduit_committee_street2_Set() const;
    bool is_conduit_committee_street2_Valid() const;

    qint32 getConduitCommitteeZip() const;
    void setConduitCommitteeZip(const qint32 &conduit_committee_zip);
    bool is_conduit_committee_zip_Set() const;
    bool is_conduit_committee_zip_Valid() const;

    double getContributionReceiptAmount() const;
    void setContributionReceiptAmount(const double &contribution_receipt_amount);
    bool is_contribution_receipt_amount_Set() const;
    bool is_contribution_receipt_amount_Valid() const;

    QDate getContributionReceiptDate() const;
    void setContributionReceiptDate(const QDate &contribution_receipt_date);
    bool is_contribution_receipt_date_Set() const;
    bool is_contribution_receipt_date_Valid() const;

    double getContributorAggregateYtd() const;
    void setContributorAggregateYtd(const double &contributor_aggregate_ytd);
    bool is_contributor_aggregate_ytd_Set() const;
    bool is_contributor_aggregate_ytd_Valid() const;

    QString getContributorCity() const;
    void setContributorCity(const QString &contributor_city);
    bool is_contributor_city_Set() const;
    bool is_contributor_city_Valid() const;

    QString getContributorEmployer() const;
    void setContributorEmployer(const QString &contributor_employer);
    bool is_contributor_employer_Set() const;
    bool is_contributor_employer_Valid() const;

    QString getContributorFirstName() const;
    void setContributorFirstName(const QString &contributor_first_name);
    bool is_contributor_first_name_Set() const;
    bool is_contributor_first_name_Valid() const;

    QString getContributorLastName() const;
    void setContributorLastName(const QString &contributor_last_name);
    bool is_contributor_last_name_Set() const;
    bool is_contributor_last_name_Valid() const;

    QString getContributorMiddleName() const;
    void setContributorMiddleName(const QString &contributor_middle_name);
    bool is_contributor_middle_name_Set() const;
    bool is_contributor_middle_name_Valid() const;

    QString getContributorName() const;
    void setContributorName(const QString &contributor_name);
    bool is_contributor_name_Set() const;
    bool is_contributor_name_Valid() const;

    QString getContributorOccupation() const;
    void setContributorOccupation(const QString &contributor_occupation);
    bool is_contributor_occupation_Set() const;
    bool is_contributor_occupation_Valid() const;

    QString getContributorPrefix() const;
    void setContributorPrefix(const QString &contributor_prefix);
    bool is_contributor_prefix_Set() const;
    bool is_contributor_prefix_Valid() const;

    QString getContributorState() const;
    void setContributorState(const QString &contributor_state);
    bool is_contributor_state_Set() const;
    bool is_contributor_state_Valid() const;

    QString getContributorSuffix() const;
    void setContributorSuffix(const QString &contributor_suffix);
    bool is_contributor_suffix_Set() const;
    bool is_contributor_suffix_Valid() const;

    QString getContributorZip() const;
    void setContributorZip(const QString &contributor_zip);
    bool is_contributor_zip_Set() const;
    bool is_contributor_zip_Valid() const;

    QString getCsvUrl() const;
    void setCsvUrl(const QString &csv_url);
    bool is_csv_url_Set() const;
    bool is_csv_url_Valid() const;

    qint32 getCycle() const;
    void setCycle(const qint32 &cycle);
    bool is_cycle_Set() const;
    bool is_cycle_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getFecElectionTypeDesc() const;
    void setFecElectionTypeDesc(const QString &fec_election_type_desc);
    bool is_fec_election_type_desc_Set() const;
    bool is_fec_election_type_desc_Valid() const;

    QString getFecUrl() const;
    void setFecUrl(const QString &fec_url);
    bool is_fec_url_Set() const;
    bool is_fec_url_Valid() const;

    qint32 getFileNumber() const;
    void setFileNumber(const qint32 &file_number);
    bool is_file_number_Set() const;
    bool is_file_number_Valid() const;

    OAIEFilings getFiling() const;
    void setFiling(const OAIEFilings &filing);
    bool is_filing_Set() const;
    bool is_filing_Valid() const;

    QString getImageNumber() const;
    void setImageNumber(const QString &image_number);
    bool is_image_number_Set() const;
    bool is_image_number_Valid() const;

    QString getLineNumber() const;
    void setLineNumber(const QString &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    QDateTime getLoadTimestamp() const;
    void setLoadTimestamp(const QDateTime &load_timestamp);
    bool is_load_timestamp_Set() const;
    bool is_load_timestamp_Valid() const;

    QString getMemoCode() const;
    void setMemoCode(const QString &memo_code);
    bool is_memo_code_Set() const;
    bool is_memo_code_Valid() const;

    QString getMemoText() const;
    void setMemoText(const QString &memo_text);
    bool is_memo_text_Set() const;
    bool is_memo_text_Valid() const;

    QString getPdfUrl() const;
    void setPdfUrl(const QString &pdf_url);
    bool is_pdf_url_Set() const;
    bool is_pdf_url_Valid() const;

    QString getPgo() const;
    void setPgo(const QString &pgo);
    bool is_pgo_Set() const;
    bool is_pgo_Valid() const;

    qint32 getRelatedLineNumber() const;
    void setRelatedLineNumber(const qint32 &related_line_number);
    bool is_related_line_number_Set() const;
    bool is_related_line_number_Valid() const;

    QString getReportType() const;
    void setReportType(const QString &report_type);
    bool is_report_type_Set() const;
    bool is_report_type_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_amendment_indicator;
    bool m_amendment_indicator_isSet;
    bool m_amendment_indicator_isValid;

    QString m_back_reference_schedule_name;
    bool m_back_reference_schedule_name_isSet;
    bool m_back_reference_schedule_name_isValid;

    QString m_back_reference_transaction_id;
    bool m_back_reference_transaction_id_isSet;
    bool m_back_reference_transaction_id_isValid;

    QString m_beginning_image_number;
    bool m_beginning_image_number_isSet;
    bool m_beginning_image_number_isValid;

    OAICommitteeHistory m_committee;
    bool m_committee_isSet;
    bool m_committee_isValid;

    QString m_committee_id;
    bool m_committee_id_isSet;
    bool m_committee_id_isValid;

    QString m_conduit_committee_city;
    bool m_conduit_committee_city_isSet;
    bool m_conduit_committee_city_isValid;

    QString m_conduit_committee_id;
    bool m_conduit_committee_id_isSet;
    bool m_conduit_committee_id_isValid;

    QString m_conduit_committee_name;
    bool m_conduit_committee_name_isSet;
    bool m_conduit_committee_name_isValid;

    QString m_conduit_committee_state;
    bool m_conduit_committee_state_isSet;
    bool m_conduit_committee_state_isValid;

    QString m_conduit_committee_street1;
    bool m_conduit_committee_street1_isSet;
    bool m_conduit_committee_street1_isValid;

    QString m_conduit_committee_street2;
    bool m_conduit_committee_street2_isSet;
    bool m_conduit_committee_street2_isValid;

    qint32 m_conduit_committee_zip;
    bool m_conduit_committee_zip_isSet;
    bool m_conduit_committee_zip_isValid;

    double m_contribution_receipt_amount;
    bool m_contribution_receipt_amount_isSet;
    bool m_contribution_receipt_amount_isValid;

    QDate m_contribution_receipt_date;
    bool m_contribution_receipt_date_isSet;
    bool m_contribution_receipt_date_isValid;

    double m_contributor_aggregate_ytd;
    bool m_contributor_aggregate_ytd_isSet;
    bool m_contributor_aggregate_ytd_isValid;

    QString m_contributor_city;
    bool m_contributor_city_isSet;
    bool m_contributor_city_isValid;

    QString m_contributor_employer;
    bool m_contributor_employer_isSet;
    bool m_contributor_employer_isValid;

    QString m_contributor_first_name;
    bool m_contributor_first_name_isSet;
    bool m_contributor_first_name_isValid;

    QString m_contributor_last_name;
    bool m_contributor_last_name_isSet;
    bool m_contributor_last_name_isValid;

    QString m_contributor_middle_name;
    bool m_contributor_middle_name_isSet;
    bool m_contributor_middle_name_isValid;

    QString m_contributor_name;
    bool m_contributor_name_isSet;
    bool m_contributor_name_isValid;

    QString m_contributor_occupation;
    bool m_contributor_occupation_isSet;
    bool m_contributor_occupation_isValid;

    QString m_contributor_prefix;
    bool m_contributor_prefix_isSet;
    bool m_contributor_prefix_isValid;

    QString m_contributor_state;
    bool m_contributor_state_isSet;
    bool m_contributor_state_isValid;

    QString m_contributor_suffix;
    bool m_contributor_suffix_isSet;
    bool m_contributor_suffix_isValid;

    QString m_contributor_zip;
    bool m_contributor_zip_isSet;
    bool m_contributor_zip_isValid;

    QString m_csv_url;
    bool m_csv_url_isSet;
    bool m_csv_url_isValid;

    qint32 m_cycle;
    bool m_cycle_isSet;
    bool m_cycle_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_fec_election_type_desc;
    bool m_fec_election_type_desc_isSet;
    bool m_fec_election_type_desc_isValid;

    QString m_fec_url;
    bool m_fec_url_isSet;
    bool m_fec_url_isValid;

    qint32 m_file_number;
    bool m_file_number_isSet;
    bool m_file_number_isValid;

    OAIEFilings m_filing;
    bool m_filing_isSet;
    bool m_filing_isValid;

    QString m_image_number;
    bool m_image_number_isSet;
    bool m_image_number_isValid;

    QString m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    QDateTime m_load_timestamp;
    bool m_load_timestamp_isSet;
    bool m_load_timestamp_isValid;

    QString m_memo_code;
    bool m_memo_code_isSet;
    bool m_memo_code_isValid;

    QString m_memo_text;
    bool m_memo_text_isSet;
    bool m_memo_text_isValid;

    QString m_pdf_url;
    bool m_pdf_url_isSet;
    bool m_pdf_url_isValid;

    QString m_pgo;
    bool m_pgo_isSet;
    bool m_pgo_isValid;

    qint32 m_related_line_number;
    bool m_related_line_number_isSet;
    bool m_related_line_number_isValid;

    QString m_report_type;
    bool m_report_type_isSet;
    bool m_report_type_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduleAEfile)

#endif // OAIScheduleAEfile_H
