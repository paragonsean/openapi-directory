/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitteeReportsPacParty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitteeReportsPacParty::OAICommitteeReportsPacParty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitteeReportsPacParty::OAICommitteeReportsPacParty() {
    this->initializeModel();
}

OAICommitteeReportsPacParty::~OAICommitteeReportsPacParty() {}

void OAICommitteeReportsPacParty::initializeModel() {

    m_all_loans_received_period_isSet = false;
    m_all_loans_received_period_isValid = false;

    m_all_loans_received_ytd_isSet = false;
    m_all_loans_received_ytd_isValid = false;

    m_allocated_federal_election_levin_share_period_isSet = false;
    m_allocated_federal_election_levin_share_period_isValid = false;

    m_amendment_chain_isSet = false;
    m_amendment_chain_isValid = false;

    m_amendment_indicator_isSet = false;
    m_amendment_indicator_isValid = false;

    m_amendment_indicator_full_isSet = false;
    m_amendment_indicator_full_isValid = false;

    m_beginning_image_number_isSet = false;
    m_beginning_image_number_isValid = false;

    m_calendar_ytd_isSet = false;
    m_calendar_ytd_isValid = false;

    m_cash_on_hand_beginning_calendar_ytd_isSet = false;
    m_cash_on_hand_beginning_calendar_ytd_isValid = false;

    m_cash_on_hand_beginning_period_isSet = false;
    m_cash_on_hand_beginning_period_isValid = false;

    m_cash_on_hand_close_ytd_isSet = false;
    m_cash_on_hand_close_ytd_isValid = false;

    m_cash_on_hand_end_period_isSet = false;
    m_cash_on_hand_end_period_isValid = false;

    m_committee_id_isSet = false;
    m_committee_id_isValid = false;

    m_committee_name_isSet = false;
    m_committee_name_isValid = false;

    m_committee_type_isSet = false;
    m_committee_type_isValid = false;

    m_coordinated_expenditures_by_party_committee_period_isSet = false;
    m_coordinated_expenditures_by_party_committee_period_isValid = false;

    m_coordinated_expenditures_by_party_committee_ytd_isSet = false;
    m_coordinated_expenditures_by_party_committee_ytd_isValid = false;

    m_coverage_end_date_isSet = false;
    m_coverage_end_date_isValid = false;

    m_coverage_start_date_isSet = false;
    m_coverage_start_date_isValid = false;

    m_csv_url_isSet = false;
    m_csv_url_isValid = false;

    m_cycle_isSet = false;
    m_cycle_isValid = false;

    m_debts_owed_by_committee_isSet = false;
    m_debts_owed_by_committee_isValid = false;

    m_debts_owed_to_committee_isSet = false;
    m_debts_owed_to_committee_isValid = false;

    m_document_description_isSet = false;
    m_document_description_isValid = false;

    m_end_image_number_isSet = false;
    m_end_image_number_isValid = false;

    m_fec_file_id_isSet = false;
    m_fec_file_id_isValid = false;

    m_fec_url_isSet = false;
    m_fec_url_isValid = false;

    m_fed_candidate_committee_contribution_refunds_ytd_isSet = false;
    m_fed_candidate_committee_contribution_refunds_ytd_isValid = false;

    m_fed_candidate_committee_contributions_period_isSet = false;
    m_fed_candidate_committee_contributions_period_isValid = false;

    m_fed_candidate_committee_contributions_ytd_isSet = false;
    m_fed_candidate_committee_contributions_ytd_isValid = false;

    m_fed_candidate_contribution_refunds_period_isSet = false;
    m_fed_candidate_contribution_refunds_period_isValid = false;

    m_file_number_isSet = false;
    m_file_number_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_independent_expenditures_period_isSet = false;
    m_independent_expenditures_period_isValid = false;

    m_independent_expenditures_ytd_isSet = false;
    m_independent_expenditures_ytd_isValid = false;

    m_individual_itemized_contributions_period_isSet = false;
    m_individual_itemized_contributions_period_isValid = false;

    m_individual_itemized_contributions_ytd_isSet = false;
    m_individual_itemized_contributions_ytd_isValid = false;

    m_individual_unitemized_contributions_period_isSet = false;
    m_individual_unitemized_contributions_period_isValid = false;

    m_individual_unitemized_contributions_ytd_isSet = false;
    m_individual_unitemized_contributions_ytd_isValid = false;

    m_is_amended_isSet = false;
    m_is_amended_isValid = false;

    m_loan_repayments_made_period_isSet = false;
    m_loan_repayments_made_period_isValid = false;

    m_loan_repayments_made_ytd_isSet = false;
    m_loan_repayments_made_ytd_isValid = false;

    m_loan_repayments_received_period_isSet = false;
    m_loan_repayments_received_period_isValid = false;

    m_loan_repayments_received_ytd_isSet = false;
    m_loan_repayments_received_ytd_isValid = false;

    m_loans_made_period_isSet = false;
    m_loans_made_period_isValid = false;

    m_loans_made_ytd_isSet = false;
    m_loans_made_ytd_isValid = false;

    m_means_filed_isSet = false;
    m_means_filed_isValid = false;

    m_most_recent_isSet = false;
    m_most_recent_isValid = false;

    m_most_recent_file_number_isSet = false;
    m_most_recent_file_number_isValid = false;

    m_net_contributions_period_isSet = false;
    m_net_contributions_period_isValid = false;

    m_net_contributions_ytd_isSet = false;
    m_net_contributions_ytd_isValid = false;

    m_net_operating_expenditures_period_isSet = false;
    m_net_operating_expenditures_period_isValid = false;

    m_net_operating_expenditures_ytd_isSet = false;
    m_net_operating_expenditures_ytd_isValid = false;

    m_non_allocated_fed_election_activity_period_isSet = false;
    m_non_allocated_fed_election_activity_period_isValid = false;

    m_non_allocated_fed_election_activity_ytd_isSet = false;
    m_non_allocated_fed_election_activity_ytd_isValid = false;

    m_nonfed_share_allocated_disbursements_period_isSet = false;
    m_nonfed_share_allocated_disbursements_period_isValid = false;

    m_offsets_to_operating_expenditures_period_isSet = false;
    m_offsets_to_operating_expenditures_period_isValid = false;

    m_offsets_to_operating_expenditures_ytd_isSet = false;
    m_offsets_to_operating_expenditures_ytd_isValid = false;

    m_other_disbursements_period_isSet = false;
    m_other_disbursements_period_isValid = false;

    m_other_disbursements_ytd_isSet = false;
    m_other_disbursements_ytd_isValid = false;

    m_other_fed_operating_expenditures_period_isSet = false;
    m_other_fed_operating_expenditures_period_isValid = false;

    m_other_fed_operating_expenditures_ytd_isSet = false;
    m_other_fed_operating_expenditures_ytd_isValid = false;

    m_other_fed_receipts_period_isSet = false;
    m_other_fed_receipts_period_isValid = false;

    m_other_fed_receipts_ytd_isSet = false;
    m_other_fed_receipts_ytd_isValid = false;

    m_other_political_committee_contributions_period_isSet = false;
    m_other_political_committee_contributions_period_isValid = false;

    m_other_political_committee_contributions_ytd_isSet = false;
    m_other_political_committee_contributions_ytd_isValid = false;

    m_pdf_url_isSet = false;
    m_pdf_url_isValid = false;

    m_political_party_committee_contributions_period_isSet = false;
    m_political_party_committee_contributions_period_isValid = false;

    m_political_party_committee_contributions_ytd_isSet = false;
    m_political_party_committee_contributions_ytd_isValid = false;

    m_previous_file_number_isSet = false;
    m_previous_file_number_isValid = false;

    m_receipt_date_isSet = false;
    m_receipt_date_isValid = false;

    m_refunded_individual_contributions_period_isSet = false;
    m_refunded_individual_contributions_period_isValid = false;

    m_refunded_individual_contributions_ytd_isSet = false;
    m_refunded_individual_contributions_ytd_isValid = false;

    m_refunded_other_political_committee_contributions_period_isSet = false;
    m_refunded_other_political_committee_contributions_period_isValid = false;

    m_refunded_other_political_committee_contributions_ytd_isSet = false;
    m_refunded_other_political_committee_contributions_ytd_isValid = false;

    m_refunded_political_party_committee_contributions_period_isSet = false;
    m_refunded_political_party_committee_contributions_period_isValid = false;

    m_refunded_political_party_committee_contributions_ytd_isSet = false;
    m_refunded_political_party_committee_contributions_ytd_isValid = false;

    m_report_form_isSet = false;
    m_report_form_isValid = false;

    m_report_type_isSet = false;
    m_report_type_isValid = false;

    m_report_type_full_isSet = false;
    m_report_type_full_isValid = false;

    m_report_year_isSet = false;
    m_report_year_isValid = false;

    m_shared_fed_activity_nonfed_ytd_isSet = false;
    m_shared_fed_activity_nonfed_ytd_isValid = false;

    m_shared_fed_activity_period_isSet = false;
    m_shared_fed_activity_period_isValid = false;

    m_shared_fed_activity_ytd_isSet = false;
    m_shared_fed_activity_ytd_isValid = false;

    m_shared_fed_operating_expenditures_period_isSet = false;
    m_shared_fed_operating_expenditures_period_isValid = false;

    m_shared_fed_operating_expenditures_ytd_isSet = false;
    m_shared_fed_operating_expenditures_ytd_isValid = false;

    m_shared_nonfed_operating_expenditures_period_isSet = false;
    m_shared_nonfed_operating_expenditures_period_isValid = false;

    m_shared_nonfed_operating_expenditures_ytd_isSet = false;
    m_shared_nonfed_operating_expenditures_ytd_isValid = false;

    m_subtotal_summary_page_period_isSet = false;
    m_subtotal_summary_page_period_isValid = false;

    m_subtotal_summary_ytd_isSet = false;
    m_subtotal_summary_ytd_isValid = false;

    m_total_contribution_refunds_period_isSet = false;
    m_total_contribution_refunds_period_isValid = false;

    m_total_contribution_refunds_ytd_isSet = false;
    m_total_contribution_refunds_ytd_isValid = false;

    m_total_contributions_period_isSet = false;
    m_total_contributions_period_isValid = false;

    m_total_contributions_ytd_isSet = false;
    m_total_contributions_ytd_isValid = false;

    m_total_disbursements_period_isSet = false;
    m_total_disbursements_period_isValid = false;

    m_total_disbursements_ytd_isSet = false;
    m_total_disbursements_ytd_isValid = false;

    m_total_fed_disbursements_period_isSet = false;
    m_total_fed_disbursements_period_isValid = false;

    m_total_fed_disbursements_ytd_isSet = false;
    m_total_fed_disbursements_ytd_isValid = false;

    m_total_fed_election_activity_period_isSet = false;
    m_total_fed_election_activity_period_isValid = false;

    m_total_fed_election_activity_ytd_isSet = false;
    m_total_fed_election_activity_ytd_isValid = false;

    m_total_fed_operating_expenditures_period_isSet = false;
    m_total_fed_operating_expenditures_period_isValid = false;

    m_total_fed_operating_expenditures_ytd_isSet = false;
    m_total_fed_operating_expenditures_ytd_isValid = false;

    m_total_fed_receipts_period_isSet = false;
    m_total_fed_receipts_period_isValid = false;

    m_total_fed_receipts_ytd_isSet = false;
    m_total_fed_receipts_ytd_isValid = false;

    m_total_individual_contributions_period_isSet = false;
    m_total_individual_contributions_period_isValid = false;

    m_total_individual_contributions_ytd_isSet = false;
    m_total_individual_contributions_ytd_isValid = false;

    m_total_nonfed_transfers_period_isSet = false;
    m_total_nonfed_transfers_period_isValid = false;

    m_total_nonfed_transfers_ytd_isSet = false;
    m_total_nonfed_transfers_ytd_isValid = false;

    m_total_operating_expenditures_period_isSet = false;
    m_total_operating_expenditures_period_isValid = false;

    m_total_operating_expenditures_ytd_isSet = false;
    m_total_operating_expenditures_ytd_isValid = false;

    m_total_receipts_period_isSet = false;
    m_total_receipts_period_isValid = false;

    m_total_receipts_ytd_isSet = false;
    m_total_receipts_ytd_isValid = false;

    m_transfers_from_affiliated_party_period_isSet = false;
    m_transfers_from_affiliated_party_period_isValid = false;

    m_transfers_from_affiliated_party_ytd_isSet = false;
    m_transfers_from_affiliated_party_ytd_isValid = false;

    m_transfers_from_nonfed_account_period_isSet = false;
    m_transfers_from_nonfed_account_period_isValid = false;

    m_transfers_from_nonfed_account_ytd_isSet = false;
    m_transfers_from_nonfed_account_ytd_isValid = false;

    m_transfers_from_nonfed_levin_period_isSet = false;
    m_transfers_from_nonfed_levin_period_isValid = false;

    m_transfers_from_nonfed_levin_ytd_isSet = false;
    m_transfers_from_nonfed_levin_ytd_isValid = false;

    m_transfers_to_affiliated_committee_period_isSet = false;
    m_transfers_to_affiliated_committee_period_isValid = false;

    m_transfers_to_affilitated_committees_ytd_isSet = false;
    m_transfers_to_affilitated_committees_ytd_isValid = false;
}

void OAICommitteeReportsPacParty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitteeReportsPacParty::fromJsonObject(QJsonObject json) {

    m_all_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_all_loans_received_period, json[QString("all_loans_received_period")]);
    m_all_loans_received_period_isSet = !json[QString("all_loans_received_period")].isNull() && m_all_loans_received_period_isValid;

    m_all_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_all_loans_received_ytd, json[QString("all_loans_received_ytd")]);
    m_all_loans_received_ytd_isSet = !json[QString("all_loans_received_ytd")].isNull() && m_all_loans_received_ytd_isValid;

    m_allocated_federal_election_levin_share_period_isValid = ::OpenAPI::fromJsonValue(m_allocated_federal_election_levin_share_period, json[QString("allocated_federal_election_levin_share_period")]);
    m_allocated_federal_election_levin_share_period_isSet = !json[QString("allocated_federal_election_levin_share_period")].isNull() && m_allocated_federal_election_levin_share_period_isValid;

    m_amendment_chain_isValid = ::OpenAPI::fromJsonValue(m_amendment_chain, json[QString("amendment_chain")]);
    m_amendment_chain_isSet = !json[QString("amendment_chain")].isNull() && m_amendment_chain_isValid;

    m_amendment_indicator_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator, json[QString("amendment_indicator")]);
    m_amendment_indicator_isSet = !json[QString("amendment_indicator")].isNull() && m_amendment_indicator_isValid;

    m_amendment_indicator_full_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator_full, json[QString("amendment_indicator_full")]);
    m_amendment_indicator_full_isSet = !json[QString("amendment_indicator_full")].isNull() && m_amendment_indicator_full_isValid;

    m_beginning_image_number_isValid = ::OpenAPI::fromJsonValue(m_beginning_image_number, json[QString("beginning_image_number")]);
    m_beginning_image_number_isSet = !json[QString("beginning_image_number")].isNull() && m_beginning_image_number_isValid;

    m_calendar_ytd_isValid = ::OpenAPI::fromJsonValue(m_calendar_ytd, json[QString("calendar_ytd")]);
    m_calendar_ytd_isSet = !json[QString("calendar_ytd")].isNull() && m_calendar_ytd_isValid;

    m_cash_on_hand_beginning_calendar_ytd_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_calendar_ytd, json[QString("cash_on_hand_beginning_calendar_ytd")]);
    m_cash_on_hand_beginning_calendar_ytd_isSet = !json[QString("cash_on_hand_beginning_calendar_ytd")].isNull() && m_cash_on_hand_beginning_calendar_ytd_isValid;

    m_cash_on_hand_beginning_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_period, json[QString("cash_on_hand_beginning_period")]);
    m_cash_on_hand_beginning_period_isSet = !json[QString("cash_on_hand_beginning_period")].isNull() && m_cash_on_hand_beginning_period_isValid;

    m_cash_on_hand_close_ytd_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_close_ytd, json[QString("cash_on_hand_close_ytd")]);
    m_cash_on_hand_close_ytd_isSet = !json[QString("cash_on_hand_close_ytd")].isNull() && m_cash_on_hand_close_ytd_isValid;

    m_cash_on_hand_end_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_end_period, json[QString("cash_on_hand_end_period")]);
    m_cash_on_hand_end_period_isSet = !json[QString("cash_on_hand_end_period")].isNull() && m_cash_on_hand_end_period_isValid;

    m_committee_id_isValid = ::OpenAPI::fromJsonValue(m_committee_id, json[QString("committee_id")]);
    m_committee_id_isSet = !json[QString("committee_id")].isNull() && m_committee_id_isValid;

    m_committee_name_isValid = ::OpenAPI::fromJsonValue(m_committee_name, json[QString("committee_name")]);
    m_committee_name_isSet = !json[QString("committee_name")].isNull() && m_committee_name_isValid;

    m_committee_type_isValid = ::OpenAPI::fromJsonValue(m_committee_type, json[QString("committee_type")]);
    m_committee_type_isSet = !json[QString("committee_type")].isNull() && m_committee_type_isValid;

    m_coordinated_expenditures_by_party_committee_period_isValid = ::OpenAPI::fromJsonValue(m_coordinated_expenditures_by_party_committee_period, json[QString("coordinated_expenditures_by_party_committee_period")]);
    m_coordinated_expenditures_by_party_committee_period_isSet = !json[QString("coordinated_expenditures_by_party_committee_period")].isNull() && m_coordinated_expenditures_by_party_committee_period_isValid;

    m_coordinated_expenditures_by_party_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_coordinated_expenditures_by_party_committee_ytd, json[QString("coordinated_expenditures_by_party_committee_ytd")]);
    m_coordinated_expenditures_by_party_committee_ytd_isSet = !json[QString("coordinated_expenditures_by_party_committee_ytd")].isNull() && m_coordinated_expenditures_by_party_committee_ytd_isValid;

    m_coverage_end_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_end_date, json[QString("coverage_end_date")]);
    m_coverage_end_date_isSet = !json[QString("coverage_end_date")].isNull() && m_coverage_end_date_isValid;

    m_coverage_start_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_start_date, json[QString("coverage_start_date")]);
    m_coverage_start_date_isSet = !json[QString("coverage_start_date")].isNull() && m_coverage_start_date_isValid;

    m_csv_url_isValid = ::OpenAPI::fromJsonValue(m_csv_url, json[QString("csv_url")]);
    m_csv_url_isSet = !json[QString("csv_url")].isNull() && m_csv_url_isValid;

    m_cycle_isValid = ::OpenAPI::fromJsonValue(m_cycle, json[QString("cycle")]);
    m_cycle_isSet = !json[QString("cycle")].isNull() && m_cycle_isValid;

    m_debts_owed_by_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_by_committee, json[QString("debts_owed_by_committee")]);
    m_debts_owed_by_committee_isSet = !json[QString("debts_owed_by_committee")].isNull() && m_debts_owed_by_committee_isValid;

    m_debts_owed_to_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_to_committee, json[QString("debts_owed_to_committee")]);
    m_debts_owed_to_committee_isSet = !json[QString("debts_owed_to_committee")].isNull() && m_debts_owed_to_committee_isValid;

    m_document_description_isValid = ::OpenAPI::fromJsonValue(m_document_description, json[QString("document_description")]);
    m_document_description_isSet = !json[QString("document_description")].isNull() && m_document_description_isValid;

    m_end_image_number_isValid = ::OpenAPI::fromJsonValue(m_end_image_number, json[QString("end_image_number")]);
    m_end_image_number_isSet = !json[QString("end_image_number")].isNull() && m_end_image_number_isValid;

    m_fec_file_id_isValid = ::OpenAPI::fromJsonValue(m_fec_file_id, json[QString("fec_file_id")]);
    m_fec_file_id_isSet = !json[QString("fec_file_id")].isNull() && m_fec_file_id_isValid;

    m_fec_url_isValid = ::OpenAPI::fromJsonValue(m_fec_url, json[QString("fec_url")]);
    m_fec_url_isSet = !json[QString("fec_url")].isNull() && m_fec_url_isValid;

    m_fed_candidate_committee_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contribution_refunds_ytd, json[QString("fed_candidate_committee_contribution_refunds_ytd")]);
    m_fed_candidate_committee_contribution_refunds_ytd_isSet = !json[QString("fed_candidate_committee_contribution_refunds_ytd")].isNull() && m_fed_candidate_committee_contribution_refunds_ytd_isValid;

    m_fed_candidate_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contributions_period, json[QString("fed_candidate_committee_contributions_period")]);
    m_fed_candidate_committee_contributions_period_isSet = !json[QString("fed_candidate_committee_contributions_period")].isNull() && m_fed_candidate_committee_contributions_period_isValid;

    m_fed_candidate_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_committee_contributions_ytd, json[QString("fed_candidate_committee_contributions_ytd")]);
    m_fed_candidate_committee_contributions_ytd_isSet = !json[QString("fed_candidate_committee_contributions_ytd")].isNull() && m_fed_candidate_committee_contributions_ytd_isValid;

    m_fed_candidate_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_fed_candidate_contribution_refunds_period, json[QString("fed_candidate_contribution_refunds_period")]);
    m_fed_candidate_contribution_refunds_period_isSet = !json[QString("fed_candidate_contribution_refunds_period")].isNull() && m_fed_candidate_contribution_refunds_period_isValid;

    m_file_number_isValid = ::OpenAPI::fromJsonValue(m_file_number, json[QString("file_number")]);
    m_file_number_isSet = !json[QString("file_number")].isNull() && m_file_number_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_independent_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_independent_expenditures_period, json[QString("independent_expenditures_period")]);
    m_independent_expenditures_period_isSet = !json[QString("independent_expenditures_period")].isNull() && m_independent_expenditures_period_isValid;

    m_independent_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_independent_expenditures_ytd, json[QString("independent_expenditures_ytd")]);
    m_independent_expenditures_ytd_isSet = !json[QString("independent_expenditures_ytd")].isNull() && m_independent_expenditures_ytd_isValid;

    m_individual_itemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_period, json[QString("individual_itemized_contributions_period")]);
    m_individual_itemized_contributions_period_isSet = !json[QString("individual_itemized_contributions_period")].isNull() && m_individual_itemized_contributions_period_isValid;

    m_individual_itemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_ytd, json[QString("individual_itemized_contributions_ytd")]);
    m_individual_itemized_contributions_ytd_isSet = !json[QString("individual_itemized_contributions_ytd")].isNull() && m_individual_itemized_contributions_ytd_isValid;

    m_individual_unitemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_period, json[QString("individual_unitemized_contributions_period")]);
    m_individual_unitemized_contributions_period_isSet = !json[QString("individual_unitemized_contributions_period")].isNull() && m_individual_unitemized_contributions_period_isValid;

    m_individual_unitemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_ytd, json[QString("individual_unitemized_contributions_ytd")]);
    m_individual_unitemized_contributions_ytd_isSet = !json[QString("individual_unitemized_contributions_ytd")].isNull() && m_individual_unitemized_contributions_ytd_isValid;

    m_is_amended_isValid = ::OpenAPI::fromJsonValue(m_is_amended, json[QString("is_amended")]);
    m_is_amended_isSet = !json[QString("is_amended")].isNull() && m_is_amended_isValid;

    m_loan_repayments_made_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_made_period, json[QString("loan_repayments_made_period")]);
    m_loan_repayments_made_period_isSet = !json[QString("loan_repayments_made_period")].isNull() && m_loan_repayments_made_period_isValid;

    m_loan_repayments_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_made_ytd, json[QString("loan_repayments_made_ytd")]);
    m_loan_repayments_made_ytd_isSet = !json[QString("loan_repayments_made_ytd")].isNull() && m_loan_repayments_made_ytd_isValid;

    m_loan_repayments_received_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_received_period, json[QString("loan_repayments_received_period")]);
    m_loan_repayments_received_period_isSet = !json[QString("loan_repayments_received_period")].isNull() && m_loan_repayments_received_period_isValid;

    m_loan_repayments_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_received_ytd, json[QString("loan_repayments_received_ytd")]);
    m_loan_repayments_received_ytd_isSet = !json[QString("loan_repayments_received_ytd")].isNull() && m_loan_repayments_received_ytd_isValid;

    m_loans_made_period_isValid = ::OpenAPI::fromJsonValue(m_loans_made_period, json[QString("loans_made_period")]);
    m_loans_made_period_isSet = !json[QString("loans_made_period")].isNull() && m_loans_made_period_isValid;

    m_loans_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_made_ytd, json[QString("loans_made_ytd")]);
    m_loans_made_ytd_isSet = !json[QString("loans_made_ytd")].isNull() && m_loans_made_ytd_isValid;

    m_means_filed_isValid = ::OpenAPI::fromJsonValue(m_means_filed, json[QString("means_filed")]);
    m_means_filed_isSet = !json[QString("means_filed")].isNull() && m_means_filed_isValid;

    m_most_recent_isValid = ::OpenAPI::fromJsonValue(m_most_recent, json[QString("most_recent")]);
    m_most_recent_isSet = !json[QString("most_recent")].isNull() && m_most_recent_isValid;

    m_most_recent_file_number_isValid = ::OpenAPI::fromJsonValue(m_most_recent_file_number, json[QString("most_recent_file_number")]);
    m_most_recent_file_number_isSet = !json[QString("most_recent_file_number")].isNull() && m_most_recent_file_number_isValid;

    m_net_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_period, json[QString("net_contributions_period")]);
    m_net_contributions_period_isSet = !json[QString("net_contributions_period")].isNull() && m_net_contributions_period_isValid;

    m_net_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_ytd, json[QString("net_contributions_ytd")]);
    m_net_contributions_ytd_isSet = !json[QString("net_contributions_ytd")].isNull() && m_net_contributions_ytd_isValid;

    m_net_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_period, json[QString("net_operating_expenditures_period")]);
    m_net_operating_expenditures_period_isSet = !json[QString("net_operating_expenditures_period")].isNull() && m_net_operating_expenditures_period_isValid;

    m_net_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_ytd, json[QString("net_operating_expenditures_ytd")]);
    m_net_operating_expenditures_ytd_isSet = !json[QString("net_operating_expenditures_ytd")].isNull() && m_net_operating_expenditures_ytd_isValid;

    m_non_allocated_fed_election_activity_period_isValid = ::OpenAPI::fromJsonValue(m_non_allocated_fed_election_activity_period, json[QString("non_allocated_fed_election_activity_period")]);
    m_non_allocated_fed_election_activity_period_isSet = !json[QString("non_allocated_fed_election_activity_period")].isNull() && m_non_allocated_fed_election_activity_period_isValid;

    m_non_allocated_fed_election_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_non_allocated_fed_election_activity_ytd, json[QString("non_allocated_fed_election_activity_ytd")]);
    m_non_allocated_fed_election_activity_ytd_isSet = !json[QString("non_allocated_fed_election_activity_ytd")].isNull() && m_non_allocated_fed_election_activity_ytd_isValid;

    m_nonfed_share_allocated_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_nonfed_share_allocated_disbursements_period, json[QString("nonfed_share_allocated_disbursements_period")]);
    m_nonfed_share_allocated_disbursements_period_isSet = !json[QString("nonfed_share_allocated_disbursements_period")].isNull() && m_nonfed_share_allocated_disbursements_period_isValid;

    m_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_period, json[QString("offsets_to_operating_expenditures_period")]);
    m_offsets_to_operating_expenditures_period_isSet = !json[QString("offsets_to_operating_expenditures_period")].isNull() && m_offsets_to_operating_expenditures_period_isValid;

    m_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_ytd, json[QString("offsets_to_operating_expenditures_ytd")]);
    m_offsets_to_operating_expenditures_ytd_isSet = !json[QString("offsets_to_operating_expenditures_ytd")].isNull() && m_offsets_to_operating_expenditures_ytd_isValid;

    m_other_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_period, json[QString("other_disbursements_period")]);
    m_other_disbursements_period_isSet = !json[QString("other_disbursements_period")].isNull() && m_other_disbursements_period_isValid;

    m_other_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_ytd, json[QString("other_disbursements_ytd")]);
    m_other_disbursements_ytd_isSet = !json[QString("other_disbursements_ytd")].isNull() && m_other_disbursements_ytd_isValid;

    m_other_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_other_fed_operating_expenditures_period, json[QString("other_fed_operating_expenditures_period")]);
    m_other_fed_operating_expenditures_period_isSet = !json[QString("other_fed_operating_expenditures_period")].isNull() && m_other_fed_operating_expenditures_period_isValid;

    m_other_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_fed_operating_expenditures_ytd, json[QString("other_fed_operating_expenditures_ytd")]);
    m_other_fed_operating_expenditures_ytd_isSet = !json[QString("other_fed_operating_expenditures_ytd")].isNull() && m_other_fed_operating_expenditures_ytd_isValid;

    m_other_fed_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_other_fed_receipts_period, json[QString("other_fed_receipts_period")]);
    m_other_fed_receipts_period_isSet = !json[QString("other_fed_receipts_period")].isNull() && m_other_fed_receipts_period_isValid;

    m_other_fed_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_fed_receipts_ytd, json[QString("other_fed_receipts_ytd")]);
    m_other_fed_receipts_ytd_isSet = !json[QString("other_fed_receipts_ytd")].isNull() && m_other_fed_receipts_ytd_isValid;

    m_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_period, json[QString("other_political_committee_contributions_period")]);
    m_other_political_committee_contributions_period_isSet = !json[QString("other_political_committee_contributions_period")].isNull() && m_other_political_committee_contributions_period_isValid;

    m_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_ytd, json[QString("other_political_committee_contributions_ytd")]);
    m_other_political_committee_contributions_ytd_isSet = !json[QString("other_political_committee_contributions_ytd")].isNull() && m_other_political_committee_contributions_ytd_isValid;

    m_pdf_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_url, json[QString("pdf_url")]);
    m_pdf_url_isSet = !json[QString("pdf_url")].isNull() && m_pdf_url_isValid;

    m_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_period, json[QString("political_party_committee_contributions_period")]);
    m_political_party_committee_contributions_period_isSet = !json[QString("political_party_committee_contributions_period")].isNull() && m_political_party_committee_contributions_period_isValid;

    m_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_ytd, json[QString("political_party_committee_contributions_ytd")]);
    m_political_party_committee_contributions_ytd_isSet = !json[QString("political_party_committee_contributions_ytd")].isNull() && m_political_party_committee_contributions_ytd_isValid;

    m_previous_file_number_isValid = ::OpenAPI::fromJsonValue(m_previous_file_number, json[QString("previous_file_number")]);
    m_previous_file_number_isSet = !json[QString("previous_file_number")].isNull() && m_previous_file_number_isValid;

    m_receipt_date_isValid = ::OpenAPI::fromJsonValue(m_receipt_date, json[QString("receipt_date")]);
    m_receipt_date_isSet = !json[QString("receipt_date")].isNull() && m_receipt_date_isValid;

    m_refunded_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_period, json[QString("refunded_individual_contributions_period")]);
    m_refunded_individual_contributions_period_isSet = !json[QString("refunded_individual_contributions_period")].isNull() && m_refunded_individual_contributions_period_isValid;

    m_refunded_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_ytd, json[QString("refunded_individual_contributions_ytd")]);
    m_refunded_individual_contributions_ytd_isSet = !json[QString("refunded_individual_contributions_ytd")].isNull() && m_refunded_individual_contributions_ytd_isValid;

    m_refunded_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_period, json[QString("refunded_other_political_committee_contributions_period")]);
    m_refunded_other_political_committee_contributions_period_isSet = !json[QString("refunded_other_political_committee_contributions_period")].isNull() && m_refunded_other_political_committee_contributions_period_isValid;

    m_refunded_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_ytd, json[QString("refunded_other_political_committee_contributions_ytd")]);
    m_refunded_other_political_committee_contributions_ytd_isSet = !json[QString("refunded_other_political_committee_contributions_ytd")].isNull() && m_refunded_other_political_committee_contributions_ytd_isValid;

    m_refunded_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_period, json[QString("refunded_political_party_committee_contributions_period")]);
    m_refunded_political_party_committee_contributions_period_isSet = !json[QString("refunded_political_party_committee_contributions_period")].isNull() && m_refunded_political_party_committee_contributions_period_isValid;

    m_refunded_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_ytd, json[QString("refunded_political_party_committee_contributions_ytd")]);
    m_refunded_political_party_committee_contributions_ytd_isSet = !json[QString("refunded_political_party_committee_contributions_ytd")].isNull() && m_refunded_political_party_committee_contributions_ytd_isValid;

    m_report_form_isValid = ::OpenAPI::fromJsonValue(m_report_form, json[QString("report_form")]);
    m_report_form_isSet = !json[QString("report_form")].isNull() && m_report_form_isValid;

    m_report_type_isValid = ::OpenAPI::fromJsonValue(m_report_type, json[QString("report_type")]);
    m_report_type_isSet = !json[QString("report_type")].isNull() && m_report_type_isValid;

    m_report_type_full_isValid = ::OpenAPI::fromJsonValue(m_report_type_full, json[QString("report_type_full")]);
    m_report_type_full_isSet = !json[QString("report_type_full")].isNull() && m_report_type_full_isValid;

    m_report_year_isValid = ::OpenAPI::fromJsonValue(m_report_year, json[QString("report_year")]);
    m_report_year_isSet = !json[QString("report_year")].isNull() && m_report_year_isValid;

    m_shared_fed_activity_nonfed_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_nonfed_ytd, json[QString("shared_fed_activity_nonfed_ytd")]);
    m_shared_fed_activity_nonfed_ytd_isSet = !json[QString("shared_fed_activity_nonfed_ytd")].isNull() && m_shared_fed_activity_nonfed_ytd_isValid;

    m_shared_fed_activity_period_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_period, json[QString("shared_fed_activity_period")]);
    m_shared_fed_activity_period_isSet = !json[QString("shared_fed_activity_period")].isNull() && m_shared_fed_activity_period_isValid;

    m_shared_fed_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_activity_ytd, json[QString("shared_fed_activity_ytd")]);
    m_shared_fed_activity_ytd_isSet = !json[QString("shared_fed_activity_ytd")].isNull() && m_shared_fed_activity_ytd_isValid;

    m_shared_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_operating_expenditures_period, json[QString("shared_fed_operating_expenditures_period")]);
    m_shared_fed_operating_expenditures_period_isSet = !json[QString("shared_fed_operating_expenditures_period")].isNull() && m_shared_fed_operating_expenditures_period_isValid;

    m_shared_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_fed_operating_expenditures_ytd, json[QString("shared_fed_operating_expenditures_ytd")]);
    m_shared_fed_operating_expenditures_ytd_isSet = !json[QString("shared_fed_operating_expenditures_ytd")].isNull() && m_shared_fed_operating_expenditures_ytd_isValid;

    m_shared_nonfed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_shared_nonfed_operating_expenditures_period, json[QString("shared_nonfed_operating_expenditures_period")]);
    m_shared_nonfed_operating_expenditures_period_isSet = !json[QString("shared_nonfed_operating_expenditures_period")].isNull() && m_shared_nonfed_operating_expenditures_period_isValid;

    m_shared_nonfed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_shared_nonfed_operating_expenditures_ytd, json[QString("shared_nonfed_operating_expenditures_ytd")]);
    m_shared_nonfed_operating_expenditures_ytd_isSet = !json[QString("shared_nonfed_operating_expenditures_ytd")].isNull() && m_shared_nonfed_operating_expenditures_ytd_isValid;

    m_subtotal_summary_page_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_page_period, json[QString("subtotal_summary_page_period")]);
    m_subtotal_summary_page_period_isSet = !json[QString("subtotal_summary_page_period")].isNull() && m_subtotal_summary_page_period_isValid;

    m_subtotal_summary_ytd_isValid = ::OpenAPI::fromJsonValue(m_subtotal_summary_ytd, json[QString("subtotal_summary_ytd")]);
    m_subtotal_summary_ytd_isSet = !json[QString("subtotal_summary_ytd")].isNull() && m_subtotal_summary_ytd_isValid;

    m_total_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_period, json[QString("total_contribution_refunds_period")]);
    m_total_contribution_refunds_period_isSet = !json[QString("total_contribution_refunds_period")].isNull() && m_total_contribution_refunds_period_isValid;

    m_total_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_ytd, json[QString("total_contribution_refunds_ytd")]);
    m_total_contribution_refunds_ytd_isSet = !json[QString("total_contribution_refunds_ytd")].isNull() && m_total_contribution_refunds_ytd_isValid;

    m_total_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_period, json[QString("total_contributions_period")]);
    m_total_contributions_period_isSet = !json[QString("total_contributions_period")].isNull() && m_total_contributions_period_isValid;

    m_total_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_ytd, json[QString("total_contributions_ytd")]);
    m_total_contributions_ytd_isSet = !json[QString("total_contributions_ytd")].isNull() && m_total_contributions_ytd_isValid;

    m_total_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_period, json[QString("total_disbursements_period")]);
    m_total_disbursements_period_isSet = !json[QString("total_disbursements_period")].isNull() && m_total_disbursements_period_isValid;

    m_total_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_ytd, json[QString("total_disbursements_ytd")]);
    m_total_disbursements_ytd_isSet = !json[QString("total_disbursements_ytd")].isNull() && m_total_disbursements_ytd_isValid;

    m_total_fed_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_disbursements_period, json[QString("total_fed_disbursements_period")]);
    m_total_fed_disbursements_period_isSet = !json[QString("total_fed_disbursements_period")].isNull() && m_total_fed_disbursements_period_isValid;

    m_total_fed_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_disbursements_ytd, json[QString("total_fed_disbursements_ytd")]);
    m_total_fed_disbursements_ytd_isSet = !json[QString("total_fed_disbursements_ytd")].isNull() && m_total_fed_disbursements_ytd_isValid;

    m_total_fed_election_activity_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_election_activity_period, json[QString("total_fed_election_activity_period")]);
    m_total_fed_election_activity_period_isSet = !json[QString("total_fed_election_activity_period")].isNull() && m_total_fed_election_activity_period_isValid;

    m_total_fed_election_activity_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_election_activity_ytd, json[QString("total_fed_election_activity_ytd")]);
    m_total_fed_election_activity_ytd_isSet = !json[QString("total_fed_election_activity_ytd")].isNull() && m_total_fed_election_activity_ytd_isValid;

    m_total_fed_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_operating_expenditures_period, json[QString("total_fed_operating_expenditures_period")]);
    m_total_fed_operating_expenditures_period_isSet = !json[QString("total_fed_operating_expenditures_period")].isNull() && m_total_fed_operating_expenditures_period_isValid;

    m_total_fed_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_operating_expenditures_ytd, json[QString("total_fed_operating_expenditures_ytd")]);
    m_total_fed_operating_expenditures_ytd_isSet = !json[QString("total_fed_operating_expenditures_ytd")].isNull() && m_total_fed_operating_expenditures_ytd_isValid;

    m_total_fed_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_fed_receipts_period, json[QString("total_fed_receipts_period")]);
    m_total_fed_receipts_period_isSet = !json[QString("total_fed_receipts_period")].isNull() && m_total_fed_receipts_period_isValid;

    m_total_fed_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_fed_receipts_ytd, json[QString("total_fed_receipts_ytd")]);
    m_total_fed_receipts_ytd_isSet = !json[QString("total_fed_receipts_ytd")].isNull() && m_total_fed_receipts_ytd_isValid;

    m_total_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_period, json[QString("total_individual_contributions_period")]);
    m_total_individual_contributions_period_isSet = !json[QString("total_individual_contributions_period")].isNull() && m_total_individual_contributions_period_isValid;

    m_total_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_ytd, json[QString("total_individual_contributions_ytd")]);
    m_total_individual_contributions_ytd_isSet = !json[QString("total_individual_contributions_ytd")].isNull() && m_total_individual_contributions_ytd_isValid;

    m_total_nonfed_transfers_period_isValid = ::OpenAPI::fromJsonValue(m_total_nonfed_transfers_period, json[QString("total_nonfed_transfers_period")]);
    m_total_nonfed_transfers_period_isSet = !json[QString("total_nonfed_transfers_period")].isNull() && m_total_nonfed_transfers_period_isValid;

    m_total_nonfed_transfers_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_nonfed_transfers_ytd, json[QString("total_nonfed_transfers_ytd")]);
    m_total_nonfed_transfers_ytd_isSet = !json[QString("total_nonfed_transfers_ytd")].isNull() && m_total_nonfed_transfers_ytd_isValid;

    m_total_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_period, json[QString("total_operating_expenditures_period")]);
    m_total_operating_expenditures_period_isSet = !json[QString("total_operating_expenditures_period")].isNull() && m_total_operating_expenditures_period_isValid;

    m_total_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_ytd, json[QString("total_operating_expenditures_ytd")]);
    m_total_operating_expenditures_ytd_isSet = !json[QString("total_operating_expenditures_ytd")].isNull() && m_total_operating_expenditures_ytd_isValid;

    m_total_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_period, json[QString("total_receipts_period")]);
    m_total_receipts_period_isSet = !json[QString("total_receipts_period")].isNull() && m_total_receipts_period_isValid;

    m_total_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_ytd, json[QString("total_receipts_ytd")]);
    m_total_receipts_ytd_isSet = !json[QString("total_receipts_ytd")].isNull() && m_total_receipts_ytd_isValid;

    m_transfers_from_affiliated_party_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_party_period, json[QString("transfers_from_affiliated_party_period")]);
    m_transfers_from_affiliated_party_period_isSet = !json[QString("transfers_from_affiliated_party_period")].isNull() && m_transfers_from_affiliated_party_period_isValid;

    m_transfers_from_affiliated_party_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_affiliated_party_ytd, json[QString("transfers_from_affiliated_party_ytd")]);
    m_transfers_from_affiliated_party_ytd_isSet = !json[QString("transfers_from_affiliated_party_ytd")].isNull() && m_transfers_from_affiliated_party_ytd_isValid;

    m_transfers_from_nonfed_account_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_account_period, json[QString("transfers_from_nonfed_account_period")]);
    m_transfers_from_nonfed_account_period_isSet = !json[QString("transfers_from_nonfed_account_period")].isNull() && m_transfers_from_nonfed_account_period_isValid;

    m_transfers_from_nonfed_account_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_account_ytd, json[QString("transfers_from_nonfed_account_ytd")]);
    m_transfers_from_nonfed_account_ytd_isSet = !json[QString("transfers_from_nonfed_account_ytd")].isNull() && m_transfers_from_nonfed_account_ytd_isValid;

    m_transfers_from_nonfed_levin_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_levin_period, json[QString("transfers_from_nonfed_levin_period")]);
    m_transfers_from_nonfed_levin_period_isSet = !json[QString("transfers_from_nonfed_levin_period")].isNull() && m_transfers_from_nonfed_levin_period_isValid;

    m_transfers_from_nonfed_levin_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_nonfed_levin_ytd, json[QString("transfers_from_nonfed_levin_ytd")]);
    m_transfers_from_nonfed_levin_ytd_isSet = !json[QString("transfers_from_nonfed_levin_ytd")].isNull() && m_transfers_from_nonfed_levin_ytd_isValid;

    m_transfers_to_affiliated_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_affiliated_committee_period, json[QString("transfers_to_affiliated_committee_period")]);
    m_transfers_to_affiliated_committee_period_isSet = !json[QString("transfers_to_affiliated_committee_period")].isNull() && m_transfers_to_affiliated_committee_period_isValid;

    m_transfers_to_affilitated_committees_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_affilitated_committees_ytd, json[QString("transfers_to_affilitated_committees_ytd")]);
    m_transfers_to_affilitated_committees_ytd_isSet = !json[QString("transfers_to_affilitated_committees_ytd")].isNull() && m_transfers_to_affilitated_committees_ytd_isValid;
}

QString OAICommitteeReportsPacParty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitteeReportsPacParty::asJsonObject() const {
    QJsonObject obj;
    if (m_all_loans_received_period_isSet) {
        obj.insert(QString("all_loans_received_period"), ::OpenAPI::toJsonValue(m_all_loans_received_period));
    }
    if (m_all_loans_received_ytd_isSet) {
        obj.insert(QString("all_loans_received_ytd"), ::OpenAPI::toJsonValue(m_all_loans_received_ytd));
    }
    if (m_allocated_federal_election_levin_share_period_isSet) {
        obj.insert(QString("allocated_federal_election_levin_share_period"), ::OpenAPI::toJsonValue(m_allocated_federal_election_levin_share_period));
    }
    if (m_amendment_chain.size() > 0) {
        obj.insert(QString("amendment_chain"), ::OpenAPI::toJsonValue(m_amendment_chain));
    }
    if (m_amendment_indicator_isSet) {
        obj.insert(QString("amendment_indicator"), ::OpenAPI::toJsonValue(m_amendment_indicator));
    }
    if (m_amendment_indicator_full_isSet) {
        obj.insert(QString("amendment_indicator_full"), ::OpenAPI::toJsonValue(m_amendment_indicator_full));
    }
    if (m_beginning_image_number_isSet) {
        obj.insert(QString("beginning_image_number"), ::OpenAPI::toJsonValue(m_beginning_image_number));
    }
    if (m_calendar_ytd_isSet) {
        obj.insert(QString("calendar_ytd"), ::OpenAPI::toJsonValue(m_calendar_ytd));
    }
    if (m_cash_on_hand_beginning_calendar_ytd_isSet) {
        obj.insert(QString("cash_on_hand_beginning_calendar_ytd"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_calendar_ytd));
    }
    if (m_cash_on_hand_beginning_period_isSet) {
        obj.insert(QString("cash_on_hand_beginning_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_period));
    }
    if (m_cash_on_hand_close_ytd_isSet) {
        obj.insert(QString("cash_on_hand_close_ytd"), ::OpenAPI::toJsonValue(m_cash_on_hand_close_ytd));
    }
    if (m_cash_on_hand_end_period_isSet) {
        obj.insert(QString("cash_on_hand_end_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_end_period));
    }
    if (m_committee_id_isSet) {
        obj.insert(QString("committee_id"), ::OpenAPI::toJsonValue(m_committee_id));
    }
    if (m_committee_name_isSet) {
        obj.insert(QString("committee_name"), ::OpenAPI::toJsonValue(m_committee_name));
    }
    if (m_committee_type_isSet) {
        obj.insert(QString("committee_type"), ::OpenAPI::toJsonValue(m_committee_type));
    }
    if (m_coordinated_expenditures_by_party_committee_period_isSet) {
        obj.insert(QString("coordinated_expenditures_by_party_committee_period"), ::OpenAPI::toJsonValue(m_coordinated_expenditures_by_party_committee_period));
    }
    if (m_coordinated_expenditures_by_party_committee_ytd_isSet) {
        obj.insert(QString("coordinated_expenditures_by_party_committee_ytd"), ::OpenAPI::toJsonValue(m_coordinated_expenditures_by_party_committee_ytd));
    }
    if (m_coverage_end_date_isSet) {
        obj.insert(QString("coverage_end_date"), ::OpenAPI::toJsonValue(m_coverage_end_date));
    }
    if (m_coverage_start_date_isSet) {
        obj.insert(QString("coverage_start_date"), ::OpenAPI::toJsonValue(m_coverage_start_date));
    }
    if (m_csv_url_isSet) {
        obj.insert(QString("csv_url"), ::OpenAPI::toJsonValue(m_csv_url));
    }
    if (m_cycle_isSet) {
        obj.insert(QString("cycle"), ::OpenAPI::toJsonValue(m_cycle));
    }
    if (m_debts_owed_by_committee_isSet) {
        obj.insert(QString("debts_owed_by_committee"), ::OpenAPI::toJsonValue(m_debts_owed_by_committee));
    }
    if (m_debts_owed_to_committee_isSet) {
        obj.insert(QString("debts_owed_to_committee"), ::OpenAPI::toJsonValue(m_debts_owed_to_committee));
    }
    if (m_document_description_isSet) {
        obj.insert(QString("document_description"), ::OpenAPI::toJsonValue(m_document_description));
    }
    if (m_end_image_number_isSet) {
        obj.insert(QString("end_image_number"), ::OpenAPI::toJsonValue(m_end_image_number));
    }
    if (m_fec_file_id_isSet) {
        obj.insert(QString("fec_file_id"), ::OpenAPI::toJsonValue(m_fec_file_id));
    }
    if (m_fec_url_isSet) {
        obj.insert(QString("fec_url"), ::OpenAPI::toJsonValue(m_fec_url));
    }
    if (m_fed_candidate_committee_contribution_refunds_ytd_isSet) {
        obj.insert(QString("fed_candidate_committee_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contribution_refunds_ytd));
    }
    if (m_fed_candidate_committee_contributions_period_isSet) {
        obj.insert(QString("fed_candidate_committee_contributions_period"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contributions_period));
    }
    if (m_fed_candidate_committee_contributions_ytd_isSet) {
        obj.insert(QString("fed_candidate_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_fed_candidate_committee_contributions_ytd));
    }
    if (m_fed_candidate_contribution_refunds_period_isSet) {
        obj.insert(QString("fed_candidate_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_fed_candidate_contribution_refunds_period));
    }
    if (m_file_number_isSet) {
        obj.insert(QString("file_number"), ::OpenAPI::toJsonValue(m_file_number));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_independent_expenditures_period_isSet) {
        obj.insert(QString("independent_expenditures_period"), ::OpenAPI::toJsonValue(m_independent_expenditures_period));
    }
    if (m_independent_expenditures_ytd_isSet) {
        obj.insert(QString("independent_expenditures_ytd"), ::OpenAPI::toJsonValue(m_independent_expenditures_ytd));
    }
    if (m_individual_itemized_contributions_period_isSet) {
        obj.insert(QString("individual_itemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_period));
    }
    if (m_individual_itemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_itemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_ytd));
    }
    if (m_individual_unitemized_contributions_period_isSet) {
        obj.insert(QString("individual_unitemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_period));
    }
    if (m_individual_unitemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_unitemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_ytd));
    }
    if (m_is_amended_isSet) {
        obj.insert(QString("is_amended"), ::OpenAPI::toJsonValue(m_is_amended));
    }
    if (m_loan_repayments_made_period_isSet) {
        obj.insert(QString("loan_repayments_made_period"), ::OpenAPI::toJsonValue(m_loan_repayments_made_period));
    }
    if (m_loan_repayments_made_ytd_isSet) {
        obj.insert(QString("loan_repayments_made_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_made_ytd));
    }
    if (m_loan_repayments_received_period_isSet) {
        obj.insert(QString("loan_repayments_received_period"), ::OpenAPI::toJsonValue(m_loan_repayments_received_period));
    }
    if (m_loan_repayments_received_ytd_isSet) {
        obj.insert(QString("loan_repayments_received_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_received_ytd));
    }
    if (m_loans_made_period_isSet) {
        obj.insert(QString("loans_made_period"), ::OpenAPI::toJsonValue(m_loans_made_period));
    }
    if (m_loans_made_ytd_isSet) {
        obj.insert(QString("loans_made_ytd"), ::OpenAPI::toJsonValue(m_loans_made_ytd));
    }
    if (m_means_filed_isSet) {
        obj.insert(QString("means_filed"), ::OpenAPI::toJsonValue(m_means_filed));
    }
    if (m_most_recent_isSet) {
        obj.insert(QString("most_recent"), ::OpenAPI::toJsonValue(m_most_recent));
    }
    if (m_most_recent_file_number_isSet) {
        obj.insert(QString("most_recent_file_number"), ::OpenAPI::toJsonValue(m_most_recent_file_number));
    }
    if (m_net_contributions_period_isSet) {
        obj.insert(QString("net_contributions_period"), ::OpenAPI::toJsonValue(m_net_contributions_period));
    }
    if (m_net_contributions_ytd_isSet) {
        obj.insert(QString("net_contributions_ytd"), ::OpenAPI::toJsonValue(m_net_contributions_ytd));
    }
    if (m_net_operating_expenditures_period_isSet) {
        obj.insert(QString("net_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_period));
    }
    if (m_net_operating_expenditures_ytd_isSet) {
        obj.insert(QString("net_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_ytd));
    }
    if (m_non_allocated_fed_election_activity_period_isSet) {
        obj.insert(QString("non_allocated_fed_election_activity_period"), ::OpenAPI::toJsonValue(m_non_allocated_fed_election_activity_period));
    }
    if (m_non_allocated_fed_election_activity_ytd_isSet) {
        obj.insert(QString("non_allocated_fed_election_activity_ytd"), ::OpenAPI::toJsonValue(m_non_allocated_fed_election_activity_ytd));
    }
    if (m_nonfed_share_allocated_disbursements_period_isSet) {
        obj.insert(QString("nonfed_share_allocated_disbursements_period"), ::OpenAPI::toJsonValue(m_nonfed_share_allocated_disbursements_period));
    }
    if (m_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_period));
    }
    if (m_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_ytd));
    }
    if (m_other_disbursements_period_isSet) {
        obj.insert(QString("other_disbursements_period"), ::OpenAPI::toJsonValue(m_other_disbursements_period));
    }
    if (m_other_disbursements_ytd_isSet) {
        obj.insert(QString("other_disbursements_ytd"), ::OpenAPI::toJsonValue(m_other_disbursements_ytd));
    }
    if (m_other_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("other_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_other_fed_operating_expenditures_period));
    }
    if (m_other_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("other_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_other_fed_operating_expenditures_ytd));
    }
    if (m_other_fed_receipts_period_isSet) {
        obj.insert(QString("other_fed_receipts_period"), ::OpenAPI::toJsonValue(m_other_fed_receipts_period));
    }
    if (m_other_fed_receipts_ytd_isSet) {
        obj.insert(QString("other_fed_receipts_ytd"), ::OpenAPI::toJsonValue(m_other_fed_receipts_ytd));
    }
    if (m_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_period));
    }
    if (m_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_ytd));
    }
    if (m_pdf_url_isSet) {
        obj.insert(QString("pdf_url"), ::OpenAPI::toJsonValue(m_pdf_url));
    }
    if (m_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_period));
    }
    if (m_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_ytd));
    }
    if (m_previous_file_number_isSet) {
        obj.insert(QString("previous_file_number"), ::OpenAPI::toJsonValue(m_previous_file_number));
    }
    if (m_receipt_date_isSet) {
        obj.insert(QString("receipt_date"), ::OpenAPI::toJsonValue(m_receipt_date));
    }
    if (m_refunded_individual_contributions_period_isSet) {
        obj.insert(QString("refunded_individual_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_period));
    }
    if (m_refunded_individual_contributions_ytd_isSet) {
        obj.insert(QString("refunded_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_ytd));
    }
    if (m_refunded_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_period));
    }
    if (m_refunded_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_ytd));
    }
    if (m_refunded_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_period));
    }
    if (m_refunded_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_ytd));
    }
    if (m_report_form_isSet) {
        obj.insert(QString("report_form"), ::OpenAPI::toJsonValue(m_report_form));
    }
    if (m_report_type_isSet) {
        obj.insert(QString("report_type"), ::OpenAPI::toJsonValue(m_report_type));
    }
    if (m_report_type_full_isSet) {
        obj.insert(QString("report_type_full"), ::OpenAPI::toJsonValue(m_report_type_full));
    }
    if (m_report_year_isSet) {
        obj.insert(QString("report_year"), ::OpenAPI::toJsonValue(m_report_year));
    }
    if (m_shared_fed_activity_nonfed_ytd_isSet) {
        obj.insert(QString("shared_fed_activity_nonfed_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_activity_nonfed_ytd));
    }
    if (m_shared_fed_activity_period_isSet) {
        obj.insert(QString("shared_fed_activity_period"), ::OpenAPI::toJsonValue(m_shared_fed_activity_period));
    }
    if (m_shared_fed_activity_ytd_isSet) {
        obj.insert(QString("shared_fed_activity_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_activity_ytd));
    }
    if (m_shared_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("shared_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_shared_fed_operating_expenditures_period));
    }
    if (m_shared_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("shared_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_shared_fed_operating_expenditures_ytd));
    }
    if (m_shared_nonfed_operating_expenditures_period_isSet) {
        obj.insert(QString("shared_nonfed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_shared_nonfed_operating_expenditures_period));
    }
    if (m_shared_nonfed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("shared_nonfed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_shared_nonfed_operating_expenditures_ytd));
    }
    if (m_subtotal_summary_page_period_isSet) {
        obj.insert(QString("subtotal_summary_page_period"), ::OpenAPI::toJsonValue(m_subtotal_summary_page_period));
    }
    if (m_subtotal_summary_ytd_isSet) {
        obj.insert(QString("subtotal_summary_ytd"), ::OpenAPI::toJsonValue(m_subtotal_summary_ytd));
    }
    if (m_total_contribution_refunds_period_isSet) {
        obj.insert(QString("total_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_period));
    }
    if (m_total_contribution_refunds_ytd_isSet) {
        obj.insert(QString("total_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_ytd));
    }
    if (m_total_contributions_period_isSet) {
        obj.insert(QString("total_contributions_period"), ::OpenAPI::toJsonValue(m_total_contributions_period));
    }
    if (m_total_contributions_ytd_isSet) {
        obj.insert(QString("total_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_contributions_ytd));
    }
    if (m_total_disbursements_period_isSet) {
        obj.insert(QString("total_disbursements_period"), ::OpenAPI::toJsonValue(m_total_disbursements_period));
    }
    if (m_total_disbursements_ytd_isSet) {
        obj.insert(QString("total_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_disbursements_ytd));
    }
    if (m_total_fed_disbursements_period_isSet) {
        obj.insert(QString("total_fed_disbursements_period"), ::OpenAPI::toJsonValue(m_total_fed_disbursements_period));
    }
    if (m_total_fed_disbursements_ytd_isSet) {
        obj.insert(QString("total_fed_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_fed_disbursements_ytd));
    }
    if (m_total_fed_election_activity_period_isSet) {
        obj.insert(QString("total_fed_election_activity_period"), ::OpenAPI::toJsonValue(m_total_fed_election_activity_period));
    }
    if (m_total_fed_election_activity_ytd_isSet) {
        obj.insert(QString("total_fed_election_activity_ytd"), ::OpenAPI::toJsonValue(m_total_fed_election_activity_ytd));
    }
    if (m_total_fed_operating_expenditures_period_isSet) {
        obj.insert(QString("total_fed_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_fed_operating_expenditures_period));
    }
    if (m_total_fed_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_fed_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_fed_operating_expenditures_ytd));
    }
    if (m_total_fed_receipts_period_isSet) {
        obj.insert(QString("total_fed_receipts_period"), ::OpenAPI::toJsonValue(m_total_fed_receipts_period));
    }
    if (m_total_fed_receipts_ytd_isSet) {
        obj.insert(QString("total_fed_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_fed_receipts_ytd));
    }
    if (m_total_individual_contributions_period_isSet) {
        obj.insert(QString("total_individual_contributions_period"), ::OpenAPI::toJsonValue(m_total_individual_contributions_period));
    }
    if (m_total_individual_contributions_ytd_isSet) {
        obj.insert(QString("total_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_individual_contributions_ytd));
    }
    if (m_total_nonfed_transfers_period_isSet) {
        obj.insert(QString("total_nonfed_transfers_period"), ::OpenAPI::toJsonValue(m_total_nonfed_transfers_period));
    }
    if (m_total_nonfed_transfers_ytd_isSet) {
        obj.insert(QString("total_nonfed_transfers_ytd"), ::OpenAPI::toJsonValue(m_total_nonfed_transfers_ytd));
    }
    if (m_total_operating_expenditures_period_isSet) {
        obj.insert(QString("total_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_period));
    }
    if (m_total_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_ytd));
    }
    if (m_total_receipts_period_isSet) {
        obj.insert(QString("total_receipts_period"), ::OpenAPI::toJsonValue(m_total_receipts_period));
    }
    if (m_total_receipts_ytd_isSet) {
        obj.insert(QString("total_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_receipts_ytd));
    }
    if (m_transfers_from_affiliated_party_period_isSet) {
        obj.insert(QString("transfers_from_affiliated_party_period"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_party_period));
    }
    if (m_transfers_from_affiliated_party_ytd_isSet) {
        obj.insert(QString("transfers_from_affiliated_party_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_affiliated_party_ytd));
    }
    if (m_transfers_from_nonfed_account_period_isSet) {
        obj.insert(QString("transfers_from_nonfed_account_period"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_account_period));
    }
    if (m_transfers_from_nonfed_account_ytd_isSet) {
        obj.insert(QString("transfers_from_nonfed_account_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_account_ytd));
    }
    if (m_transfers_from_nonfed_levin_period_isSet) {
        obj.insert(QString("transfers_from_nonfed_levin_period"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_levin_period));
    }
    if (m_transfers_from_nonfed_levin_ytd_isSet) {
        obj.insert(QString("transfers_from_nonfed_levin_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_nonfed_levin_ytd));
    }
    if (m_transfers_to_affiliated_committee_period_isSet) {
        obj.insert(QString("transfers_to_affiliated_committee_period"), ::OpenAPI::toJsonValue(m_transfers_to_affiliated_committee_period));
    }
    if (m_transfers_to_affilitated_committees_ytd_isSet) {
        obj.insert(QString("transfers_to_affilitated_committees_ytd"), ::OpenAPI::toJsonValue(m_transfers_to_affilitated_committees_ytd));
    }
    return obj;
}

double OAICommitteeReportsPacParty::getAllLoansReceivedPeriod() const {
    return m_all_loans_received_period;
}
void OAICommitteeReportsPacParty::setAllLoansReceivedPeriod(const double &all_loans_received_period) {
    m_all_loans_received_period = all_loans_received_period;
    m_all_loans_received_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_all_loans_received_period_Set() const{
    return m_all_loans_received_period_isSet;
}

bool OAICommitteeReportsPacParty::is_all_loans_received_period_Valid() const{
    return m_all_loans_received_period_isValid;
}

double OAICommitteeReportsPacParty::getAllLoansReceivedYtd() const {
    return m_all_loans_received_ytd;
}
void OAICommitteeReportsPacParty::setAllLoansReceivedYtd(const double &all_loans_received_ytd) {
    m_all_loans_received_ytd = all_loans_received_ytd;
    m_all_loans_received_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_all_loans_received_ytd_Set() const{
    return m_all_loans_received_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_all_loans_received_ytd_Valid() const{
    return m_all_loans_received_ytd_isValid;
}

double OAICommitteeReportsPacParty::getAllocatedFederalElectionLevinSharePeriod() const {
    return m_allocated_federal_election_levin_share_period;
}
void OAICommitteeReportsPacParty::setAllocatedFederalElectionLevinSharePeriod(const double &allocated_federal_election_levin_share_period) {
    m_allocated_federal_election_levin_share_period = allocated_federal_election_levin_share_period;
    m_allocated_federal_election_levin_share_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_allocated_federal_election_levin_share_period_Set() const{
    return m_allocated_federal_election_levin_share_period_isSet;
}

bool OAICommitteeReportsPacParty::is_allocated_federal_election_levin_share_period_Valid() const{
    return m_allocated_federal_election_levin_share_period_isValid;
}

QList<double> OAICommitteeReportsPacParty::getAmendmentChain() const {
    return m_amendment_chain;
}
void OAICommitteeReportsPacParty::setAmendmentChain(const QList<double> &amendment_chain) {
    m_amendment_chain = amendment_chain;
    m_amendment_chain_isSet = true;
}

bool OAICommitteeReportsPacParty::is_amendment_chain_Set() const{
    return m_amendment_chain_isSet;
}

bool OAICommitteeReportsPacParty::is_amendment_chain_Valid() const{
    return m_amendment_chain_isValid;
}

QString OAICommitteeReportsPacParty::getAmendmentIndicator() const {
    return m_amendment_indicator;
}
void OAICommitteeReportsPacParty::setAmendmentIndicator(const QString &amendment_indicator) {
    m_amendment_indicator = amendment_indicator;
    m_amendment_indicator_isSet = true;
}

bool OAICommitteeReportsPacParty::is_amendment_indicator_Set() const{
    return m_amendment_indicator_isSet;
}

bool OAICommitteeReportsPacParty::is_amendment_indicator_Valid() const{
    return m_amendment_indicator_isValid;
}

QString OAICommitteeReportsPacParty::getAmendmentIndicatorFull() const {
    return m_amendment_indicator_full;
}
void OAICommitteeReportsPacParty::setAmendmentIndicatorFull(const QString &amendment_indicator_full) {
    m_amendment_indicator_full = amendment_indicator_full;
    m_amendment_indicator_full_isSet = true;
}

bool OAICommitteeReportsPacParty::is_amendment_indicator_full_Set() const{
    return m_amendment_indicator_full_isSet;
}

bool OAICommitteeReportsPacParty::is_amendment_indicator_full_Valid() const{
    return m_amendment_indicator_full_isValid;
}

QString OAICommitteeReportsPacParty::getBeginningImageNumber() const {
    return m_beginning_image_number;
}
void OAICommitteeReportsPacParty::setBeginningImageNumber(const QString &beginning_image_number) {
    m_beginning_image_number = beginning_image_number;
    m_beginning_image_number_isSet = true;
}

bool OAICommitteeReportsPacParty::is_beginning_image_number_Set() const{
    return m_beginning_image_number_isSet;
}

bool OAICommitteeReportsPacParty::is_beginning_image_number_Valid() const{
    return m_beginning_image_number_isValid;
}

qint32 OAICommitteeReportsPacParty::getCalendarYtd() const {
    return m_calendar_ytd;
}
void OAICommitteeReportsPacParty::setCalendarYtd(const qint32 &calendar_ytd) {
    m_calendar_ytd = calendar_ytd;
    m_calendar_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_calendar_ytd_Set() const{
    return m_calendar_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_calendar_ytd_Valid() const{
    return m_calendar_ytd_isValid;
}

double OAICommitteeReportsPacParty::getCashOnHandBeginningCalendarYtd() const {
    return m_cash_on_hand_beginning_calendar_ytd;
}
void OAICommitteeReportsPacParty::setCashOnHandBeginningCalendarYtd(const double &cash_on_hand_beginning_calendar_ytd) {
    m_cash_on_hand_beginning_calendar_ytd = cash_on_hand_beginning_calendar_ytd;
    m_cash_on_hand_beginning_calendar_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_beginning_calendar_ytd_Set() const{
    return m_cash_on_hand_beginning_calendar_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_beginning_calendar_ytd_Valid() const{
    return m_cash_on_hand_beginning_calendar_ytd_isValid;
}

double OAICommitteeReportsPacParty::getCashOnHandBeginningPeriod() const {
    return m_cash_on_hand_beginning_period;
}
void OAICommitteeReportsPacParty::setCashOnHandBeginningPeriod(const double &cash_on_hand_beginning_period) {
    m_cash_on_hand_beginning_period = cash_on_hand_beginning_period;
    m_cash_on_hand_beginning_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_beginning_period_Set() const{
    return m_cash_on_hand_beginning_period_isSet;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_beginning_period_Valid() const{
    return m_cash_on_hand_beginning_period_isValid;
}

double OAICommitteeReportsPacParty::getCashOnHandCloseYtd() const {
    return m_cash_on_hand_close_ytd;
}
void OAICommitteeReportsPacParty::setCashOnHandCloseYtd(const double &cash_on_hand_close_ytd) {
    m_cash_on_hand_close_ytd = cash_on_hand_close_ytd;
    m_cash_on_hand_close_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_close_ytd_Set() const{
    return m_cash_on_hand_close_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_close_ytd_Valid() const{
    return m_cash_on_hand_close_ytd_isValid;
}

double OAICommitteeReportsPacParty::getCashOnHandEndPeriod() const {
    return m_cash_on_hand_end_period;
}
void OAICommitteeReportsPacParty::setCashOnHandEndPeriod(const double &cash_on_hand_end_period) {
    m_cash_on_hand_end_period = cash_on_hand_end_period;
    m_cash_on_hand_end_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_end_period_Set() const{
    return m_cash_on_hand_end_period_isSet;
}

bool OAICommitteeReportsPacParty::is_cash_on_hand_end_period_Valid() const{
    return m_cash_on_hand_end_period_isValid;
}

QString OAICommitteeReportsPacParty::getCommitteeId() const {
    return m_committee_id;
}
void OAICommitteeReportsPacParty::setCommitteeId(const QString &committee_id) {
    m_committee_id = committee_id;
    m_committee_id_isSet = true;
}

bool OAICommitteeReportsPacParty::is_committee_id_Set() const{
    return m_committee_id_isSet;
}

bool OAICommitteeReportsPacParty::is_committee_id_Valid() const{
    return m_committee_id_isValid;
}

QString OAICommitteeReportsPacParty::getCommitteeName() const {
    return m_committee_name;
}
void OAICommitteeReportsPacParty::setCommitteeName(const QString &committee_name) {
    m_committee_name = committee_name;
    m_committee_name_isSet = true;
}

bool OAICommitteeReportsPacParty::is_committee_name_Set() const{
    return m_committee_name_isSet;
}

bool OAICommitteeReportsPacParty::is_committee_name_Valid() const{
    return m_committee_name_isValid;
}

QString OAICommitteeReportsPacParty::getCommitteeType() const {
    return m_committee_type;
}
void OAICommitteeReportsPacParty::setCommitteeType(const QString &committee_type) {
    m_committee_type = committee_type;
    m_committee_type_isSet = true;
}

bool OAICommitteeReportsPacParty::is_committee_type_Set() const{
    return m_committee_type_isSet;
}

bool OAICommitteeReportsPacParty::is_committee_type_Valid() const{
    return m_committee_type_isValid;
}

double OAICommitteeReportsPacParty::getCoordinatedExpendituresByPartyCommitteePeriod() const {
    return m_coordinated_expenditures_by_party_committee_period;
}
void OAICommitteeReportsPacParty::setCoordinatedExpendituresByPartyCommitteePeriod(const double &coordinated_expenditures_by_party_committee_period) {
    m_coordinated_expenditures_by_party_committee_period = coordinated_expenditures_by_party_committee_period;
    m_coordinated_expenditures_by_party_committee_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_coordinated_expenditures_by_party_committee_period_Set() const{
    return m_coordinated_expenditures_by_party_committee_period_isSet;
}

bool OAICommitteeReportsPacParty::is_coordinated_expenditures_by_party_committee_period_Valid() const{
    return m_coordinated_expenditures_by_party_committee_period_isValid;
}

double OAICommitteeReportsPacParty::getCoordinatedExpendituresByPartyCommitteeYtd() const {
    return m_coordinated_expenditures_by_party_committee_ytd;
}
void OAICommitteeReportsPacParty::setCoordinatedExpendituresByPartyCommitteeYtd(const double &coordinated_expenditures_by_party_committee_ytd) {
    m_coordinated_expenditures_by_party_committee_ytd = coordinated_expenditures_by_party_committee_ytd;
    m_coordinated_expenditures_by_party_committee_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_coordinated_expenditures_by_party_committee_ytd_Set() const{
    return m_coordinated_expenditures_by_party_committee_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_coordinated_expenditures_by_party_committee_ytd_Valid() const{
    return m_coordinated_expenditures_by_party_committee_ytd_isValid;
}

QDateTime OAICommitteeReportsPacParty::getCoverageEndDate() const {
    return m_coverage_end_date;
}
void OAICommitteeReportsPacParty::setCoverageEndDate(const QDateTime &coverage_end_date) {
    m_coverage_end_date = coverage_end_date;
    m_coverage_end_date_isSet = true;
}

bool OAICommitteeReportsPacParty::is_coverage_end_date_Set() const{
    return m_coverage_end_date_isSet;
}

bool OAICommitteeReportsPacParty::is_coverage_end_date_Valid() const{
    return m_coverage_end_date_isValid;
}

QDateTime OAICommitteeReportsPacParty::getCoverageStartDate() const {
    return m_coverage_start_date;
}
void OAICommitteeReportsPacParty::setCoverageStartDate(const QDateTime &coverage_start_date) {
    m_coverage_start_date = coverage_start_date;
    m_coverage_start_date_isSet = true;
}

bool OAICommitteeReportsPacParty::is_coverage_start_date_Set() const{
    return m_coverage_start_date_isSet;
}

bool OAICommitteeReportsPacParty::is_coverage_start_date_Valid() const{
    return m_coverage_start_date_isValid;
}

QString OAICommitteeReportsPacParty::getCsvUrl() const {
    return m_csv_url;
}
void OAICommitteeReportsPacParty::setCsvUrl(const QString &csv_url) {
    m_csv_url = csv_url;
    m_csv_url_isSet = true;
}

bool OAICommitteeReportsPacParty::is_csv_url_Set() const{
    return m_csv_url_isSet;
}

bool OAICommitteeReportsPacParty::is_csv_url_Valid() const{
    return m_csv_url_isValid;
}

qint32 OAICommitteeReportsPacParty::getCycle() const {
    return m_cycle;
}
void OAICommitteeReportsPacParty::setCycle(const qint32 &cycle) {
    m_cycle = cycle;
    m_cycle_isSet = true;
}

bool OAICommitteeReportsPacParty::is_cycle_Set() const{
    return m_cycle_isSet;
}

bool OAICommitteeReportsPacParty::is_cycle_Valid() const{
    return m_cycle_isValid;
}

double OAICommitteeReportsPacParty::getDebtsOwedByCommittee() const {
    return m_debts_owed_by_committee;
}
void OAICommitteeReportsPacParty::setDebtsOwedByCommittee(const double &debts_owed_by_committee) {
    m_debts_owed_by_committee = debts_owed_by_committee;
    m_debts_owed_by_committee_isSet = true;
}

bool OAICommitteeReportsPacParty::is_debts_owed_by_committee_Set() const{
    return m_debts_owed_by_committee_isSet;
}

bool OAICommitteeReportsPacParty::is_debts_owed_by_committee_Valid() const{
    return m_debts_owed_by_committee_isValid;
}

double OAICommitteeReportsPacParty::getDebtsOwedToCommittee() const {
    return m_debts_owed_to_committee;
}
void OAICommitteeReportsPacParty::setDebtsOwedToCommittee(const double &debts_owed_to_committee) {
    m_debts_owed_to_committee = debts_owed_to_committee;
    m_debts_owed_to_committee_isSet = true;
}

bool OAICommitteeReportsPacParty::is_debts_owed_to_committee_Set() const{
    return m_debts_owed_to_committee_isSet;
}

bool OAICommitteeReportsPacParty::is_debts_owed_to_committee_Valid() const{
    return m_debts_owed_to_committee_isValid;
}

QString OAICommitteeReportsPacParty::getDocumentDescription() const {
    return m_document_description;
}
void OAICommitteeReportsPacParty::setDocumentDescription(const QString &document_description) {
    m_document_description = document_description;
    m_document_description_isSet = true;
}

bool OAICommitteeReportsPacParty::is_document_description_Set() const{
    return m_document_description_isSet;
}

bool OAICommitteeReportsPacParty::is_document_description_Valid() const{
    return m_document_description_isValid;
}

QString OAICommitteeReportsPacParty::getEndImageNumber() const {
    return m_end_image_number;
}
void OAICommitteeReportsPacParty::setEndImageNumber(const QString &end_image_number) {
    m_end_image_number = end_image_number;
    m_end_image_number_isSet = true;
}

bool OAICommitteeReportsPacParty::is_end_image_number_Set() const{
    return m_end_image_number_isSet;
}

bool OAICommitteeReportsPacParty::is_end_image_number_Valid() const{
    return m_end_image_number_isValid;
}

QString OAICommitteeReportsPacParty::getFecFileId() const {
    return m_fec_file_id;
}
void OAICommitteeReportsPacParty::setFecFileId(const QString &fec_file_id) {
    m_fec_file_id = fec_file_id;
    m_fec_file_id_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fec_file_id_Set() const{
    return m_fec_file_id_isSet;
}

bool OAICommitteeReportsPacParty::is_fec_file_id_Valid() const{
    return m_fec_file_id_isValid;
}

QString OAICommitteeReportsPacParty::getFecUrl() const {
    return m_fec_url;
}
void OAICommitteeReportsPacParty::setFecUrl(const QString &fec_url) {
    m_fec_url = fec_url;
    m_fec_url_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fec_url_Set() const{
    return m_fec_url_isSet;
}

bool OAICommitteeReportsPacParty::is_fec_url_Valid() const{
    return m_fec_url_isValid;
}

double OAICommitteeReportsPacParty::getFedCandidateCommitteeContributionRefundsYtd() const {
    return m_fed_candidate_committee_contribution_refunds_ytd;
}
void OAICommitteeReportsPacParty::setFedCandidateCommitteeContributionRefundsYtd(const double &fed_candidate_committee_contribution_refunds_ytd) {
    m_fed_candidate_committee_contribution_refunds_ytd = fed_candidate_committee_contribution_refunds_ytd;
    m_fed_candidate_committee_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contribution_refunds_ytd_Set() const{
    return m_fed_candidate_committee_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contribution_refunds_ytd_Valid() const{
    return m_fed_candidate_committee_contribution_refunds_ytd_isValid;
}

double OAICommitteeReportsPacParty::getFedCandidateCommitteeContributionsPeriod() const {
    return m_fed_candidate_committee_contributions_period;
}
void OAICommitteeReportsPacParty::setFedCandidateCommitteeContributionsPeriod(const double &fed_candidate_committee_contributions_period) {
    m_fed_candidate_committee_contributions_period = fed_candidate_committee_contributions_period;
    m_fed_candidate_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contributions_period_Set() const{
    return m_fed_candidate_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contributions_period_Valid() const{
    return m_fed_candidate_committee_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getFedCandidateCommitteeContributionsYtd() const {
    return m_fed_candidate_committee_contributions_ytd;
}
void OAICommitteeReportsPacParty::setFedCandidateCommitteeContributionsYtd(const double &fed_candidate_committee_contributions_ytd) {
    m_fed_candidate_committee_contributions_ytd = fed_candidate_committee_contributions_ytd;
    m_fed_candidate_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contributions_ytd_Set() const{
    return m_fed_candidate_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_committee_contributions_ytd_Valid() const{
    return m_fed_candidate_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getFedCandidateContributionRefundsPeriod() const {
    return m_fed_candidate_contribution_refunds_period;
}
void OAICommitteeReportsPacParty::setFedCandidateContributionRefundsPeriod(const double &fed_candidate_contribution_refunds_period) {
    m_fed_candidate_contribution_refunds_period = fed_candidate_contribution_refunds_period;
    m_fed_candidate_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_contribution_refunds_period_Set() const{
    return m_fed_candidate_contribution_refunds_period_isSet;
}

bool OAICommitteeReportsPacParty::is_fed_candidate_contribution_refunds_period_Valid() const{
    return m_fed_candidate_contribution_refunds_period_isValid;
}

qint32 OAICommitteeReportsPacParty::getFileNumber() const {
    return m_file_number;
}
void OAICommitteeReportsPacParty::setFileNumber(const qint32 &file_number) {
    m_file_number = file_number;
    m_file_number_isSet = true;
}

bool OAICommitteeReportsPacParty::is_file_number_Set() const{
    return m_file_number_isSet;
}

bool OAICommitteeReportsPacParty::is_file_number_Valid() const{
    return m_file_number_isValid;
}

QString OAICommitteeReportsPacParty::getHtmlUrl() const {
    return m_html_url;
}
void OAICommitteeReportsPacParty::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAICommitteeReportsPacParty::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAICommitteeReportsPacParty::is_html_url_Valid() const{
    return m_html_url_isValid;
}

double OAICommitteeReportsPacParty::getIndependentExpendituresPeriod() const {
    return m_independent_expenditures_period;
}
void OAICommitteeReportsPacParty::setIndependentExpendituresPeriod(const double &independent_expenditures_period) {
    m_independent_expenditures_period = independent_expenditures_period;
    m_independent_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_independent_expenditures_period_Set() const{
    return m_independent_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_independent_expenditures_period_Valid() const{
    return m_independent_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getIndependentExpendituresYtd() const {
    return m_independent_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setIndependentExpendituresYtd(const double &independent_expenditures_ytd) {
    m_independent_expenditures_ytd = independent_expenditures_ytd;
    m_independent_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_independent_expenditures_ytd_Set() const{
    return m_independent_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_independent_expenditures_ytd_Valid() const{
    return m_independent_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getIndividualItemizedContributionsPeriod() const {
    return m_individual_itemized_contributions_period;
}
void OAICommitteeReportsPacParty::setIndividualItemizedContributionsPeriod(const double &individual_itemized_contributions_period) {
    m_individual_itemized_contributions_period = individual_itemized_contributions_period;
    m_individual_itemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_individual_itemized_contributions_period_Set() const{
    return m_individual_itemized_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_individual_itemized_contributions_period_Valid() const{
    return m_individual_itemized_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getIndividualItemizedContributionsYtd() const {
    return m_individual_itemized_contributions_ytd;
}
void OAICommitteeReportsPacParty::setIndividualItemizedContributionsYtd(const double &individual_itemized_contributions_ytd) {
    m_individual_itemized_contributions_ytd = individual_itemized_contributions_ytd;
    m_individual_itemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_individual_itemized_contributions_ytd_Set() const{
    return m_individual_itemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_individual_itemized_contributions_ytd_Valid() const{
    return m_individual_itemized_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getIndividualUnitemizedContributionsPeriod() const {
    return m_individual_unitemized_contributions_period;
}
void OAICommitteeReportsPacParty::setIndividualUnitemizedContributionsPeriod(const double &individual_unitemized_contributions_period) {
    m_individual_unitemized_contributions_period = individual_unitemized_contributions_period;
    m_individual_unitemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_individual_unitemized_contributions_period_Set() const{
    return m_individual_unitemized_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_individual_unitemized_contributions_period_Valid() const{
    return m_individual_unitemized_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getIndividualUnitemizedContributionsYtd() const {
    return m_individual_unitemized_contributions_ytd;
}
void OAICommitteeReportsPacParty::setIndividualUnitemizedContributionsYtd(const double &individual_unitemized_contributions_ytd) {
    m_individual_unitemized_contributions_ytd = individual_unitemized_contributions_ytd;
    m_individual_unitemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_individual_unitemized_contributions_ytd_Set() const{
    return m_individual_unitemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_individual_unitemized_contributions_ytd_Valid() const{
    return m_individual_unitemized_contributions_ytd_isValid;
}

bool OAICommitteeReportsPacParty::isIsAmended() const {
    return m_is_amended;
}
void OAICommitteeReportsPacParty::setIsAmended(const bool &is_amended) {
    m_is_amended = is_amended;
    m_is_amended_isSet = true;
}

bool OAICommitteeReportsPacParty::is_is_amended_Set() const{
    return m_is_amended_isSet;
}

bool OAICommitteeReportsPacParty::is_is_amended_Valid() const{
    return m_is_amended_isValid;
}

double OAICommitteeReportsPacParty::getLoanRepaymentsMadePeriod() const {
    return m_loan_repayments_made_period;
}
void OAICommitteeReportsPacParty::setLoanRepaymentsMadePeriod(const double &loan_repayments_made_period) {
    m_loan_repayments_made_period = loan_repayments_made_period;
    m_loan_repayments_made_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_made_period_Set() const{
    return m_loan_repayments_made_period_isSet;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_made_period_Valid() const{
    return m_loan_repayments_made_period_isValid;
}

double OAICommitteeReportsPacParty::getLoanRepaymentsMadeYtd() const {
    return m_loan_repayments_made_ytd;
}
void OAICommitteeReportsPacParty::setLoanRepaymentsMadeYtd(const double &loan_repayments_made_ytd) {
    m_loan_repayments_made_ytd = loan_repayments_made_ytd;
    m_loan_repayments_made_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_made_ytd_Set() const{
    return m_loan_repayments_made_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_made_ytd_Valid() const{
    return m_loan_repayments_made_ytd_isValid;
}

double OAICommitteeReportsPacParty::getLoanRepaymentsReceivedPeriod() const {
    return m_loan_repayments_received_period;
}
void OAICommitteeReportsPacParty::setLoanRepaymentsReceivedPeriod(const double &loan_repayments_received_period) {
    m_loan_repayments_received_period = loan_repayments_received_period;
    m_loan_repayments_received_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_received_period_Set() const{
    return m_loan_repayments_received_period_isSet;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_received_period_Valid() const{
    return m_loan_repayments_received_period_isValid;
}

double OAICommitteeReportsPacParty::getLoanRepaymentsReceivedYtd() const {
    return m_loan_repayments_received_ytd;
}
void OAICommitteeReportsPacParty::setLoanRepaymentsReceivedYtd(const double &loan_repayments_received_ytd) {
    m_loan_repayments_received_ytd = loan_repayments_received_ytd;
    m_loan_repayments_received_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_received_ytd_Set() const{
    return m_loan_repayments_received_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_loan_repayments_received_ytd_Valid() const{
    return m_loan_repayments_received_ytd_isValid;
}

double OAICommitteeReportsPacParty::getLoansMadePeriod() const {
    return m_loans_made_period;
}
void OAICommitteeReportsPacParty::setLoansMadePeriod(const double &loans_made_period) {
    m_loans_made_period = loans_made_period;
    m_loans_made_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loans_made_period_Set() const{
    return m_loans_made_period_isSet;
}

bool OAICommitteeReportsPacParty::is_loans_made_period_Valid() const{
    return m_loans_made_period_isValid;
}

double OAICommitteeReportsPacParty::getLoansMadeYtd() const {
    return m_loans_made_ytd;
}
void OAICommitteeReportsPacParty::setLoansMadeYtd(const double &loans_made_ytd) {
    m_loans_made_ytd = loans_made_ytd;
    m_loans_made_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_loans_made_ytd_Set() const{
    return m_loans_made_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_loans_made_ytd_Valid() const{
    return m_loans_made_ytd_isValid;
}

QString OAICommitteeReportsPacParty::getMeansFiled() const {
    return m_means_filed;
}
void OAICommitteeReportsPacParty::setMeansFiled(const QString &means_filed) {
    m_means_filed = means_filed;
    m_means_filed_isSet = true;
}

bool OAICommitteeReportsPacParty::is_means_filed_Set() const{
    return m_means_filed_isSet;
}

bool OAICommitteeReportsPacParty::is_means_filed_Valid() const{
    return m_means_filed_isValid;
}

bool OAICommitteeReportsPacParty::isMostRecent() const {
    return m_most_recent;
}
void OAICommitteeReportsPacParty::setMostRecent(const bool &most_recent) {
    m_most_recent = most_recent;
    m_most_recent_isSet = true;
}

bool OAICommitteeReportsPacParty::is_most_recent_Set() const{
    return m_most_recent_isSet;
}

bool OAICommitteeReportsPacParty::is_most_recent_Valid() const{
    return m_most_recent_isValid;
}

double OAICommitteeReportsPacParty::getMostRecentFileNumber() const {
    return m_most_recent_file_number;
}
void OAICommitteeReportsPacParty::setMostRecentFileNumber(const double &most_recent_file_number) {
    m_most_recent_file_number = most_recent_file_number;
    m_most_recent_file_number_isSet = true;
}

bool OAICommitteeReportsPacParty::is_most_recent_file_number_Set() const{
    return m_most_recent_file_number_isSet;
}

bool OAICommitteeReportsPacParty::is_most_recent_file_number_Valid() const{
    return m_most_recent_file_number_isValid;
}

double OAICommitteeReportsPacParty::getNetContributionsPeriod() const {
    return m_net_contributions_period;
}
void OAICommitteeReportsPacParty::setNetContributionsPeriod(const double &net_contributions_period) {
    m_net_contributions_period = net_contributions_period;
    m_net_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_net_contributions_period_Set() const{
    return m_net_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_net_contributions_period_Valid() const{
    return m_net_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getNetContributionsYtd() const {
    return m_net_contributions_ytd;
}
void OAICommitteeReportsPacParty::setNetContributionsYtd(const double &net_contributions_ytd) {
    m_net_contributions_ytd = net_contributions_ytd;
    m_net_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_net_contributions_ytd_Set() const{
    return m_net_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_net_contributions_ytd_Valid() const{
    return m_net_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getNetOperatingExpendituresPeriod() const {
    return m_net_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setNetOperatingExpendituresPeriod(const double &net_operating_expenditures_period) {
    m_net_operating_expenditures_period = net_operating_expenditures_period;
    m_net_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_net_operating_expenditures_period_Set() const{
    return m_net_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_net_operating_expenditures_period_Valid() const{
    return m_net_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getNetOperatingExpendituresYtd() const {
    return m_net_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setNetOperatingExpendituresYtd(const double &net_operating_expenditures_ytd) {
    m_net_operating_expenditures_ytd = net_operating_expenditures_ytd;
    m_net_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_net_operating_expenditures_ytd_Set() const{
    return m_net_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_net_operating_expenditures_ytd_Valid() const{
    return m_net_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getNonAllocatedFedElectionActivityPeriod() const {
    return m_non_allocated_fed_election_activity_period;
}
void OAICommitteeReportsPacParty::setNonAllocatedFedElectionActivityPeriod(const double &non_allocated_fed_election_activity_period) {
    m_non_allocated_fed_election_activity_period = non_allocated_fed_election_activity_period;
    m_non_allocated_fed_election_activity_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_non_allocated_fed_election_activity_period_Set() const{
    return m_non_allocated_fed_election_activity_period_isSet;
}

bool OAICommitteeReportsPacParty::is_non_allocated_fed_election_activity_period_Valid() const{
    return m_non_allocated_fed_election_activity_period_isValid;
}

double OAICommitteeReportsPacParty::getNonAllocatedFedElectionActivityYtd() const {
    return m_non_allocated_fed_election_activity_ytd;
}
void OAICommitteeReportsPacParty::setNonAllocatedFedElectionActivityYtd(const double &non_allocated_fed_election_activity_ytd) {
    m_non_allocated_fed_election_activity_ytd = non_allocated_fed_election_activity_ytd;
    m_non_allocated_fed_election_activity_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_non_allocated_fed_election_activity_ytd_Set() const{
    return m_non_allocated_fed_election_activity_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_non_allocated_fed_election_activity_ytd_Valid() const{
    return m_non_allocated_fed_election_activity_ytd_isValid;
}

double OAICommitteeReportsPacParty::getNonfedShareAllocatedDisbursementsPeriod() const {
    return m_nonfed_share_allocated_disbursements_period;
}
void OAICommitteeReportsPacParty::setNonfedShareAllocatedDisbursementsPeriod(const double &nonfed_share_allocated_disbursements_period) {
    m_nonfed_share_allocated_disbursements_period = nonfed_share_allocated_disbursements_period;
    m_nonfed_share_allocated_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_nonfed_share_allocated_disbursements_period_Set() const{
    return m_nonfed_share_allocated_disbursements_period_isSet;
}

bool OAICommitteeReportsPacParty::is_nonfed_share_allocated_disbursements_period_Valid() const{
    return m_nonfed_share_allocated_disbursements_period_isValid;
}

double OAICommitteeReportsPacParty::getOffsetsToOperatingExpendituresPeriod() const {
    return m_offsets_to_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setOffsetsToOperatingExpendituresPeriod(const double &offsets_to_operating_expenditures_period) {
    m_offsets_to_operating_expenditures_period = offsets_to_operating_expenditures_period;
    m_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_offsets_to_operating_expenditures_period_Set() const{
    return m_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_offsets_to_operating_expenditures_period_Valid() const{
    return m_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getOffsetsToOperatingExpendituresYtd() const {
    return m_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setOffsetsToOperatingExpendituresYtd(const double &offsets_to_operating_expenditures_ytd) {
    m_offsets_to_operating_expenditures_ytd = offsets_to_operating_expenditures_ytd;
    m_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_offsets_to_operating_expenditures_ytd_Set() const{
    return m_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getOtherDisbursementsPeriod() const {
    return m_other_disbursements_period;
}
void OAICommitteeReportsPacParty::setOtherDisbursementsPeriod(const double &other_disbursements_period) {
    m_other_disbursements_period = other_disbursements_period;
    m_other_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_disbursements_period_Set() const{
    return m_other_disbursements_period_isSet;
}

bool OAICommitteeReportsPacParty::is_other_disbursements_period_Valid() const{
    return m_other_disbursements_period_isValid;
}

double OAICommitteeReportsPacParty::getOtherDisbursementsYtd() const {
    return m_other_disbursements_ytd;
}
void OAICommitteeReportsPacParty::setOtherDisbursementsYtd(const double &other_disbursements_ytd) {
    m_other_disbursements_ytd = other_disbursements_ytd;
    m_other_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_disbursements_ytd_Set() const{
    return m_other_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_other_disbursements_ytd_Valid() const{
    return m_other_disbursements_ytd_isValid;
}

double OAICommitteeReportsPacParty::getOtherFedOperatingExpendituresPeriod() const {
    return m_other_fed_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setOtherFedOperatingExpendituresPeriod(const double &other_fed_operating_expenditures_period) {
    m_other_fed_operating_expenditures_period = other_fed_operating_expenditures_period;
    m_other_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_fed_operating_expenditures_period_Set() const{
    return m_other_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_other_fed_operating_expenditures_period_Valid() const{
    return m_other_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getOtherFedOperatingExpendituresYtd() const {
    return m_other_fed_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setOtherFedOperatingExpendituresYtd(const double &other_fed_operating_expenditures_ytd) {
    m_other_fed_operating_expenditures_ytd = other_fed_operating_expenditures_ytd;
    m_other_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_fed_operating_expenditures_ytd_Set() const{
    return m_other_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_other_fed_operating_expenditures_ytd_Valid() const{
    return m_other_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getOtherFedReceiptsPeriod() const {
    return m_other_fed_receipts_period;
}
void OAICommitteeReportsPacParty::setOtherFedReceiptsPeriod(const double &other_fed_receipts_period) {
    m_other_fed_receipts_period = other_fed_receipts_period;
    m_other_fed_receipts_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_fed_receipts_period_Set() const{
    return m_other_fed_receipts_period_isSet;
}

bool OAICommitteeReportsPacParty::is_other_fed_receipts_period_Valid() const{
    return m_other_fed_receipts_period_isValid;
}

double OAICommitteeReportsPacParty::getOtherFedReceiptsYtd() const {
    return m_other_fed_receipts_ytd;
}
void OAICommitteeReportsPacParty::setOtherFedReceiptsYtd(const double &other_fed_receipts_ytd) {
    m_other_fed_receipts_ytd = other_fed_receipts_ytd;
    m_other_fed_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_fed_receipts_ytd_Set() const{
    return m_other_fed_receipts_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_other_fed_receipts_ytd_Valid() const{
    return m_other_fed_receipts_ytd_isValid;
}

double OAICommitteeReportsPacParty::getOtherPoliticalCommitteeContributionsPeriod() const {
    return m_other_political_committee_contributions_period;
}
void OAICommitteeReportsPacParty::setOtherPoliticalCommitteeContributionsPeriod(const double &other_political_committee_contributions_period) {
    m_other_political_committee_contributions_period = other_political_committee_contributions_period;
    m_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_political_committee_contributions_period_Set() const{
    return m_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_other_political_committee_contributions_period_Valid() const{
    return m_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getOtherPoliticalCommitteeContributionsYtd() const {
    return m_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsPacParty::setOtherPoliticalCommitteeContributionsYtd(const double &other_political_committee_contributions_ytd) {
    m_other_political_committee_contributions_ytd = other_political_committee_contributions_ytd;
    m_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_other_political_committee_contributions_ytd_Set() const{
    return m_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_other_political_committee_contributions_ytd_Valid() const{
    return m_other_political_committee_contributions_ytd_isValid;
}

QString OAICommitteeReportsPacParty::getPdfUrl() const {
    return m_pdf_url;
}
void OAICommitteeReportsPacParty::setPdfUrl(const QString &pdf_url) {
    m_pdf_url = pdf_url;
    m_pdf_url_isSet = true;
}

bool OAICommitteeReportsPacParty::is_pdf_url_Set() const{
    return m_pdf_url_isSet;
}

bool OAICommitteeReportsPacParty::is_pdf_url_Valid() const{
    return m_pdf_url_isValid;
}

double OAICommitteeReportsPacParty::getPoliticalPartyCommitteeContributionsPeriod() const {
    return m_political_party_committee_contributions_period;
}
void OAICommitteeReportsPacParty::setPoliticalPartyCommitteeContributionsPeriod(const double &political_party_committee_contributions_period) {
    m_political_party_committee_contributions_period = political_party_committee_contributions_period;
    m_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_political_party_committee_contributions_period_Set() const{
    return m_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_political_party_committee_contributions_period_Valid() const{
    return m_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getPoliticalPartyCommitteeContributionsYtd() const {
    return m_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsPacParty::setPoliticalPartyCommitteeContributionsYtd(const double &political_party_committee_contributions_ytd) {
    m_political_party_committee_contributions_ytd = political_party_committee_contributions_ytd;
    m_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_political_party_committee_contributions_ytd_Set() const{
    return m_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_political_party_committee_contributions_ytd_Valid() const{
    return m_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getPreviousFileNumber() const {
    return m_previous_file_number;
}
void OAICommitteeReportsPacParty::setPreviousFileNumber(const double &previous_file_number) {
    m_previous_file_number = previous_file_number;
    m_previous_file_number_isSet = true;
}

bool OAICommitteeReportsPacParty::is_previous_file_number_Set() const{
    return m_previous_file_number_isSet;
}

bool OAICommitteeReportsPacParty::is_previous_file_number_Valid() const{
    return m_previous_file_number_isValid;
}

QDate OAICommitteeReportsPacParty::getReceiptDate() const {
    return m_receipt_date;
}
void OAICommitteeReportsPacParty::setReceiptDate(const QDate &receipt_date) {
    m_receipt_date = receipt_date;
    m_receipt_date_isSet = true;
}

bool OAICommitteeReportsPacParty::is_receipt_date_Set() const{
    return m_receipt_date_isSet;
}

bool OAICommitteeReportsPacParty::is_receipt_date_Valid() const{
    return m_receipt_date_isValid;
}

double OAICommitteeReportsPacParty::getRefundedIndividualContributionsPeriod() const {
    return m_refunded_individual_contributions_period;
}
void OAICommitteeReportsPacParty::setRefundedIndividualContributionsPeriod(const double &refunded_individual_contributions_period) {
    m_refunded_individual_contributions_period = refunded_individual_contributions_period;
    m_refunded_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_individual_contributions_period_Set() const{
    return m_refunded_individual_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_individual_contributions_period_Valid() const{
    return m_refunded_individual_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getRefundedIndividualContributionsYtd() const {
    return m_refunded_individual_contributions_ytd;
}
void OAICommitteeReportsPacParty::setRefundedIndividualContributionsYtd(const double &refunded_individual_contributions_ytd) {
    m_refunded_individual_contributions_ytd = refunded_individual_contributions_ytd;
    m_refunded_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_individual_contributions_ytd_Set() const{
    return m_refunded_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_individual_contributions_ytd_Valid() const{
    return m_refunded_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getRefundedOtherPoliticalCommitteeContributionsPeriod() const {
    return m_refunded_other_political_committee_contributions_period;
}
void OAICommitteeReportsPacParty::setRefundedOtherPoliticalCommitteeContributionsPeriod(const double &refunded_other_political_committee_contributions_period) {
    m_refunded_other_political_committee_contributions_period = refunded_other_political_committee_contributions_period;
    m_refunded_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_other_political_committee_contributions_period_Set() const{
    return m_refunded_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_other_political_committee_contributions_period_Valid() const{
    return m_refunded_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getRefundedOtherPoliticalCommitteeContributionsYtd() const {
    return m_refunded_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsPacParty::setRefundedOtherPoliticalCommitteeContributionsYtd(const double &refunded_other_political_committee_contributions_ytd) {
    m_refunded_other_political_committee_contributions_ytd = refunded_other_political_committee_contributions_ytd;
    m_refunded_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_other_political_committee_contributions_ytd_Set() const{
    return m_refunded_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_other_political_committee_contributions_ytd_Valid() const{
    return m_refunded_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getRefundedPoliticalPartyCommitteeContributionsPeriod() const {
    return m_refunded_political_party_committee_contributions_period;
}
void OAICommitteeReportsPacParty::setRefundedPoliticalPartyCommitteeContributionsPeriod(const double &refunded_political_party_committee_contributions_period) {
    m_refunded_political_party_committee_contributions_period = refunded_political_party_committee_contributions_period;
    m_refunded_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_political_party_committee_contributions_period_Set() const{
    return m_refunded_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_political_party_committee_contributions_period_Valid() const{
    return m_refunded_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getRefundedPoliticalPartyCommitteeContributionsYtd() const {
    return m_refunded_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsPacParty::setRefundedPoliticalPartyCommitteeContributionsYtd(const double &refunded_political_party_committee_contributions_ytd) {
    m_refunded_political_party_committee_contributions_ytd = refunded_political_party_committee_contributions_ytd;
    m_refunded_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_refunded_political_party_committee_contributions_ytd_Set() const{
    return m_refunded_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_refunded_political_party_committee_contributions_ytd_Valid() const{
    return m_refunded_political_party_committee_contributions_ytd_isValid;
}

QString OAICommitteeReportsPacParty::getReportForm() const {
    return m_report_form;
}
void OAICommitteeReportsPacParty::setReportForm(const QString &report_form) {
    m_report_form = report_form;
    m_report_form_isSet = true;
}

bool OAICommitteeReportsPacParty::is_report_form_Set() const{
    return m_report_form_isSet;
}

bool OAICommitteeReportsPacParty::is_report_form_Valid() const{
    return m_report_form_isValid;
}

QString OAICommitteeReportsPacParty::getReportType() const {
    return m_report_type;
}
void OAICommitteeReportsPacParty::setReportType(const QString &report_type) {
    m_report_type = report_type;
    m_report_type_isSet = true;
}

bool OAICommitteeReportsPacParty::is_report_type_Set() const{
    return m_report_type_isSet;
}

bool OAICommitteeReportsPacParty::is_report_type_Valid() const{
    return m_report_type_isValid;
}

QString OAICommitteeReportsPacParty::getReportTypeFull() const {
    return m_report_type_full;
}
void OAICommitteeReportsPacParty::setReportTypeFull(const QString &report_type_full) {
    m_report_type_full = report_type_full;
    m_report_type_full_isSet = true;
}

bool OAICommitteeReportsPacParty::is_report_type_full_Set() const{
    return m_report_type_full_isSet;
}

bool OAICommitteeReportsPacParty::is_report_type_full_Valid() const{
    return m_report_type_full_isValid;
}

qint32 OAICommitteeReportsPacParty::getReportYear() const {
    return m_report_year;
}
void OAICommitteeReportsPacParty::setReportYear(const qint32 &report_year) {
    m_report_year = report_year;
    m_report_year_isSet = true;
}

bool OAICommitteeReportsPacParty::is_report_year_Set() const{
    return m_report_year_isSet;
}

bool OAICommitteeReportsPacParty::is_report_year_Valid() const{
    return m_report_year_isValid;
}

double OAICommitteeReportsPacParty::getSharedFedActivityNonfedYtd() const {
    return m_shared_fed_activity_nonfed_ytd;
}
void OAICommitteeReportsPacParty::setSharedFedActivityNonfedYtd(const double &shared_fed_activity_nonfed_ytd) {
    m_shared_fed_activity_nonfed_ytd = shared_fed_activity_nonfed_ytd;
    m_shared_fed_activity_nonfed_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_nonfed_ytd_Set() const{
    return m_shared_fed_activity_nonfed_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_nonfed_ytd_Valid() const{
    return m_shared_fed_activity_nonfed_ytd_isValid;
}

double OAICommitteeReportsPacParty::getSharedFedActivityPeriod() const {
    return m_shared_fed_activity_period;
}
void OAICommitteeReportsPacParty::setSharedFedActivityPeriod(const double &shared_fed_activity_period) {
    m_shared_fed_activity_period = shared_fed_activity_period;
    m_shared_fed_activity_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_period_Set() const{
    return m_shared_fed_activity_period_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_period_Valid() const{
    return m_shared_fed_activity_period_isValid;
}

double OAICommitteeReportsPacParty::getSharedFedActivityYtd() const {
    return m_shared_fed_activity_ytd;
}
void OAICommitteeReportsPacParty::setSharedFedActivityYtd(const double &shared_fed_activity_ytd) {
    m_shared_fed_activity_ytd = shared_fed_activity_ytd;
    m_shared_fed_activity_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_ytd_Set() const{
    return m_shared_fed_activity_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_fed_activity_ytd_Valid() const{
    return m_shared_fed_activity_ytd_isValid;
}

double OAICommitteeReportsPacParty::getSharedFedOperatingExpendituresPeriod() const {
    return m_shared_fed_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setSharedFedOperatingExpendituresPeriod(const double &shared_fed_operating_expenditures_period) {
    m_shared_fed_operating_expenditures_period = shared_fed_operating_expenditures_period;
    m_shared_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_fed_operating_expenditures_period_Set() const{
    return m_shared_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_fed_operating_expenditures_period_Valid() const{
    return m_shared_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getSharedFedOperatingExpendituresYtd() const {
    return m_shared_fed_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setSharedFedOperatingExpendituresYtd(const double &shared_fed_operating_expenditures_ytd) {
    m_shared_fed_operating_expenditures_ytd = shared_fed_operating_expenditures_ytd;
    m_shared_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_fed_operating_expenditures_ytd_Set() const{
    return m_shared_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_fed_operating_expenditures_ytd_Valid() const{
    return m_shared_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getSharedNonfedOperatingExpendituresPeriod() const {
    return m_shared_nonfed_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setSharedNonfedOperatingExpendituresPeriod(const double &shared_nonfed_operating_expenditures_period) {
    m_shared_nonfed_operating_expenditures_period = shared_nonfed_operating_expenditures_period;
    m_shared_nonfed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_nonfed_operating_expenditures_period_Set() const{
    return m_shared_nonfed_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_nonfed_operating_expenditures_period_Valid() const{
    return m_shared_nonfed_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getSharedNonfedOperatingExpendituresYtd() const {
    return m_shared_nonfed_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setSharedNonfedOperatingExpendituresYtd(const double &shared_nonfed_operating_expenditures_ytd) {
    m_shared_nonfed_operating_expenditures_ytd = shared_nonfed_operating_expenditures_ytd;
    m_shared_nonfed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_shared_nonfed_operating_expenditures_ytd_Set() const{
    return m_shared_nonfed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_shared_nonfed_operating_expenditures_ytd_Valid() const{
    return m_shared_nonfed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getSubtotalSummaryPagePeriod() const {
    return m_subtotal_summary_page_period;
}
void OAICommitteeReportsPacParty::setSubtotalSummaryPagePeriod(const double &subtotal_summary_page_period) {
    m_subtotal_summary_page_period = subtotal_summary_page_period;
    m_subtotal_summary_page_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_subtotal_summary_page_period_Set() const{
    return m_subtotal_summary_page_period_isSet;
}

bool OAICommitteeReportsPacParty::is_subtotal_summary_page_period_Valid() const{
    return m_subtotal_summary_page_period_isValid;
}

double OAICommitteeReportsPacParty::getSubtotalSummaryYtd() const {
    return m_subtotal_summary_ytd;
}
void OAICommitteeReportsPacParty::setSubtotalSummaryYtd(const double &subtotal_summary_ytd) {
    m_subtotal_summary_ytd = subtotal_summary_ytd;
    m_subtotal_summary_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_subtotal_summary_ytd_Set() const{
    return m_subtotal_summary_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_subtotal_summary_ytd_Valid() const{
    return m_subtotal_summary_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalContributionRefundsPeriod() const {
    return m_total_contribution_refunds_period;
}
void OAICommitteeReportsPacParty::setTotalContributionRefundsPeriod(const double &total_contribution_refunds_period) {
    m_total_contribution_refunds_period = total_contribution_refunds_period;
    m_total_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_contribution_refunds_period_Set() const{
    return m_total_contribution_refunds_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_contribution_refunds_period_Valid() const{
    return m_total_contribution_refunds_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalContributionRefundsYtd() const {
    return m_total_contribution_refunds_ytd;
}
void OAICommitteeReportsPacParty::setTotalContributionRefundsYtd(const double &total_contribution_refunds_ytd) {
    m_total_contribution_refunds_ytd = total_contribution_refunds_ytd;
    m_total_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_contribution_refunds_ytd_Set() const{
    return m_total_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_contribution_refunds_ytd_Valid() const{
    return m_total_contribution_refunds_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalContributionsPeriod() const {
    return m_total_contributions_period;
}
void OAICommitteeReportsPacParty::setTotalContributionsPeriod(const double &total_contributions_period) {
    m_total_contributions_period = total_contributions_period;
    m_total_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_contributions_period_Set() const{
    return m_total_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_contributions_period_Valid() const{
    return m_total_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalContributionsYtd() const {
    return m_total_contributions_ytd;
}
void OAICommitteeReportsPacParty::setTotalContributionsYtd(const double &total_contributions_ytd) {
    m_total_contributions_ytd = total_contributions_ytd;
    m_total_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_contributions_ytd_Set() const{
    return m_total_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_contributions_ytd_Valid() const{
    return m_total_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalDisbursementsPeriod() const {
    return m_total_disbursements_period;
}
void OAICommitteeReportsPacParty::setTotalDisbursementsPeriod(const double &total_disbursements_period) {
    m_total_disbursements_period = total_disbursements_period;
    m_total_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_disbursements_period_Set() const{
    return m_total_disbursements_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_disbursements_period_Valid() const{
    return m_total_disbursements_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalDisbursementsYtd() const {
    return m_total_disbursements_ytd;
}
void OAICommitteeReportsPacParty::setTotalDisbursementsYtd(const double &total_disbursements_ytd) {
    m_total_disbursements_ytd = total_disbursements_ytd;
    m_total_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_disbursements_ytd_Set() const{
    return m_total_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_disbursements_ytd_Valid() const{
    return m_total_disbursements_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedDisbursementsPeriod() const {
    return m_total_fed_disbursements_period;
}
void OAICommitteeReportsPacParty::setTotalFedDisbursementsPeriod(const double &total_fed_disbursements_period) {
    m_total_fed_disbursements_period = total_fed_disbursements_period;
    m_total_fed_disbursements_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_disbursements_period_Set() const{
    return m_total_fed_disbursements_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_disbursements_period_Valid() const{
    return m_total_fed_disbursements_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedDisbursementsYtd() const {
    return m_total_fed_disbursements_ytd;
}
void OAICommitteeReportsPacParty::setTotalFedDisbursementsYtd(const double &total_fed_disbursements_ytd) {
    m_total_fed_disbursements_ytd = total_fed_disbursements_ytd;
    m_total_fed_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_disbursements_ytd_Set() const{
    return m_total_fed_disbursements_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_disbursements_ytd_Valid() const{
    return m_total_fed_disbursements_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedElectionActivityPeriod() const {
    return m_total_fed_election_activity_period;
}
void OAICommitteeReportsPacParty::setTotalFedElectionActivityPeriod(const double &total_fed_election_activity_period) {
    m_total_fed_election_activity_period = total_fed_election_activity_period;
    m_total_fed_election_activity_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_election_activity_period_Set() const{
    return m_total_fed_election_activity_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_election_activity_period_Valid() const{
    return m_total_fed_election_activity_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedElectionActivityYtd() const {
    return m_total_fed_election_activity_ytd;
}
void OAICommitteeReportsPacParty::setTotalFedElectionActivityYtd(const double &total_fed_election_activity_ytd) {
    m_total_fed_election_activity_ytd = total_fed_election_activity_ytd;
    m_total_fed_election_activity_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_election_activity_ytd_Set() const{
    return m_total_fed_election_activity_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_election_activity_ytd_Valid() const{
    return m_total_fed_election_activity_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedOperatingExpendituresPeriod() const {
    return m_total_fed_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setTotalFedOperatingExpendituresPeriod(const double &total_fed_operating_expenditures_period) {
    m_total_fed_operating_expenditures_period = total_fed_operating_expenditures_period;
    m_total_fed_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_operating_expenditures_period_Set() const{
    return m_total_fed_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_operating_expenditures_period_Valid() const{
    return m_total_fed_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedOperatingExpendituresYtd() const {
    return m_total_fed_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setTotalFedOperatingExpendituresYtd(const double &total_fed_operating_expenditures_ytd) {
    m_total_fed_operating_expenditures_ytd = total_fed_operating_expenditures_ytd;
    m_total_fed_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_operating_expenditures_ytd_Set() const{
    return m_total_fed_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_operating_expenditures_ytd_Valid() const{
    return m_total_fed_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedReceiptsPeriod() const {
    return m_total_fed_receipts_period;
}
void OAICommitteeReportsPacParty::setTotalFedReceiptsPeriod(const double &total_fed_receipts_period) {
    m_total_fed_receipts_period = total_fed_receipts_period;
    m_total_fed_receipts_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_receipts_period_Set() const{
    return m_total_fed_receipts_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_receipts_period_Valid() const{
    return m_total_fed_receipts_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalFedReceiptsYtd() const {
    return m_total_fed_receipts_ytd;
}
void OAICommitteeReportsPacParty::setTotalFedReceiptsYtd(const double &total_fed_receipts_ytd) {
    m_total_fed_receipts_ytd = total_fed_receipts_ytd;
    m_total_fed_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_fed_receipts_ytd_Set() const{
    return m_total_fed_receipts_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_fed_receipts_ytd_Valid() const{
    return m_total_fed_receipts_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalIndividualContributionsPeriod() const {
    return m_total_individual_contributions_period;
}
void OAICommitteeReportsPacParty::setTotalIndividualContributionsPeriod(const double &total_individual_contributions_period) {
    m_total_individual_contributions_period = total_individual_contributions_period;
    m_total_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_individual_contributions_period_Set() const{
    return m_total_individual_contributions_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_individual_contributions_period_Valid() const{
    return m_total_individual_contributions_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalIndividualContributionsYtd() const {
    return m_total_individual_contributions_ytd;
}
void OAICommitteeReportsPacParty::setTotalIndividualContributionsYtd(const double &total_individual_contributions_ytd) {
    m_total_individual_contributions_ytd = total_individual_contributions_ytd;
    m_total_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_individual_contributions_ytd_Set() const{
    return m_total_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_individual_contributions_ytd_Valid() const{
    return m_total_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalNonfedTransfersPeriod() const {
    return m_total_nonfed_transfers_period;
}
void OAICommitteeReportsPacParty::setTotalNonfedTransfersPeriod(const double &total_nonfed_transfers_period) {
    m_total_nonfed_transfers_period = total_nonfed_transfers_period;
    m_total_nonfed_transfers_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_nonfed_transfers_period_Set() const{
    return m_total_nonfed_transfers_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_nonfed_transfers_period_Valid() const{
    return m_total_nonfed_transfers_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalNonfedTransfersYtd() const {
    return m_total_nonfed_transfers_ytd;
}
void OAICommitteeReportsPacParty::setTotalNonfedTransfersYtd(const double &total_nonfed_transfers_ytd) {
    m_total_nonfed_transfers_ytd = total_nonfed_transfers_ytd;
    m_total_nonfed_transfers_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_nonfed_transfers_ytd_Set() const{
    return m_total_nonfed_transfers_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_nonfed_transfers_ytd_Valid() const{
    return m_total_nonfed_transfers_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalOperatingExpendituresPeriod() const {
    return m_total_operating_expenditures_period;
}
void OAICommitteeReportsPacParty::setTotalOperatingExpendituresPeriod(const double &total_operating_expenditures_period) {
    m_total_operating_expenditures_period = total_operating_expenditures_period;
    m_total_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_operating_expenditures_period_Set() const{
    return m_total_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_operating_expenditures_period_Valid() const{
    return m_total_operating_expenditures_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalOperatingExpendituresYtd() const {
    return m_total_operating_expenditures_ytd;
}
void OAICommitteeReportsPacParty::setTotalOperatingExpendituresYtd(const double &total_operating_expenditures_ytd) {
    m_total_operating_expenditures_ytd = total_operating_expenditures_ytd;
    m_total_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_operating_expenditures_ytd_Set() const{
    return m_total_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_operating_expenditures_ytd_Valid() const{
    return m_total_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTotalReceiptsPeriod() const {
    return m_total_receipts_period;
}
void OAICommitteeReportsPacParty::setTotalReceiptsPeriod(const double &total_receipts_period) {
    m_total_receipts_period = total_receipts_period;
    m_total_receipts_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_receipts_period_Set() const{
    return m_total_receipts_period_isSet;
}

bool OAICommitteeReportsPacParty::is_total_receipts_period_Valid() const{
    return m_total_receipts_period_isValid;
}

double OAICommitteeReportsPacParty::getTotalReceiptsYtd() const {
    return m_total_receipts_ytd;
}
void OAICommitteeReportsPacParty::setTotalReceiptsYtd(const double &total_receipts_ytd) {
    m_total_receipts_ytd = total_receipts_ytd;
    m_total_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_total_receipts_ytd_Set() const{
    return m_total_receipts_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_total_receipts_ytd_Valid() const{
    return m_total_receipts_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromAffiliatedPartyPeriod() const {
    return m_transfers_from_affiliated_party_period;
}
void OAICommitteeReportsPacParty::setTransfersFromAffiliatedPartyPeriod(const double &transfers_from_affiliated_party_period) {
    m_transfers_from_affiliated_party_period = transfers_from_affiliated_party_period;
    m_transfers_from_affiliated_party_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_affiliated_party_period_Set() const{
    return m_transfers_from_affiliated_party_period_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_affiliated_party_period_Valid() const{
    return m_transfers_from_affiliated_party_period_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromAffiliatedPartyYtd() const {
    return m_transfers_from_affiliated_party_ytd;
}
void OAICommitteeReportsPacParty::setTransfersFromAffiliatedPartyYtd(const double &transfers_from_affiliated_party_ytd) {
    m_transfers_from_affiliated_party_ytd = transfers_from_affiliated_party_ytd;
    m_transfers_from_affiliated_party_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_affiliated_party_ytd_Set() const{
    return m_transfers_from_affiliated_party_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_affiliated_party_ytd_Valid() const{
    return m_transfers_from_affiliated_party_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromNonfedAccountPeriod() const {
    return m_transfers_from_nonfed_account_period;
}
void OAICommitteeReportsPacParty::setTransfersFromNonfedAccountPeriod(const double &transfers_from_nonfed_account_period) {
    m_transfers_from_nonfed_account_period = transfers_from_nonfed_account_period;
    m_transfers_from_nonfed_account_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_account_period_Set() const{
    return m_transfers_from_nonfed_account_period_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_account_period_Valid() const{
    return m_transfers_from_nonfed_account_period_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromNonfedAccountYtd() const {
    return m_transfers_from_nonfed_account_ytd;
}
void OAICommitteeReportsPacParty::setTransfersFromNonfedAccountYtd(const double &transfers_from_nonfed_account_ytd) {
    m_transfers_from_nonfed_account_ytd = transfers_from_nonfed_account_ytd;
    m_transfers_from_nonfed_account_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_account_ytd_Set() const{
    return m_transfers_from_nonfed_account_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_account_ytd_Valid() const{
    return m_transfers_from_nonfed_account_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromNonfedLevinPeriod() const {
    return m_transfers_from_nonfed_levin_period;
}
void OAICommitteeReportsPacParty::setTransfersFromNonfedLevinPeriod(const double &transfers_from_nonfed_levin_period) {
    m_transfers_from_nonfed_levin_period = transfers_from_nonfed_levin_period;
    m_transfers_from_nonfed_levin_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_levin_period_Set() const{
    return m_transfers_from_nonfed_levin_period_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_levin_period_Valid() const{
    return m_transfers_from_nonfed_levin_period_isValid;
}

double OAICommitteeReportsPacParty::getTransfersFromNonfedLevinYtd() const {
    return m_transfers_from_nonfed_levin_ytd;
}
void OAICommitteeReportsPacParty::setTransfersFromNonfedLevinYtd(const double &transfers_from_nonfed_levin_ytd) {
    m_transfers_from_nonfed_levin_ytd = transfers_from_nonfed_levin_ytd;
    m_transfers_from_nonfed_levin_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_levin_ytd_Set() const{
    return m_transfers_from_nonfed_levin_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_from_nonfed_levin_ytd_Valid() const{
    return m_transfers_from_nonfed_levin_ytd_isValid;
}

double OAICommitteeReportsPacParty::getTransfersToAffiliatedCommitteePeriod() const {
    return m_transfers_to_affiliated_committee_period;
}
void OAICommitteeReportsPacParty::setTransfersToAffiliatedCommitteePeriod(const double &transfers_to_affiliated_committee_period) {
    m_transfers_to_affiliated_committee_period = transfers_to_affiliated_committee_period;
    m_transfers_to_affiliated_committee_period_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_to_affiliated_committee_period_Set() const{
    return m_transfers_to_affiliated_committee_period_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_to_affiliated_committee_period_Valid() const{
    return m_transfers_to_affiliated_committee_period_isValid;
}

double OAICommitteeReportsPacParty::getTransfersToAffilitatedCommitteesYtd() const {
    return m_transfers_to_affilitated_committees_ytd;
}
void OAICommitteeReportsPacParty::setTransfersToAffilitatedCommitteesYtd(const double &transfers_to_affilitated_committees_ytd) {
    m_transfers_to_affilitated_committees_ytd = transfers_to_affilitated_committees_ytd;
    m_transfers_to_affilitated_committees_ytd_isSet = true;
}

bool OAICommitteeReportsPacParty::is_transfers_to_affilitated_committees_ytd_Set() const{
    return m_transfers_to_affilitated_committees_ytd_isSet;
}

bool OAICommitteeReportsPacParty::is_transfers_to_affilitated_committees_ytd_Valid() const{
    return m_transfers_to_affilitated_committees_ytd_isValid;
}

bool OAICommitteeReportsPacParty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_all_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allocated_federal_election_levin_share_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_chain.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beginning_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calendar_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_calendar_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_close_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_end_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coordinated_expenditures_by_party_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coordinated_expenditures_by_party_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_by_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_to_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fed_candidate_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_independent_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_independent_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_amended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_means_filed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_allocated_fed_election_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_allocated_fed_election_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nonfed_share_allocated_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_fed_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_nonfed_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_nonfed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_nonfed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_page_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_summary_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_election_activity_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_election_activity_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_fed_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_nonfed_transfers_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_nonfed_transfers_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_party_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_affiliated_party_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_account_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_account_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_levin_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_nonfed_levin_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_affiliated_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_affilitated_committees_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitteeReportsPacParty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
