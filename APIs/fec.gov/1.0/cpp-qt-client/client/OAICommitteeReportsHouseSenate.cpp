/**
 * OpenFEC
 * This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns.    The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints.    <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br>    If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md).    Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data).    The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/).    [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!    <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitteeReportsHouseSenate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitteeReportsHouseSenate::OAICommitteeReportsHouseSenate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitteeReportsHouseSenate::OAICommitteeReportsHouseSenate() {
    this->initializeModel();
}

OAICommitteeReportsHouseSenate::~OAICommitteeReportsHouseSenate() {}

void OAICommitteeReportsHouseSenate::initializeModel() {

    m_aggregate_amount_personal_contributions_general_isSet = false;
    m_aggregate_amount_personal_contributions_general_isValid = false;

    m_aggregate_contributions_personal_funds_primary_isSet = false;
    m_aggregate_contributions_personal_funds_primary_isValid = false;

    m_all_other_loans_period_isSet = false;
    m_all_other_loans_period_isValid = false;

    m_all_other_loans_ytd_isSet = false;
    m_all_other_loans_ytd_isValid = false;

    m_amendment_chain_isSet = false;
    m_amendment_chain_isValid = false;

    m_amendment_indicator_isSet = false;
    m_amendment_indicator_isValid = false;

    m_amendment_indicator_full_isSet = false;
    m_amendment_indicator_full_isValid = false;

    m_beginning_image_number_isSet = false;
    m_beginning_image_number_isValid = false;

    m_candidate_contribution_period_isSet = false;
    m_candidate_contribution_period_isValid = false;

    m_candidate_contribution_ytd_isSet = false;
    m_candidate_contribution_ytd_isValid = false;

    m_cash_on_hand_beginning_period_isSet = false;
    m_cash_on_hand_beginning_period_isValid = false;

    m_cash_on_hand_end_period_isSet = false;
    m_cash_on_hand_end_period_isValid = false;

    m_committee_id_isSet = false;
    m_committee_id_isValid = false;

    m_committee_name_isSet = false;
    m_committee_name_isValid = false;

    m_committee_type_isSet = false;
    m_committee_type_isValid = false;

    m_coverage_end_date_isSet = false;
    m_coverage_end_date_isValid = false;

    m_coverage_start_date_isSet = false;
    m_coverage_start_date_isValid = false;

    m_csv_url_isSet = false;
    m_csv_url_isValid = false;

    m_cycle_isSet = false;
    m_cycle_isValid = false;

    m_debts_owed_by_committee_isSet = false;
    m_debts_owed_by_committee_isValid = false;

    m_debts_owed_to_committee_isSet = false;
    m_debts_owed_to_committee_isValid = false;

    m_document_description_isSet = false;
    m_document_description_isValid = false;

    m_end_image_number_isSet = false;
    m_end_image_number_isValid = false;

    m_fec_file_id_isSet = false;
    m_fec_file_id_isValid = false;

    m_fec_url_isSet = false;
    m_fec_url_isValid = false;

    m_file_number_isSet = false;
    m_file_number_isValid = false;

    m_gross_receipt_authorized_committee_general_isSet = false;
    m_gross_receipt_authorized_committee_general_isValid = false;

    m_gross_receipt_authorized_committee_primary_isSet = false;
    m_gross_receipt_authorized_committee_primary_isValid = false;

    m_gross_receipt_minus_personal_contribution_general_isSet = false;
    m_gross_receipt_minus_personal_contribution_general_isValid = false;

    m_gross_receipt_minus_personal_contributions_primary_isSet = false;
    m_gross_receipt_minus_personal_contributions_primary_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_individual_itemized_contributions_period_isSet = false;
    m_individual_itemized_contributions_period_isValid = false;

    m_individual_itemized_contributions_ytd_isSet = false;
    m_individual_itemized_contributions_ytd_isValid = false;

    m_individual_unitemized_contributions_period_isSet = false;
    m_individual_unitemized_contributions_period_isValid = false;

    m_individual_unitemized_contributions_ytd_isSet = false;
    m_individual_unitemized_contributions_ytd_isValid = false;

    m_is_amended_isSet = false;
    m_is_amended_isValid = false;

    m_loan_repayments_candidate_loans_period_isSet = false;
    m_loan_repayments_candidate_loans_period_isValid = false;

    m_loan_repayments_candidate_loans_ytd_isSet = false;
    m_loan_repayments_candidate_loans_ytd_isValid = false;

    m_loan_repayments_other_loans_period_isSet = false;
    m_loan_repayments_other_loans_period_isValid = false;

    m_loan_repayments_other_loans_ytd_isSet = false;
    m_loan_repayments_other_loans_ytd_isValid = false;

    m_loans_made_by_candidate_period_isSet = false;
    m_loans_made_by_candidate_period_isValid = false;

    m_loans_made_by_candidate_ytd_isSet = false;
    m_loans_made_by_candidate_ytd_isValid = false;

    m_means_filed_isSet = false;
    m_means_filed_isValid = false;

    m_most_recent_isSet = false;
    m_most_recent_isValid = false;

    m_most_recent_file_number_isSet = false;
    m_most_recent_file_number_isValid = false;

    m_net_contributions_period_isSet = false;
    m_net_contributions_period_isValid = false;

    m_net_contributions_ytd_isSet = false;
    m_net_contributions_ytd_isValid = false;

    m_net_operating_expenditures_period_isSet = false;
    m_net_operating_expenditures_period_isValid = false;

    m_net_operating_expenditures_ytd_isSet = false;
    m_net_operating_expenditures_ytd_isValid = false;

    m_offsets_to_operating_expenditures_period_isSet = false;
    m_offsets_to_operating_expenditures_period_isValid = false;

    m_offsets_to_operating_expenditures_ytd_isSet = false;
    m_offsets_to_operating_expenditures_ytd_isValid = false;

    m_operating_expenditures_period_isSet = false;
    m_operating_expenditures_period_isValid = false;

    m_operating_expenditures_ytd_isSet = false;
    m_operating_expenditures_ytd_isValid = false;

    m_other_disbursements_period_isSet = false;
    m_other_disbursements_period_isValid = false;

    m_other_disbursements_ytd_isSet = false;
    m_other_disbursements_ytd_isValid = false;

    m_other_political_committee_contributions_period_isSet = false;
    m_other_political_committee_contributions_period_isValid = false;

    m_other_political_committee_contributions_ytd_isSet = false;
    m_other_political_committee_contributions_ytd_isValid = false;

    m_other_receipts_period_isSet = false;
    m_other_receipts_period_isValid = false;

    m_other_receipts_ytd_isSet = false;
    m_other_receipts_ytd_isValid = false;

    m_pdf_url_isSet = false;
    m_pdf_url_isValid = false;

    m_political_party_committee_contributions_period_isSet = false;
    m_political_party_committee_contributions_period_isValid = false;

    m_political_party_committee_contributions_ytd_isSet = false;
    m_political_party_committee_contributions_ytd_isValid = false;

    m_previous_file_number_isSet = false;
    m_previous_file_number_isValid = false;

    m_receipt_date_isSet = false;
    m_receipt_date_isValid = false;

    m_refunded_individual_contributions_period_isSet = false;
    m_refunded_individual_contributions_period_isValid = false;

    m_refunded_individual_contributions_ytd_isSet = false;
    m_refunded_individual_contributions_ytd_isValid = false;

    m_refunded_other_political_committee_contributions_period_isSet = false;
    m_refunded_other_political_committee_contributions_period_isValid = false;

    m_refunded_other_political_committee_contributions_ytd_isSet = false;
    m_refunded_other_political_committee_contributions_ytd_isValid = false;

    m_refunded_political_party_committee_contributions_period_isSet = false;
    m_refunded_political_party_committee_contributions_period_isValid = false;

    m_refunded_political_party_committee_contributions_ytd_isSet = false;
    m_refunded_political_party_committee_contributions_ytd_isValid = false;

    m_refunds_total_contributions_col_total_ytd_isSet = false;
    m_refunds_total_contributions_col_total_ytd_isValid = false;

    m_report_form_isSet = false;
    m_report_form_isValid = false;

    m_report_type_isSet = false;
    m_report_type_isValid = false;

    m_report_type_full_isSet = false;
    m_report_type_full_isValid = false;

    m_report_year_isSet = false;
    m_report_year_isValid = false;

    m_subtotal_period_isSet = false;
    m_subtotal_period_isValid = false;

    m_total_contribution_refunds_col_total_period_isSet = false;
    m_total_contribution_refunds_col_total_period_isValid = false;

    m_total_contribution_refunds_period_isSet = false;
    m_total_contribution_refunds_period_isValid = false;

    m_total_contribution_refunds_ytd_isSet = false;
    m_total_contribution_refunds_ytd_isValid = false;

    m_total_contributions_column_total_period_isSet = false;
    m_total_contributions_column_total_period_isValid = false;

    m_total_contributions_period_isSet = false;
    m_total_contributions_period_isValid = false;

    m_total_contributions_ytd_isSet = false;
    m_total_contributions_ytd_isValid = false;

    m_total_disbursements_period_isSet = false;
    m_total_disbursements_period_isValid = false;

    m_total_disbursements_ytd_isSet = false;
    m_total_disbursements_ytd_isValid = false;

    m_total_individual_contributions_period_isSet = false;
    m_total_individual_contributions_period_isValid = false;

    m_total_individual_contributions_ytd_isSet = false;
    m_total_individual_contributions_ytd_isValid = false;

    m_total_loan_repayments_made_period_isSet = false;
    m_total_loan_repayments_made_period_isValid = false;

    m_total_loan_repayments_made_ytd_isSet = false;
    m_total_loan_repayments_made_ytd_isValid = false;

    m_total_loans_received_period_isSet = false;
    m_total_loans_received_period_isValid = false;

    m_total_loans_received_ytd_isSet = false;
    m_total_loans_received_ytd_isValid = false;

    m_total_offsets_to_operating_expenditures_period_isSet = false;
    m_total_offsets_to_operating_expenditures_period_isValid = false;

    m_total_offsets_to_operating_expenditures_ytd_isSet = false;
    m_total_offsets_to_operating_expenditures_ytd_isValid = false;

    m_total_operating_expenditures_period_isSet = false;
    m_total_operating_expenditures_period_isValid = false;

    m_total_operating_expenditures_ytd_isSet = false;
    m_total_operating_expenditures_ytd_isValid = false;

    m_total_receipts_period_isSet = false;
    m_total_receipts_period_isValid = false;

    m_total_receipts_ytd_isSet = false;
    m_total_receipts_ytd_isValid = false;

    m_transfers_from_other_authorized_committee_period_isSet = false;
    m_transfers_from_other_authorized_committee_period_isValid = false;

    m_transfers_from_other_authorized_committee_ytd_isSet = false;
    m_transfers_from_other_authorized_committee_ytd_isValid = false;

    m_transfers_to_other_authorized_committee_period_isSet = false;
    m_transfers_to_other_authorized_committee_period_isValid = false;

    m_transfers_to_other_authorized_committee_ytd_isSet = false;
    m_transfers_to_other_authorized_committee_ytd_isValid = false;
}

void OAICommitteeReportsHouseSenate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitteeReportsHouseSenate::fromJsonObject(QJsonObject json) {

    m_aggregate_amount_personal_contributions_general_isValid = ::OpenAPI::fromJsonValue(m_aggregate_amount_personal_contributions_general, json[QString("aggregate_amount_personal_contributions_general")]);
    m_aggregate_amount_personal_contributions_general_isSet = !json[QString("aggregate_amount_personal_contributions_general")].isNull() && m_aggregate_amount_personal_contributions_general_isValid;

    m_aggregate_contributions_personal_funds_primary_isValid = ::OpenAPI::fromJsonValue(m_aggregate_contributions_personal_funds_primary, json[QString("aggregate_contributions_personal_funds_primary")]);
    m_aggregate_contributions_personal_funds_primary_isSet = !json[QString("aggregate_contributions_personal_funds_primary")].isNull() && m_aggregate_contributions_personal_funds_primary_isValid;

    m_all_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_all_other_loans_period, json[QString("all_other_loans_period")]);
    m_all_other_loans_period_isSet = !json[QString("all_other_loans_period")].isNull() && m_all_other_loans_period_isValid;

    m_all_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_all_other_loans_ytd, json[QString("all_other_loans_ytd")]);
    m_all_other_loans_ytd_isSet = !json[QString("all_other_loans_ytd")].isNull() && m_all_other_loans_ytd_isValid;

    m_amendment_chain_isValid = ::OpenAPI::fromJsonValue(m_amendment_chain, json[QString("amendment_chain")]);
    m_amendment_chain_isSet = !json[QString("amendment_chain")].isNull() && m_amendment_chain_isValid;

    m_amendment_indicator_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator, json[QString("amendment_indicator")]);
    m_amendment_indicator_isSet = !json[QString("amendment_indicator")].isNull() && m_amendment_indicator_isValid;

    m_amendment_indicator_full_isValid = ::OpenAPI::fromJsonValue(m_amendment_indicator_full, json[QString("amendment_indicator_full")]);
    m_amendment_indicator_full_isSet = !json[QString("amendment_indicator_full")].isNull() && m_amendment_indicator_full_isValid;

    m_beginning_image_number_isValid = ::OpenAPI::fromJsonValue(m_beginning_image_number, json[QString("beginning_image_number")]);
    m_beginning_image_number_isSet = !json[QString("beginning_image_number")].isNull() && m_beginning_image_number_isValid;

    m_candidate_contribution_period_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_period, json[QString("candidate_contribution_period")]);
    m_candidate_contribution_period_isSet = !json[QString("candidate_contribution_period")].isNull() && m_candidate_contribution_period_isValid;

    m_candidate_contribution_ytd_isValid = ::OpenAPI::fromJsonValue(m_candidate_contribution_ytd, json[QString("candidate_contribution_ytd")]);
    m_candidate_contribution_ytd_isSet = !json[QString("candidate_contribution_ytd")].isNull() && m_candidate_contribution_ytd_isValid;

    m_cash_on_hand_beginning_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_beginning_period, json[QString("cash_on_hand_beginning_period")]);
    m_cash_on_hand_beginning_period_isSet = !json[QString("cash_on_hand_beginning_period")].isNull() && m_cash_on_hand_beginning_period_isValid;

    m_cash_on_hand_end_period_isValid = ::OpenAPI::fromJsonValue(m_cash_on_hand_end_period, json[QString("cash_on_hand_end_period")]);
    m_cash_on_hand_end_period_isSet = !json[QString("cash_on_hand_end_period")].isNull() && m_cash_on_hand_end_period_isValid;

    m_committee_id_isValid = ::OpenAPI::fromJsonValue(m_committee_id, json[QString("committee_id")]);
    m_committee_id_isSet = !json[QString("committee_id")].isNull() && m_committee_id_isValid;

    m_committee_name_isValid = ::OpenAPI::fromJsonValue(m_committee_name, json[QString("committee_name")]);
    m_committee_name_isSet = !json[QString("committee_name")].isNull() && m_committee_name_isValid;

    m_committee_type_isValid = ::OpenAPI::fromJsonValue(m_committee_type, json[QString("committee_type")]);
    m_committee_type_isSet = !json[QString("committee_type")].isNull() && m_committee_type_isValid;

    m_coverage_end_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_end_date, json[QString("coverage_end_date")]);
    m_coverage_end_date_isSet = !json[QString("coverage_end_date")].isNull() && m_coverage_end_date_isValid;

    m_coverage_start_date_isValid = ::OpenAPI::fromJsonValue(m_coverage_start_date, json[QString("coverage_start_date")]);
    m_coverage_start_date_isSet = !json[QString("coverage_start_date")].isNull() && m_coverage_start_date_isValid;

    m_csv_url_isValid = ::OpenAPI::fromJsonValue(m_csv_url, json[QString("csv_url")]);
    m_csv_url_isSet = !json[QString("csv_url")].isNull() && m_csv_url_isValid;

    m_cycle_isValid = ::OpenAPI::fromJsonValue(m_cycle, json[QString("cycle")]);
    m_cycle_isSet = !json[QString("cycle")].isNull() && m_cycle_isValid;

    m_debts_owed_by_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_by_committee, json[QString("debts_owed_by_committee")]);
    m_debts_owed_by_committee_isSet = !json[QString("debts_owed_by_committee")].isNull() && m_debts_owed_by_committee_isValid;

    m_debts_owed_to_committee_isValid = ::OpenAPI::fromJsonValue(m_debts_owed_to_committee, json[QString("debts_owed_to_committee")]);
    m_debts_owed_to_committee_isSet = !json[QString("debts_owed_to_committee")].isNull() && m_debts_owed_to_committee_isValid;

    m_document_description_isValid = ::OpenAPI::fromJsonValue(m_document_description, json[QString("document_description")]);
    m_document_description_isSet = !json[QString("document_description")].isNull() && m_document_description_isValid;

    m_end_image_number_isValid = ::OpenAPI::fromJsonValue(m_end_image_number, json[QString("end_image_number")]);
    m_end_image_number_isSet = !json[QString("end_image_number")].isNull() && m_end_image_number_isValid;

    m_fec_file_id_isValid = ::OpenAPI::fromJsonValue(m_fec_file_id, json[QString("fec_file_id")]);
    m_fec_file_id_isSet = !json[QString("fec_file_id")].isNull() && m_fec_file_id_isValid;

    m_fec_url_isValid = ::OpenAPI::fromJsonValue(m_fec_url, json[QString("fec_url")]);
    m_fec_url_isSet = !json[QString("fec_url")].isNull() && m_fec_url_isValid;

    m_file_number_isValid = ::OpenAPI::fromJsonValue(m_file_number, json[QString("file_number")]);
    m_file_number_isSet = !json[QString("file_number")].isNull() && m_file_number_isValid;

    m_gross_receipt_authorized_committee_general_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_authorized_committee_general, json[QString("gross_receipt_authorized_committee_general")]);
    m_gross_receipt_authorized_committee_general_isSet = !json[QString("gross_receipt_authorized_committee_general")].isNull() && m_gross_receipt_authorized_committee_general_isValid;

    m_gross_receipt_authorized_committee_primary_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_authorized_committee_primary, json[QString("gross_receipt_authorized_committee_primary")]);
    m_gross_receipt_authorized_committee_primary_isSet = !json[QString("gross_receipt_authorized_committee_primary")].isNull() && m_gross_receipt_authorized_committee_primary_isValid;

    m_gross_receipt_minus_personal_contribution_general_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_minus_personal_contribution_general, json[QString("gross_receipt_minus_personal_contribution_general")]);
    m_gross_receipt_minus_personal_contribution_general_isSet = !json[QString("gross_receipt_minus_personal_contribution_general")].isNull() && m_gross_receipt_minus_personal_contribution_general_isValid;

    m_gross_receipt_minus_personal_contributions_primary_isValid = ::OpenAPI::fromJsonValue(m_gross_receipt_minus_personal_contributions_primary, json[QString("gross_receipt_minus_personal_contributions_primary")]);
    m_gross_receipt_minus_personal_contributions_primary_isSet = !json[QString("gross_receipt_minus_personal_contributions_primary")].isNull() && m_gross_receipt_minus_personal_contributions_primary_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_individual_itemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_period, json[QString("individual_itemized_contributions_period")]);
    m_individual_itemized_contributions_period_isSet = !json[QString("individual_itemized_contributions_period")].isNull() && m_individual_itemized_contributions_period_isValid;

    m_individual_itemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_itemized_contributions_ytd, json[QString("individual_itemized_contributions_ytd")]);
    m_individual_itemized_contributions_ytd_isSet = !json[QString("individual_itemized_contributions_ytd")].isNull() && m_individual_itemized_contributions_ytd_isValid;

    m_individual_unitemized_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_period, json[QString("individual_unitemized_contributions_period")]);
    m_individual_unitemized_contributions_period_isSet = !json[QString("individual_unitemized_contributions_period")].isNull() && m_individual_unitemized_contributions_period_isValid;

    m_individual_unitemized_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_individual_unitemized_contributions_ytd, json[QString("individual_unitemized_contributions_ytd")]);
    m_individual_unitemized_contributions_ytd_isSet = !json[QString("individual_unitemized_contributions_ytd")].isNull() && m_individual_unitemized_contributions_ytd_isValid;

    m_is_amended_isValid = ::OpenAPI::fromJsonValue(m_is_amended, json[QString("is_amended")]);
    m_is_amended_isSet = !json[QString("is_amended")].isNull() && m_is_amended_isValid;

    m_loan_repayments_candidate_loans_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_candidate_loans_period, json[QString("loan_repayments_candidate_loans_period")]);
    m_loan_repayments_candidate_loans_period_isSet = !json[QString("loan_repayments_candidate_loans_period")].isNull() && m_loan_repayments_candidate_loans_period_isValid;

    m_loan_repayments_candidate_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_candidate_loans_ytd, json[QString("loan_repayments_candidate_loans_ytd")]);
    m_loan_repayments_candidate_loans_ytd_isSet = !json[QString("loan_repayments_candidate_loans_ytd")].isNull() && m_loan_repayments_candidate_loans_ytd_isValid;

    m_loan_repayments_other_loans_period_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_other_loans_period, json[QString("loan_repayments_other_loans_period")]);
    m_loan_repayments_other_loans_period_isSet = !json[QString("loan_repayments_other_loans_period")].isNull() && m_loan_repayments_other_loans_period_isValid;

    m_loan_repayments_other_loans_ytd_isValid = ::OpenAPI::fromJsonValue(m_loan_repayments_other_loans_ytd, json[QString("loan_repayments_other_loans_ytd")]);
    m_loan_repayments_other_loans_ytd_isSet = !json[QString("loan_repayments_other_loans_ytd")].isNull() && m_loan_repayments_other_loans_ytd_isValid;

    m_loans_made_by_candidate_period_isValid = ::OpenAPI::fromJsonValue(m_loans_made_by_candidate_period, json[QString("loans_made_by_candidate_period")]);
    m_loans_made_by_candidate_period_isSet = !json[QString("loans_made_by_candidate_period")].isNull() && m_loans_made_by_candidate_period_isValid;

    m_loans_made_by_candidate_ytd_isValid = ::OpenAPI::fromJsonValue(m_loans_made_by_candidate_ytd, json[QString("loans_made_by_candidate_ytd")]);
    m_loans_made_by_candidate_ytd_isSet = !json[QString("loans_made_by_candidate_ytd")].isNull() && m_loans_made_by_candidate_ytd_isValid;

    m_means_filed_isValid = ::OpenAPI::fromJsonValue(m_means_filed, json[QString("means_filed")]);
    m_means_filed_isSet = !json[QString("means_filed")].isNull() && m_means_filed_isValid;

    m_most_recent_isValid = ::OpenAPI::fromJsonValue(m_most_recent, json[QString("most_recent")]);
    m_most_recent_isSet = !json[QString("most_recent")].isNull() && m_most_recent_isValid;

    m_most_recent_file_number_isValid = ::OpenAPI::fromJsonValue(m_most_recent_file_number, json[QString("most_recent_file_number")]);
    m_most_recent_file_number_isSet = !json[QString("most_recent_file_number")].isNull() && m_most_recent_file_number_isValid;

    m_net_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_period, json[QString("net_contributions_period")]);
    m_net_contributions_period_isSet = !json[QString("net_contributions_period")].isNull() && m_net_contributions_period_isValid;

    m_net_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_contributions_ytd, json[QString("net_contributions_ytd")]);
    m_net_contributions_ytd_isSet = !json[QString("net_contributions_ytd")].isNull() && m_net_contributions_ytd_isValid;

    m_net_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_period, json[QString("net_operating_expenditures_period")]);
    m_net_operating_expenditures_period_isSet = !json[QString("net_operating_expenditures_period")].isNull() && m_net_operating_expenditures_period_isValid;

    m_net_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_net_operating_expenditures_ytd, json[QString("net_operating_expenditures_ytd")]);
    m_net_operating_expenditures_ytd_isSet = !json[QString("net_operating_expenditures_ytd")].isNull() && m_net_operating_expenditures_ytd_isValid;

    m_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_period, json[QString("offsets_to_operating_expenditures_period")]);
    m_offsets_to_operating_expenditures_period_isSet = !json[QString("offsets_to_operating_expenditures_period")].isNull() && m_offsets_to_operating_expenditures_period_isValid;

    m_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_offsets_to_operating_expenditures_ytd, json[QString("offsets_to_operating_expenditures_ytd")]);
    m_offsets_to_operating_expenditures_ytd_isSet = !json[QString("offsets_to_operating_expenditures_ytd")].isNull() && m_offsets_to_operating_expenditures_ytd_isValid;

    m_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_period, json[QString("operating_expenditures_period")]);
    m_operating_expenditures_period_isSet = !json[QString("operating_expenditures_period")].isNull() && m_operating_expenditures_period_isValid;

    m_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_operating_expenditures_ytd, json[QString("operating_expenditures_ytd")]);
    m_operating_expenditures_ytd_isSet = !json[QString("operating_expenditures_ytd")].isNull() && m_operating_expenditures_ytd_isValid;

    m_other_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_period, json[QString("other_disbursements_period")]);
    m_other_disbursements_period_isSet = !json[QString("other_disbursements_period")].isNull() && m_other_disbursements_period_isValid;

    m_other_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_disbursements_ytd, json[QString("other_disbursements_ytd")]);
    m_other_disbursements_ytd_isSet = !json[QString("other_disbursements_ytd")].isNull() && m_other_disbursements_ytd_isValid;

    m_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_period, json[QString("other_political_committee_contributions_period")]);
    m_other_political_committee_contributions_period_isSet = !json[QString("other_political_committee_contributions_period")].isNull() && m_other_political_committee_contributions_period_isValid;

    m_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_political_committee_contributions_ytd, json[QString("other_political_committee_contributions_ytd")]);
    m_other_political_committee_contributions_ytd_isSet = !json[QString("other_political_committee_contributions_ytd")].isNull() && m_other_political_committee_contributions_ytd_isValid;

    m_other_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_period, json[QString("other_receipts_period")]);
    m_other_receipts_period_isSet = !json[QString("other_receipts_period")].isNull() && m_other_receipts_period_isValid;

    m_other_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_other_receipts_ytd, json[QString("other_receipts_ytd")]);
    m_other_receipts_ytd_isSet = !json[QString("other_receipts_ytd")].isNull() && m_other_receipts_ytd_isValid;

    m_pdf_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_url, json[QString("pdf_url")]);
    m_pdf_url_isSet = !json[QString("pdf_url")].isNull() && m_pdf_url_isValid;

    m_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_period, json[QString("political_party_committee_contributions_period")]);
    m_political_party_committee_contributions_period_isSet = !json[QString("political_party_committee_contributions_period")].isNull() && m_political_party_committee_contributions_period_isValid;

    m_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_political_party_committee_contributions_ytd, json[QString("political_party_committee_contributions_ytd")]);
    m_political_party_committee_contributions_ytd_isSet = !json[QString("political_party_committee_contributions_ytd")].isNull() && m_political_party_committee_contributions_ytd_isValid;

    m_previous_file_number_isValid = ::OpenAPI::fromJsonValue(m_previous_file_number, json[QString("previous_file_number")]);
    m_previous_file_number_isSet = !json[QString("previous_file_number")].isNull() && m_previous_file_number_isValid;

    m_receipt_date_isValid = ::OpenAPI::fromJsonValue(m_receipt_date, json[QString("receipt_date")]);
    m_receipt_date_isSet = !json[QString("receipt_date")].isNull() && m_receipt_date_isValid;

    m_refunded_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_period, json[QString("refunded_individual_contributions_period")]);
    m_refunded_individual_contributions_period_isSet = !json[QString("refunded_individual_contributions_period")].isNull() && m_refunded_individual_contributions_period_isValid;

    m_refunded_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_individual_contributions_ytd, json[QString("refunded_individual_contributions_ytd")]);
    m_refunded_individual_contributions_ytd_isSet = !json[QString("refunded_individual_contributions_ytd")].isNull() && m_refunded_individual_contributions_ytd_isValid;

    m_refunded_other_political_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_period, json[QString("refunded_other_political_committee_contributions_period")]);
    m_refunded_other_political_committee_contributions_period_isSet = !json[QString("refunded_other_political_committee_contributions_period")].isNull() && m_refunded_other_political_committee_contributions_period_isValid;

    m_refunded_other_political_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_other_political_committee_contributions_ytd, json[QString("refunded_other_political_committee_contributions_ytd")]);
    m_refunded_other_political_committee_contributions_ytd_isSet = !json[QString("refunded_other_political_committee_contributions_ytd")].isNull() && m_refunded_other_political_committee_contributions_ytd_isValid;

    m_refunded_political_party_committee_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_period, json[QString("refunded_political_party_committee_contributions_period")]);
    m_refunded_political_party_committee_contributions_period_isSet = !json[QString("refunded_political_party_committee_contributions_period")].isNull() && m_refunded_political_party_committee_contributions_period_isValid;

    m_refunded_political_party_committee_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunded_political_party_committee_contributions_ytd, json[QString("refunded_political_party_committee_contributions_ytd")]);
    m_refunded_political_party_committee_contributions_ytd_isSet = !json[QString("refunded_political_party_committee_contributions_ytd")].isNull() && m_refunded_political_party_committee_contributions_ytd_isValid;

    m_refunds_total_contributions_col_total_ytd_isValid = ::OpenAPI::fromJsonValue(m_refunds_total_contributions_col_total_ytd, json[QString("refunds_total_contributions_col_total_ytd")]);
    m_refunds_total_contributions_col_total_ytd_isSet = !json[QString("refunds_total_contributions_col_total_ytd")].isNull() && m_refunds_total_contributions_col_total_ytd_isValid;

    m_report_form_isValid = ::OpenAPI::fromJsonValue(m_report_form, json[QString("report_form")]);
    m_report_form_isSet = !json[QString("report_form")].isNull() && m_report_form_isValid;

    m_report_type_isValid = ::OpenAPI::fromJsonValue(m_report_type, json[QString("report_type")]);
    m_report_type_isSet = !json[QString("report_type")].isNull() && m_report_type_isValid;

    m_report_type_full_isValid = ::OpenAPI::fromJsonValue(m_report_type_full, json[QString("report_type_full")]);
    m_report_type_full_isSet = !json[QString("report_type_full")].isNull() && m_report_type_full_isValid;

    m_report_year_isValid = ::OpenAPI::fromJsonValue(m_report_year, json[QString("report_year")]);
    m_report_year_isSet = !json[QString("report_year")].isNull() && m_report_year_isValid;

    m_subtotal_period_isValid = ::OpenAPI::fromJsonValue(m_subtotal_period, json[QString("subtotal_period")]);
    m_subtotal_period_isSet = !json[QString("subtotal_period")].isNull() && m_subtotal_period_isValid;

    m_total_contribution_refunds_col_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_col_total_period, json[QString("total_contribution_refunds_col_total_period")]);
    m_total_contribution_refunds_col_total_period_isSet = !json[QString("total_contribution_refunds_col_total_period")].isNull() && m_total_contribution_refunds_col_total_period_isValid;

    m_total_contribution_refunds_period_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_period, json[QString("total_contribution_refunds_period")]);
    m_total_contribution_refunds_period_isSet = !json[QString("total_contribution_refunds_period")].isNull() && m_total_contribution_refunds_period_isValid;

    m_total_contribution_refunds_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contribution_refunds_ytd, json[QString("total_contribution_refunds_ytd")]);
    m_total_contribution_refunds_ytd_isSet = !json[QString("total_contribution_refunds_ytd")].isNull() && m_total_contribution_refunds_ytd_isValid;

    m_total_contributions_column_total_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_column_total_period, json[QString("total_contributions_column_total_period")]);
    m_total_contributions_column_total_period_isSet = !json[QString("total_contributions_column_total_period")].isNull() && m_total_contributions_column_total_period_isValid;

    m_total_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_period, json[QString("total_contributions_period")]);
    m_total_contributions_period_isSet = !json[QString("total_contributions_period")].isNull() && m_total_contributions_period_isValid;

    m_total_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_contributions_ytd, json[QString("total_contributions_ytd")]);
    m_total_contributions_ytd_isSet = !json[QString("total_contributions_ytd")].isNull() && m_total_contributions_ytd_isValid;

    m_total_disbursements_period_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_period, json[QString("total_disbursements_period")]);
    m_total_disbursements_period_isSet = !json[QString("total_disbursements_period")].isNull() && m_total_disbursements_period_isValid;

    m_total_disbursements_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_disbursements_ytd, json[QString("total_disbursements_ytd")]);
    m_total_disbursements_ytd_isSet = !json[QString("total_disbursements_ytd")].isNull() && m_total_disbursements_ytd_isValid;

    m_total_individual_contributions_period_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_period, json[QString("total_individual_contributions_period")]);
    m_total_individual_contributions_period_isSet = !json[QString("total_individual_contributions_period")].isNull() && m_total_individual_contributions_period_isValid;

    m_total_individual_contributions_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_individual_contributions_ytd, json[QString("total_individual_contributions_ytd")]);
    m_total_individual_contributions_ytd_isSet = !json[QString("total_individual_contributions_ytd")].isNull() && m_total_individual_contributions_ytd_isValid;

    m_total_loan_repayments_made_period_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_period, json[QString("total_loan_repayments_made_period")]);
    m_total_loan_repayments_made_period_isSet = !json[QString("total_loan_repayments_made_period")].isNull() && m_total_loan_repayments_made_period_isValid;

    m_total_loan_repayments_made_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loan_repayments_made_ytd, json[QString("total_loan_repayments_made_ytd")]);
    m_total_loan_repayments_made_ytd_isSet = !json[QString("total_loan_repayments_made_ytd")].isNull() && m_total_loan_repayments_made_ytd_isValid;

    m_total_loans_received_period_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_period, json[QString("total_loans_received_period")]);
    m_total_loans_received_period_isSet = !json[QString("total_loans_received_period")].isNull() && m_total_loans_received_period_isValid;

    m_total_loans_received_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_loans_received_ytd, json[QString("total_loans_received_ytd")]);
    m_total_loans_received_ytd_isSet = !json[QString("total_loans_received_ytd")].isNull() && m_total_loans_received_ytd_isValid;

    m_total_offsets_to_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_period, json[QString("total_offsets_to_operating_expenditures_period")]);
    m_total_offsets_to_operating_expenditures_period_isSet = !json[QString("total_offsets_to_operating_expenditures_period")].isNull() && m_total_offsets_to_operating_expenditures_period_isValid;

    m_total_offsets_to_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_offsets_to_operating_expenditures_ytd, json[QString("total_offsets_to_operating_expenditures_ytd")]);
    m_total_offsets_to_operating_expenditures_ytd_isSet = !json[QString("total_offsets_to_operating_expenditures_ytd")].isNull() && m_total_offsets_to_operating_expenditures_ytd_isValid;

    m_total_operating_expenditures_period_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_period, json[QString("total_operating_expenditures_period")]);
    m_total_operating_expenditures_period_isSet = !json[QString("total_operating_expenditures_period")].isNull() && m_total_operating_expenditures_period_isValid;

    m_total_operating_expenditures_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_operating_expenditures_ytd, json[QString("total_operating_expenditures_ytd")]);
    m_total_operating_expenditures_ytd_isSet = !json[QString("total_operating_expenditures_ytd")].isNull() && m_total_operating_expenditures_ytd_isValid;

    m_total_receipts_period_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_period, json[QString("total_receipts_period")]);
    m_total_receipts_period_isSet = !json[QString("total_receipts_period")].isNull() && m_total_receipts_period_isValid;

    m_total_receipts_ytd_isValid = ::OpenAPI::fromJsonValue(m_total_receipts_ytd, json[QString("total_receipts_ytd")]);
    m_total_receipts_ytd_isSet = !json[QString("total_receipts_ytd")].isNull() && m_total_receipts_ytd_isValid;

    m_transfers_from_other_authorized_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_other_authorized_committee_period, json[QString("transfers_from_other_authorized_committee_period")]);
    m_transfers_from_other_authorized_committee_period_isSet = !json[QString("transfers_from_other_authorized_committee_period")].isNull() && m_transfers_from_other_authorized_committee_period_isValid;

    m_transfers_from_other_authorized_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_from_other_authorized_committee_ytd, json[QString("transfers_from_other_authorized_committee_ytd")]);
    m_transfers_from_other_authorized_committee_ytd_isSet = !json[QString("transfers_from_other_authorized_committee_ytd")].isNull() && m_transfers_from_other_authorized_committee_ytd_isValid;

    m_transfers_to_other_authorized_committee_period_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_period, json[QString("transfers_to_other_authorized_committee_period")]);
    m_transfers_to_other_authorized_committee_period_isSet = !json[QString("transfers_to_other_authorized_committee_period")].isNull() && m_transfers_to_other_authorized_committee_period_isValid;

    m_transfers_to_other_authorized_committee_ytd_isValid = ::OpenAPI::fromJsonValue(m_transfers_to_other_authorized_committee_ytd, json[QString("transfers_to_other_authorized_committee_ytd")]);
    m_transfers_to_other_authorized_committee_ytd_isSet = !json[QString("transfers_to_other_authorized_committee_ytd")].isNull() && m_transfers_to_other_authorized_committee_ytd_isValid;
}

QString OAICommitteeReportsHouseSenate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitteeReportsHouseSenate::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregate_amount_personal_contributions_general_isSet) {
        obj.insert(QString("aggregate_amount_personal_contributions_general"), ::OpenAPI::toJsonValue(m_aggregate_amount_personal_contributions_general));
    }
    if (m_aggregate_contributions_personal_funds_primary_isSet) {
        obj.insert(QString("aggregate_contributions_personal_funds_primary"), ::OpenAPI::toJsonValue(m_aggregate_contributions_personal_funds_primary));
    }
    if (m_all_other_loans_period_isSet) {
        obj.insert(QString("all_other_loans_period"), ::OpenAPI::toJsonValue(m_all_other_loans_period));
    }
    if (m_all_other_loans_ytd_isSet) {
        obj.insert(QString("all_other_loans_ytd"), ::OpenAPI::toJsonValue(m_all_other_loans_ytd));
    }
    if (m_amendment_chain.size() > 0) {
        obj.insert(QString("amendment_chain"), ::OpenAPI::toJsonValue(m_amendment_chain));
    }
    if (m_amendment_indicator_isSet) {
        obj.insert(QString("amendment_indicator"), ::OpenAPI::toJsonValue(m_amendment_indicator));
    }
    if (m_amendment_indicator_full_isSet) {
        obj.insert(QString("amendment_indicator_full"), ::OpenAPI::toJsonValue(m_amendment_indicator_full));
    }
    if (m_beginning_image_number_isSet) {
        obj.insert(QString("beginning_image_number"), ::OpenAPI::toJsonValue(m_beginning_image_number));
    }
    if (m_candidate_contribution_period_isSet) {
        obj.insert(QString("candidate_contribution_period"), ::OpenAPI::toJsonValue(m_candidate_contribution_period));
    }
    if (m_candidate_contribution_ytd_isSet) {
        obj.insert(QString("candidate_contribution_ytd"), ::OpenAPI::toJsonValue(m_candidate_contribution_ytd));
    }
    if (m_cash_on_hand_beginning_period_isSet) {
        obj.insert(QString("cash_on_hand_beginning_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_beginning_period));
    }
    if (m_cash_on_hand_end_period_isSet) {
        obj.insert(QString("cash_on_hand_end_period"), ::OpenAPI::toJsonValue(m_cash_on_hand_end_period));
    }
    if (m_committee_id_isSet) {
        obj.insert(QString("committee_id"), ::OpenAPI::toJsonValue(m_committee_id));
    }
    if (m_committee_name_isSet) {
        obj.insert(QString("committee_name"), ::OpenAPI::toJsonValue(m_committee_name));
    }
    if (m_committee_type_isSet) {
        obj.insert(QString("committee_type"), ::OpenAPI::toJsonValue(m_committee_type));
    }
    if (m_coverage_end_date_isSet) {
        obj.insert(QString("coverage_end_date"), ::OpenAPI::toJsonValue(m_coverage_end_date));
    }
    if (m_coverage_start_date_isSet) {
        obj.insert(QString("coverage_start_date"), ::OpenAPI::toJsonValue(m_coverage_start_date));
    }
    if (m_csv_url_isSet) {
        obj.insert(QString("csv_url"), ::OpenAPI::toJsonValue(m_csv_url));
    }
    if (m_cycle_isSet) {
        obj.insert(QString("cycle"), ::OpenAPI::toJsonValue(m_cycle));
    }
    if (m_debts_owed_by_committee_isSet) {
        obj.insert(QString("debts_owed_by_committee"), ::OpenAPI::toJsonValue(m_debts_owed_by_committee));
    }
    if (m_debts_owed_to_committee_isSet) {
        obj.insert(QString("debts_owed_to_committee"), ::OpenAPI::toJsonValue(m_debts_owed_to_committee));
    }
    if (m_document_description_isSet) {
        obj.insert(QString("document_description"), ::OpenAPI::toJsonValue(m_document_description));
    }
    if (m_end_image_number_isSet) {
        obj.insert(QString("end_image_number"), ::OpenAPI::toJsonValue(m_end_image_number));
    }
    if (m_fec_file_id_isSet) {
        obj.insert(QString("fec_file_id"), ::OpenAPI::toJsonValue(m_fec_file_id));
    }
    if (m_fec_url_isSet) {
        obj.insert(QString("fec_url"), ::OpenAPI::toJsonValue(m_fec_url));
    }
    if (m_file_number_isSet) {
        obj.insert(QString("file_number"), ::OpenAPI::toJsonValue(m_file_number));
    }
    if (m_gross_receipt_authorized_committee_general_isSet) {
        obj.insert(QString("gross_receipt_authorized_committee_general"), ::OpenAPI::toJsonValue(m_gross_receipt_authorized_committee_general));
    }
    if (m_gross_receipt_authorized_committee_primary_isSet) {
        obj.insert(QString("gross_receipt_authorized_committee_primary"), ::OpenAPI::toJsonValue(m_gross_receipt_authorized_committee_primary));
    }
    if (m_gross_receipt_minus_personal_contribution_general_isSet) {
        obj.insert(QString("gross_receipt_minus_personal_contribution_general"), ::OpenAPI::toJsonValue(m_gross_receipt_minus_personal_contribution_general));
    }
    if (m_gross_receipt_minus_personal_contributions_primary_isSet) {
        obj.insert(QString("gross_receipt_minus_personal_contributions_primary"), ::OpenAPI::toJsonValue(m_gross_receipt_minus_personal_contributions_primary));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_individual_itemized_contributions_period_isSet) {
        obj.insert(QString("individual_itemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_period));
    }
    if (m_individual_itemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_itemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_itemized_contributions_ytd));
    }
    if (m_individual_unitemized_contributions_period_isSet) {
        obj.insert(QString("individual_unitemized_contributions_period"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_period));
    }
    if (m_individual_unitemized_contributions_ytd_isSet) {
        obj.insert(QString("individual_unitemized_contributions_ytd"), ::OpenAPI::toJsonValue(m_individual_unitemized_contributions_ytd));
    }
    if (m_is_amended_isSet) {
        obj.insert(QString("is_amended"), ::OpenAPI::toJsonValue(m_is_amended));
    }
    if (m_loan_repayments_candidate_loans_period_isSet) {
        obj.insert(QString("loan_repayments_candidate_loans_period"), ::OpenAPI::toJsonValue(m_loan_repayments_candidate_loans_period));
    }
    if (m_loan_repayments_candidate_loans_ytd_isSet) {
        obj.insert(QString("loan_repayments_candidate_loans_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_candidate_loans_ytd));
    }
    if (m_loan_repayments_other_loans_period_isSet) {
        obj.insert(QString("loan_repayments_other_loans_period"), ::OpenAPI::toJsonValue(m_loan_repayments_other_loans_period));
    }
    if (m_loan_repayments_other_loans_ytd_isSet) {
        obj.insert(QString("loan_repayments_other_loans_ytd"), ::OpenAPI::toJsonValue(m_loan_repayments_other_loans_ytd));
    }
    if (m_loans_made_by_candidate_period_isSet) {
        obj.insert(QString("loans_made_by_candidate_period"), ::OpenAPI::toJsonValue(m_loans_made_by_candidate_period));
    }
    if (m_loans_made_by_candidate_ytd_isSet) {
        obj.insert(QString("loans_made_by_candidate_ytd"), ::OpenAPI::toJsonValue(m_loans_made_by_candidate_ytd));
    }
    if (m_means_filed_isSet) {
        obj.insert(QString("means_filed"), ::OpenAPI::toJsonValue(m_means_filed));
    }
    if (m_most_recent_isSet) {
        obj.insert(QString("most_recent"), ::OpenAPI::toJsonValue(m_most_recent));
    }
    if (m_most_recent_file_number_isSet) {
        obj.insert(QString("most_recent_file_number"), ::OpenAPI::toJsonValue(m_most_recent_file_number));
    }
    if (m_net_contributions_period_isSet) {
        obj.insert(QString("net_contributions_period"), ::OpenAPI::toJsonValue(m_net_contributions_period));
    }
    if (m_net_contributions_ytd_isSet) {
        obj.insert(QString("net_contributions_ytd"), ::OpenAPI::toJsonValue(m_net_contributions_ytd));
    }
    if (m_net_operating_expenditures_period_isSet) {
        obj.insert(QString("net_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_period));
    }
    if (m_net_operating_expenditures_ytd_isSet) {
        obj.insert(QString("net_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_net_operating_expenditures_ytd));
    }
    if (m_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_period));
    }
    if (m_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_offsets_to_operating_expenditures_ytd));
    }
    if (m_operating_expenditures_period_isSet) {
        obj.insert(QString("operating_expenditures_period"), ::OpenAPI::toJsonValue(m_operating_expenditures_period));
    }
    if (m_operating_expenditures_ytd_isSet) {
        obj.insert(QString("operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_operating_expenditures_ytd));
    }
    if (m_other_disbursements_period_isSet) {
        obj.insert(QString("other_disbursements_period"), ::OpenAPI::toJsonValue(m_other_disbursements_period));
    }
    if (m_other_disbursements_ytd_isSet) {
        obj.insert(QString("other_disbursements_ytd"), ::OpenAPI::toJsonValue(m_other_disbursements_ytd));
    }
    if (m_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_period));
    }
    if (m_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_other_political_committee_contributions_ytd));
    }
    if (m_other_receipts_period_isSet) {
        obj.insert(QString("other_receipts_period"), ::OpenAPI::toJsonValue(m_other_receipts_period));
    }
    if (m_other_receipts_ytd_isSet) {
        obj.insert(QString("other_receipts_ytd"), ::OpenAPI::toJsonValue(m_other_receipts_ytd));
    }
    if (m_pdf_url_isSet) {
        obj.insert(QString("pdf_url"), ::OpenAPI::toJsonValue(m_pdf_url));
    }
    if (m_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_period));
    }
    if (m_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_political_party_committee_contributions_ytd));
    }
    if (m_previous_file_number_isSet) {
        obj.insert(QString("previous_file_number"), ::OpenAPI::toJsonValue(m_previous_file_number));
    }
    if (m_receipt_date_isSet) {
        obj.insert(QString("receipt_date"), ::OpenAPI::toJsonValue(m_receipt_date));
    }
    if (m_refunded_individual_contributions_period_isSet) {
        obj.insert(QString("refunded_individual_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_period));
    }
    if (m_refunded_individual_contributions_ytd_isSet) {
        obj.insert(QString("refunded_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_individual_contributions_ytd));
    }
    if (m_refunded_other_political_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_period));
    }
    if (m_refunded_other_political_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_other_political_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_other_political_committee_contributions_ytd));
    }
    if (m_refunded_political_party_committee_contributions_period_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_period"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_period));
    }
    if (m_refunded_political_party_committee_contributions_ytd_isSet) {
        obj.insert(QString("refunded_political_party_committee_contributions_ytd"), ::OpenAPI::toJsonValue(m_refunded_political_party_committee_contributions_ytd));
    }
    if (m_refunds_total_contributions_col_total_ytd_isSet) {
        obj.insert(QString("refunds_total_contributions_col_total_ytd"), ::OpenAPI::toJsonValue(m_refunds_total_contributions_col_total_ytd));
    }
    if (m_report_form_isSet) {
        obj.insert(QString("report_form"), ::OpenAPI::toJsonValue(m_report_form));
    }
    if (m_report_type_isSet) {
        obj.insert(QString("report_type"), ::OpenAPI::toJsonValue(m_report_type));
    }
    if (m_report_type_full_isSet) {
        obj.insert(QString("report_type_full"), ::OpenAPI::toJsonValue(m_report_type_full));
    }
    if (m_report_year_isSet) {
        obj.insert(QString("report_year"), ::OpenAPI::toJsonValue(m_report_year));
    }
    if (m_subtotal_period_isSet) {
        obj.insert(QString("subtotal_period"), ::OpenAPI::toJsonValue(m_subtotal_period));
    }
    if (m_total_contribution_refunds_col_total_period_isSet) {
        obj.insert(QString("total_contribution_refunds_col_total_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_col_total_period));
    }
    if (m_total_contribution_refunds_period_isSet) {
        obj.insert(QString("total_contribution_refunds_period"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_period));
    }
    if (m_total_contribution_refunds_ytd_isSet) {
        obj.insert(QString("total_contribution_refunds_ytd"), ::OpenAPI::toJsonValue(m_total_contribution_refunds_ytd));
    }
    if (m_total_contributions_column_total_period_isSet) {
        obj.insert(QString("total_contributions_column_total_period"), ::OpenAPI::toJsonValue(m_total_contributions_column_total_period));
    }
    if (m_total_contributions_period_isSet) {
        obj.insert(QString("total_contributions_period"), ::OpenAPI::toJsonValue(m_total_contributions_period));
    }
    if (m_total_contributions_ytd_isSet) {
        obj.insert(QString("total_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_contributions_ytd));
    }
    if (m_total_disbursements_period_isSet) {
        obj.insert(QString("total_disbursements_period"), ::OpenAPI::toJsonValue(m_total_disbursements_period));
    }
    if (m_total_disbursements_ytd_isSet) {
        obj.insert(QString("total_disbursements_ytd"), ::OpenAPI::toJsonValue(m_total_disbursements_ytd));
    }
    if (m_total_individual_contributions_period_isSet) {
        obj.insert(QString("total_individual_contributions_period"), ::OpenAPI::toJsonValue(m_total_individual_contributions_period));
    }
    if (m_total_individual_contributions_ytd_isSet) {
        obj.insert(QString("total_individual_contributions_ytd"), ::OpenAPI::toJsonValue(m_total_individual_contributions_ytd));
    }
    if (m_total_loan_repayments_made_period_isSet) {
        obj.insert(QString("total_loan_repayments_made_period"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_period));
    }
    if (m_total_loan_repayments_made_ytd_isSet) {
        obj.insert(QString("total_loan_repayments_made_ytd"), ::OpenAPI::toJsonValue(m_total_loan_repayments_made_ytd));
    }
    if (m_total_loans_received_period_isSet) {
        obj.insert(QString("total_loans_received_period"), ::OpenAPI::toJsonValue(m_total_loans_received_period));
    }
    if (m_total_loans_received_ytd_isSet) {
        obj.insert(QString("total_loans_received_ytd"), ::OpenAPI::toJsonValue(m_total_loans_received_ytd));
    }
    if (m_total_offsets_to_operating_expenditures_period_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_period));
    }
    if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_offsets_to_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_offsets_to_operating_expenditures_ytd));
    }
    if (m_total_operating_expenditures_period_isSet) {
        obj.insert(QString("total_operating_expenditures_period"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_period));
    }
    if (m_total_operating_expenditures_ytd_isSet) {
        obj.insert(QString("total_operating_expenditures_ytd"), ::OpenAPI::toJsonValue(m_total_operating_expenditures_ytd));
    }
    if (m_total_receipts_period_isSet) {
        obj.insert(QString("total_receipts_period"), ::OpenAPI::toJsonValue(m_total_receipts_period));
    }
    if (m_total_receipts_ytd_isSet) {
        obj.insert(QString("total_receipts_ytd"), ::OpenAPI::toJsonValue(m_total_receipts_ytd));
    }
    if (m_transfers_from_other_authorized_committee_period_isSet) {
        obj.insert(QString("transfers_from_other_authorized_committee_period"), ::OpenAPI::toJsonValue(m_transfers_from_other_authorized_committee_period));
    }
    if (m_transfers_from_other_authorized_committee_ytd_isSet) {
        obj.insert(QString("transfers_from_other_authorized_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_from_other_authorized_committee_ytd));
    }
    if (m_transfers_to_other_authorized_committee_period_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_period"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_period));
    }
    if (m_transfers_to_other_authorized_committee_ytd_isSet) {
        obj.insert(QString("transfers_to_other_authorized_committee_ytd"), ::OpenAPI::toJsonValue(m_transfers_to_other_authorized_committee_ytd));
    }
    return obj;
}

double OAICommitteeReportsHouseSenate::getAggregateAmountPersonalContributionsGeneral() const {
    return m_aggregate_amount_personal_contributions_general;
}
void OAICommitteeReportsHouseSenate::setAggregateAmountPersonalContributionsGeneral(const double &aggregate_amount_personal_contributions_general) {
    m_aggregate_amount_personal_contributions_general = aggregate_amount_personal_contributions_general;
    m_aggregate_amount_personal_contributions_general_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_aggregate_amount_personal_contributions_general_Set() const{
    return m_aggregate_amount_personal_contributions_general_isSet;
}

bool OAICommitteeReportsHouseSenate::is_aggregate_amount_personal_contributions_general_Valid() const{
    return m_aggregate_amount_personal_contributions_general_isValid;
}

double OAICommitteeReportsHouseSenate::getAggregateContributionsPersonalFundsPrimary() const {
    return m_aggregate_contributions_personal_funds_primary;
}
void OAICommitteeReportsHouseSenate::setAggregateContributionsPersonalFundsPrimary(const double &aggregate_contributions_personal_funds_primary) {
    m_aggregate_contributions_personal_funds_primary = aggregate_contributions_personal_funds_primary;
    m_aggregate_contributions_personal_funds_primary_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_aggregate_contributions_personal_funds_primary_Set() const{
    return m_aggregate_contributions_personal_funds_primary_isSet;
}

bool OAICommitteeReportsHouseSenate::is_aggregate_contributions_personal_funds_primary_Valid() const{
    return m_aggregate_contributions_personal_funds_primary_isValid;
}

double OAICommitteeReportsHouseSenate::getAllOtherLoansPeriod() const {
    return m_all_other_loans_period;
}
void OAICommitteeReportsHouseSenate::setAllOtherLoansPeriod(const double &all_other_loans_period) {
    m_all_other_loans_period = all_other_loans_period;
    m_all_other_loans_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_all_other_loans_period_Set() const{
    return m_all_other_loans_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_all_other_loans_period_Valid() const{
    return m_all_other_loans_period_isValid;
}

double OAICommitteeReportsHouseSenate::getAllOtherLoansYtd() const {
    return m_all_other_loans_ytd;
}
void OAICommitteeReportsHouseSenate::setAllOtherLoansYtd(const double &all_other_loans_ytd) {
    m_all_other_loans_ytd = all_other_loans_ytd;
    m_all_other_loans_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_all_other_loans_ytd_Set() const{
    return m_all_other_loans_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_all_other_loans_ytd_Valid() const{
    return m_all_other_loans_ytd_isValid;
}

QList<double> OAICommitteeReportsHouseSenate::getAmendmentChain() const {
    return m_amendment_chain;
}
void OAICommitteeReportsHouseSenate::setAmendmentChain(const QList<double> &amendment_chain) {
    m_amendment_chain = amendment_chain;
    m_amendment_chain_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_amendment_chain_Set() const{
    return m_amendment_chain_isSet;
}

bool OAICommitteeReportsHouseSenate::is_amendment_chain_Valid() const{
    return m_amendment_chain_isValid;
}

QString OAICommitteeReportsHouseSenate::getAmendmentIndicator() const {
    return m_amendment_indicator;
}
void OAICommitteeReportsHouseSenate::setAmendmentIndicator(const QString &amendment_indicator) {
    m_amendment_indicator = amendment_indicator;
    m_amendment_indicator_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_amendment_indicator_Set() const{
    return m_amendment_indicator_isSet;
}

bool OAICommitteeReportsHouseSenate::is_amendment_indicator_Valid() const{
    return m_amendment_indicator_isValid;
}

QString OAICommitteeReportsHouseSenate::getAmendmentIndicatorFull() const {
    return m_amendment_indicator_full;
}
void OAICommitteeReportsHouseSenate::setAmendmentIndicatorFull(const QString &amendment_indicator_full) {
    m_amendment_indicator_full = amendment_indicator_full;
    m_amendment_indicator_full_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_amendment_indicator_full_Set() const{
    return m_amendment_indicator_full_isSet;
}

bool OAICommitteeReportsHouseSenate::is_amendment_indicator_full_Valid() const{
    return m_amendment_indicator_full_isValid;
}

QString OAICommitteeReportsHouseSenate::getBeginningImageNumber() const {
    return m_beginning_image_number;
}
void OAICommitteeReportsHouseSenate::setBeginningImageNumber(const QString &beginning_image_number) {
    m_beginning_image_number = beginning_image_number;
    m_beginning_image_number_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_beginning_image_number_Set() const{
    return m_beginning_image_number_isSet;
}

bool OAICommitteeReportsHouseSenate::is_beginning_image_number_Valid() const{
    return m_beginning_image_number_isValid;
}

double OAICommitteeReportsHouseSenate::getCandidateContributionPeriod() const {
    return m_candidate_contribution_period;
}
void OAICommitteeReportsHouseSenate::setCandidateContributionPeriod(const double &candidate_contribution_period) {
    m_candidate_contribution_period = candidate_contribution_period;
    m_candidate_contribution_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_candidate_contribution_period_Set() const{
    return m_candidate_contribution_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_candidate_contribution_period_Valid() const{
    return m_candidate_contribution_period_isValid;
}

double OAICommitteeReportsHouseSenate::getCandidateContributionYtd() const {
    return m_candidate_contribution_ytd;
}
void OAICommitteeReportsHouseSenate::setCandidateContributionYtd(const double &candidate_contribution_ytd) {
    m_candidate_contribution_ytd = candidate_contribution_ytd;
    m_candidate_contribution_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_candidate_contribution_ytd_Set() const{
    return m_candidate_contribution_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_candidate_contribution_ytd_Valid() const{
    return m_candidate_contribution_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getCashOnHandBeginningPeriod() const {
    return m_cash_on_hand_beginning_period;
}
void OAICommitteeReportsHouseSenate::setCashOnHandBeginningPeriod(const double &cash_on_hand_beginning_period) {
    m_cash_on_hand_beginning_period = cash_on_hand_beginning_period;
    m_cash_on_hand_beginning_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_cash_on_hand_beginning_period_Set() const{
    return m_cash_on_hand_beginning_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_cash_on_hand_beginning_period_Valid() const{
    return m_cash_on_hand_beginning_period_isValid;
}

double OAICommitteeReportsHouseSenate::getCashOnHandEndPeriod() const {
    return m_cash_on_hand_end_period;
}
void OAICommitteeReportsHouseSenate::setCashOnHandEndPeriod(const double &cash_on_hand_end_period) {
    m_cash_on_hand_end_period = cash_on_hand_end_period;
    m_cash_on_hand_end_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_cash_on_hand_end_period_Set() const{
    return m_cash_on_hand_end_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_cash_on_hand_end_period_Valid() const{
    return m_cash_on_hand_end_period_isValid;
}

QString OAICommitteeReportsHouseSenate::getCommitteeId() const {
    return m_committee_id;
}
void OAICommitteeReportsHouseSenate::setCommitteeId(const QString &committee_id) {
    m_committee_id = committee_id;
    m_committee_id_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_committee_id_Set() const{
    return m_committee_id_isSet;
}

bool OAICommitteeReportsHouseSenate::is_committee_id_Valid() const{
    return m_committee_id_isValid;
}

QString OAICommitteeReportsHouseSenate::getCommitteeName() const {
    return m_committee_name;
}
void OAICommitteeReportsHouseSenate::setCommitteeName(const QString &committee_name) {
    m_committee_name = committee_name;
    m_committee_name_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_committee_name_Set() const{
    return m_committee_name_isSet;
}

bool OAICommitteeReportsHouseSenate::is_committee_name_Valid() const{
    return m_committee_name_isValid;
}

QString OAICommitteeReportsHouseSenate::getCommitteeType() const {
    return m_committee_type;
}
void OAICommitteeReportsHouseSenate::setCommitteeType(const QString &committee_type) {
    m_committee_type = committee_type;
    m_committee_type_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_committee_type_Set() const{
    return m_committee_type_isSet;
}

bool OAICommitteeReportsHouseSenate::is_committee_type_Valid() const{
    return m_committee_type_isValid;
}

QDateTime OAICommitteeReportsHouseSenate::getCoverageEndDate() const {
    return m_coverage_end_date;
}
void OAICommitteeReportsHouseSenate::setCoverageEndDate(const QDateTime &coverage_end_date) {
    m_coverage_end_date = coverage_end_date;
    m_coverage_end_date_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_coverage_end_date_Set() const{
    return m_coverage_end_date_isSet;
}

bool OAICommitteeReportsHouseSenate::is_coverage_end_date_Valid() const{
    return m_coverage_end_date_isValid;
}

QDateTime OAICommitteeReportsHouseSenate::getCoverageStartDate() const {
    return m_coverage_start_date;
}
void OAICommitteeReportsHouseSenate::setCoverageStartDate(const QDateTime &coverage_start_date) {
    m_coverage_start_date = coverage_start_date;
    m_coverage_start_date_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_coverage_start_date_Set() const{
    return m_coverage_start_date_isSet;
}

bool OAICommitteeReportsHouseSenate::is_coverage_start_date_Valid() const{
    return m_coverage_start_date_isValid;
}

QString OAICommitteeReportsHouseSenate::getCsvUrl() const {
    return m_csv_url;
}
void OAICommitteeReportsHouseSenate::setCsvUrl(const QString &csv_url) {
    m_csv_url = csv_url;
    m_csv_url_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_csv_url_Set() const{
    return m_csv_url_isSet;
}

bool OAICommitteeReportsHouseSenate::is_csv_url_Valid() const{
    return m_csv_url_isValid;
}

qint32 OAICommitteeReportsHouseSenate::getCycle() const {
    return m_cycle;
}
void OAICommitteeReportsHouseSenate::setCycle(const qint32 &cycle) {
    m_cycle = cycle;
    m_cycle_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_cycle_Set() const{
    return m_cycle_isSet;
}

bool OAICommitteeReportsHouseSenate::is_cycle_Valid() const{
    return m_cycle_isValid;
}

double OAICommitteeReportsHouseSenate::getDebtsOwedByCommittee() const {
    return m_debts_owed_by_committee;
}
void OAICommitteeReportsHouseSenate::setDebtsOwedByCommittee(const double &debts_owed_by_committee) {
    m_debts_owed_by_committee = debts_owed_by_committee;
    m_debts_owed_by_committee_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_debts_owed_by_committee_Set() const{
    return m_debts_owed_by_committee_isSet;
}

bool OAICommitteeReportsHouseSenate::is_debts_owed_by_committee_Valid() const{
    return m_debts_owed_by_committee_isValid;
}

double OAICommitteeReportsHouseSenate::getDebtsOwedToCommittee() const {
    return m_debts_owed_to_committee;
}
void OAICommitteeReportsHouseSenate::setDebtsOwedToCommittee(const double &debts_owed_to_committee) {
    m_debts_owed_to_committee = debts_owed_to_committee;
    m_debts_owed_to_committee_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_debts_owed_to_committee_Set() const{
    return m_debts_owed_to_committee_isSet;
}

bool OAICommitteeReportsHouseSenate::is_debts_owed_to_committee_Valid() const{
    return m_debts_owed_to_committee_isValid;
}

QString OAICommitteeReportsHouseSenate::getDocumentDescription() const {
    return m_document_description;
}
void OAICommitteeReportsHouseSenate::setDocumentDescription(const QString &document_description) {
    m_document_description = document_description;
    m_document_description_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_document_description_Set() const{
    return m_document_description_isSet;
}

bool OAICommitteeReportsHouseSenate::is_document_description_Valid() const{
    return m_document_description_isValid;
}

QString OAICommitteeReportsHouseSenate::getEndImageNumber() const {
    return m_end_image_number;
}
void OAICommitteeReportsHouseSenate::setEndImageNumber(const QString &end_image_number) {
    m_end_image_number = end_image_number;
    m_end_image_number_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_end_image_number_Set() const{
    return m_end_image_number_isSet;
}

bool OAICommitteeReportsHouseSenate::is_end_image_number_Valid() const{
    return m_end_image_number_isValid;
}

QString OAICommitteeReportsHouseSenate::getFecFileId() const {
    return m_fec_file_id;
}
void OAICommitteeReportsHouseSenate::setFecFileId(const QString &fec_file_id) {
    m_fec_file_id = fec_file_id;
    m_fec_file_id_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_fec_file_id_Set() const{
    return m_fec_file_id_isSet;
}

bool OAICommitteeReportsHouseSenate::is_fec_file_id_Valid() const{
    return m_fec_file_id_isValid;
}

QString OAICommitteeReportsHouseSenate::getFecUrl() const {
    return m_fec_url;
}
void OAICommitteeReportsHouseSenate::setFecUrl(const QString &fec_url) {
    m_fec_url = fec_url;
    m_fec_url_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_fec_url_Set() const{
    return m_fec_url_isSet;
}

bool OAICommitteeReportsHouseSenate::is_fec_url_Valid() const{
    return m_fec_url_isValid;
}

qint32 OAICommitteeReportsHouseSenate::getFileNumber() const {
    return m_file_number;
}
void OAICommitteeReportsHouseSenate::setFileNumber(const qint32 &file_number) {
    m_file_number = file_number;
    m_file_number_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_file_number_Set() const{
    return m_file_number_isSet;
}

bool OAICommitteeReportsHouseSenate::is_file_number_Valid() const{
    return m_file_number_isValid;
}

double OAICommitteeReportsHouseSenate::getGrossReceiptAuthorizedCommitteeGeneral() const {
    return m_gross_receipt_authorized_committee_general;
}
void OAICommitteeReportsHouseSenate::setGrossReceiptAuthorizedCommitteeGeneral(const double &gross_receipt_authorized_committee_general) {
    m_gross_receipt_authorized_committee_general = gross_receipt_authorized_committee_general;
    m_gross_receipt_authorized_committee_general_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_authorized_committee_general_Set() const{
    return m_gross_receipt_authorized_committee_general_isSet;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_authorized_committee_general_Valid() const{
    return m_gross_receipt_authorized_committee_general_isValid;
}

double OAICommitteeReportsHouseSenate::getGrossReceiptAuthorizedCommitteePrimary() const {
    return m_gross_receipt_authorized_committee_primary;
}
void OAICommitteeReportsHouseSenate::setGrossReceiptAuthorizedCommitteePrimary(const double &gross_receipt_authorized_committee_primary) {
    m_gross_receipt_authorized_committee_primary = gross_receipt_authorized_committee_primary;
    m_gross_receipt_authorized_committee_primary_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_authorized_committee_primary_Set() const{
    return m_gross_receipt_authorized_committee_primary_isSet;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_authorized_committee_primary_Valid() const{
    return m_gross_receipt_authorized_committee_primary_isValid;
}

double OAICommitteeReportsHouseSenate::getGrossReceiptMinusPersonalContributionGeneral() const {
    return m_gross_receipt_minus_personal_contribution_general;
}
void OAICommitteeReportsHouseSenate::setGrossReceiptMinusPersonalContributionGeneral(const double &gross_receipt_minus_personal_contribution_general) {
    m_gross_receipt_minus_personal_contribution_general = gross_receipt_minus_personal_contribution_general;
    m_gross_receipt_minus_personal_contribution_general_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_minus_personal_contribution_general_Set() const{
    return m_gross_receipt_minus_personal_contribution_general_isSet;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_minus_personal_contribution_general_Valid() const{
    return m_gross_receipt_minus_personal_contribution_general_isValid;
}

double OAICommitteeReportsHouseSenate::getGrossReceiptMinusPersonalContributionsPrimary() const {
    return m_gross_receipt_minus_personal_contributions_primary;
}
void OAICommitteeReportsHouseSenate::setGrossReceiptMinusPersonalContributionsPrimary(const double &gross_receipt_minus_personal_contributions_primary) {
    m_gross_receipt_minus_personal_contributions_primary = gross_receipt_minus_personal_contributions_primary;
    m_gross_receipt_minus_personal_contributions_primary_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_minus_personal_contributions_primary_Set() const{
    return m_gross_receipt_minus_personal_contributions_primary_isSet;
}

bool OAICommitteeReportsHouseSenate::is_gross_receipt_minus_personal_contributions_primary_Valid() const{
    return m_gross_receipt_minus_personal_contributions_primary_isValid;
}

QString OAICommitteeReportsHouseSenate::getHtmlUrl() const {
    return m_html_url;
}
void OAICommitteeReportsHouseSenate::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAICommitteeReportsHouseSenate::is_html_url_Valid() const{
    return m_html_url_isValid;
}

double OAICommitteeReportsHouseSenate::getIndividualItemizedContributionsPeriod() const {
    return m_individual_itemized_contributions_period;
}
void OAICommitteeReportsHouseSenate::setIndividualItemizedContributionsPeriod(const double &individual_itemized_contributions_period) {
    m_individual_itemized_contributions_period = individual_itemized_contributions_period;
    m_individual_itemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_individual_itemized_contributions_period_Set() const{
    return m_individual_itemized_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_individual_itemized_contributions_period_Valid() const{
    return m_individual_itemized_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getIndividualItemizedContributionsYtd() const {
    return m_individual_itemized_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setIndividualItemizedContributionsYtd(const double &individual_itemized_contributions_ytd) {
    m_individual_itemized_contributions_ytd = individual_itemized_contributions_ytd;
    m_individual_itemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_individual_itemized_contributions_ytd_Set() const{
    return m_individual_itemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_individual_itemized_contributions_ytd_Valid() const{
    return m_individual_itemized_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getIndividualUnitemizedContributionsPeriod() const {
    return m_individual_unitemized_contributions_period;
}
void OAICommitteeReportsHouseSenate::setIndividualUnitemizedContributionsPeriod(const double &individual_unitemized_contributions_period) {
    m_individual_unitemized_contributions_period = individual_unitemized_contributions_period;
    m_individual_unitemized_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_individual_unitemized_contributions_period_Set() const{
    return m_individual_unitemized_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_individual_unitemized_contributions_period_Valid() const{
    return m_individual_unitemized_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getIndividualUnitemizedContributionsYtd() const {
    return m_individual_unitemized_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setIndividualUnitemizedContributionsYtd(const double &individual_unitemized_contributions_ytd) {
    m_individual_unitemized_contributions_ytd = individual_unitemized_contributions_ytd;
    m_individual_unitemized_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_individual_unitemized_contributions_ytd_Set() const{
    return m_individual_unitemized_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_individual_unitemized_contributions_ytd_Valid() const{
    return m_individual_unitemized_contributions_ytd_isValid;
}

bool OAICommitteeReportsHouseSenate::isIsAmended() const {
    return m_is_amended;
}
void OAICommitteeReportsHouseSenate::setIsAmended(const bool &is_amended) {
    m_is_amended = is_amended;
    m_is_amended_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_is_amended_Set() const{
    return m_is_amended_isSet;
}

bool OAICommitteeReportsHouseSenate::is_is_amended_Valid() const{
    return m_is_amended_isValid;
}

double OAICommitteeReportsHouseSenate::getLoanRepaymentsCandidateLoansPeriod() const {
    return m_loan_repayments_candidate_loans_period;
}
void OAICommitteeReportsHouseSenate::setLoanRepaymentsCandidateLoansPeriod(const double &loan_repayments_candidate_loans_period) {
    m_loan_repayments_candidate_loans_period = loan_repayments_candidate_loans_period;
    m_loan_repayments_candidate_loans_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_candidate_loans_period_Set() const{
    return m_loan_repayments_candidate_loans_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_candidate_loans_period_Valid() const{
    return m_loan_repayments_candidate_loans_period_isValid;
}

double OAICommitteeReportsHouseSenate::getLoanRepaymentsCandidateLoansYtd() const {
    return m_loan_repayments_candidate_loans_ytd;
}
void OAICommitteeReportsHouseSenate::setLoanRepaymentsCandidateLoansYtd(const double &loan_repayments_candidate_loans_ytd) {
    m_loan_repayments_candidate_loans_ytd = loan_repayments_candidate_loans_ytd;
    m_loan_repayments_candidate_loans_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_candidate_loans_ytd_Set() const{
    return m_loan_repayments_candidate_loans_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_candidate_loans_ytd_Valid() const{
    return m_loan_repayments_candidate_loans_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getLoanRepaymentsOtherLoansPeriod() const {
    return m_loan_repayments_other_loans_period;
}
void OAICommitteeReportsHouseSenate::setLoanRepaymentsOtherLoansPeriod(const double &loan_repayments_other_loans_period) {
    m_loan_repayments_other_loans_period = loan_repayments_other_loans_period;
    m_loan_repayments_other_loans_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_other_loans_period_Set() const{
    return m_loan_repayments_other_loans_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_other_loans_period_Valid() const{
    return m_loan_repayments_other_loans_period_isValid;
}

double OAICommitteeReportsHouseSenate::getLoanRepaymentsOtherLoansYtd() const {
    return m_loan_repayments_other_loans_ytd;
}
void OAICommitteeReportsHouseSenate::setLoanRepaymentsOtherLoansYtd(const double &loan_repayments_other_loans_ytd) {
    m_loan_repayments_other_loans_ytd = loan_repayments_other_loans_ytd;
    m_loan_repayments_other_loans_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_other_loans_ytd_Set() const{
    return m_loan_repayments_other_loans_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loan_repayments_other_loans_ytd_Valid() const{
    return m_loan_repayments_other_loans_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getLoansMadeByCandidatePeriod() const {
    return m_loans_made_by_candidate_period;
}
void OAICommitteeReportsHouseSenate::setLoansMadeByCandidatePeriod(const double &loans_made_by_candidate_period) {
    m_loans_made_by_candidate_period = loans_made_by_candidate_period;
    m_loans_made_by_candidate_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loans_made_by_candidate_period_Set() const{
    return m_loans_made_by_candidate_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loans_made_by_candidate_period_Valid() const{
    return m_loans_made_by_candidate_period_isValid;
}

double OAICommitteeReportsHouseSenate::getLoansMadeByCandidateYtd() const {
    return m_loans_made_by_candidate_ytd;
}
void OAICommitteeReportsHouseSenate::setLoansMadeByCandidateYtd(const double &loans_made_by_candidate_ytd) {
    m_loans_made_by_candidate_ytd = loans_made_by_candidate_ytd;
    m_loans_made_by_candidate_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_loans_made_by_candidate_ytd_Set() const{
    return m_loans_made_by_candidate_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_loans_made_by_candidate_ytd_Valid() const{
    return m_loans_made_by_candidate_ytd_isValid;
}

QString OAICommitteeReportsHouseSenate::getMeansFiled() const {
    return m_means_filed;
}
void OAICommitteeReportsHouseSenate::setMeansFiled(const QString &means_filed) {
    m_means_filed = means_filed;
    m_means_filed_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_means_filed_Set() const{
    return m_means_filed_isSet;
}

bool OAICommitteeReportsHouseSenate::is_means_filed_Valid() const{
    return m_means_filed_isValid;
}

bool OAICommitteeReportsHouseSenate::isMostRecent() const {
    return m_most_recent;
}
void OAICommitteeReportsHouseSenate::setMostRecent(const bool &most_recent) {
    m_most_recent = most_recent;
    m_most_recent_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_most_recent_Set() const{
    return m_most_recent_isSet;
}

bool OAICommitteeReportsHouseSenate::is_most_recent_Valid() const{
    return m_most_recent_isValid;
}

double OAICommitteeReportsHouseSenate::getMostRecentFileNumber() const {
    return m_most_recent_file_number;
}
void OAICommitteeReportsHouseSenate::setMostRecentFileNumber(const double &most_recent_file_number) {
    m_most_recent_file_number = most_recent_file_number;
    m_most_recent_file_number_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_most_recent_file_number_Set() const{
    return m_most_recent_file_number_isSet;
}

bool OAICommitteeReportsHouseSenate::is_most_recent_file_number_Valid() const{
    return m_most_recent_file_number_isValid;
}

double OAICommitteeReportsHouseSenate::getNetContributionsPeriod() const {
    return m_net_contributions_period;
}
void OAICommitteeReportsHouseSenate::setNetContributionsPeriod(const double &net_contributions_period) {
    m_net_contributions_period = net_contributions_period;
    m_net_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_net_contributions_period_Set() const{
    return m_net_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_net_contributions_period_Valid() const{
    return m_net_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getNetContributionsYtd() const {
    return m_net_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setNetContributionsYtd(const double &net_contributions_ytd) {
    m_net_contributions_ytd = net_contributions_ytd;
    m_net_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_net_contributions_ytd_Set() const{
    return m_net_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_net_contributions_ytd_Valid() const{
    return m_net_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getNetOperatingExpendituresPeriod() const {
    return m_net_operating_expenditures_period;
}
void OAICommitteeReportsHouseSenate::setNetOperatingExpendituresPeriod(const double &net_operating_expenditures_period) {
    m_net_operating_expenditures_period = net_operating_expenditures_period;
    m_net_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_net_operating_expenditures_period_Set() const{
    return m_net_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_net_operating_expenditures_period_Valid() const{
    return m_net_operating_expenditures_period_isValid;
}

double OAICommitteeReportsHouseSenate::getNetOperatingExpendituresYtd() const {
    return m_net_operating_expenditures_ytd;
}
void OAICommitteeReportsHouseSenate::setNetOperatingExpendituresYtd(const double &net_operating_expenditures_ytd) {
    m_net_operating_expenditures_ytd = net_operating_expenditures_ytd;
    m_net_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_net_operating_expenditures_ytd_Set() const{
    return m_net_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_net_operating_expenditures_ytd_Valid() const{
    return m_net_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getOffsetsToOperatingExpendituresPeriod() const {
    return m_offsets_to_operating_expenditures_period;
}
void OAICommitteeReportsHouseSenate::setOffsetsToOperatingExpendituresPeriod(const double &offsets_to_operating_expenditures_period) {
    m_offsets_to_operating_expenditures_period = offsets_to_operating_expenditures_period;
    m_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_offsets_to_operating_expenditures_period_Set() const{
    return m_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_offsets_to_operating_expenditures_period_Valid() const{
    return m_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReportsHouseSenate::getOffsetsToOperatingExpendituresYtd() const {
    return m_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReportsHouseSenate::setOffsetsToOperatingExpendituresYtd(const double &offsets_to_operating_expenditures_ytd) {
    m_offsets_to_operating_expenditures_ytd = offsets_to_operating_expenditures_ytd;
    m_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_offsets_to_operating_expenditures_ytd_Set() const{
    return m_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getOperatingExpendituresPeriod() const {
    return m_operating_expenditures_period;
}
void OAICommitteeReportsHouseSenate::setOperatingExpendituresPeriod(const double &operating_expenditures_period) {
    m_operating_expenditures_period = operating_expenditures_period;
    m_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_operating_expenditures_period_Set() const{
    return m_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_operating_expenditures_period_Valid() const{
    return m_operating_expenditures_period_isValid;
}

double OAICommitteeReportsHouseSenate::getOperatingExpendituresYtd() const {
    return m_operating_expenditures_ytd;
}
void OAICommitteeReportsHouseSenate::setOperatingExpendituresYtd(const double &operating_expenditures_ytd) {
    m_operating_expenditures_ytd = operating_expenditures_ytd;
    m_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_operating_expenditures_ytd_Set() const{
    return m_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_operating_expenditures_ytd_Valid() const{
    return m_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherDisbursementsPeriod() const {
    return m_other_disbursements_period;
}
void OAICommitteeReportsHouseSenate::setOtherDisbursementsPeriod(const double &other_disbursements_period) {
    m_other_disbursements_period = other_disbursements_period;
    m_other_disbursements_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_disbursements_period_Set() const{
    return m_other_disbursements_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_disbursements_period_Valid() const{
    return m_other_disbursements_period_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherDisbursementsYtd() const {
    return m_other_disbursements_ytd;
}
void OAICommitteeReportsHouseSenate::setOtherDisbursementsYtd(const double &other_disbursements_ytd) {
    m_other_disbursements_ytd = other_disbursements_ytd;
    m_other_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_disbursements_ytd_Set() const{
    return m_other_disbursements_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_disbursements_ytd_Valid() const{
    return m_other_disbursements_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherPoliticalCommitteeContributionsPeriod() const {
    return m_other_political_committee_contributions_period;
}
void OAICommitteeReportsHouseSenate::setOtherPoliticalCommitteeContributionsPeriod(const double &other_political_committee_contributions_period) {
    m_other_political_committee_contributions_period = other_political_committee_contributions_period;
    m_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_political_committee_contributions_period_Set() const{
    return m_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_political_committee_contributions_period_Valid() const{
    return m_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherPoliticalCommitteeContributionsYtd() const {
    return m_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setOtherPoliticalCommitteeContributionsYtd(const double &other_political_committee_contributions_ytd) {
    m_other_political_committee_contributions_ytd = other_political_committee_contributions_ytd;
    m_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_political_committee_contributions_ytd_Set() const{
    return m_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_political_committee_contributions_ytd_Valid() const{
    return m_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherReceiptsPeriod() const {
    return m_other_receipts_period;
}
void OAICommitteeReportsHouseSenate::setOtherReceiptsPeriod(const double &other_receipts_period) {
    m_other_receipts_period = other_receipts_period;
    m_other_receipts_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_receipts_period_Set() const{
    return m_other_receipts_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_receipts_period_Valid() const{
    return m_other_receipts_period_isValid;
}

double OAICommitteeReportsHouseSenate::getOtherReceiptsYtd() const {
    return m_other_receipts_ytd;
}
void OAICommitteeReportsHouseSenate::setOtherReceiptsYtd(const double &other_receipts_ytd) {
    m_other_receipts_ytd = other_receipts_ytd;
    m_other_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_other_receipts_ytd_Set() const{
    return m_other_receipts_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_other_receipts_ytd_Valid() const{
    return m_other_receipts_ytd_isValid;
}

QString OAICommitteeReportsHouseSenate::getPdfUrl() const {
    return m_pdf_url;
}
void OAICommitteeReportsHouseSenate::setPdfUrl(const QString &pdf_url) {
    m_pdf_url = pdf_url;
    m_pdf_url_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_pdf_url_Set() const{
    return m_pdf_url_isSet;
}

bool OAICommitteeReportsHouseSenate::is_pdf_url_Valid() const{
    return m_pdf_url_isValid;
}

double OAICommitteeReportsHouseSenate::getPoliticalPartyCommitteeContributionsPeriod() const {
    return m_political_party_committee_contributions_period;
}
void OAICommitteeReportsHouseSenate::setPoliticalPartyCommitteeContributionsPeriod(const double &political_party_committee_contributions_period) {
    m_political_party_committee_contributions_period = political_party_committee_contributions_period;
    m_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_political_party_committee_contributions_period_Set() const{
    return m_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_political_party_committee_contributions_period_Valid() const{
    return m_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getPoliticalPartyCommitteeContributionsYtd() const {
    return m_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setPoliticalPartyCommitteeContributionsYtd(const double &political_party_committee_contributions_ytd) {
    m_political_party_committee_contributions_ytd = political_party_committee_contributions_ytd;
    m_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_political_party_committee_contributions_ytd_Set() const{
    return m_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_political_party_committee_contributions_ytd_Valid() const{
    return m_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getPreviousFileNumber() const {
    return m_previous_file_number;
}
void OAICommitteeReportsHouseSenate::setPreviousFileNumber(const double &previous_file_number) {
    m_previous_file_number = previous_file_number;
    m_previous_file_number_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_previous_file_number_Set() const{
    return m_previous_file_number_isSet;
}

bool OAICommitteeReportsHouseSenate::is_previous_file_number_Valid() const{
    return m_previous_file_number_isValid;
}

QDate OAICommitteeReportsHouseSenate::getReceiptDate() const {
    return m_receipt_date;
}
void OAICommitteeReportsHouseSenate::setReceiptDate(const QDate &receipt_date) {
    m_receipt_date = receipt_date;
    m_receipt_date_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_receipt_date_Set() const{
    return m_receipt_date_isSet;
}

bool OAICommitteeReportsHouseSenate::is_receipt_date_Valid() const{
    return m_receipt_date_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedIndividualContributionsPeriod() const {
    return m_refunded_individual_contributions_period;
}
void OAICommitteeReportsHouseSenate::setRefundedIndividualContributionsPeriod(const double &refunded_individual_contributions_period) {
    m_refunded_individual_contributions_period = refunded_individual_contributions_period;
    m_refunded_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_individual_contributions_period_Set() const{
    return m_refunded_individual_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_individual_contributions_period_Valid() const{
    return m_refunded_individual_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedIndividualContributionsYtd() const {
    return m_refunded_individual_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setRefundedIndividualContributionsYtd(const double &refunded_individual_contributions_ytd) {
    m_refunded_individual_contributions_ytd = refunded_individual_contributions_ytd;
    m_refunded_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_individual_contributions_ytd_Set() const{
    return m_refunded_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_individual_contributions_ytd_Valid() const{
    return m_refunded_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedOtherPoliticalCommitteeContributionsPeriod() const {
    return m_refunded_other_political_committee_contributions_period;
}
void OAICommitteeReportsHouseSenate::setRefundedOtherPoliticalCommitteeContributionsPeriod(const double &refunded_other_political_committee_contributions_period) {
    m_refunded_other_political_committee_contributions_period = refunded_other_political_committee_contributions_period;
    m_refunded_other_political_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_other_political_committee_contributions_period_Set() const{
    return m_refunded_other_political_committee_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_other_political_committee_contributions_period_Valid() const{
    return m_refunded_other_political_committee_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedOtherPoliticalCommitteeContributionsYtd() const {
    return m_refunded_other_political_committee_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setRefundedOtherPoliticalCommitteeContributionsYtd(const double &refunded_other_political_committee_contributions_ytd) {
    m_refunded_other_political_committee_contributions_ytd = refunded_other_political_committee_contributions_ytd;
    m_refunded_other_political_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_other_political_committee_contributions_ytd_Set() const{
    return m_refunded_other_political_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_other_political_committee_contributions_ytd_Valid() const{
    return m_refunded_other_political_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedPoliticalPartyCommitteeContributionsPeriod() const {
    return m_refunded_political_party_committee_contributions_period;
}
void OAICommitteeReportsHouseSenate::setRefundedPoliticalPartyCommitteeContributionsPeriod(const double &refunded_political_party_committee_contributions_period) {
    m_refunded_political_party_committee_contributions_period = refunded_political_party_committee_contributions_period;
    m_refunded_political_party_committee_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_political_party_committee_contributions_period_Set() const{
    return m_refunded_political_party_committee_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_political_party_committee_contributions_period_Valid() const{
    return m_refunded_political_party_committee_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundedPoliticalPartyCommitteeContributionsYtd() const {
    return m_refunded_political_party_committee_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setRefundedPoliticalPartyCommitteeContributionsYtd(const double &refunded_political_party_committee_contributions_ytd) {
    m_refunded_political_party_committee_contributions_ytd = refunded_political_party_committee_contributions_ytd;
    m_refunded_political_party_committee_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunded_political_party_committee_contributions_ytd_Set() const{
    return m_refunded_political_party_committee_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunded_political_party_committee_contributions_ytd_Valid() const{
    return m_refunded_political_party_committee_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getRefundsTotalContributionsColTotalYtd() const {
    return m_refunds_total_contributions_col_total_ytd;
}
void OAICommitteeReportsHouseSenate::setRefundsTotalContributionsColTotalYtd(const double &refunds_total_contributions_col_total_ytd) {
    m_refunds_total_contributions_col_total_ytd = refunds_total_contributions_col_total_ytd;
    m_refunds_total_contributions_col_total_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_refunds_total_contributions_col_total_ytd_Set() const{
    return m_refunds_total_contributions_col_total_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_refunds_total_contributions_col_total_ytd_Valid() const{
    return m_refunds_total_contributions_col_total_ytd_isValid;
}

QString OAICommitteeReportsHouseSenate::getReportForm() const {
    return m_report_form;
}
void OAICommitteeReportsHouseSenate::setReportForm(const QString &report_form) {
    m_report_form = report_form;
    m_report_form_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_report_form_Set() const{
    return m_report_form_isSet;
}

bool OAICommitteeReportsHouseSenate::is_report_form_Valid() const{
    return m_report_form_isValid;
}

QString OAICommitteeReportsHouseSenate::getReportType() const {
    return m_report_type;
}
void OAICommitteeReportsHouseSenate::setReportType(const QString &report_type) {
    m_report_type = report_type;
    m_report_type_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_report_type_Set() const{
    return m_report_type_isSet;
}

bool OAICommitteeReportsHouseSenate::is_report_type_Valid() const{
    return m_report_type_isValid;
}

QString OAICommitteeReportsHouseSenate::getReportTypeFull() const {
    return m_report_type_full;
}
void OAICommitteeReportsHouseSenate::setReportTypeFull(const QString &report_type_full) {
    m_report_type_full = report_type_full;
    m_report_type_full_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_report_type_full_Set() const{
    return m_report_type_full_isSet;
}

bool OAICommitteeReportsHouseSenate::is_report_type_full_Valid() const{
    return m_report_type_full_isValid;
}

qint32 OAICommitteeReportsHouseSenate::getReportYear() const {
    return m_report_year;
}
void OAICommitteeReportsHouseSenate::setReportYear(const qint32 &report_year) {
    m_report_year = report_year;
    m_report_year_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_report_year_Set() const{
    return m_report_year_isSet;
}

bool OAICommitteeReportsHouseSenate::is_report_year_Valid() const{
    return m_report_year_isValid;
}

double OAICommitteeReportsHouseSenate::getSubtotalPeriod() const {
    return m_subtotal_period;
}
void OAICommitteeReportsHouseSenate::setSubtotalPeriod(const double &subtotal_period) {
    m_subtotal_period = subtotal_period;
    m_subtotal_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_subtotal_period_Set() const{
    return m_subtotal_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_subtotal_period_Valid() const{
    return m_subtotal_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionRefundsColTotalPeriod() const {
    return m_total_contribution_refunds_col_total_period;
}
void OAICommitteeReportsHouseSenate::setTotalContributionRefundsColTotalPeriod(const double &total_contribution_refunds_col_total_period) {
    m_total_contribution_refunds_col_total_period = total_contribution_refunds_col_total_period;
    m_total_contribution_refunds_col_total_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_col_total_period_Set() const{
    return m_total_contribution_refunds_col_total_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_col_total_period_Valid() const{
    return m_total_contribution_refunds_col_total_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionRefundsPeriod() const {
    return m_total_contribution_refunds_period;
}
void OAICommitteeReportsHouseSenate::setTotalContributionRefundsPeriod(const double &total_contribution_refunds_period) {
    m_total_contribution_refunds_period = total_contribution_refunds_period;
    m_total_contribution_refunds_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_period_Set() const{
    return m_total_contribution_refunds_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_period_Valid() const{
    return m_total_contribution_refunds_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionRefundsYtd() const {
    return m_total_contribution_refunds_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalContributionRefundsYtd(const double &total_contribution_refunds_ytd) {
    m_total_contribution_refunds_ytd = total_contribution_refunds_ytd;
    m_total_contribution_refunds_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_ytd_Set() const{
    return m_total_contribution_refunds_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contribution_refunds_ytd_Valid() const{
    return m_total_contribution_refunds_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionsColumnTotalPeriod() const {
    return m_total_contributions_column_total_period;
}
void OAICommitteeReportsHouseSenate::setTotalContributionsColumnTotalPeriod(const double &total_contributions_column_total_period) {
    m_total_contributions_column_total_period = total_contributions_column_total_period;
    m_total_contributions_column_total_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_column_total_period_Set() const{
    return m_total_contributions_column_total_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_column_total_period_Valid() const{
    return m_total_contributions_column_total_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionsPeriod() const {
    return m_total_contributions_period;
}
void OAICommitteeReportsHouseSenate::setTotalContributionsPeriod(const double &total_contributions_period) {
    m_total_contributions_period = total_contributions_period;
    m_total_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_period_Set() const{
    return m_total_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_period_Valid() const{
    return m_total_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalContributionsYtd() const {
    return m_total_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalContributionsYtd(const double &total_contributions_ytd) {
    m_total_contributions_ytd = total_contributions_ytd;
    m_total_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_ytd_Set() const{
    return m_total_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_contributions_ytd_Valid() const{
    return m_total_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalDisbursementsPeriod() const {
    return m_total_disbursements_period;
}
void OAICommitteeReportsHouseSenate::setTotalDisbursementsPeriod(const double &total_disbursements_period) {
    m_total_disbursements_period = total_disbursements_period;
    m_total_disbursements_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_disbursements_period_Set() const{
    return m_total_disbursements_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_disbursements_period_Valid() const{
    return m_total_disbursements_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalDisbursementsYtd() const {
    return m_total_disbursements_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalDisbursementsYtd(const double &total_disbursements_ytd) {
    m_total_disbursements_ytd = total_disbursements_ytd;
    m_total_disbursements_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_disbursements_ytd_Set() const{
    return m_total_disbursements_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_disbursements_ytd_Valid() const{
    return m_total_disbursements_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalIndividualContributionsPeriod() const {
    return m_total_individual_contributions_period;
}
void OAICommitteeReportsHouseSenate::setTotalIndividualContributionsPeriod(const double &total_individual_contributions_period) {
    m_total_individual_contributions_period = total_individual_contributions_period;
    m_total_individual_contributions_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_individual_contributions_period_Set() const{
    return m_total_individual_contributions_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_individual_contributions_period_Valid() const{
    return m_total_individual_contributions_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalIndividualContributionsYtd() const {
    return m_total_individual_contributions_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalIndividualContributionsYtd(const double &total_individual_contributions_ytd) {
    m_total_individual_contributions_ytd = total_individual_contributions_ytd;
    m_total_individual_contributions_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_individual_contributions_ytd_Set() const{
    return m_total_individual_contributions_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_individual_contributions_ytd_Valid() const{
    return m_total_individual_contributions_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalLoanRepaymentsMadePeriod() const {
    return m_total_loan_repayments_made_period;
}
void OAICommitteeReportsHouseSenate::setTotalLoanRepaymentsMadePeriod(const double &total_loan_repayments_made_period) {
    m_total_loan_repayments_made_period = total_loan_repayments_made_period;
    m_total_loan_repayments_made_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_loan_repayments_made_period_Set() const{
    return m_total_loan_repayments_made_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_loan_repayments_made_period_Valid() const{
    return m_total_loan_repayments_made_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalLoanRepaymentsMadeYtd() const {
    return m_total_loan_repayments_made_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalLoanRepaymentsMadeYtd(const double &total_loan_repayments_made_ytd) {
    m_total_loan_repayments_made_ytd = total_loan_repayments_made_ytd;
    m_total_loan_repayments_made_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_loan_repayments_made_ytd_Set() const{
    return m_total_loan_repayments_made_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_loan_repayments_made_ytd_Valid() const{
    return m_total_loan_repayments_made_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalLoansReceivedPeriod() const {
    return m_total_loans_received_period;
}
void OAICommitteeReportsHouseSenate::setTotalLoansReceivedPeriod(const double &total_loans_received_period) {
    m_total_loans_received_period = total_loans_received_period;
    m_total_loans_received_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_loans_received_period_Set() const{
    return m_total_loans_received_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_loans_received_period_Valid() const{
    return m_total_loans_received_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalLoansReceivedYtd() const {
    return m_total_loans_received_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalLoansReceivedYtd(const double &total_loans_received_ytd) {
    m_total_loans_received_ytd = total_loans_received_ytd;
    m_total_loans_received_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_loans_received_ytd_Set() const{
    return m_total_loans_received_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_loans_received_ytd_Valid() const{
    return m_total_loans_received_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalOffsetsToOperatingExpendituresPeriod() const {
    return m_total_offsets_to_operating_expenditures_period;
}
void OAICommitteeReportsHouseSenate::setTotalOffsetsToOperatingExpendituresPeriod(const double &total_offsets_to_operating_expenditures_period) {
    m_total_offsets_to_operating_expenditures_period = total_offsets_to_operating_expenditures_period;
    m_total_offsets_to_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_offsets_to_operating_expenditures_period_Set() const{
    return m_total_offsets_to_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_offsets_to_operating_expenditures_period_Valid() const{
    return m_total_offsets_to_operating_expenditures_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalOffsetsToOperatingExpendituresYtd() const {
    return m_total_offsets_to_operating_expenditures_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalOffsetsToOperatingExpendituresYtd(const double &total_offsets_to_operating_expenditures_ytd) {
    m_total_offsets_to_operating_expenditures_ytd = total_offsets_to_operating_expenditures_ytd;
    m_total_offsets_to_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_offsets_to_operating_expenditures_ytd_Set() const{
    return m_total_offsets_to_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_offsets_to_operating_expenditures_ytd_Valid() const{
    return m_total_offsets_to_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalOperatingExpendituresPeriod() const {
    return m_total_operating_expenditures_period;
}
void OAICommitteeReportsHouseSenate::setTotalOperatingExpendituresPeriod(const double &total_operating_expenditures_period) {
    m_total_operating_expenditures_period = total_operating_expenditures_period;
    m_total_operating_expenditures_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_operating_expenditures_period_Set() const{
    return m_total_operating_expenditures_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_operating_expenditures_period_Valid() const{
    return m_total_operating_expenditures_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalOperatingExpendituresYtd() const {
    return m_total_operating_expenditures_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalOperatingExpendituresYtd(const double &total_operating_expenditures_ytd) {
    m_total_operating_expenditures_ytd = total_operating_expenditures_ytd;
    m_total_operating_expenditures_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_operating_expenditures_ytd_Set() const{
    return m_total_operating_expenditures_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_operating_expenditures_ytd_Valid() const{
    return m_total_operating_expenditures_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalReceiptsPeriod() const {
    return m_total_receipts_period;
}
void OAICommitteeReportsHouseSenate::setTotalReceiptsPeriod(const double &total_receipts_period) {
    m_total_receipts_period = total_receipts_period;
    m_total_receipts_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_receipts_period_Set() const{
    return m_total_receipts_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_receipts_period_Valid() const{
    return m_total_receipts_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTotalReceiptsYtd() const {
    return m_total_receipts_ytd;
}
void OAICommitteeReportsHouseSenate::setTotalReceiptsYtd(const double &total_receipts_ytd) {
    m_total_receipts_ytd = total_receipts_ytd;
    m_total_receipts_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_total_receipts_ytd_Set() const{
    return m_total_receipts_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_total_receipts_ytd_Valid() const{
    return m_total_receipts_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTransfersFromOtherAuthorizedCommitteePeriod() const {
    return m_transfers_from_other_authorized_committee_period;
}
void OAICommitteeReportsHouseSenate::setTransfersFromOtherAuthorizedCommitteePeriod(const double &transfers_from_other_authorized_committee_period) {
    m_transfers_from_other_authorized_committee_period = transfers_from_other_authorized_committee_period;
    m_transfers_from_other_authorized_committee_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_transfers_from_other_authorized_committee_period_Set() const{
    return m_transfers_from_other_authorized_committee_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_transfers_from_other_authorized_committee_period_Valid() const{
    return m_transfers_from_other_authorized_committee_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTransfersFromOtherAuthorizedCommitteeYtd() const {
    return m_transfers_from_other_authorized_committee_ytd;
}
void OAICommitteeReportsHouseSenate::setTransfersFromOtherAuthorizedCommitteeYtd(const double &transfers_from_other_authorized_committee_ytd) {
    m_transfers_from_other_authorized_committee_ytd = transfers_from_other_authorized_committee_ytd;
    m_transfers_from_other_authorized_committee_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_transfers_from_other_authorized_committee_ytd_Set() const{
    return m_transfers_from_other_authorized_committee_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_transfers_from_other_authorized_committee_ytd_Valid() const{
    return m_transfers_from_other_authorized_committee_ytd_isValid;
}

double OAICommitteeReportsHouseSenate::getTransfersToOtherAuthorizedCommitteePeriod() const {
    return m_transfers_to_other_authorized_committee_period;
}
void OAICommitteeReportsHouseSenate::setTransfersToOtherAuthorizedCommitteePeriod(const double &transfers_to_other_authorized_committee_period) {
    m_transfers_to_other_authorized_committee_period = transfers_to_other_authorized_committee_period;
    m_transfers_to_other_authorized_committee_period_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_transfers_to_other_authorized_committee_period_Set() const{
    return m_transfers_to_other_authorized_committee_period_isSet;
}

bool OAICommitteeReportsHouseSenate::is_transfers_to_other_authorized_committee_period_Valid() const{
    return m_transfers_to_other_authorized_committee_period_isValid;
}

double OAICommitteeReportsHouseSenate::getTransfersToOtherAuthorizedCommitteeYtd() const {
    return m_transfers_to_other_authorized_committee_ytd;
}
void OAICommitteeReportsHouseSenate::setTransfersToOtherAuthorizedCommitteeYtd(const double &transfers_to_other_authorized_committee_ytd) {
    m_transfers_to_other_authorized_committee_ytd = transfers_to_other_authorized_committee_ytd;
    m_transfers_to_other_authorized_committee_ytd_isSet = true;
}

bool OAICommitteeReportsHouseSenate::is_transfers_to_other_authorized_committee_ytd_Set() const{
    return m_transfers_to_other_authorized_committee_ytd_isSet;
}

bool OAICommitteeReportsHouseSenate::is_transfers_to_other_authorized_committee_ytd_Valid() const{
    return m_transfers_to_other_authorized_committee_ytd_isValid;
}

bool OAICommitteeReportsHouseSenate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregate_amount_personal_contributions_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregate_contributions_personal_funds_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_chain.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amendment_indicator_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beginning_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_candidate_contribution_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_beginning_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_on_hand_end_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coverage_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_by_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debts_owed_to_committee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_image_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_authorized_committee_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_authorized_committee_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_minus_personal_contribution_general_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_receipt_minus_personal_contributions_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_itemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_unitemized_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_amended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_candidate_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_candidate_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_other_loans_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_repayments_other_loans_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_by_candidate_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loans_made_by_candidate_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_means_filed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_most_recent_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_file_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_other_political_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_political_party_committee_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunds_total_contributions_col_total_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_col_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contribution_refunds_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_column_total_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_disbursements_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_individual_contributions_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loan_repayments_made_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_loans_received_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_offsets_to_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_operating_expenditures_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_receipts_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_other_authorized_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_from_other_authorized_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfers_to_other_authorized_committee_ytd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitteeReportsHouseSenate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
