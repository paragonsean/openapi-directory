/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudio.h
 *
 * 
 */

#ifndef OAIAudio_H
#define OAIAudio_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudio : public OAIObject {
public:
    OAIAudio();
    OAIAudio(QString json);
    ~OAIAudio() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCache() const;
    void setCache(const bool &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    float getDuration() const;
    void setDuration(const float &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    float getExtraTime() const;
    void setExtraTime(const float &extra_time);
    bool is_extra_time_Set() const;
    bool is_extra_time_Valid() const;

    float getFadeIn() const;
    void setFadeIn(const float &fade_in);
    bool is_fade_in_Set() const;
    bool is_fade_in_Valid() const;

    float getFadeOut() const;
    void setFadeOut(const float &fade_out);
    bool is_fade_out_Set() const;
    bool is_fade_out_Valid() const;

    float getStart() const;
    void setStart(const float &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    double getZIndex() const;
    void setZIndex(const double &z_index);
    bool is_z_index_Set() const;
    bool is_z_index_Valid() const;

    bool isMuted() const;
    void setMuted(const bool &muted);
    bool is_muted_Set() const;
    bool is_muted_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    QString getSrc() const;
    void setSrc(const QString &src);
    bool is_src_Set() const;
    bool is_src_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    float m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    float m_extra_time;
    bool m_extra_time_isSet;
    bool m_extra_time_isValid;

    float m_fade_in;
    bool m_fade_in_isSet;
    bool m_fade_in_isValid;

    float m_fade_out;
    bool m_fade_out_isSet;
    bool m_fade_out_isValid;

    float m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    double m_z_index;
    bool m_z_index_isSet;
    bool m_z_index_isValid;

    bool m_muted;
    bool m_muted_isSet;
    bool m_muted_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;

    QString m_src;
    bool m_src_isSet;
    bool m_src_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudio)

#endif // OAIAudio_H
