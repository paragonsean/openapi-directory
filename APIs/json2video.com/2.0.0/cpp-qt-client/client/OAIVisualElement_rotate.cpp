/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVisualElement_rotate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVisualElement_rotate::OAIVisualElement_rotate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVisualElement_rotate::OAIVisualElement_rotate() {
    this->initializeModel();
}

OAIVisualElement_rotate::~OAIVisualElement_rotate() {}

void OAIVisualElement_rotate::initializeModel() {

    m_angle_isSet = false;
    m_angle_isValid = false;

    m_speed_isSet = false;
    m_speed_isValid = false;
}

void OAIVisualElement_rotate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVisualElement_rotate::fromJsonObject(QJsonObject json) {

    m_angle_isValid = ::OpenAPI::fromJsonValue(m_angle, json[QString("angle")]);
    m_angle_isSet = !json[QString("angle")].isNull() && m_angle_isValid;

    m_speed_isValid = ::OpenAPI::fromJsonValue(m_speed, json[QString("speed")]);
    m_speed_isSet = !json[QString("speed")].isNull() && m_speed_isValid;
}

QString OAIVisualElement_rotate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVisualElement_rotate::asJsonObject() const {
    QJsonObject obj;
    if (m_angle_isSet) {
        obj.insert(QString("angle"), ::OpenAPI::toJsonValue(m_angle));
    }
    if (m_speed_isSet) {
        obj.insert(QString("speed"), ::OpenAPI::toJsonValue(m_speed));
    }
    return obj;
}

double OAIVisualElement_rotate::getAngle() const {
    return m_angle;
}
void OAIVisualElement_rotate::setAngle(const double &angle) {
    m_angle = angle;
    m_angle_isSet = true;
}

bool OAIVisualElement_rotate::is_angle_Set() const{
    return m_angle_isSet;
}

bool OAIVisualElement_rotate::is_angle_Valid() const{
    return m_angle_isValid;
}

double OAIVisualElement_rotate::getSpeed() const {
    return m_speed;
}
void OAIVisualElement_rotate::setSpeed(const double &speed) {
    m_speed = speed;
    m_speed_isSet = true;
}

bool OAIVisualElement_rotate::is_speed_Set() const{
    return m_speed_isSet;
}

bool OAIVisualElement_rotate::is_speed_Valid() const{
    return m_speed_isValid;
}

bool OAIVisualElement_rotate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_angle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_speed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVisualElement_rotate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_angle_isValid && true;
}

} // namespace OpenAPI
