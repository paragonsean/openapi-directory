/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptureProperty_capture.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptureProperty_capture::OAICaptureProperty_capture(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptureProperty_capture::OAICaptureProperty_capture() {
    this->initializeModel();
}

OAICaptureProperty_capture::~OAICaptureProperty_capture() {}

void OAICaptureProperty_capture::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_height_isSet = false;
    m_height_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAICaptureProperty_capture::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptureProperty_capture::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("height")]);
    m_height_isSet = !json[QString("height")].isNull() && m_height_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;
}

QString OAICaptureProperty_capture::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptureProperty_capture::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_height_isSet) {
        obj.insert(QString("height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_width_isSet) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(m_width));
    }
    return obj;
}

float OAICaptureProperty_capture::getDuration() const {
    return m_duration;
}
void OAICaptureProperty_capture::setDuration(const float &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAICaptureProperty_capture::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAICaptureProperty_capture::is_duration_Valid() const{
    return m_duration_isValid;
}

qint32 OAICaptureProperty_capture::getHeight() const {
    return m_height;
}
void OAICaptureProperty_capture::setHeight(const qint32 &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAICaptureProperty_capture::is_height_Set() const{
    return m_height_isSet;
}

bool OAICaptureProperty_capture::is_height_Valid() const{
    return m_height_isValid;
}

qint32 OAICaptureProperty_capture::getWidth() const {
    return m_width;
}
void OAICaptureProperty_capture::setWidth(const qint32 &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAICaptureProperty_capture::is_width_Set() const{
    return m_width_isSet;
}

bool OAICaptureProperty_capture::is_width_Valid() const{
    return m_width_isValid;
}

bool OAICaptureProperty_capture::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptureProperty_capture::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_height_isValid && m_width_isValid && true;
}

} // namespace OpenAPI
