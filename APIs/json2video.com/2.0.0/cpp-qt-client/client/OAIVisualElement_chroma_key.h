/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVisualElement_chroma_key.h
 *
 * Allows to define a color (or a range of colors) that will be converted to transparent
 */

#ifndef OAIVisualElement_chroma_key_H
#define OAIVisualElement_chroma_key_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVisualElement_chroma_key : public OAIObject {
public:
    OAIVisualElement_chroma_key();
    OAIVisualElement_chroma_key(QString json);
    ~OAIVisualElement_chroma_key() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    qint32 getTolerance() const;
    void setTolerance(const qint32 &tolerance);
    bool is_tolerance_Set() const;
    bool is_tolerance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    qint32 m_tolerance;
    bool m_tolerance_isSet;
    bool m_tolerance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVisualElement_chroma_key)

#endif // OAIVisualElement_chroma_key_H
