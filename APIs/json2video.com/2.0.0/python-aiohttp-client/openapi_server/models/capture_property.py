# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capture_property_capture import CapturePropertyCapture
from openapi_server import util


class CaptureProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capture: CapturePropertyCapture=None):
        """CaptureProperty - a model defined in OpenAPI

        :param capture: The capture of this CaptureProperty.
        """
        self.openapi_types = {
            'capture': CapturePropertyCapture
        }

        self.attribute_map = {
            'capture': 'capture'
        }

        self._capture = capture

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaptureProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaptureProperty of this CaptureProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capture(self):
        """Gets the capture of this CaptureProperty.


        :return: The capture of this CaptureProperty.
        :rtype: CapturePropertyCapture
        """
        return self._capture

    @capture.setter
    def capture(self, capture):
        """Sets the capture of this CaptureProperty.


        :param capture: The capture of this CaptureProperty.
        :type capture: CapturePropertyCapture
        """

        self._capture = capture
