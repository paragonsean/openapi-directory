/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Json2VideoApi);
  }
}(this, function(expect, Json2VideoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Json2VideoApi.MovieElementsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MovieElementsInner', function() {
    it('should create an instance of MovieElementsInner', function() {
      // uncomment below and update the code to test MovieElementsInner
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be.a(Json2VideoApi.MovieElementsInner);
    });

    it('should have the property src (base name: "src")', function() {
      // uncomment below and update the code to test the property src
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property cache (base name: "cache")', function() {
      // uncomment below and update the code to test the property cache
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property extraTime (base name: "extra-time")', function() {
      // uncomment below and update the code to test the property extraTime
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property fadeIn (base name: "fade-in")', function() {
      // uncomment below and update the code to test the property fadeIn
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property fadeOut (base name: "fade-out")', function() {
      // uncomment below and update the code to test the property fadeOut
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property zIndex (base name: "z-index")', function() {
      // uncomment below and update the code to test the property zIndex
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property chromaKey (base name: "chroma-key")', function() {
      // uncomment below and update the code to test the property chromaKey
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property crop (base name: "crop")', function() {
      // uncomment below and update the code to test the property crop
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property pan (base name: "pan")', function() {
      // uncomment below and update the code to test the property pan
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property rotate (base name: "rotate")', function() {
      // uncomment below and update the code to test the property rotate
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property scale (base name: "scale")', function() {
      // uncomment below and update the code to test the property scale
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property x (base name: "x")', function() {
      // uncomment below and update the code to test the property x
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property y (base name: "y")', function() {
      // uncomment below and update the code to test the property y
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property zoom (base name: "zoom")', function() {
      // uncomment below and update the code to test the property zoom
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property loop (base name: "loop")', function() {
      // uncomment below and update the code to test the property loop
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property muted (base name: "muted")', function() {
      // uncomment below and update the code to test the property muted
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property volume (base name: "volume")', function() {
      // uncomment below and update the code to test the property volume
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property settings (base name: "settings")', function() {
      // uncomment below and update the code to test the property settings
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property style (base name: "style")', function() {
      // uncomment below and update the code to test the property style
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property tailwindcss (base name: "tailwindcss")', function() {
      // uncomment below and update the code to test the property tailwindcss
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property component (base name: "component")', function() {
      // uncomment below and update the code to test the property component
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

    it('should have the property voice (base name: "voice")', function() {
      // uncomment below and update the code to test the property voice
      //var instance = new Json2VideoApi.MovieElementsInner();
      //expect(instance).to.be();
    });

  });

}));
