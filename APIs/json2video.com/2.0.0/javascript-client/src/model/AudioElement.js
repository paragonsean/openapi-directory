/**
 * JSON2Video API
 * Create and edit awesome videos programmatically
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudioElement model module.
 * @module model/AudioElement
 * @version 2.0.0
 */
class AudioElement {
    /**
     * Constructs a new <code>AudioElement</code>.
     * @alias module:model/AudioElement
     */
    constructor() { 
        
        AudioElement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['muted'] = false;
        obj['volume'] = 5;
    }

    /**
     * Constructs a <code>AudioElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioElement} obj Optional instance to populate.
     * @return {module:model/AudioElement} The populated <code>AudioElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioElement();

            if (data.hasOwnProperty('muted')) {
                obj['muted'] = ApiClient.convertToType(data['muted'], 'Boolean');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioElement</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Mutes the audio
 * @member {Boolean} muted
 * @default false
 */
AudioElement.prototype['muted'] = false;

/**
 * @member {Number} volume
 * @default 5
 */
AudioElement.prototype['volume'] = 5;






export default AudioElement;

