/**
 * Etherpad API
 * Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.
 *
 * The version of the OpenAPI document: 1.2.15
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetLastEditedUsingGET_200_response_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetLastEditedUsingGET_200_response_data::OAIGetLastEditedUsingGET_200_response_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetLastEditedUsingGET_200_response_data::OAIGetLastEditedUsingGET_200_response_data() {
    this->initializeModel();
}

OAIGetLastEditedUsingGET_200_response_data::~OAIGetLastEditedUsingGET_200_response_data() {}

void OAIGetLastEditedUsingGET_200_response_data::initializeModel() {

    m_last_edited_isSet = false;
    m_last_edited_isValid = false;
}

void OAIGetLastEditedUsingGET_200_response_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetLastEditedUsingGET_200_response_data::fromJsonObject(QJsonObject json) {

    m_last_edited_isValid = ::OpenAPI::fromJsonValue(m_last_edited, json[QString("lastEdited")]);
    m_last_edited_isSet = !json[QString("lastEdited")].isNull() && m_last_edited_isValid;
}

QString OAIGetLastEditedUsingGET_200_response_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetLastEditedUsingGET_200_response_data::asJsonObject() const {
    QJsonObject obj;
    if (m_last_edited_isSet) {
        obj.insert(QString("lastEdited"), ::OpenAPI::toJsonValue(m_last_edited));
    }
    return obj;
}

qint32 OAIGetLastEditedUsingGET_200_response_data::getLastEdited() const {
    return m_last_edited;
}
void OAIGetLastEditedUsingGET_200_response_data::setLastEdited(const qint32 &last_edited) {
    m_last_edited = last_edited;
    m_last_edited_isSet = true;
}

bool OAIGetLastEditedUsingGET_200_response_data::is_last_edited_Set() const{
    return m_last_edited_isSet;
}

bool OAIGetLastEditedUsingGET_200_response_data::is_last_edited_Valid() const{
    return m_last_edited_isValid;
}

bool OAIGetLastEditedUsingGET_200_response_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_edited_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetLastEditedUsingGET_200_response_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
