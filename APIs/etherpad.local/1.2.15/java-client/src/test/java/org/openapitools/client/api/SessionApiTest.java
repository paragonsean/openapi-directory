/*
 * Etherpad API
 * Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.
 *
 * The version of the OpenAPI document: 1.2.15
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppendChatMessageUsingGET200Response;
import org.openapitools.client.model.AppendChatMessageUsingGET400Response;
import org.openapitools.client.model.AppendChatMessageUsingGET401Response;
import org.openapitools.client.model.AppendChatMessageUsingGET500Response;
import org.openapitools.client.model.CreateSessionUsingGET200Response;
import org.openapitools.client.model.GetSessionInfoUsingGET200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SessionApi
 */
@Disabled
public class SessionApiTest {

    private final SessionApi api = new SessionApi();

    /**
     * creates a new session. validUntil is an unix timestamp in seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSessionUsingGETTest() throws ApiException {
        String groupID = null;
        String authorID = null;
        String validUntil = null;
        CreateSessionUsingGET200Response response = api.createSessionUsingGET(groupID, authorID, validUntil);
        // TODO: test validations
    }

    /**
     * creates a new session. validUntil is an unix timestamp in seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSessionUsingPOSTTest() throws ApiException {
        String groupID = null;
        String authorID = null;
        String validUntil = null;
        CreateSessionUsingGET200Response response = api.createSessionUsingPOST(groupID, authorID, validUntil);
        // TODO: test validations
    }

    /**
     * deletes a session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSessionUsingGETTest() throws ApiException {
        String sessionID = null;
        AppendChatMessageUsingGET200Response response = api.deleteSessionUsingGET(sessionID);
        // TODO: test validations
    }

    /**
     * deletes a session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSessionUsingPOSTTest() throws ApiException {
        String sessionID = null;
        AppendChatMessageUsingGET200Response response = api.deleteSessionUsingPOST(sessionID);
        // TODO: test validations
    }

    /**
     * returns informations about a session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSessionInfoUsingGETTest() throws ApiException {
        String sessionID = null;
        GetSessionInfoUsingGET200Response response = api.getSessionInfoUsingGET(sessionID);
        // TODO: test validations
    }

    /**
     * returns informations about a session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSessionInfoUsingPOSTTest() throws ApiException {
        String sessionID = null;
        GetSessionInfoUsingGET200Response response = api.getSessionInfoUsingPOST(sessionID);
        // TODO: test validations
    }

}
