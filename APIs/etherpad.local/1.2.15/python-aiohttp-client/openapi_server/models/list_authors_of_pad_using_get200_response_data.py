# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAuthorsOfPadUsingGET200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author_ids: List[str]=None):
        """ListAuthorsOfPadUsingGET200ResponseData - a model defined in OpenAPI

        :param author_ids: The author_ids of this ListAuthorsOfPadUsingGET200ResponseData.
        """
        self.openapi_types = {
            'author_ids': List[str]
        }

        self.attribute_map = {
            'author_ids': 'authorIDs'
        }

        self._author_ids = author_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAuthorsOfPadUsingGET200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The listAuthorsOfPadUsingGET_200_response_data of this ListAuthorsOfPadUsingGET200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author_ids(self):
        """Gets the author_ids of this ListAuthorsOfPadUsingGET200ResponseData.


        :return: The author_ids of this ListAuthorsOfPadUsingGET200ResponseData.
        :rtype: List[str]
        """
        return self._author_ids

    @author_ids.setter
    def author_ids(self, author_ids):
        """Sets the author_ids of this ListAuthorsOfPadUsingGET200ResponseData.


        :param author_ids: The author_ids of this ListAuthorsOfPadUsingGET200ResponseData.
        :type author_ids: List[str]
        """

        self._author_ids = author_ids
