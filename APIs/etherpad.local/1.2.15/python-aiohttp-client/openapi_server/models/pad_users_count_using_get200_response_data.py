# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PadUsersCountUsingGET200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pad_users_count: int=None):
        """PadUsersCountUsingGET200ResponseData - a model defined in OpenAPI

        :param pad_users_count: The pad_users_count of this PadUsersCountUsingGET200ResponseData.
        """
        self.openapi_types = {
            'pad_users_count': int
        }

        self.attribute_map = {
            'pad_users_count': 'padUsersCount'
        }

        self._pad_users_count = pad_users_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PadUsersCountUsingGET200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The padUsersCountUsingGET_200_response_data of this PadUsersCountUsingGET200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pad_users_count(self):
        """Gets the pad_users_count of this PadUsersCountUsingGET200ResponseData.


        :return: The pad_users_count of this PadUsersCountUsingGET200ResponseData.
        :rtype: int
        """
        return self._pad_users_count

    @pad_users_count.setter
    def pad_users_count(self, pad_users_count):
        """Sets the pad_users_count of this PadUsersCountUsingGET200ResponseData.


        :param pad_users_count: The pad_users_count of this PadUsersCountUsingGET200ResponseData.
        :type pad_users_count: int
        """

        self._pad_users_count = pad_users_count
