# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetReadOnlyIDUsingGET200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, read_only_id: str=None):
        """GetReadOnlyIDUsingGET200ResponseData - a model defined in OpenAPI

        :param read_only_id: The read_only_id of this GetReadOnlyIDUsingGET200ResponseData.
        """
        self.openapi_types = {
            'read_only_id': str
        }

        self.attribute_map = {
            'read_only_id': 'readOnlyID'
        }

        self._read_only_id = read_only_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReadOnlyIDUsingGET200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getReadOnlyIDUsingGET_200_response_data of this GetReadOnlyIDUsingGET200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def read_only_id(self):
        """Gets the read_only_id of this GetReadOnlyIDUsingGET200ResponseData.


        :return: The read_only_id of this GetReadOnlyIDUsingGET200ResponseData.
        :rtype: str
        """
        return self._read_only_id

    @read_only_id.setter
    def read_only_id(self, read_only_id):
        """Sets the read_only_id of this GetReadOnlyIDUsingGET200ResponseData.


        :param read_only_id: The read_only_id of this GetReadOnlyIDUsingGET200ResponseData.
        :type read_only_id: str
        """

        self._read_only_id = read_only_id
