# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAuthorUsingGET200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author_id: str=None):
        """CreateAuthorUsingGET200ResponseData - a model defined in OpenAPI

        :param author_id: The author_id of this CreateAuthorUsingGET200ResponseData.
        """
        self.openapi_types = {
            'author_id': str
        }

        self.attribute_map = {
            'author_id': 'authorID'
        }

        self._author_id = author_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAuthorUsingGET200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createAuthorUsingGET_200_response_data of this CreateAuthorUsingGET200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author_id(self):
        """Gets the author_id of this CreateAuthorUsingGET200ResponseData.


        :return: The author_id of this CreateAuthorUsingGET200ResponseData.
        :rtype: str
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id):
        """Sets the author_id of this CreateAuthorUsingGET200ResponseData.


        :param author_id: The author_id of this CreateAuthorUsingGET200ResponseData.
        :type author_id: str
        """

        self._author_id = author_id
