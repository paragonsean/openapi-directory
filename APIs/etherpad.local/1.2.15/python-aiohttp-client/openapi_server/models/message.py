# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Message(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text: str=None, time: int=None, user_id: str=None, user_name: str=None):
        """Message - a model defined in OpenAPI

        :param text: The text of this Message.
        :param time: The time of this Message.
        :param user_id: The user_id of this Message.
        :param user_name: The user_name of this Message.
        """
        self.openapi_types = {
            'text': str,
            'time': int,
            'user_id': str,
            'user_name': str
        }

        self.attribute_map = {
            'text': 'text',
            'time': 'time',
            'user_id': 'userId',
            'user_name': 'userName'
        }

        self._text = text
        self._time = time
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Message':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Message of this Message.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self):
        """Gets the text of this Message.


        :return: The text of this Message.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Message.


        :param text: The text of this Message.
        :type text: str
        """

        self._text = text

    @property
    def time(self):
        """Gets the time of this Message.


        :return: The time of this Message.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this Message.


        :param time: The time of this Message.
        :type time: int
        """

        self._time = time

    @property
    def user_id(self):
        """Gets the user_id of this Message.


        :return: The user_id of this Message.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Message.


        :param user_id: The user_id of this Message.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this Message.


        :return: The user_name of this Message.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this Message.


        :param user_name: The user_name of this Message.
        :type user_name: str
        """

        self._user_name = user_name
