# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_session_info_using_get200_response_data_info import GetSessionInfoUsingGET200ResponseDataInfo
from openapi_server import util


class ListSessionsOfAuthorUsingGET200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sessions: List[GetSessionInfoUsingGET200ResponseDataInfo]=None):
        """ListSessionsOfAuthorUsingGET200ResponseData - a model defined in OpenAPI

        :param sessions: The sessions of this ListSessionsOfAuthorUsingGET200ResponseData.
        """
        self.openapi_types = {
            'sessions': List[GetSessionInfoUsingGET200ResponseDataInfo]
        }

        self.attribute_map = {
            'sessions': 'sessions'
        }

        self._sessions = sessions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSessionsOfAuthorUsingGET200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The listSessionsOfAuthorUsingGET_200_response_data of this ListSessionsOfAuthorUsingGET200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sessions(self):
        """Gets the sessions of this ListSessionsOfAuthorUsingGET200ResponseData.


        :return: The sessions of this ListSessionsOfAuthorUsingGET200ResponseData.
        :rtype: List[GetSessionInfoUsingGET200ResponseDataInfo]
        """
        return self._sessions

    @sessions.setter
    def sessions(self, sessions):
        """Sets the sessions of this ListSessionsOfAuthorUsingGET200ResponseData.


        :param sessions: The sessions of this ListSessionsOfAuthorUsingGET200ResponseData.
        :type sessions: List[GetSessionInfoUsingGET200ResponseDataInfo]
        """

        self._sessions = sessions
