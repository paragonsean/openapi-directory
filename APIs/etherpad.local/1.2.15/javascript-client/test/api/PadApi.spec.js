/**
 * Etherpad API
 * Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.
 *
 * The version of the OpenAPI document: 1.2.15
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EtherpadApi);
  }
}(this, function(expect, EtherpadApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EtherpadApi.PadApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PadApi', function() {
    describe('appendChatMessageUsingGET', function() {
      it('should call appendChatMessageUsingGET successfully', function(done) {
        //uncomment below and update the code to test appendChatMessageUsingGET
        //instance.appendChatMessageUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appendChatMessageUsingPOST', function() {
      it('should call appendChatMessageUsingPOST successfully', function(done) {
        //uncomment below and update the code to test appendChatMessageUsingPOST
        //instance.appendChatMessageUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkTokenUsingGET', function() {
      it('should call checkTokenUsingGET successfully', function(done) {
        //uncomment below and update the code to test checkTokenUsingGET
        //instance.checkTokenUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkTokenUsingPOST', function() {
      it('should call checkTokenUsingPOST successfully', function(done) {
        //uncomment below and update the code to test checkTokenUsingPOST
        //instance.checkTokenUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDiffHTMLUsingGET', function() {
      it('should call createDiffHTMLUsingGET successfully', function(done) {
        //uncomment below and update the code to test createDiffHTMLUsingGET
        //instance.createDiffHTMLUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDiffHTMLUsingPOST', function() {
      it('should call createDiffHTMLUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createDiffHTMLUsingPOST
        //instance.createDiffHTMLUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPadUsingGET', function() {
      it('should call createPadUsingGET successfully', function(done) {
        //uncomment below and update the code to test createPadUsingGET
        //instance.createPadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPadUsingPOST', function() {
      it('should call createPadUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createPadUsingPOST
        //instance.createPadUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePadUsingGET', function() {
      it('should call deletePadUsingGET successfully', function(done) {
        //uncomment below and update the code to test deletePadUsingGET
        //instance.deletePadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePadUsingPOST', function() {
      it('should call deletePadUsingPOST successfully', function(done) {
        //uncomment below and update the code to test deletePadUsingPOST
        //instance.deletePadUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatHeadUsingGET', function() {
      it('should call getChatHeadUsingGET successfully', function(done) {
        //uncomment below and update the code to test getChatHeadUsingGET
        //instance.getChatHeadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatHeadUsingPOST', function() {
      it('should call getChatHeadUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getChatHeadUsingPOST
        //instance.getChatHeadUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatHistoryUsingGET', function() {
      it('should call getChatHistoryUsingGET successfully', function(done) {
        //uncomment below and update the code to test getChatHistoryUsingGET
        //instance.getChatHistoryUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatHistoryUsingPOST', function() {
      it('should call getChatHistoryUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getChatHistoryUsingPOST
        //instance.getChatHistoryUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHTMLUsingGET', function() {
      it('should call getHTMLUsingGET successfully', function(done) {
        //uncomment below and update the code to test getHTMLUsingGET
        //instance.getHTMLUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHTMLUsingPOST', function() {
      it('should call getHTMLUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getHTMLUsingPOST
        //instance.getHTMLUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLastEditedUsingGET', function() {
      it('should call getLastEditedUsingGET successfully', function(done) {
        //uncomment below and update the code to test getLastEditedUsingGET
        //instance.getLastEditedUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLastEditedUsingPOST', function() {
      it('should call getLastEditedUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getLastEditedUsingPOST
        //instance.getLastEditedUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicStatusUsingGET', function() {
      it('should call getPublicStatusUsingGET successfully', function(done) {
        //uncomment below and update the code to test getPublicStatusUsingGET
        //instance.getPublicStatusUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicStatusUsingPOST', function() {
      it('should call getPublicStatusUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getPublicStatusUsingPOST
        //instance.getPublicStatusUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadOnlyIDUsingGET', function() {
      it('should call getReadOnlyIDUsingGET successfully', function(done) {
        //uncomment below and update the code to test getReadOnlyIDUsingGET
        //instance.getReadOnlyIDUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadOnlyIDUsingPOST', function() {
      it('should call getReadOnlyIDUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getReadOnlyIDUsingPOST
        //instance.getReadOnlyIDUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRevisionsCountUsingGET', function() {
      it('should call getRevisionsCountUsingGET successfully', function(done) {
        //uncomment below and update the code to test getRevisionsCountUsingGET
        //instance.getRevisionsCountUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRevisionsCountUsingPOST', function() {
      it('should call getRevisionsCountUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getRevisionsCountUsingPOST
        //instance.getRevisionsCountUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTextUsingGET', function() {
      it('should call getTextUsingGET successfully', function(done) {
        //uncomment below and update the code to test getTextUsingGET
        //instance.getTextUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTextUsingPOST', function() {
      it('should call getTextUsingPOST successfully', function(done) {
        //uncomment below and update the code to test getTextUsingPOST
        //instance.getTextUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllPadsUsingGET', function() {
      it('should call listAllPadsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listAllPadsUsingGET
        //instance.listAllPadsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllPadsUsingPOST', function() {
      it('should call listAllPadsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listAllPadsUsingPOST
        //instance.listAllPadsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorsOfPadUsingGET', function() {
      it('should call listAuthorsOfPadUsingGET successfully', function(done) {
        //uncomment below and update the code to test listAuthorsOfPadUsingGET
        //instance.listAuthorsOfPadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorsOfPadUsingPOST', function() {
      it('should call listAuthorsOfPadUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listAuthorsOfPadUsingPOST
        //instance.listAuthorsOfPadUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('padUsersCountUsingGET', function() {
      it('should call padUsersCountUsingGET successfully', function(done) {
        //uncomment below and update the code to test padUsersCountUsingGET
        //instance.padUsersCountUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('padUsersCountUsingPOST', function() {
      it('should call padUsersCountUsingPOST successfully', function(done) {
        //uncomment below and update the code to test padUsersCountUsingPOST
        //instance.padUsersCountUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('padUsersUsingGET', function() {
      it('should call padUsersUsingGET successfully', function(done) {
        //uncomment below and update the code to test padUsersUsingGET
        //instance.padUsersUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('padUsersUsingPOST', function() {
      it('should call padUsersUsingPOST successfully', function(done) {
        //uncomment below and update the code to test padUsersUsingPOST
        //instance.padUsersUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendClientsMessageUsingGET', function() {
      it('should call sendClientsMessageUsingGET successfully', function(done) {
        //uncomment below and update the code to test sendClientsMessageUsingGET
        //instance.sendClientsMessageUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendClientsMessageUsingPOST', function() {
      it('should call sendClientsMessageUsingPOST successfully', function(done) {
        //uncomment below and update the code to test sendClientsMessageUsingPOST
        //instance.sendClientsMessageUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setHTMLUsingGET', function() {
      it('should call setHTMLUsingGET successfully', function(done) {
        //uncomment below and update the code to test setHTMLUsingGET
        //instance.setHTMLUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setHTMLUsingPOST', function() {
      it('should call setHTMLUsingPOST successfully', function(done) {
        //uncomment below and update the code to test setHTMLUsingPOST
        //instance.setHTMLUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setPublicStatusUsingGET', function() {
      it('should call setPublicStatusUsingGET successfully', function(done) {
        //uncomment below and update the code to test setPublicStatusUsingGET
        //instance.setPublicStatusUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setPublicStatusUsingPOST', function() {
      it('should call setPublicStatusUsingPOST successfully', function(done) {
        //uncomment below and update the code to test setPublicStatusUsingPOST
        //instance.setPublicStatusUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setTextUsingGET', function() {
      it('should call setTextUsingGET successfully', function(done) {
        //uncomment below and update the code to test setTextUsingGET
        //instance.setTextUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setTextUsingPOST', function() {
      it('should call setTextUsingPOST successfully', function(done) {
        //uncomment below and update the code to test setTextUsingPOST
        //instance.setTextUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
