/**
 * Etherpad API
 * Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.
 *
 * The version of the OpenAPI document: 1.2.15
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EtherpadApi);
  }
}(this, function(expect, EtherpadApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EtherpadApi.GroupApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupApi', function() {
    describe('createGroupIfNotExistsForUsingGET', function() {
      it('should call createGroupIfNotExistsForUsingGET successfully', function(done) {
        //uncomment below and update the code to test createGroupIfNotExistsForUsingGET
        //instance.createGroupIfNotExistsForUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupIfNotExistsForUsingPOST', function() {
      it('should call createGroupIfNotExistsForUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createGroupIfNotExistsForUsingPOST
        //instance.createGroupIfNotExistsForUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupPadUsingGET', function() {
      it('should call createGroupPadUsingGET successfully', function(done) {
        //uncomment below and update the code to test createGroupPadUsingGET
        //instance.createGroupPadUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupPadUsingPOST', function() {
      it('should call createGroupPadUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createGroupPadUsingPOST
        //instance.createGroupPadUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupUsingGET', function() {
      it('should call createGroupUsingGET successfully', function(done) {
        //uncomment below and update the code to test createGroupUsingGET
        //instance.createGroupUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupUsingPOST', function() {
      it('should call createGroupUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createGroupUsingPOST
        //instance.createGroupUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroupUsingGET', function() {
      it('should call deleteGroupUsingGET successfully', function(done) {
        //uncomment below and update the code to test deleteGroupUsingGET
        //instance.deleteGroupUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroupUsingPOST', function() {
      it('should call deleteGroupUsingPOST successfully', function(done) {
        //uncomment below and update the code to test deleteGroupUsingPOST
        //instance.deleteGroupUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllGroupsUsingGET', function() {
      it('should call listAllGroupsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listAllGroupsUsingGET
        //instance.listAllGroupsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllGroupsUsingPOST', function() {
      it('should call listAllGroupsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listAllGroupsUsingPOST
        //instance.listAllGroupsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPadsUsingGET', function() {
      it('should call listPadsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listPadsUsingGET
        //instance.listPadsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPadsUsingPOST', function() {
      it('should call listPadsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listPadsUsingPOST
        //instance.listPadsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSessionsOfGroupUsingGET', function() {
      it('should call listSessionsOfGroupUsingGET successfully', function(done) {
        //uncomment below and update the code to test listSessionsOfGroupUsingGET
        //instance.listSessionsOfGroupUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSessionsOfGroupUsingPOST', function() {
      it('should call listSessionsOfGroupUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listSessionsOfGroupUsingPOST
        //instance.listSessionsOfGroupUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
